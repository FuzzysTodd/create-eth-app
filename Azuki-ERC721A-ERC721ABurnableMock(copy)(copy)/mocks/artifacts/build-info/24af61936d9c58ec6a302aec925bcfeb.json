{
	"id": "24af61936d9c58ec6a302aec925bcfeb",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.27",
	"solcLongVersion": "0.8.27+commit.40a35a09",
	"input": {
		"language": "Solidity",
		"sources": {
			"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)//mocks/ERC721ABurnableMock.sol": {
				"content": "/*\n    \n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██    ██████  ███████ ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██      ██    ██\n  ██      ██    ██ ██    ██ █████   ██████  ██    ██ ██    ██ █████      ██   ██ █████   ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██       ██  ██\n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██ ██ ██████  ███████   ████\n  \n  Find any smart contract, and build your project faster: https://www.cookbook.dev\n  Twitter: https://twitter.com/cookbook_dev\n  Discord: https://discord.gg/cookbookdev\n  \n  Find this contract on Cookbook: https://www.cookbook.dev/contracts/Azuki-ERC721A-ERC721ABurnableMock?utm=code\n  */\n  \n  // SPDX-License-Identifier: MIT\n// ERC721A Contracts v4.2.3\n// Creators: Chiru Labs\n\npragma solidity ^0.8.4;\n\nimport '../extensions/ERC721ABurnable.sol';\n\ncontract ERC721ABurnableMock is ERC721A, ERC721ABurnable {\n    constructor(string memory name_, string memory symbol_) ERC721A(name_, symbol_) {}\n\n    function exists(uint256 tokenId) public view returns (bool) {\n        return _exists(tokenId);\n    }\n\n    function safeMint(address to, uint256 quantity) public {\n        _safeMint(to, quantity);\n    }\n\n    function getOwnershipAt(uint256 index) public view returns (TokenOwnership memory) {\n        return _ownershipAt(index);\n    }\n\n    function totalMinted() public view returns (uint256) {\n        return _totalMinted();\n    }\n\n    function totalBurned() public view returns (uint256) {\n        return _totalBurned();\n    }\n\n    function numberBurned(address owner) public view returns (uint256) {\n        return _numberBurned(owner);\n    }\n}\n"
			},
			"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/extensions/ERC721ABurnable.sol": {
				"content": "/*\n    \n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██    ██████  ███████ ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██      ██    ██\n  ██      ██    ██ ██    ██ █████   ██████  ██    ██ ██    ██ █████      ██   ██ █████   ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██       ██  ██\n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██ ██ ██████  ███████   ████\n  \n  Find any smart contract, and build your project faster: https://www.cookbook.dev\n  Twitter: https://twitter.com/cookbook_dev\n  Discord: https://discord.gg/cookbookdev\n  \n  Find this contract on Cookbook: https://www.cookbook.dev/contracts/Azuki-ERC721A-ERC721ABurnableMock?utm=code\n  */\n  \n  // SPDX-License-Identifier: MIT\n// ERC721A Contracts v4.2.3\n// Creator: Chiru Labs\n\npragma solidity ^0.8.4;\n\nimport './IERC721ABurnable.sol';\nimport '../ERC721A.sol';\n\n/**\n * @title ERC721ABurnable.\n *\n * @dev ERC721A token that can be irreversibly burned (destroyed).\n */\nabstract contract ERC721ABurnable is ERC721A, IERC721ABurnable {\n    /**\n     * @dev Burns `tokenId`. See {ERC721A-_burn}.\n     *\n     * Requirements:\n     *\n     * - The caller must own `tokenId` or be an approved operator.\n     */\n    function burn(uint256 tokenId) public virtual override {\n        _burn(tokenId, true);\n    }\n}\n"
			},
			"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol": {
				"content": "/*\n    \n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██    ██████  ███████ ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██      ██    ██\n  ██      ██    ██ ██    ██ █████   ██████  ██    ██ ██    ██ █████      ██   ██ █████   ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██       ██  ██\n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██ ██ ██████  ███████   ████\n  \n  Find any smart contract, and build your project faster: https://www.cookbook.dev\n  Twitter: https://twitter.com/cookbook_dev\n  Discord: https://discord.gg/cookbookdev\n  \n  Find this contract on Cookbook: https://www.cookbook.dev/contracts/Azuki-ERC721A-ERC721ABurnableMock?utm=code\n  */\n  \n  // SPDX-License-Identifier: MIT\n// ERC721A Contracts v4.2.3\n// Creator: Chiru Labs\n\npragma solidity ^0.8.4;\n\nimport './IERC721A.sol';\n\n/**\n * @dev Interface of ERC721 token receiver.\n */\ninterface ERC721A__IERC721Receiver {\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n\n/**\n * @title ERC721A\n *\n * @dev Implementation of the [ERC721](https://eips.ethereum.org/EIPS/eip-721)\n * Non-Fungible Token Standard, including the Metadata extension.\n * Optimized for lower gas during batch mints.\n *\n * Token IDs are minted in sequential order (e.g. 0, 1, 2, 3, ...)\n * starting from `_startTokenId()`.\n *\n * Assumptions:\n *\n * - An owner cannot have more than 2**64 - 1 (max value of uint64) of supply.\n * - The maximum token ID cannot exceed 2**256 - 1 (max value of uint256).\n */\ncontract ERC721A is IERC721A {\n    // Bypass for a `--via-ir` bug (https://github.com/chiru-labs/ERC721A/pull/364).\n    struct TokenApprovalRef {\n        address value;\n    }\n\n    // =============================================================\n    //                           CONSTANTS\n    // =============================================================\n\n    // Mask of an entry in packed address data.\n    uint256 private constant _BITMASK_ADDRESS_DATA_ENTRY = (1 << 64) - 1;\n\n    // The bit position of `numberMinted` in packed address data.\n    uint256 private constant _BITPOS_NUMBER_MINTED = 64;\n\n    // The bit position of `numberBurned` in packed address data.\n    uint256 private constant _BITPOS_NUMBER_BURNED = 128;\n\n    // The bit position of `aux` in packed address data.\n    uint256 private constant _BITPOS_AUX = 192;\n\n    // Mask of all 256 bits in packed address data except the 64 bits for `aux`.\n    uint256 private constant _BITMASK_AUX_COMPLEMENT = (1 << 192) - 1;\n\n    // The bit position of `startTimestamp` in packed ownership.\n    uint256 private constant _BITPOS_START_TIMESTAMP = 160;\n\n    // The bit mask of the `burned` bit in packed ownership.\n    uint256 private constant _BITMASK_BURNED = 1 << 224;\n\n    // The bit position of the `nextInitialized` bit in packed ownership.\n    uint256 private constant _BITPOS_NEXT_INITIALIZED = 225;\n\n    // The bit mask of the `nextInitialized` bit in packed ownership.\n    uint256 private constant _BITMASK_NEXT_INITIALIZED = 1 << 225;\n\n    // The bit position of `extraData` in packed ownership.\n    uint256 private constant _BITPOS_EXTRA_DATA = 232;\n\n    // Mask of all 256 bits in a packed ownership except the 24 bits for `extraData`.\n    uint256 private constant _BITMASK_EXTRA_DATA_COMPLEMENT = (1 << 232) - 1;\n\n    // The mask of the lower 160 bits for addresses.\n    uint256 private constant _BITMASK_ADDRESS = (1 << 160) - 1;\n\n    // The maximum `quantity` that can be minted with {_mintERC2309}.\n    // This limit is to prevent overflows on the address data entries.\n    // For a limit of 5000, a total of 3.689e15 calls to {_mintERC2309}\n    // is required to cause an overflow, which is unrealistic.\n    uint256 private constant _MAX_MINT_ERC2309_QUANTITY_LIMIT = 5000;\n\n    // The `Transfer` event signature is given by:\n    // `keccak256(bytes(\"Transfer(address,address,uint256)\"))`.\n    bytes32 private constant _TRANSFER_EVENT_SIGNATURE =\n        0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef;\n\n    // =============================================================\n    //                            STORAGE\n    // =============================================================\n\n    // The next token ID to be minted.\n    uint256 private _currentIndex;\n\n    // The number of tokens burned.\n    uint256 private _burnCounter;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to ownership details\n    // An empty struct value does not necessarily mean the token is unowned.\n    // See {_packedOwnershipOf} implementation for details.\n    //\n    // Bits Layout:\n    // - [0..159]   `addr`\n    // - [160..223] `startTimestamp`\n    // - [224]      `burned`\n    // - [225]      `nextInitialized`\n    // - [232..255] `extraData`\n    mapping(uint256 => uint256) private _packedOwnerships;\n\n    // Mapping owner address to address data.\n    //\n    // Bits Layout:\n    // - [0..63]    `balance`\n    // - [64..127]  `numberMinted`\n    // - [128..191] `numberBurned`\n    // - [192..255] `aux`\n    mapping(address => uint256) private _packedAddressData;\n\n    // Mapping from token ID to approved address.\n    mapping(uint256 => TokenApprovalRef) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    // =============================================================\n    //                          CONSTRUCTOR\n    // =============================================================\n\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n        _currentIndex = _startTokenId();\n    }\n\n    // =============================================================\n    //                   TOKEN COUNTING OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Returns the starting token ID.\n     * To change the starting token ID, please override this function.\n     */\n    function _startTokenId() internal view virtual returns (uint256) {\n        return 0;\n    }\n\n    /**\n     * @dev Returns the next token ID to be minted.\n     */\n    function _nextTokenId() internal view virtual returns (uint256) {\n        return _currentIndex;\n    }\n\n    /**\n     * @dev Returns the total number of tokens in existence.\n     * Burned tokens will reduce the count.\n     * To get the total number of tokens minted, please see {_totalMinted}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        // Counter underflow is impossible as _burnCounter cannot be incremented\n        // more than `_currentIndex - _startTokenId()` times.\n        unchecked {\n            return _currentIndex - _burnCounter - _startTokenId();\n        }\n    }\n\n    /**\n     * @dev Returns the total amount of tokens minted in the contract.\n     */\n    function _totalMinted() internal view virtual returns (uint256) {\n        // Counter underflow is impossible as `_currentIndex` does not decrement,\n        // and it is initialized to `_startTokenId()`.\n        unchecked {\n            return _currentIndex - _startTokenId();\n        }\n    }\n\n    /**\n     * @dev Returns the total number of tokens burned.\n     */\n    function _totalBurned() internal view virtual returns (uint256) {\n        return _burnCounter;\n    }\n\n    // =============================================================\n    //                    ADDRESS DATA OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Returns the number of tokens in `owner`'s account.\n     */\n    function balanceOf(address owner) public view virtual override returns (uint256) {\n        if (owner == address(0)) _revert(BalanceQueryForZeroAddress.selector);\n        return _packedAddressData[owner] & _BITMASK_ADDRESS_DATA_ENTRY;\n    }\n\n    /**\n     * Returns the number of tokens minted by `owner`.\n     */\n    function _numberMinted(address owner) internal view returns (uint256) {\n        return (_packedAddressData[owner] >> _BITPOS_NUMBER_MINTED) & _BITMASK_ADDRESS_DATA_ENTRY;\n    }\n\n    /**\n     * Returns the number of tokens burned by or on behalf of `owner`.\n     */\n    function _numberBurned(address owner) internal view returns (uint256) {\n        return (_packedAddressData[owner] >> _BITPOS_NUMBER_BURNED) & _BITMASK_ADDRESS_DATA_ENTRY;\n    }\n\n    /**\n     * Returns the auxiliary data for `owner`. (e.g. number of whitelist mint slots used).\n     */\n    function _getAux(address owner) internal view returns (uint64) {\n        return uint64(_packedAddressData[owner] >> _BITPOS_AUX);\n    }\n\n    /**\n     * Sets the auxiliary data for `owner`. (e.g. number of whitelist mint slots used).\n     * If there are multiple variables, please pack them into a uint64.\n     */\n    function _setAux(address owner, uint64 aux) internal virtual {\n        uint256 packed = _packedAddressData[owner];\n        uint256 auxCasted;\n        // Cast `aux` with assembly to avoid redundant masking.\n        assembly {\n            auxCasted := aux\n        }\n        packed = (packed & _BITMASK_AUX_COMPLEMENT) | (auxCasted << _BITPOS_AUX);\n        _packedAddressData[owner] = packed;\n    }\n\n    // =============================================================\n    //                            IERC165\n    // =============================================================\n\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified)\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        // The interface IDs are constants representing the first 4 bytes\n        // of the XOR of all function selectors in the interface.\n        // See: [ERC165](https://eips.ethereum.org/EIPS/eip-165)\n        // (e.g. `bytes4(i.functionA.selector ^ i.functionB.selector ^ ...)`)\n        return\n            interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.\n            interfaceId == 0x80ac58cd || // ERC165 interface ID for ERC721.\n            interfaceId == 0x5b5e139f; // ERC165 interface ID for ERC721Metadata.\n    }\n\n    // =============================================================\n    //                        IERC721Metadata\n    // =============================================================\n\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        if (!_exists(tokenId)) _revert(URIQueryForNonexistentToken.selector);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '';\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, it can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return '';\n    }\n\n    // =============================================================\n    //                     OWNERSHIPS OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\n        return address(uint160(_packedOwnershipOf(tokenId)));\n    }\n\n    /**\n     * @dev Gas spent here starts off proportional to the maximum mint batch size.\n     * It gradually moves to O(1) as tokens get transferred around over time.\n     */\n    function _ownershipOf(uint256 tokenId) internal view virtual returns (TokenOwnership memory) {\n        return _unpackedOwnership(_packedOwnershipOf(tokenId));\n    }\n\n    /**\n     * @dev Returns the unpacked `TokenOwnership` struct at `index`.\n     */\n    function _ownershipAt(uint256 index) internal view virtual returns (TokenOwnership memory) {\n        return _unpackedOwnership(_packedOwnerships[index]);\n    }\n\n    /**\n     * @dev Returns whether the ownership slot at `index` is initialized.\n     * An uninitialized slot does not necessarily mean that the slot has no owner.\n     */\n    function _ownershipIsInitialized(uint256 index) internal view virtual returns (bool) {\n        return _packedOwnerships[index] != 0;\n    }\n\n    /**\n     * @dev Initializes the ownership slot minted at `index` for efficiency purposes.\n     */\n    function _initializeOwnershipAt(uint256 index) internal virtual {\n        if (_packedOwnerships[index] == 0) {\n            _packedOwnerships[index] = _packedOwnershipOf(index);\n        }\n    }\n\n    /**\n     * Returns the packed ownership data of `tokenId`.\n     */\n    function _packedOwnershipOf(uint256 tokenId) private view returns (uint256 packed) {\n        if (_startTokenId() <= tokenId) {\n            packed = _packedOwnerships[tokenId];\n            // If the data at the starting slot does not exist, start the scan.\n            if (packed == 0) {\n                if (tokenId >= _currentIndex) _revert(OwnerQueryForNonexistentToken.selector);\n                // Invariant:\n                // There will always be an initialized ownership slot\n                // (i.e. `ownership.addr != address(0) && ownership.burned == false`)\n                // before an unintialized ownership slot\n                // (i.e. `ownership.addr == address(0) && ownership.burned == false`)\n                // Hence, `tokenId` will not underflow.\n                //\n                // We can directly compare the packed value.\n                // If the address is zero, packed will be zero.\n                for (;;) {\n                    unchecked {\n                        packed = _packedOwnerships[--tokenId];\n                    }\n                    if (packed == 0) continue;\n                    if (packed & _BITMASK_BURNED == 0) return packed;\n                    // Otherwise, the token is burned, and we must revert.\n                    // This handles the case of batch burned tokens, where only the burned bit\n                    // of the starting slot is set, and remaining slots are left uninitialized.\n                    _revert(OwnerQueryForNonexistentToken.selector);\n                }\n            }\n            // Otherwise, the data exists and we can skip the scan.\n            // This is possible because we have already achieved the target condition.\n            // This saves 2143 gas on transfers of initialized tokens.\n            // If the token is not burned, return `packed`. Otherwise, revert.\n            if (packed & _BITMASK_BURNED == 0) return packed;\n        }\n        _revert(OwnerQueryForNonexistentToken.selector);\n    }\n\n    /**\n     * @dev Returns the unpacked `TokenOwnership` struct from `packed`.\n     */\n    function _unpackedOwnership(uint256 packed) private pure returns (TokenOwnership memory ownership) {\n        ownership.addr = address(uint160(packed));\n        ownership.startTimestamp = uint64(packed >> _BITPOS_START_TIMESTAMP);\n        ownership.burned = packed & _BITMASK_BURNED != 0;\n        ownership.extraData = uint24(packed >> _BITPOS_EXTRA_DATA);\n    }\n\n    /**\n     * @dev Packs ownership data into a single uint256.\n     */\n    function _packOwnershipData(address owner, uint256 flags) private view returns (uint256 result) {\n        assembly {\n            // Mask `owner` to the lower 160 bits, in case the upper bits somehow aren't clean.\n            owner := and(owner, _BITMASK_ADDRESS)\n            // `owner | (block.timestamp << _BITPOS_START_TIMESTAMP) | flags`.\n            result := or(owner, or(shl(_BITPOS_START_TIMESTAMP, timestamp()), flags))\n        }\n    }\n\n    /**\n     * @dev Returns the `nextInitialized` flag set if `quantity` equals 1.\n     */\n    function _nextInitializedFlag(uint256 quantity) private pure returns (uint256 result) {\n        // For branchless setting of the `nextInitialized` flag.\n        assembly {\n            // `(quantity == 1) << _BITPOS_NEXT_INITIALIZED`.\n            result := shl(_BITPOS_NEXT_INITIALIZED, eq(quantity, 1))\n        }\n    }\n\n    // =============================================================\n    //                      APPROVAL OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account. See {ERC721A-_approve}.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     */\n    function approve(address to, uint256 tokenId) public payable virtual override {\n        _approve(to, tokenId, true);\n    }\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\n        if (!_exists(tokenId)) _revert(ApprovalQueryForNonexistentToken.selector);\n\n        return _tokenApprovals[tokenId].value;\n    }\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom}\n     * for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _operatorApprovals[_msgSenderERC721A()][operator] = approved;\n        emit ApprovalForAll(_msgSenderERC721A(), operator, approved);\n    }\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted. See {_mint}.\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool result) {\n        if (_startTokenId() <= tokenId) {\n            if (tokenId < _currentIndex) {\n                uint256 packed;\n                while ((packed = _packedOwnerships[tokenId]) == 0) --tokenId;\n                result = packed & _BITMASK_BURNED == 0;\n            }\n        }\n    }\n\n    /**\n     * @dev Returns whether `msgSender` is equal to `approvedAddress` or `owner`.\n     */\n    function _isSenderApprovedOrOwner(\n        address approvedAddress,\n        address owner,\n        address msgSender\n    ) private pure returns (bool result) {\n        assembly {\n            // Mask `owner` to the lower 160 bits, in case the upper bits somehow aren't clean.\n            owner := and(owner, _BITMASK_ADDRESS)\n            // Mask `msgSender` to the lower 160 bits, in case the upper bits somehow aren't clean.\n            msgSender := and(msgSender, _BITMASK_ADDRESS)\n            // `msgSender == owner || msgSender == approvedAddress`.\n            result := or(eq(msgSender, owner), eq(msgSender, approvedAddress))\n        }\n    }\n\n    /**\n     * @dev Returns the storage slot and value for the approved address of `tokenId`.\n     */\n    function _getApprovedSlotAndAddress(uint256 tokenId)\n        private\n        view\n        returns (uint256 approvedAddressSlot, address approvedAddress)\n    {\n        TokenApprovalRef storage tokenApproval = _tokenApprovals[tokenId];\n        // The following is equivalent to `approvedAddress = _tokenApprovals[tokenId].value`.\n        assembly {\n            approvedAddressSlot := tokenApproval.slot\n            approvedAddress := sload(approvedAddressSlot)\n        }\n    }\n\n    // =============================================================\n    //                      TRANSFER OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token\n     * by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public payable virtual override {\n        uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId);\n\n        // Mask `from` to the lower 160 bits, in case the upper bits somehow aren't clean.\n        from = address(uint160(uint256(uint160(from)) & _BITMASK_ADDRESS));\n\n        if (address(uint160(prevOwnershipPacked)) != from) _revert(TransferFromIncorrectOwner.selector);\n\n        (uint256 approvedAddressSlot, address approvedAddress) = _getApprovedSlotAndAddress(tokenId);\n\n        // The nested ifs save around 20+ gas over a compound boolean condition.\n        if (!_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()))\n            if (!isApprovedForAll(from, _msgSenderERC721A())) _revert(TransferCallerNotOwnerNorApproved.selector);\n\n        _beforeTokenTransfers(from, to, tokenId, 1);\n\n        // Clear approvals from the previous owner.\n        assembly {\n            if approvedAddress {\n                // This is equivalent to `delete _tokenApprovals[tokenId]`.\n                sstore(approvedAddressSlot, 0)\n            }\n        }\n\n        // Underflow of the sender's balance is impossible because we check for\n        // ownership above and the recipient's balance can't realistically overflow.\n        // Counter overflow is incredibly unrealistic as `tokenId` would have to be 2**256.\n        unchecked {\n            // We can directly increment and decrement the balances.\n            --_packedAddressData[from]; // Updates: `balance -= 1`.\n            ++_packedAddressData[to]; // Updates: `balance += 1`.\n\n            // Updates:\n            // - `address` to the next owner.\n            // - `startTimestamp` to the timestamp of transfering.\n            // - `burned` to `false`.\n            // - `nextInitialized` to `true`.\n            _packedOwnerships[tokenId] = _packOwnershipData(\n                to,\n                _BITMASK_NEXT_INITIALIZED | _nextExtraData(from, to, prevOwnershipPacked)\n            );\n\n            // If the next slot may not have been initialized (i.e. `nextInitialized == false`) .\n            if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {\n                uint256 nextTokenId = tokenId + 1;\n                // If the next slot's address is zero and not burned (i.e. packed value is zero).\n                if (_packedOwnerships[nextTokenId] == 0) {\n                    // If the next slot is within bounds.\n                    if (nextTokenId != _currentIndex) {\n                        // Initialize the next slot to maintain correctness for `ownerOf(tokenId + 1)`.\n                        _packedOwnerships[nextTokenId] = prevOwnershipPacked;\n                    }\n                }\n            }\n        }\n\n        // Mask `to` to the lower 160 bits, in case the upper bits somehow aren't clean.\n        uint256 toMasked = uint256(uint160(to)) & _BITMASK_ADDRESS;\n        assembly {\n            // Emit the `Transfer` event.\n            log4(\n                0, // Start of data (0, since no data).\n                0, // End of data (0, since no data).\n                _TRANSFER_EVENT_SIGNATURE, // Signature.\n                from, // `from`.\n                toMasked, // `to`.\n                tokenId // `tokenId`.\n            )\n        }\n        if (toMasked == 0) _revert(TransferToZeroAddress.selector);\n\n        _afterTokenTransfers(from, to, tokenId, 1);\n    }\n\n    /**\n     * @dev Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public payable virtual override {\n        safeTransferFrom(from, to, tokenId, '');\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token\n     * by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement\n     * {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) public payable virtual override {\n        transferFrom(from, to, tokenId);\n        if (to.code.length != 0)\n            if (!_checkContractOnERC721Received(from, to, tokenId, _data)) {\n                _revert(TransferToNonERC721ReceiverImplementer.selector);\n            }\n    }\n\n    /**\n     * @dev Hook that is called before a set of serially-ordered token IDs\n     * are about to be transferred. This includes minting.\n     * And also called before burning one token.\n     *\n     * `startTokenId` - the first token ID to be transferred.\n     * `quantity` - the amount to be transferred.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, `tokenId` will be burned by `from`.\n     * - `from` and `to` are never both zero.\n     */\n    function _beforeTokenTransfers(\n        address from,\n        address to,\n        uint256 startTokenId,\n        uint256 quantity\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after a set of serially-ordered token IDs\n     * have been transferred. This includes minting.\n     * And also called after one token has been burned.\n     *\n     * `startTokenId` - the first token ID to be transferred.\n     * `quantity` - the amount to be transferred.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` has been\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` has been minted for `to`.\n     * - When `to` is zero, `tokenId` has been burned by `from`.\n     * - `from` and `to` are never both zero.\n     */\n    function _afterTokenTransfers(\n        address from,\n        address to,\n        uint256 startTokenId,\n        uint256 quantity\n    ) internal virtual {}\n\n    /**\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target contract.\n     *\n     * `from` - Previous owner of the given token ID.\n     * `to` - Target address that will receive the token.\n     * `tokenId` - Token ID to be transferred.\n     * `_data` - Optional data to send along with the call.\n     *\n     * Returns whether the call correctly returned the expected magic value.\n     */\n    function _checkContractOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) private returns (bool) {\n        try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (\n            bytes4 retval\n        ) {\n            return retval == ERC721A__IERC721Receiver(to).onERC721Received.selector;\n        } catch (bytes memory reason) {\n            if (reason.length == 0) {\n                _revert(TransferToNonERC721ReceiverImplementer.selector);\n            }\n            assembly {\n                revert(add(32, reason), mload(reason))\n            }\n        }\n    }\n\n    // =============================================================\n    //                        MINT OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Mints `quantity` tokens and transfers them to `to`.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `quantity` must be greater than 0.\n     *\n     * Emits a {Transfer} event for each mint.\n     */\n    function _mint(address to, uint256 quantity) internal virtual {\n        uint256 startTokenId = _currentIndex;\n        if (quantity == 0) _revert(MintZeroQuantity.selector);\n\n        _beforeTokenTransfers(address(0), to, startTokenId, quantity);\n\n        // Overflows are incredibly unrealistic.\n        // `balance` and `numberMinted` have a maximum limit of 2**64.\n        // `tokenId` has a maximum limit of 2**256.\n        unchecked {\n            // Updates:\n            // - `address` to the owner.\n            // - `startTimestamp` to the timestamp of minting.\n            // - `burned` to `false`.\n            // - `nextInitialized` to `quantity == 1`.\n            _packedOwnerships[startTokenId] = _packOwnershipData(\n                to,\n                _nextInitializedFlag(quantity) | _nextExtraData(address(0), to, 0)\n            );\n\n            // Updates:\n            // - `balance += quantity`.\n            // - `numberMinted += quantity`.\n            //\n            // We can directly add to the `balance` and `numberMinted`.\n            _packedAddressData[to] += quantity * ((1 << _BITPOS_NUMBER_MINTED) | 1);\n\n            // Mask `to` to the lower 160 bits, in case the upper bits somehow aren't clean.\n            uint256 toMasked = uint256(uint160(to)) & _BITMASK_ADDRESS;\n\n            if (toMasked == 0) _revert(MintToZeroAddress.selector);\n\n            uint256 end = startTokenId + quantity;\n            uint256 tokenId = startTokenId;\n\n            do {\n                assembly {\n                    // Emit the `Transfer` event.\n                    log4(\n                        0, // Start of data (0, since no data).\n                        0, // End of data (0, since no data).\n                        _TRANSFER_EVENT_SIGNATURE, // Signature.\n                        0, // `address(0)`.\n                        toMasked, // `to`.\n                        tokenId // `tokenId`.\n                    )\n                }\n                // The `!=` check ensures that large values of `quantity`\n                // that overflows uint256 will make the loop run out of gas.\n            } while (++tokenId != end);\n\n            _currentIndex = end;\n        }\n        _afterTokenTransfers(address(0), to, startTokenId, quantity);\n    }\n\n    /**\n     * @dev Mints `quantity` tokens and transfers them to `to`.\n     *\n     * This function is intended for efficient minting only during contract creation.\n     *\n     * It emits only one {ConsecutiveTransfer} as defined in\n     * [ERC2309](https://eips.ethereum.org/EIPS/eip-2309),\n     * instead of a sequence of {Transfer} event(s).\n     *\n     * Calling this function outside of contract creation WILL make your contract\n     * non-compliant with the ERC721 standard.\n     * For full ERC721 compliance, substituting ERC721 {Transfer} event(s) with the ERC2309\n     * {ConsecutiveTransfer} event is only permissible during contract creation.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `quantity` must be greater than 0.\n     *\n     * Emits a {ConsecutiveTransfer} event.\n     */\n    function _mintERC2309(address to, uint256 quantity) internal virtual {\n        uint256 startTokenId = _currentIndex;\n        if (to == address(0)) _revert(MintToZeroAddress.selector);\n        if (quantity == 0) _revert(MintZeroQuantity.selector);\n        if (quantity > _MAX_MINT_ERC2309_QUANTITY_LIMIT) _revert(MintERC2309QuantityExceedsLimit.selector);\n\n        _beforeTokenTransfers(address(0), to, startTokenId, quantity);\n\n        // Overflows are unrealistic due to the above check for `quantity` to be below the limit.\n        unchecked {\n            // Updates:\n            // - `balance += quantity`.\n            // - `numberMinted += quantity`.\n            //\n            // We can directly add to the `balance` and `numberMinted`.\n            _packedAddressData[to] += quantity * ((1 << _BITPOS_NUMBER_MINTED) | 1);\n\n            // Updates:\n            // - `address` to the owner.\n            // - `startTimestamp` to the timestamp of minting.\n            // - `burned` to `false`.\n            // - `nextInitialized` to `quantity == 1`.\n            _packedOwnerships[startTokenId] = _packOwnershipData(\n                to,\n                _nextInitializedFlag(quantity) | _nextExtraData(address(0), to, 0)\n            );\n\n            emit ConsecutiveTransfer(startTokenId, startTokenId + quantity - 1, address(0), to);\n\n            _currentIndex = startTokenId + quantity;\n        }\n        _afterTokenTransfers(address(0), to, startTokenId, quantity);\n    }\n\n    /**\n     * @dev Safely mints `quantity` tokens and transfers them to `to`.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement\n     * {IERC721Receiver-onERC721Received}, which is called for each safe transfer.\n     * - `quantity` must be greater than 0.\n     *\n     * See {_mint}.\n     *\n     * Emits a {Transfer} event for each mint.\n     */\n    function _safeMint(\n        address to,\n        uint256 quantity,\n        bytes memory _data\n    ) internal virtual {\n        _mint(to, quantity);\n\n        unchecked {\n            if (to.code.length != 0) {\n                uint256 end = _currentIndex;\n                uint256 index = end - quantity;\n                do {\n                    if (!_checkContractOnERC721Received(address(0), to, index++, _data)) {\n                        _revert(TransferToNonERC721ReceiverImplementer.selector);\n                    }\n                } while (index < end);\n                // Reentrancy protection.\n                if (_currentIndex != end) _revert(bytes4(0));\n            }\n        }\n    }\n\n    /**\n     * @dev Equivalent to `_safeMint(to, quantity, '')`.\n     */\n    function _safeMint(address to, uint256 quantity) internal virtual {\n        _safeMint(to, quantity, '');\n    }\n\n    // =============================================================\n    //                       APPROVAL OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Equivalent to `_approve(to, tokenId, false)`.\n     */\n    function _approve(address to, uint256 tokenId) internal virtual {\n        _approve(to, tokenId, false);\n    }\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the\n     * zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function _approve(\n        address to,\n        uint256 tokenId,\n        bool approvalCheck\n    ) internal virtual {\n        address owner = ownerOf(tokenId);\n\n        if (approvalCheck && _msgSenderERC721A() != owner)\n            if (!isApprovedForAll(owner, _msgSenderERC721A())) {\n                _revert(ApprovalCallerNotOwnerNorApproved.selector);\n            }\n\n        _tokenApprovals[tokenId].value = to;\n        emit Approval(owner, to, tokenId);\n    }\n\n    // =============================================================\n    //                        BURN OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Equivalent to `_burn(tokenId, false)`.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        _burn(tokenId, false);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId, bool approvalCheck) internal virtual {\n        uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId);\n\n        address from = address(uint160(prevOwnershipPacked));\n\n        (uint256 approvedAddressSlot, address approvedAddress) = _getApprovedSlotAndAddress(tokenId);\n\n        if (approvalCheck) {\n            // The nested ifs save around 20+ gas over a compound boolean condition.\n            if (!_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()))\n                if (!isApprovedForAll(from, _msgSenderERC721A())) _revert(TransferCallerNotOwnerNorApproved.selector);\n        }\n\n        _beforeTokenTransfers(from, address(0), tokenId, 1);\n\n        // Clear approvals from the previous owner.\n        assembly {\n            if approvedAddress {\n                // This is equivalent to `delete _tokenApprovals[tokenId]`.\n                sstore(approvedAddressSlot, 0)\n            }\n        }\n\n        // Underflow of the sender's balance is impossible because we check for\n        // ownership above and the recipient's balance can't realistically overflow.\n        // Counter overflow is incredibly unrealistic as `tokenId` would have to be 2**256.\n        unchecked {\n            // Updates:\n            // - `balance -= 1`.\n            // - `numberBurned += 1`.\n            //\n            // We can directly decrement the balance, and increment the number burned.\n            // This is equivalent to `packed -= 1; packed += 1 << _BITPOS_NUMBER_BURNED;`.\n            _packedAddressData[from] += (1 << _BITPOS_NUMBER_BURNED) - 1;\n\n            // Updates:\n            // - `address` to the last owner.\n            // - `startTimestamp` to the timestamp of burning.\n            // - `burned` to `true`.\n            // - `nextInitialized` to `true`.\n            _packedOwnerships[tokenId] = _packOwnershipData(\n                from,\n                (_BITMASK_BURNED | _BITMASK_NEXT_INITIALIZED) | _nextExtraData(from, address(0), prevOwnershipPacked)\n            );\n\n            // If the next slot may not have been initialized (i.e. `nextInitialized == false`) .\n            if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {\n                uint256 nextTokenId = tokenId + 1;\n                // If the next slot's address is zero and not burned (i.e. packed value is zero).\n                if (_packedOwnerships[nextTokenId] == 0) {\n                    // If the next slot is within bounds.\n                    if (nextTokenId != _currentIndex) {\n                        // Initialize the next slot to maintain correctness for `ownerOf(tokenId + 1)`.\n                        _packedOwnerships[nextTokenId] = prevOwnershipPacked;\n                    }\n                }\n            }\n        }\n\n        emit Transfer(from, address(0), tokenId);\n        _afterTokenTransfers(from, address(0), tokenId, 1);\n\n        // Overflow not possible, as _burnCounter cannot be exceed _currentIndex times.\n        unchecked {\n            _burnCounter++;\n        }\n    }\n\n    // =============================================================\n    //                     EXTRA DATA OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Directly sets the extra data for the ownership data `index`.\n     */\n    function _setExtraDataAt(uint256 index, uint24 extraData) internal virtual {\n        uint256 packed = _packedOwnerships[index];\n        if (packed == 0) _revert(OwnershipNotInitializedForExtraData.selector);\n        uint256 extraDataCasted;\n        // Cast `extraData` with assembly to avoid redundant masking.\n        assembly {\n            extraDataCasted := extraData\n        }\n        packed = (packed & _BITMASK_EXTRA_DATA_COMPLEMENT) | (extraDataCasted << _BITPOS_EXTRA_DATA);\n        _packedOwnerships[index] = packed;\n    }\n\n    /**\n     * @dev Called during each token transfer to set the 24bit `extraData` field.\n     * Intended to be overridden by the cosumer contract.\n     *\n     * `previousExtraData` - the value of `extraData` before transfer.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, `tokenId` will be burned by `from`.\n     * - `from` and `to` are never both zero.\n     */\n    function _extraData(\n        address from,\n        address to,\n        uint24 previousExtraData\n    ) internal view virtual returns (uint24) {}\n\n    /**\n     * @dev Returns the next extra data for the packed ownership data.\n     * The returned result is shifted into position.\n     */\n    function _nextExtraData(\n        address from,\n        address to,\n        uint256 prevOwnershipPacked\n    ) private view returns (uint256) {\n        uint24 extraData = uint24(prevOwnershipPacked >> _BITPOS_EXTRA_DATA);\n        return uint256(_extraData(from, to, extraData)) << _BITPOS_EXTRA_DATA;\n    }\n\n    // =============================================================\n    //                       OTHER OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Returns the message sender (defaults to `msg.sender`).\n     *\n     * If you are writing GSN compatible contracts, you need to override this function.\n     */\n    function _msgSenderERC721A() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    /**\n     * @dev Converts a uint256 to its ASCII string decimal representation.\n     */\n    function _toString(uint256 value) internal pure virtual returns (string memory str) {\n        assembly {\n            // The maximum value of a uint256 contains 78 digits (1 byte per digit), but\n            // we allocate 0xa0 bytes to keep the free memory pointer 32-byte word aligned.\n            // We will need 1 word for the trailing zeros padding, 1 word for the length,\n            // and 3 words for a maximum of 78 digits. Total: 5 * 0x20 = 0xa0.\n            let m := add(mload(0x40), 0xa0)\n            // Update the free memory pointer to allocate.\n            mstore(0x40, m)\n            // Assign the `str` to the end.\n            str := sub(m, 0x20)\n            // Zeroize the slot after the string.\n            mstore(str, 0)\n\n            // Cache the end of the memory to calculate the length later.\n            let end := str\n\n            // We write the string from rightmost digit to leftmost digit.\n            // The following is essentially a do-while loop that also handles the zero case.\n            // prettier-ignore\n            for { let temp := value } 1 {} {\n                str := sub(str, 1)\n                // Write the character to the pointer.\n                // The ASCII index of the '0' character is 48.\n                mstore8(str, add(48, mod(temp, 10)))\n                // Keep dividing `temp` until zero.\n                temp := div(temp, 10)\n                // prettier-ignore\n                if iszero(temp) { break }\n            }\n\n            let length := sub(end, str)\n            // Move the pointer 32 bytes leftwards to make room for the length.\n            str := sub(str, 0x20)\n            // Store the length.\n            mstore(str, length)\n        }\n    }\n\n    /**\n     * @dev For more efficient reverts.\n     */\n    function _revert(bytes4 errorSelector) internal pure {\n        assembly {\n            mstore(0x00, errorSelector)\n            revert(0x00, 0x04)\n        }\n    }\n}\n"
			},
			"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/extensions/IERC721ABurnable.sol": {
				"content": "/*\n    \n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██    ██████  ███████ ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██      ██    ██\n  ██      ██    ██ ██    ██ █████   ██████  ██    ██ ██    ██ █████      ██   ██ █████   ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██       ██  ██\n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██ ██ ██████  ███████   ████\n  \n  Find any smart contract, and build your project faster: https://www.cookbook.dev\n  Twitter: https://twitter.com/cookbook_dev\n  Discord: https://discord.gg/cookbookdev\n  \n  Find this contract on Cookbook: https://www.cookbook.dev/contracts/Azuki-ERC721A-ERC721ABurnableMock?utm=code\n  */\n  \n  // SPDX-License-Identifier: MIT\n// ERC721A Contracts v4.2.3\n// Creator: Chiru Labs\n\npragma solidity ^0.8.4;\n\nimport '../IERC721A.sol';\n\n/**\n * @dev Interface of ERC721ABurnable.\n */\ninterface IERC721ABurnable is IERC721A {\n    /**\n     * @dev Burns `tokenId`. See {ERC721A-_burn}.\n     *\n     * Requirements:\n     *\n     * - The caller must own `tokenId` or be an approved operator.\n     */\n    function burn(uint256 tokenId) external;\n}\n"
			},
			"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/IERC721A.sol": {
				"content": "/*\n    \n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██    ██████  ███████ ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██      ██    ██\n  ██      ██    ██ ██    ██ █████   ██████  ██    ██ ██    ██ █████      ██   ██ █████   ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██       ██  ██\n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██ ██ ██████  ███████   ████\n  \n  Find any smart contract, and build your project faster: https://www.cookbook.dev\n  Twitter: https://twitter.com/cookbook_dev\n  Discord: https://discord.gg/cookbookdev\n  \n  Find this contract on Cookbook: https://www.cookbook.dev/contracts/Azuki-ERC721A-ERC721ABurnableMock?utm=code\n  */\n  \n  // SPDX-License-Identifier: MIT\n// ERC721A Contracts v4.2.3\n// Creator: Chiru Labs\n\npragma solidity ^0.8.4;\n\n/**\n * @dev Interface of ERC721A.\n */\ninterface IERC721A {\n    /**\n     * The caller must own the token or be an approved operator.\n     */\n    error ApprovalCallerNotOwnerNorApproved();\n\n    /**\n     * The token does not exist.\n     */\n    error ApprovalQueryForNonexistentToken();\n\n    /**\n     * Cannot query the balance for the zero address.\n     */\n    error BalanceQueryForZeroAddress();\n\n    /**\n     * Cannot mint to the zero address.\n     */\n    error MintToZeroAddress();\n\n    /**\n     * The quantity of tokens minted must be more than zero.\n     */\n    error MintZeroQuantity();\n\n    /**\n     * The token does not exist.\n     */\n    error OwnerQueryForNonexistentToken();\n\n    /**\n     * The caller must own the token or be an approved operator.\n     */\n    error TransferCallerNotOwnerNorApproved();\n\n    /**\n     * The token must be owned by `from`.\n     */\n    error TransferFromIncorrectOwner();\n\n    /**\n     * Cannot safely transfer to a contract that does not implement the\n     * ERC721Receiver interface.\n     */\n    error TransferToNonERC721ReceiverImplementer();\n\n    /**\n     * Cannot transfer to the zero address.\n     */\n    error TransferToZeroAddress();\n\n    /**\n     * The token does not exist.\n     */\n    error URIQueryForNonexistentToken();\n\n    /**\n     * The `quantity` minted with ERC2309 exceeds the safety limit.\n     */\n    error MintERC2309QuantityExceedsLimit();\n\n    /**\n     * The `extraData` cannot be set on an unintialized ownership slot.\n     */\n    error OwnershipNotInitializedForExtraData();\n\n    // =============================================================\n    //                            STRUCTS\n    // =============================================================\n\n    struct TokenOwnership {\n        // The address of the owner.\n        address addr;\n        // Stores the start time of ownership with minimal overhead for tokenomics.\n        uint64 startTimestamp;\n        // Whether the token has been burned.\n        bool burned;\n        // Arbitrary data similar to `startTimestamp` that can be set via {_extraData}.\n        uint24 extraData;\n    }\n\n    // =============================================================\n    //                         TOKEN COUNTERS\n    // =============================================================\n\n    /**\n     * @dev Returns the total number of tokens in existence.\n     * Burned tokens will reduce the count.\n     * To get the total number of tokens minted, please see {_totalMinted}.\n     */\n    function totalSupply() external view returns (uint256);\n\n    // =============================================================\n    //                            IERC165\n    // =============================================================\n\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified)\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n\n    // =============================================================\n    //                            IERC721\n    // =============================================================\n\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables\n     * (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in `owner`'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`,\n     * checking first that contract recipients are aware of the ERC721 protocol\n     * to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be have been allowed to move\n     * this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement\n     * {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external payable;\n\n    /**\n     * @dev Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external payable;\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom}\n     * whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token\n     * by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external payable;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the\n     * zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external payable;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom}\n     * for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n\n    // =============================================================\n    //                        IERC721Metadata\n    // =============================================================\n\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n\n    // =============================================================\n    //                           IERC2309\n    // =============================================================\n\n    /**\n     * @dev Emitted when tokens in `fromTokenId` to `toTokenId`\n     * (inclusive) is transferred from `from` to `to`, as defined in the\n     * [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard.\n     *\n     * See {_mintERC2309} for more details.\n     */\n    event ConsecutiveTransfer(uint256 indexed fromTokenId, uint256 toTokenId, address indexed from, address indexed to);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 5000000
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [],
			"evmVersion": "istanbul"
		}
	},
	"output": {
		"contracts": {
			"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)//mocks/ERC721ABurnableMock.sol": {
				"ERC721ABurnableMock": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintERC2309QuantityExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnershipNotInitializedForExtraData",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "ConsecutiveTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "exists",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "getOwnershipAt",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "addr",
											"type": "address"
										},
										{
											"internalType": "uint64",
											"name": "startTimestamp",
											"type": "uint64"
										},
										{
											"internalType": "bool",
											"name": "burned",
											"type": "bool"
										},
										{
											"internalType": "uint24",
											"name": "extraData",
											"type": "uint24"
										}
									],
									"internalType": "struct IERC721A.TokenOwnership",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "numberBurned",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "quantity",
									"type": "uint256"
								}
							],
							"name": "safeMint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalBurned",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalMinted",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"ConsecutiveTransfer(uint256,uint256,address,address)": {
								"details": "Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. See {ERC721A-_approve}. Requirements: - The caller must own the token or be an approved operator."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in `owner`'s account."
							},
							"burn(uint256)": {
								"details": "Burns `tokenId`. See {ERC721A-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}."
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"totalSupply()": {
								"details": "Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)//mocks/ERC721ABurnableMock.sol\":1449:2246  contract ERC721ABurnableMock is ERC721A, ERC721ABurnable {... */\n  mstore(0x40, 0x80)\n    /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)//mocks/ERC721ABurnableMock.sol\":1512:1594  constructor(string memory name_, string memory symbol_) ERC721A(name_, symbol_) {} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)//mocks/ERC721ABurnableMock.sol\":1576:1581  name_ */\n  dup2\n    /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)//mocks/ERC721ABurnableMock.sol\":1583:1590  symbol_ */\n  dup2\n    /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":6306:6311  _name */\n  0x02\n    /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":6306:6319  _name = name_ */\n  tag_7\n    /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)//mocks/ERC721ABurnableMock.sol\":1576:1581  name_ */\n  dup4\n    /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":6306:6311  _name */\n  dup3\n    /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":6306:6319  _name = name_ */\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":6329:6336  _symbol */\n  0x03\n    /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":6329:6346  _symbol = symbol_ */\n  tag_9\n    /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":6339:6346  symbol_ */\n  dup3\n    /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":6329:6336  _symbol */\n  dup3\n    /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":6329:6346  _symbol = symbol_ */\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n    /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":6776:6783  uint256 */\n  0x00\n    /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":6356:6369  _currentIndex */\n  dup1\n    /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":6356:6387  _currentIndex = _startTokenId() */\n  sstore\n  pop\n    /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)//mocks/ERC721ABurnableMock.sol\":1449:2246  contract ERC721ABurnableMock is ERC721A, ERC721ABurnable {... */\n  tag_21\n  swap3\n  pop\n  pop\n  pop\n  jump\n    /* \"#utility.yul\":14:141   */\ntag_15:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:980   */\ntag_16:\n    /* \"#utility.yul\":200:205   */\n  0x00\n    /* \"#utility.yul\":253:256   */\n  dup3\n    /* \"#utility.yul\":246:250   */\n  0x1f\n    /* \"#utility.yul\":238:244   */\n  dup4\n    /* \"#utility.yul\":234:251   */\n  add\n    /* \"#utility.yul\":230:257   */\n  slt\n    /* \"#utility.yul\":220:275   */\n  tag_24\n  jumpi\n    /* \"#utility.yul\":271:272   */\n  0x00\n    /* \"#utility.yul\":268:269   */\n  dup1\n    /* \"#utility.yul\":261:273   */\n  revert\n    /* \"#utility.yul\":220:275   */\ntag_24:\n    /* \"#utility.yul\":298:311   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":323:353   */\n  dup2\n  gt\n    /* \"#utility.yul\":320:376   */\n  iszero\n  tag_26\n  jumpi\n    /* \"#utility.yul\":356:374   */\n  tag_26\n  tag_15\n  jump\t// in\ntag_26:\n    /* \"#utility.yul\":405:407   */\n  0x40\n    /* \"#utility.yul\":399:408   */\n  mload\n    /* \"#utility.yul\":497:499   */\n  0x1f\n    /* \"#utility.yul\":459:476   */\n  dup3\n  add\n  not(0x1f)\n    /* \"#utility.yul\":455:486   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":488:490   */\n  0x3f\n    /* \"#utility.yul\":451:491   */\n  add\n    /* \"#utility.yul\":447:501   */\n  and\n    /* \"#utility.yul\":435:502   */\n  dup2\n  add\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":517:551   */\n  dup2\n  gt\n    /* \"#utility.yul\":553:575   */\n  dup3\n  dup3\n  lt\n    /* \"#utility.yul\":514:576   */\n  or\n    /* \"#utility.yul\":511:599   */\n  iszero\n  tag_28\n  jumpi\n    /* \"#utility.yul\":579:597   */\n  tag_28\n  tag_15\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":615:617   */\n  0x40\n    /* \"#utility.yul\":608:630   */\n  mstore\n    /* \"#utility.yul\":639:661   */\n  dup2\n  dup2\n  mstore\n    /* \"#utility.yul\":680:699   */\n  dup4\n  dup3\n  add\n    /* \"#utility.yul\":701:705   */\n  0x20\n    /* \"#utility.yul\":676:706   */\n  add\n    /* \"#utility.yul\":673:712   */\n  dup6\n  lt\n    /* \"#utility.yul\":670:729   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":725:726   */\n  0x00\n    /* \"#utility.yul\":722:723   */\n  dup1\n    /* \"#utility.yul\":715:727   */\n  revert\n    /* \"#utility.yul\":670:729   */\ntag_29:\n    /* \"#utility.yul\":747:748   */\n  0x00\n    /* \"#utility.yul\":757:900   */\ntag_30:\n    /* \"#utility.yul\":771:777   */\n  dup3\n    /* \"#utility.yul\":768:769   */\n  dup2\n    /* \"#utility.yul\":765:778   */\n  lt\n    /* \"#utility.yul\":757:900   */\n  iszero\n  tag_32\n  jumpi\n    /* \"#utility.yul\":883:887   */\n  0x20\n    /* \"#utility.yul\":867:881   */\n  dup2\n  dup7\n  add\n    /* \"#utility.yul\":863:888   */\n  dup2\n  add\n    /* \"#utility.yul\":857:889   */\n  mload\n    /* \"#utility.yul\":834:848   */\n  dup4\n  dup4\n  add\n    /* \"#utility.yul\":830:855   */\n  dup3\n  add\n    /* \"#utility.yul\":823:890   */\n  mstore\n    /* \"#utility.yul\":786:798   */\n  add\n    /* \"#utility.yul\":757:900   */\n  jump(tag_30)\ntag_32:\n  pop\n    /* \"#utility.yul\":948:949   */\n  0x00\n    /* \"#utility.yul\":920:939   */\n  swap2\n  dup2\n  add\n    /* \"#utility.yul\":941:945   */\n  0x20\n    /* \"#utility.yul\":916:946   */\n  add\n    /* \"#utility.yul\":909:950   */\n  swap2\n  swap1\n  swap2\n  mstore\n    /* \"#utility.yul\":924:930   */\n  swap4\n    /* \"#utility.yul\":146:980   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":985:1542   */\ntag_3:\n    /* \"#utility.yul\":1084:1090   */\n  0x00\n    /* \"#utility.yul\":1092:1098   */\n  dup1\n    /* \"#utility.yul\":1145:1147   */\n  0x40\n    /* \"#utility.yul\":1133:1142   */\n  dup4\n    /* \"#utility.yul\":1124:1131   */\n  dup6\n    /* \"#utility.yul\":1120:1143   */\n  sub\n    /* \"#utility.yul\":1116:1148   */\n  slt\n    /* \"#utility.yul\":1113:1165   */\n  iszero\n  tag_34\n  jumpi\n    /* \"#utility.yul\":1161:1162   */\n  0x00\n    /* \"#utility.yul\":1158:1159   */\n  dup1\n    /* \"#utility.yul\":1151:1163   */\n  revert\n    /* \"#utility.yul\":1113:1165   */\ntag_34:\n    /* \"#utility.yul\":1188:1204   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1216:1246   */\n  dup2\n  gt\n    /* \"#utility.yul\":1213:1263   */\n  iszero\n  tag_35\n  jumpi\n    /* \"#utility.yul\":1259:1260   */\n  0x00\n    /* \"#utility.yul\":1256:1257   */\n  dup1\n    /* \"#utility.yul\":1249:1261   */\n  revert\n    /* \"#utility.yul\":1213:1263   */\ntag_35:\n    /* \"#utility.yul\":1282:1343   */\n  tag_36\n    /* \"#utility.yul\":1335:1342   */\n  dup6\n    /* \"#utility.yul\":1326:1332   */\n  dup3\n    /* \"#utility.yul\":1315:1324   */\n  dup7\n    /* \"#utility.yul\":1311:1333   */\n  add\n    /* \"#utility.yul\":1282:1343   */\n  tag_16\n  jump\t// in\ntag_36:\n    /* \"#utility.yul\":1389:1391   */\n  0x20\n    /* \"#utility.yul\":1374:1392   */\n  dup6\n  add\n    /* \"#utility.yul\":1368:1393   */\n  mload\n    /* \"#utility.yul\":1272:1343   */\n  swap1\n  swap4\n  pop\n    /* \"#utility.yul\":1368:1393   */\n  swap1\n  pop\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1405:1437   */\n  dup2\n  gt\n    /* \"#utility.yul\":1402:1454   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":1450:1451   */\n  0x00\n    /* \"#utility.yul\":1447:1448   */\n  dup1\n    /* \"#utility.yul\":1440:1452   */\n  revert\n    /* \"#utility.yul\":1402:1454   */\ntag_37:\n    /* \"#utility.yul\":1473:1536   */\n  tag_38\n    /* \"#utility.yul\":1528:1535   */\n  dup6\n    /* \"#utility.yul\":1517:1525   */\n  dup3\n    /* \"#utility.yul\":1506:1515   */\n  dup7\n    /* \"#utility.yul\":1502:1526   */\n  add\n    /* \"#utility.yul\":1473:1536   */\n  tag_16\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":1463:1536   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":985:1542   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1547:1927   */\ntag_17:\n    /* \"#utility.yul\":1626:1627   */\n  0x01\n    /* \"#utility.yul\":1622:1634   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1669:1681   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1690:1751   */\n  tag_40\n  jumpi\n    /* \"#utility.yul\":1744:1748   */\n  0x7f\n    /* \"#utility.yul\":1736:1742   */\n  dup3\n    /* \"#utility.yul\":1732:1749   */\n  and\n    /* \"#utility.yul\":1722:1749   */\n  swap2\n  pop\n    /* \"#utility.yul\":1690:1751   */\ntag_40:\n    /* \"#utility.yul\":1797:1799   */\n  0x20\n    /* \"#utility.yul\":1789:1795   */\n  dup3\n    /* \"#utility.yul\":1786:1800   */\n  lt\n    /* \"#utility.yul\":1766:1784   */\n  dup2\n    /* \"#utility.yul\":1763:1801   */\n  sub\n    /* \"#utility.yul\":1760:1921   */\n  tag_41\n  jumpi\n    /* \"#utility.yul\":1843:1853   */\n  0x4e487b71\n    /* \"#utility.yul\":1838:1841   */\n  0xe0\n    /* \"#utility.yul\":1834:1854   */\n  shl\n    /* \"#utility.yul\":1831:1832   */\n  0x00\n    /* \"#utility.yul\":1824:1855   */\n  mstore\n    /* \"#utility.yul\":1878:1882   */\n  0x22\n    /* \"#utility.yul\":1875:1876   */\n  0x04\n    /* \"#utility.yul\":1868:1883   */\n  mstore\n    /* \"#utility.yul\":1906:1910   */\n  0x24\n    /* \"#utility.yul\":1903:1904   */\n  0x00\n    /* \"#utility.yul\":1896:1911   */\n  revert\n    /* \"#utility.yul\":1760:1921   */\ntag_41:\n  pop\n    /* \"#utility.yul\":1547:1927   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2058:2576   */\ntag_19:\n    /* \"#utility.yul\":2160:2162   */\n  0x1f\n    /* \"#utility.yul\":2155:2158   */\n  dup3\n    /* \"#utility.yul\":2152:2163   */\n  gt\n    /* \"#utility.yul\":2149:2570   */\n  iszero\n  tag_44\n  jumpi\n    /* \"#utility.yul\":2196:2201   */\n  dup1\n    /* \"#utility.yul\":2193:2194   */\n  0x00\n    /* \"#utility.yul\":2186:2202   */\n  mstore\n    /* \"#utility.yul\":2240:2244   */\n  0x20\n    /* \"#utility.yul\":2237:2238   */\n  0x00\n    /* \"#utility.yul\":2227:2245   */\n  keccak256\n    /* \"#utility.yul\":2310:2312   */\n  0x1f\n    /* \"#utility.yul\":2298:2308   */\n  dup5\n    /* \"#utility.yul\":2294:2313   */\n  add\n    /* \"#utility.yul\":2291:2292   */\n  0x05\n    /* \"#utility.yul\":2287:2314   */\n  shr\n    /* \"#utility.yul\":2281:2285   */\n  dup2\n    /* \"#utility.yul\":2277:2315   */\n  add\n    /* \"#utility.yul\":2346:2350   */\n  0x20\n    /* \"#utility.yul\":2334:2344   */\n  dup6\n    /* \"#utility.yul\":2331:2351   */\n  lt\n    /* \"#utility.yul\":2328:2375   */\n  iszero\n  tag_45\n  jumpi\n  pop\n    /* \"#utility.yul\":2369:2373   */\n  dup1\n    /* \"#utility.yul\":2328:2375   */\ntag_45:\n    /* \"#utility.yul\":2424:2426   */\n  0x1f\n    /* \"#utility.yul\":2419:2422   */\n  dup5\n    /* \"#utility.yul\":2415:2427   */\n  add\n    /* \"#utility.yul\":2412:2413   */\n  0x05\n    /* \"#utility.yul\":2408:2428   */\n  shr\n    /* \"#utility.yul\":2402:2406   */\n  dup3\n    /* \"#utility.yul\":2398:2429   */\n  add\n    /* \"#utility.yul\":2388:2429   */\n  swap2\n  pop\n    /* \"#utility.yul\":2479:2560   */\ntag_46:\n    /* \"#utility.yul\":2497:2499   */\n  dup2\n    /* \"#utility.yul\":2490:2495   */\n  dup2\n    /* \"#utility.yul\":2487:2500   */\n  lt\n    /* \"#utility.yul\":2479:2560   */\n  iszero\n  tag_48\n  jumpi\n    /* \"#utility.yul\":2556:2557   */\n  0x00\n    /* \"#utility.yul\":2542:2558   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2523:2524   */\n  0x01\n    /* \"#utility.yul\":2512:2525   */\n  add\n    /* \"#utility.yul\":2479:2560   */\n  jump(tag_46)\ntag_48:\n    /* \"#utility.yul\":2483:2486   */\n  pop\n  pop\n    /* \"#utility.yul\":2149:2570   */\ntag_44:\n    /* \"#utility.yul\":2058:2576   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2752:4051   */\ntag_8:\n    /* \"#utility.yul\":2872:2882   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":2894:2924   */\n  dup2\n  gt\n    /* \"#utility.yul\":2891:2947   */\n  iszero\n  tag_52\n  jumpi\n    /* \"#utility.yul\":2927:2945   */\n  tag_52\n  tag_15\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":2956:3053   */\n  tag_53\n    /* \"#utility.yul\":3046:3052   */\n  dup2\n    /* \"#utility.yul\":3006:3044   */\n  tag_54\n    /* \"#utility.yul\":3038:3042   */\n  dup5\n    /* \"#utility.yul\":3032:3043   */\n  sload\n    /* \"#utility.yul\":3006:3044   */\n  tag_17\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":3000:3004   */\n  dup5\n    /* \"#utility.yul\":2956:3053   */\n  tag_19\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":3102:3106   */\n  0x20\n    /* \"#utility.yul\":3133:3135   */\n  0x1f\n    /* \"#utility.yul\":3122:3136   */\n  dup3\n  gt\n    /* \"#utility.yul\":3150:3151   */\n  0x01\n    /* \"#utility.yul\":3145:3794   */\n  dup2\n  eq\n  tag_56\n  jumpi\n    /* \"#utility.yul\":3838:3839   */\n  0x00\n    /* \"#utility.yul\":3855:3861   */\n  dup4\n    /* \"#utility.yul\":3852:3941   */\n  iszero\n  tag_57\n  jumpi\n  pop\n    /* \"#utility.yul\":3907:3926   */\n  dup5\n  dup3\n  add\n    /* \"#utility.yul\":3901:3927   */\n  mload\n    /* \"#utility.yul\":3852:3941   */\ntag_57:\n  not(0x00)\n    /* \"#utility.yul\":2709:2710   */\n  0x03\n    /* \"#utility.yul\":2705:2716   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":2701:2725   */\n  shr\n    /* \"#utility.yul\":2697:2726   */\n  not\n    /* \"#utility.yul\":2687:2727   */\n  and\n    /* \"#utility.yul\":2733:2734   */\n  0x01\n    /* \"#utility.yul\":2729:2740   */\n  dup5\n  swap1\n  shl\n    /* \"#utility.yul\":2684:2741   */\n  or\n    /* \"#utility.yul\":3954:4035   */\n  dup5\n  sstore\n    /* \"#utility.yul\":3115:4045   */\n  jump(tag_48)\n    /* \"#utility.yul\":3145:3794   */\ntag_56:\n    /* \"#utility.yul\":2005:2006   */\n  0x00\n    /* \"#utility.yul\":1998:2012   */\n  dup5\n  dup2\n  mstore\n    /* \"#utility.yul\":2042:2046   */\n  0x20\n    /* \"#utility.yul\":2029:2047   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":3181:3201   */\n  dup6\n  and\n  swap2\n    /* \"#utility.yul\":3299:3521   */\ntag_60:\n    /* \"#utility.yul\":3313:3320   */\n  dup3\n    /* \"#utility.yul\":3310:3311   */\n  dup2\n    /* \"#utility.yul\":3307:3321   */\n  lt\n    /* \"#utility.yul\":3299:3521   */\n  iszero\n  tag_62\n  jumpi\n    /* \"#utility.yul\":3395:3414   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":3389:3415   */\n  mload\n    /* \"#utility.yul\":3374:3416   */\n  dup3\n  sstore\n    /* \"#utility.yul\":3502:3506   */\n  0x20\n    /* \"#utility.yul\":3487:3507   */\n  swap5\n  dup6\n  add\n  swap5\n    /* \"#utility.yul\":3455:3456   */\n  0x01\n    /* \"#utility.yul\":3443:3457   */\n  swap1\n  swap3\n  add\n  swap2\n    /* \"#utility.yul\":3329:3341   */\n  add\n    /* \"#utility.yul\":3299:3521   */\n  jump(tag_60)\ntag_62:\n    /* \"#utility.yul\":3303:3306   */\n  pop\n    /* \"#utility.yul\":3549:3555   */\n  dup5\n    /* \"#utility.yul\":3540:3547   */\n  dup3\n    /* \"#utility.yul\":3537:3556   */\n  lt\n    /* \"#utility.yul\":3534:3735   */\n  iszero\n  tag_63\n  jumpi\n    /* \"#utility.yul\":3610:3629   */\n  dup7\n  dup5\n  add\n    /* \"#utility.yul\":3604:3630   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":3693:3694   */\n  0x03\n    /* \"#utility.yul\":3689:3703   */\n  dup8\n  swap1\n  shl\n    /* \"#utility.yul\":3705:3708   */\n  0xf8\n    /* \"#utility.yul\":3685:3709   */\n  and\n    /* \"#utility.yul\":3681:3718   */\n  shr\n    /* \"#utility.yul\":3677:3719   */\n  not\n    /* \"#utility.yul\":3662:3720   */\n  and\n    /* \"#utility.yul\":3647:3721   */\n  dup2\n  sstore\n    /* \"#utility.yul\":3534:3735   */\ntag_63:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3781:3782   */\n  0x01\n    /* \"#utility.yul\":3765:3779   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":3761:3783   */\n  add\n    /* \"#utility.yul\":3748:3784   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":2752:4051   */\n  jump\t// out\ntag_21:\n    /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)//mocks/ERC721ABurnableMock.sol\":1449:2246  contract ERC721ABurnableMock is ERC721A, ERC721ABurnable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)//mocks/ERC721ABurnableMock.sol\":1449:2246  contract ERC721ABurnableMock is ERC721A, ERC721ABurnable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6352211e\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xa2309ff8\n      gt\n      tag_24\n      jumpi\n      dup1\n      0xd89135cd\n      gt\n      tag_25\n      jumpi\n      dup1\n      0xd89135cd\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xf2523633\n      eq\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      dup1\n      0xa2309ff8\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      dup1\n      0x95d89b41\n      gt\n      tag_26\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xa1448194\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      dup1\n      0x6352211e\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      dup1\n      0x23b872dd\n      gt\n      tag_27\n      jumpi\n      dup1\n      0x42842e0e\n      gt\n      tag_28\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x4f558e79\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x2478d639\n      eq\n      tag_8\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      dup1\n      0x081812fc\n      gt\n      tag_29\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":10458:11088  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      pop\n      tag_31\n      tag_32\n      calldatasize\n      0x04\n      tag_33\n      jump\t// in\n    tag_32:\n      tag_34\n      jump\t// in\n    tag_31:\n      mload(0x40)\n        /* \"#utility.yul\":611:625   */\n      swap1\n      iszero\n        /* \"#utility.yul\":604:626   */\n      iszero\n        /* \"#utility.yul\":586:627   */\n      dup2\n      mstore\n        /* \"#utility.yul\":574:576   */\n      0x20\n        /* \"#utility.yul\":559:577   */\n      add\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":10458:11088  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":11342:11440  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_37\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      pop\n      tag_38\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":18205:18428  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_42\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      pop\n      tag_43\n      tag_44\n      calldatasize\n      0x04\n      tag_45\n      jump\t// in\n    tag_44:\n      tag_46\n      jump\t// in\n    tag_43:\n      mload(0x40)\n        /* \"#utility.yul\":1860:1902   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1848:1903   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1830:1904   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1818:1820   */\n      0x20\n        /* \"#utility.yul\":1803:1821   */\n      add\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":18205:18428  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n      tag_35\n        /* \"#utility.yul\":1684:1910   */\n      jump\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":17933:18055  function approve(address to, uint256 tokenId) public payable virtual override {... */\n    tag_5:\n      tag_49\n      tag_50\n      calldatasize\n      0x04\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n    tag_49:\n      stop\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":7188:7505  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_53\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_53:\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":7458:7470  _burnCounter */\n      sload(0x01)\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":7249:7256  uint256 */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":7442:7455  _currentIndex */\n      sload\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":7442:7470  _currentIndex - _burnCounter */\n      sub\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":7188:7505  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_54:\n      mload(0x40)\n        /* \"#utility.yul\":2567:2592   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":2555:2557   */\n      0x20\n        /* \"#utility.yul\":2540:2558   */\n      add\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":7188:7505  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_35\n        /* \"#utility.yul\":2421:2598   */\n      jump\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":21840:25287  function transferFrom(... */\n    tag_7:\n      tag_49\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)//mocks/ERC721ABurnableMock.sol\":2133:2244  function numberBurned(address owner) public view returns (uint256) {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_62\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_62:\n      pop\n      tag_54\n      tag_64\n      calldatasize\n      0x04\n      tag_65\n      jump\t// in\n    tag_64:\n      tag_66\n      jump\t// in\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":25378:25565  function safeTransferFrom(... */\n    tag_9:\n      tag_49\n      tag_69\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_69:\n      tag_70\n      jump\t// in\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/extensions/ERC721ABurnable.sol\":1804:1896  function burn(uint256 tokenId) public virtual override {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_71\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_71:\n      pop\n      tag_49\n      tag_73\n      calldatasize\n      0x04\n      tag_45\n      jump\t// in\n    tag_73:\n      tag_74\n      jump\t// in\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)//mocks/ERC721ABurnableMock.sol\":1600:1700  function exists(uint256 tokenId) public view returns (bool) {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_75\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_75:\n      pop\n      tag_31\n      tag_77\n      calldatasize\n      0x04\n      tag_45\n      jump\t// in\n    tag_77:\n      tag_78\n      jump\t// in\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":12703:12853  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_80\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_80:\n      pop\n      tag_43\n      tag_82\n      calldatasize\n      0x04\n      tag_45\n      jump\t// in\n    tag_82:\n      tag_83\n      jump\t// in\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":8339:8578  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_85\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_85:\n      pop\n      tag_54\n      tag_87\n      calldatasize\n      0x04\n      tag_65\n      jump\t// in\n    tag_87:\n      tag_88\n      jump\t// in\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":11511:11613  function symbol() public view virtual override returns (string memory) {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_90\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_90:\n      pop\n      tag_38\n      tag_92\n      jump\t// in\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)//mocks/ERC721ABurnableMock.sol\":1706:1801  function safeMint(address to, uint256 quantity) public {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_94\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_94:\n      pop\n      tag_49\n      tag_96\n      calldatasize\n      0x04\n      tag_51\n      jump\t// in\n    tag_96:\n      tag_97\n      jump\t// in\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":18755:18986  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_98\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_98:\n      pop\n      tag_49\n      tag_100\n      calldatasize\n      0x04\n      tag_101\n      jump\t// in\n    tag_100:\n      tag_102\n      jump\t// in\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)//mocks/ERC721ABurnableMock.sol\":1939:2030  function totalMinted() public view returns (uint256) {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_103\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_103:\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)//mocks/ERC721ABurnableMock.sol\":1983:1990  uint256 */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":7840:7853  _currentIndex */\n      sload\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)//mocks/ERC721ABurnableMock.sol\":1939:2030  function totalMinted() public view returns (uint256) {... */\n      jump(tag_54)\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":26146:26551  function safeTransferFrom(... */\n    tag_18:\n      tag_49\n      tag_108\n      calldatasize\n      0x04\n      tag_109\n      jump\t// in\n    tag_108:\n      tag_110\n      jump\t// in\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":11714:12036  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_111\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_111:\n      pop\n      tag_38\n      tag_113\n      calldatasize\n      0x04\n      tag_45\n      jump\t// in\n    tag_113:\n      tag_114\n      jump\t// in\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)//mocks/ERC721ABurnableMock.sol\":2036:2127  function totalBurned() public view returns (uint256) {... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_116\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_116:\n      pop\n      tag_54\n      tag_118\n      jump\t// in\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":19136:19298  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_120\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_120:\n      pop\n      tag_31\n      tag_122\n      calldatasize\n      0x04\n      tag_123\n      jump\t// in\n    tag_122:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":19256:19281  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap2\n      dup3\n      and\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":19233:19237  bool */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":19256:19281  _operatorApprovals[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":19256:19274  _operatorApprovals */\n      0x07\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":19256:19281  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":19256:19291  _operatorApprovals[owner][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":19136:19298  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      jump\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)//mocks/ERC721ABurnableMock.sol\":1807:1933  function getOwnershipAt(uint256 index) public view returns (TokenOwnership memory) {... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_126\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_126:\n      pop\n      tag_127\n      tag_128\n      calldatasize\n      0x04\n      tag_45\n      jump\t// in\n    tag_128:\n      tag_129\n      jump\t// in\n    tag_127:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n        /* \"#utility.yul\":5542:5555   */\n      dup2\n      mload\n        /* \"#utility.yul\":5557:5599   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":5538:5600   */\n      and\n        /* \"#utility.yul\":5520:5601   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5661:5665   */\n      0x20\n        /* \"#utility.yul\":5649:5666   */\n      dup1\n      dup4\n      add\n        /* \"#utility.yul\":5643:5667   */\n      mload\n        /* \"#utility.yul\":5669:5687   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5639:5688   */\n      and\n        /* \"#utility.yul\":5617:5637   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":5610:5689   */\n      mstore\n        /* \"#utility.yul\":5759:5763   */\n      0x40\n        /* \"#utility.yul\":5747:5764   */\n      dup1\n      dup4\n      add\n        /* \"#utility.yul\":5741:5765   */\n      mload\n        /* \"#utility.yul\":5734:5766   */\n      iszero\n        /* \"#utility.yul\":5727:5767   */\n      iszero\n        /* \"#utility.yul\":5705:5725   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":5698:5768   */\n      mstore\n        /* \"#utility.yul\":5828:5832   */\n      0x60\n        /* \"#utility.yul\":5816:5833   */\n      swap2\n      dup3\n      add\n        /* \"#utility.yul\":5810:5834   */\n      mload\n        /* \"#utility.yul\":5836:5844   */\n      0xffffff\n        /* \"#utility.yul\":5806:5845   */\n      and\n        /* \"#utility.yul\":5784:5804   */\n      swap2\n      dup2\n      add\n        /* \"#utility.yul\":5777:5846   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":5507:5510   */\n      0x80\n        /* \"#utility.yul\":5492:5511   */\n      add\n      swap1\n        /* \"#utility.yul\":5309:5852   */\n      jump\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":10458:11088  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_34:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":10543:10547  bool */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":10861:10886  interfaceId == 0x01ffc9a7 */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n      dup4\n      and\n      eq\n      dup1\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":10861:10962  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n      tag_133\n      jumpi\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":10937:10962  interfaceId == 0x80ac58cd */\n      0x80ac58cd00000000000000000000000000000000000000000000000000000000\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n      dup4\n      and\n      eq\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":10861:10962  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n    tag_133:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":10861:11038  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n      dup1\n      tag_134\n      jumpi\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":11013:11038  interfaceId == 0x5b5e139f */\n      0x5b5e139f00000000000000000000000000000000000000000000000000000000\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n      dup4\n      and\n      eq\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":10861:11038  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n    tag_134:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":10842:11038  return... */\n      swap3\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":10458:11088  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":11342:11440  function name() public view virtual override returns (string memory) {... */\n    tag_39:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":11396:11409  string memory */\n      0x60\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":11428:11433  _name */\n      0x02\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":11421:11433  return _name */\n      dup1\n      sload\n      tag_136\n      swap1\n      tag_137\n      jump\t// in\n    tag_136:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_138\n      swap1\n      tag_137\n      jump\t// in\n    tag_138:\n      dup1\n      iszero\n      tag_139\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_140\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_139)\n    tag_140:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_141:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_141\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_139:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":11342:11440  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":18205:18428  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_46:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":18281:18288  address */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":18305:18321  _exists(tokenId) */\n      tag_143\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":18313:18320  tokenId */\n      dup3\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":18305:18312  _exists */\n      tag_144\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":18305:18321  _exists(tokenId) */\n      jump\t// in\n    tag_143:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":18300:18373  if (!_exists(tokenId)) _revert(ApprovalQueryForNonexistentToken.selector) */\n      tag_146\n      jumpi\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":18323:18373  _revert(ApprovalQueryForNonexistentToken.selector) */\n      tag_146\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":18331:18372  ApprovalQueryForNonexistentToken.selector */\n      0xcf4700e400000000000000000000000000000000000000000000000000000000\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":18323:18330  _revert */\n      tag_147\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":18323:18373  _revert(ApprovalQueryForNonexistentToken.selector) */\n      jump\t// in\n    tag_146:\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":18391:18415  _tokenApprovals[tokenId] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":18391:18406  _tokenApprovals */\n      0x06\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":18391:18415  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":18391:18421  _tokenApprovals[tokenId].value */\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":18205:18428  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n      jump\t// out\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":17933:18055  function approve(address to, uint256 tokenId) public payable virtual override {... */\n    tag_52:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":18021:18048  _approve(to, tokenId, true) */\n      tag_149\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":18030:18032  to */\n      dup3\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":18034:18041  tokenId */\n      dup3\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":18043:18047  true */\n      0x01\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":18021:18029  _approve */\n      tag_150\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":18021:18048  _approve(to, tokenId, true) */\n      jump\t// in\n    tag_149:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":17933:18055  function approve(address to, uint256 tokenId) public payable virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":21840:25287  function transferFrom(... */\n    tag_61:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":21977:22004  uint256 prevOwnershipPacked */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":22007:22034  _packedOwnershipOf(tokenId) */\n      tag_155\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":22026:22033  tokenId */\n      dup3\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":22007:22025  _packedOwnershipOf */\n      tag_156\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":22007:22034  _packedOwnershipOf(tokenId) */\n      jump\t// in\n    tag_155:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":4079:4093  (1 << 160) - 1 */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":22159:22181  uint256(uint160(from)) */\n      swap5\n      dup6\n      and\n      swap5\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":21977:22034  uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId) */\n      swap1\n      swap2\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":22217:22262  address(uint160(prevOwnershipPacked)) != from */\n      dup2\n      and\n      dup5\n      eq\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":22213:22308  if (address(uint160(prevOwnershipPacked)) != from) _revert(TransferFromIncorrectOwner.selector) */\n      tag_158\n      jumpi\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":22264:22308  _revert(TransferFromIncorrectOwner.selector) */\n      tag_158\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":22272:22307  TransferFromIncorrectOwner.selector */\n      0xa114810000000000000000000000000000000000000000000000000000000000\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":22264:22271  _revert */\n      tag_147\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":22264:22308  _revert(TransferFromIncorrectOwner.selector) */\n      jump\t// in\n    tag_158:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":22320:22347  uint256 approvedAddressSlot */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":20973:20997  _tokenApprovals[tokenId] */\n      dup3\n      dup2\n      mstore\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":20973:20988  _tokenApprovals */\n      0x06\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":20973:20997  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":21197:21223  sload(approvedAddressSlot) */\n      dup1\n      sload\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":22508:22576  _isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()) */\n      tag_161\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":21197:21223  sload(approvedAddressSlot) */\n      dup2\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":22550:22554  from */\n      dup8\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":42781:42791  msg.sender */\n      caller\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":22556:22575  _msgSenderERC721A() */\n    tag_162:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":20318:20334  _BITMASK_ADDRESS */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":20461:20493  and(msgSender, _BITMASK_ADDRESS) */\n      swap1\n      dup2\n      and\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":20307:20335  and(owner, _BITMASK_ADDRESS) */\n      swap2\n      and\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":20588:20608  eq(msgSender, owner) */\n      dup2\n      eq\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":20610:20640  eq(msgSender, approvedAddress) */\n      swap2\n      eq\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":20585:20641  or(eq(msgSender, owner), eq(msgSender, approvedAddress)) */\n      or\n      swap1\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":20011:20657  function _isSenderApprovedOrOwner(... */\n      jump\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":22508:22576  _isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()) */\n    tag_161:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":22503:22691  if (!_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()))... */\n      tag_169\n      jumpi\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":22595:22638  isApprovedForAll(from, _msgSenderERC721A()) */\n      tag_166\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":22612:22616  from */\n      dup7\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":42781:42791  msg.sender */\n      caller\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":19136:19298  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      tag_122\n      jump\t// in\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":22595:22638  isApprovedForAll(from, _msgSenderERC721A()) */\n    tag_166:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":22590:22691  if (!isApprovedForAll(from, _msgSenderERC721A())) _revert(TransferCallerNotOwnerNorApproved.selector) */\n      tag_169\n      jumpi\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":22640:22691  _revert(TransferCallerNotOwnerNorApproved.selector) */\n      tag_169\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":22648:22690  TransferCallerNotOwnerNorApproved.selector */\n      0x59c896be00000000000000000000000000000000000000000000000000000000\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":22640:22647  _revert */\n      tag_147\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":22640:22691  _revert(TransferCallerNotOwnerNorApproved.selector) */\n      jump\t// in\n    tag_169:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":22834:22849  approvedAddress */\n      dup1\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":22831:22988  if approvedAddress {... */\n      iszero\n      tag_172\n      jumpi\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":22972:22973  0 */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":22951:22970  approvedAddressSlot */\n      dup3\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":22944:22974  sstore(approvedAddressSlot, 0) */\n      sstore\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":22831:22988  if approvedAddress {... */\n    tag_172:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":23360:23384  _packedAddressData[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup7\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":23360:23378  _packedAddressData */\n      0x05\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":23360:23384  _packedAddressData[from] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":23358:23384  --_packedAddressData[from] */\n      dup1\n      sload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      add\n      swap1\n      sstore\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":23428:23450  _packedAddressData[to] */\n      swap2\n      dup8\n      and\n      dup1\n      dup3\n      mstore\n      swap2\n      swap1\n      keccak256\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":23426:23450  ++_packedAddressData[to] */\n      dup1\n      sload\n      0x01\n      add\n      swap1\n      sstore\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":17061:17072  timestamp() */\n      timestamp\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":17036:17059  _BITPOS_START_TIMESTAMP */\n      0xa0\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":17032:17073  shl(_BITPOS_START_TIMESTAMP, timestamp()) */\n      shl\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":17019:17082  or(owner, or(shl(_BITPOS_START_TIMESTAMP, timestamp()), flags)) */\n      or\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":3686:3694  1 << 225 */\n      0x0200000000000000000000000000000000000000000000000000000000\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":17019:17082  or(owner, or(shl(_BITPOS_START_TIMESTAMP, timestamp()), flags)) */\n      or\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":23714:23740  _packedOwnerships[tokenId] */\n      0x00\n      dup6\n      dup2\n      mstore\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":23714:23731  _packedOwnerships */\n      0x04\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":23714:23740  _packedOwnerships[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":23714:23886  _packedOwnerships[tokenId] = _packOwnershipData(... */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":3686:3694  1 << 225 */\n      0x0200000000000000000000000000000000000000000000000000000000\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":24003:24050  prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED */\n      dup5\n      and\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":24003:24055  prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0 */\n      swap1\n      sub\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":23999:24616  if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {... */\n      tag_177\n      jumpi\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":24107:24108  1 */\n      0x01\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":24097:24108  tokenId + 1 */\n      dup5\n      add\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":24075:24094  uint256 nextTokenId */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":24228:24258  _packedOwnerships[nextTokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":24228:24245  _packedOwnerships */\n      0x04\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":24228:24258  _packedOwnerships[nextTokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":24228:24263  _packedOwnerships[nextTokenId] == 0 */\n      swap1\n      sub\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":24224:24602  if (_packedOwnerships[nextTokenId] == 0) {... */\n      tag_179\n      jumpi\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":24364:24377  _currentIndex */\n      sload(0x00)\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":24349:24360  nextTokenId */\n      dup2\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":24349:24377  nextTokenId != _currentIndex */\n      eq\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":24345:24584  if (nextTokenId != _currentIndex) {... */\n      tag_179\n      jumpi\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":24509:24539  _packedOwnerships[nextTokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":24509:24526  _packedOwnerships */\n      0x04\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":24509:24539  _packedOwnerships[nextTokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":24509:24561  _packedOwnerships[nextTokenId] = prevOwnershipPacked */\n      dup5\n      swap1\n      sstore\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":24345:24584  if (nextTokenId != _currentIndex) {... */\n    tag_179:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":24057:24616  {... */\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":23999:24616  if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {... */\n    tag_177:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":4079:4093  (1 << 160) - 1 */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":24744:24764  uint256(uint160(to)) */\n      dup6\n      and\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":25115:25122  tokenId */\n      dup5\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":24744:24764  uint256(uint160(to)) */\n      dup2\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":25047:25051  from */\n      dup9\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":24990:25015  _TRANSFER_EVENT_SIGNATURE */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":24725:24741  uint256 toMasked */\n      0x00\n      dup1\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":24858:25150  log4(... */\n      log4\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":25173:25181  toMasked */\n      dup1\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":25185:25186  0 */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":25173:25186  toMasked == 0 */\n      sub\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":25169:25227  if (toMasked == 0) _revert(TransferToZeroAddress.selector) */\n      tag_181\n      jumpi\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":25188:25227  _revert(TransferToZeroAddress.selector) */\n      tag_181\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":25196:25226  TransferToZeroAddress.selector */\n      0xea553b3400000000000000000000000000000000000000000000000000000000\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":25188:25195  _revert */\n      tag_147\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":25188:25227  _revert(TransferToZeroAddress.selector) */\n      jump\t// in\n    tag_181:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":21967:25287  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":21840:25287  function transferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)//mocks/ERC721ABurnableMock.sol\":2133:2244  function numberBurned(address owner) public view returns (uint256) {... */\n    tag_66:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)//mocks/ERC721ABurnableMock.sol\":2191:2198  uint256 */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)//mocks/ERC721ABurnableMock.sol\":2217:2237  _numberBurned(owner) */\n      tag_134\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)//mocks/ERC721ABurnableMock.sol\":2231:2236  owner */\n      dup3\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":9012:9037  _packedAddressData[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":8985:8992  uint256 */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":9012:9037  _packedAddressData[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":9012:9030  _packedAddressData */\n      0x05\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":9012:9037  _packedAddressData[owner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":2913:2916  128 */\n      0x80\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":9012:9062  _packedAddressData[owner] >> _BITPOS_NUMBER_BURNED */\n      shr\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":2654:2667  (1 << 64) - 1 */\n      0xffffffffffffffff\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":9011:9093  (_packedAddressData[owner] >> _BITPOS_NUMBER_BURNED) & _BITMASK_ADDRESS_DATA_ENTRY */\n      and\n      swap1\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":8924:9100  function _numberBurned(address owner) internal view returns (uint256) {... */\n      jump\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":25378:25565  function safeTransferFrom(... */\n    tag_70:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":25519:25558  safeTransferFrom(from, to, tokenId, '') */\n      tag_188\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":25536:25540  from */\n      dup4\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":25542:25544  to */\n      dup4\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":25546:25553  tokenId */\n      dup4\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":25519:25558  safeTransferFrom(from, to, tokenId, '') */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":25519:25535  safeTransferFrom */\n      tag_110\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":25519:25558  safeTransferFrom(from, to, tokenId, '') */\n      jump\t// in\n    tag_188:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":25378:25565  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/extensions/ERC721ABurnable.sol\":1804:1896  function burn(uint256 tokenId) public virtual override {... */\n    tag_74:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/extensions/ERC721ABurnable.sol\":1869:1889  _burn(tokenId, true) */\n      tag_190\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/extensions/ERC721ABurnable.sol\":1875:1882  tokenId */\n      dup2\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/extensions/ERC721ABurnable.sol\":1884:1888  true */\n      0x01\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/extensions/ERC721ABurnable.sol\":1869:1874  _burn */\n      tag_191\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/extensions/ERC721ABurnable.sol\":1869:1889  _burn(tokenId, true) */\n      jump\t// in\n    tag_190:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/extensions/ERC721ABurnable.sol\":1804:1896  function burn(uint256 tokenId) public virtual override {... */\n      pop\n      jump\t// out\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)//mocks/ERC721ABurnableMock.sol\":1600:1700  function exists(uint256 tokenId) public view returns (bool) {... */\n    tag_78:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)//mocks/ERC721ABurnableMock.sol\":1654:1658  bool */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)//mocks/ERC721ABurnableMock.sol\":1677:1693  _exists(tokenId) */\n      tag_134\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)//mocks/ERC721ABurnableMock.sol\":1685:1692  tokenId */\n      dup3\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)//mocks/ERC721ABurnableMock.sol\":1677:1684  _exists */\n      tag_144\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)//mocks/ERC721ABurnableMock.sol\":1677:1693  _exists(tokenId) */\n      jump\t// in\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":12703:12853  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_83:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":12775:12782  address */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":12817:12844  _packedOwnershipOf(tokenId) */\n      tag_134\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":12836:12843  tokenId */\n      dup3\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":12817:12835  _packedOwnershipOf */\n      tag_156\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":12817:12844  _packedOwnershipOf(tokenId) */\n      jump\t// in\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":8339:8578  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_88:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":8411:8418  uint256 */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":8434:8453  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup3\n      and\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":8430:8499  if (owner == address(0)) _revert(BalanceQueryForZeroAddress.selector) */\n      tag_198\n      jumpi\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":8455:8499  _revert(BalanceQueryForZeroAddress.selector) */\n      tag_198\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":8463:8498  BalanceQueryForZeroAddress.selector */\n      0x8f4eb60400000000000000000000000000000000000000000000000000000000\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":8455:8462  _revert */\n      tag_147\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":8455:8499  _revert(BalanceQueryForZeroAddress.selector) */\n      jump\t// in\n    tag_198:\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":8516:8541  _packedAddressData[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":8516:8534  _packedAddressData */\n      0x05\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":8516:8541  _packedAddressData[owner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":2654:2667  (1 << 64) - 1 */\n      0xffffffffffffffff\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":8516:8571  _packedAddressData[owner] & _BITMASK_ADDRESS_DATA_ENTRY */\n      and\n      swap1\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":8339:8578  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":11511:11613  function symbol() public view virtual override returns (string memory) {... */\n    tag_92:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":11567:11580  string memory */\n      0x60\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":11599:11606  _symbol */\n      0x03\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":11592:11606  return _symbol */\n      dup1\n      sload\n      tag_136\n      swap1\n      tag_137\n      jump\t// in\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)//mocks/ERC721ABurnableMock.sol\":1706:1801  function safeMint(address to, uint256 quantity) public {... */\n    tag_97:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)//mocks/ERC721ABurnableMock.sol\":1771:1794  _safeMint(to, quantity) */\n      tag_149\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)//mocks/ERC721ABurnableMock.sol\":1781:1783  to */\n      dup3\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)//mocks/ERC721ABurnableMock.sol\":1785:1793  quantity */\n      dup3\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)//mocks/ERC721ABurnableMock.sol\":1771:1780  _safeMint */\n      tag_207\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)//mocks/ERC721ABurnableMock.sol\":1771:1794  _safeMint(to, quantity) */\n      jump\t// in\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":18755:18986  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_102:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":42781:42791  msg.sender */\n      caller\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":18849:18888  _operatorApprovals[_msgSenderERC721A()] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":18849:18867  _operatorApprovals */\n      0x07\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":18849:18888  _operatorApprovals[_msgSenderERC721A()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":18849:18898  _operatorApprovals[_msgSenderERC721A()][operator] */\n      dup8\n      and\n      dup1\n      dup6\n      mstore\n      swap1\n      dup4\n      mstore\n      swap3\n      dup2\n      swap1\n      keccak256\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":18849:18909  _operatorApprovals[_msgSenderERC721A()][operator] = approved */\n      dup1\n      sload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00\n      and\n      dup7\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":18924:18979  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      swap1\n      mload\n        /* \"#utility.yul\":586:627   */\n      swap1\n      dup2\n      mstore\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":18849:18898  _operatorApprovals[_msgSenderERC721A()][operator] */\n      swap2\n      swap3\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":42781:42791  msg.sender */\n      swap2\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":18924:18979  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap2\n        /* \"#utility.yul\":559:577   */\n      add\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":18924:18979  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":18755:18986  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)//mocks/ERC721ABurnableMock.sol\":2009:2023  _totalMinted() */\n    tag_213:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)//mocks/ERC721ABurnableMock.sol\":2002:2023  return _totalMinted() */\n      swap1\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)//mocks/ERC721ABurnableMock.sol\":1939:2030  function totalMinted() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":26146:26551  function safeTransferFrom(... */\n    tag_110:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":26315:26346  transferFrom(from, to, tokenId) */\n      tag_216\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":26328:26332  from */\n      dup5\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":26334:26336  to */\n      dup5\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":26338:26345  tokenId */\n      dup5\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":26315:26327  transferFrom */\n      tag_61\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":26315:26346  transferFrom(from, to, tokenId) */\n      jump\t// in\n    tag_216:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":26360:26374  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup4\n      and\n      extcodesize\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":26360:26379  to.code.length != 0 */\n      iszero\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":26356:26545  if (to.code.length != 0)... */\n      tag_221\n      jumpi\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":26398:26454  _checkContractOnERC721Received(from, to, tokenId, _data) */\n      tag_218\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":26429:26433  from */\n      dup5\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":26435:26437  to */\n      dup5\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":26439:26446  tokenId */\n      dup5\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":26448:26453  _data */\n      dup5\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":26398:26428  _checkContractOnERC721Received */\n      tag_219\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":26398:26454  _checkContractOnERC721Received(from, to, tokenId, _data) */\n      jump\t// in\n    tag_218:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":26393:26545  if (!_checkContractOnERC721Received(from, to, tokenId, _data)) {... */\n      tag_221\n      jumpi\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":26474:26530  _revert(TransferToNonERC721ReceiverImplementer.selector) */\n      tag_221\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":26482:26529  TransferToNonERC721ReceiverImplementer.selector */\n      0xd1a57ed600000000000000000000000000000000000000000000000000000000\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":26474:26481  _revert */\n      tag_147\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":26474:26530  _revert(TransferToNonERC721ReceiverImplementer.selector) */\n      jump\t// in\n    tag_221:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":26146:26551  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":11714:12036  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_114:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":11787:11800  string memory */\n      0x60\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":11817:11833  _exists(tokenId) */\n      tag_223\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":11825:11832  tokenId */\n      dup3\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":11817:11824  _exists */\n      tag_144\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":11817:11833  _exists(tokenId) */\n      jump\t// in\n    tag_223:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":11812:11880  if (!_exists(tokenId)) _revert(URIQueryForNonexistentToken.selector) */\n      tag_225\n      jumpi\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":11835:11880  _revert(URIQueryForNonexistentToken.selector) */\n      tag_225\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":11843:11879  URIQueryForNonexistentToken.selector */\n      0xa14c4b5000000000000000000000000000000000000000000000000000000000\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":11835:11842  _revert */\n      tag_147\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":11835:11880  _revert(URIQueryForNonexistentToken.selector) */\n      jump\t// in\n    tag_225:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":11891:11912  string memory baseURI */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":11915:11925  _baseURI() */\n      tag_226\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":12357:12366  return '' */\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup2\n      mstore\n      swap1\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":12281:12373  function _baseURI() internal view virtual returns (string memory) {... */\n      jump\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":11915:11925  _baseURI() */\n    tag_226:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":11891:11925  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":11948:11955  baseURI */\n      dup1\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":11942:11963  bytes(baseURI).length */\n      mload\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":11967:11968  0 */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":11942:11968  bytes(baseURI).length != 0 */\n      sub\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":11942:12029  bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '' */\n      tag_228\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_229)\n    tag_228:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":11995:12002  baseURI */\n      dup1\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":12004:12022  _toString(tokenId) */\n      tag_230\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":12014:12021  tokenId */\n      dup5\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":12004:12013  _toString */\n      tag_231\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":12004:12022  _toString(tokenId) */\n      jump\t// in\n    tag_230:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":11978:12023  abi.encodePacked(baseURI, _toString(tokenId)) */\n      add(0x20, mload(0x40))\n      tag_232\n      swap3\n      swap2\n      swap1\n      tag_233\n      jump\t// in\n    tag_232:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":11942:12029  bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '' */\n    tag_229:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":11935:12029  return bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '' */\n      swap4\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":11714:12036  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)//mocks/ERC721ABurnableMock.sol\":2036:2127  function totalBurned() public view returns (uint256) {... */\n    tag_118:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)//mocks/ERC721ABurnableMock.sol\":2080:2087  uint256 */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)//mocks/ERC721ABurnableMock.sol\":2106:2120  _totalBurned() */\n      tag_213\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":8046:8058  _burnCounter */\n      sload(0x01)\n      swap1\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":7965:8065  function _totalBurned() internal view virtual returns (uint256) {... */\n      jump\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)//mocks/ERC721ABurnableMock.sol\":1807:1933  function getOwnershipAt(uint256 index) public view returns (TokenOwnership memory) {... */\n    tag_129:\n      0x40\n      dup1\n      mload\n      0x80\n      dup2\n      add\n      dup3\n      mstore\n      0x00\n      dup1\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      swap2\n      dup2\n      add\n      dup3\n      swap1\n      mstore\n      0x60\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)//mocks/ERC721ABurnableMock.sol\":1907:1926  _ownershipAt(index) */\n      tag_134\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)//mocks/ERC721ABurnableMock.sol\":1920:1925  index */\n      dup3\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)//mocks/ERC721ABurnableMock.sol\":1907:1919  _ownershipAt */\n      tag_242\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)//mocks/ERC721ABurnableMock.sol\":1907:1926  _ownershipAt(index) */\n      jump\t// in\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":19547:19907  function _exists(uint256 tokenId) internal view virtual returns (bool result) {... */\n    tag_144:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":19612:19623  bool result */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":19695:19708  _currentIndex */\n      dup1\n      sload\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":19685:19692  tokenId */\n      dup3\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":19685:19708  tokenId < _currentIndex */\n      lt\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":19681:19891  if (tokenId < _currentIndex) {... */\n      iszero\n      tag_246\n      jumpi\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":19728:19742  uint256 packed */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":19760:19820  while ((packed = _packedOwnerships[tokenId]) == 0) --tokenId */\n    tag_247:\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":19777:19803  _packedOwnerships[tokenId] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":19777:19794  _packedOwnerships */\n      0x04\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":19777:19803  _packedOwnerships[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      swap1\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":19767:19809  (packed = _packedOwnerships[tokenId]) == 0 */\n      dup2\n      swap1\n      sub\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":19760:19820  while ((packed = _packedOwnerships[tokenId]) == 0) --tokenId */\n      tag_248\n      jumpi\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":19811:19820  --tokenId */\n      tag_249\n      dup4\n      tag_250\n      jump\t// in\n    tag_249:\n      swap3\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":19760:19820  while ((packed = _packedOwnerships[tokenId]) == 0) --tokenId */\n      jump(tag_247)\n    tag_248:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":3412:3420  1 << 224 */\n      0x0100000000000000000000000000000000000000000000000000000000\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":19847:19871  packed & _BITMASK_BURNED */\n      and\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":19847:19876  packed & _BITMASK_BURNED == 0 */\n      iszero\n      swap1\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":19681:19891  if (tokenId < _currentIndex) {... */\n    tag_246:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":19547:19907  function _exists(uint256 tokenId) internal view virtual returns (bool result) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":44665:44825  function _revert(bytes4 errorSelector) internal pure {... */\n    tag_147:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":44764:44777  errorSelector */\n      dup1\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":44758:44762  0x00 */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":44751:44778  mstore(0x00, errorSelector) */\n      mstore\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":44804:44808  0x04 */\n      0x04\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":44798:44802  0x00 */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":44791:44809  revert(0x00, 0x04) */\n      revert\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":36313:36773  function _approve(... */\n    tag_150:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":36437:36450  address owner */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":36453:36469  ownerOf(tokenId) */\n      tag_253\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":36461:36468  tokenId */\n      dup4\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":36453:36460  ownerOf */\n      tag_83\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":36453:36469  ownerOf(tokenId) */\n      jump\t// in\n    tag_253:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":36437:36469  address owner = ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":36484:36497  approvalCheck */\n      dup2\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":36484:36529  approvalCheck && _msgSenderERC721A() != owner */\n      dup1\n      iszero\n      tag_254\n      jumpi\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":42781:42791  msg.sender */\n      caller\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":36501:36529  _msgSenderERC721A() != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup3\n      and\n      eq\n      iszero\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":36484:36529  approvalCheck && _msgSenderERC721A() != owner */\n    tag_254:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":36480:36678  if (approvalCheck && _msgSenderERC721A() != owner)... */\n      iszero\n      tag_260\n      jumpi\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":36548:36592  isApprovedForAll(owner, _msgSenderERC721A()) */\n      tag_257\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":36565:36570  owner */\n      dup2\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":42781:42791  msg.sender */\n      caller\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":19136:19298  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      tag_122\n      jump\t// in\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":36548:36592  isApprovedForAll(owner, _msgSenderERC721A()) */\n    tag_257:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":36543:36678  if (!isApprovedForAll(owner, _msgSenderERC721A())) {... */\n      tag_260\n      jumpi\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":36612:36663  _revert(ApprovalCallerNotOwnerNorApproved.selector) */\n      tag_260\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":36620:36662  ApprovalCallerNotOwnerNorApproved.selector */\n      0xcfb3b94200000000000000000000000000000000000000000000000000000000\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":36612:36619  _revert */\n      tag_147\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":36612:36663  _revert(ApprovalCallerNotOwnerNorApproved.selector) */\n      jump\t// in\n    tag_260:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":36688:36712  _tokenApprovals[tokenId] */\n      0x00\n      dup4\n      dup2\n      mstore\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":36688:36703  _tokenApprovals */\n      0x06\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":36688:36712  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":36688:36723  _tokenApprovals[tokenId].value = to */\n      dup1\n      sload\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup9\n      dup2\n      and\n      swap2\n      dup3\n      or\n      swap1\n      swap3\n      sstore\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":36738:36766  Approval(owner, to, tokenId) */\n      swap2\n      mload\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":36688:36712  _tokenApprovals[tokenId] */\n      dup7\n      swap4\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":36738:36766  Approval(owner, to, tokenId) */\n      swap2\n      dup6\n      and\n      swap2\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n      log4\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":36427:36773  {... */\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":36313:36773  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":14144:16122  function _packedOwnershipOf(uint256 tokenId) private view returns (uint256 packed) {... */\n    tag_156:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":14292:14318  _packedOwnerships[tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":14292:14309  _packedOwnerships */\n      0x04\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":14292:14318  _packedOwnerships[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      swap1\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":14416:14427  packed == 0 */\n      dup2\n      swap1\n      sub\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":14412:15682  if (packed == 0) {... */\n      tag_265\n      jumpi\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":14462:14475  _currentIndex */\n      sload(0x00)\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":14451:14458  tokenId */\n      dup3\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":14451:14475  tokenId >= _currentIndex */\n      lt\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":14447:14524  if (tokenId >= _currentIndex) _revert(OwnerQueryForNonexistentToken.selector) */\n      tag_267\n      jumpi\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":14477:14524  _revert(OwnerQueryForNonexistentToken.selector) */\n      tag_267\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":14485:14523  OwnerQueryForNonexistentToken.selector */\n      0xdf2d9b4200000000000000000000000000000000000000000000000000000000\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":14477:14484  _revert */\n      tag_147\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":14477:14524  _revert(OwnerQueryForNonexistentToken.selector) */\n      jump\t// in\n    tag_267:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":15071:15668  for (;;) {... */\n    tag_268:\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":15165:15174  --tokenId */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      add\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":15147:15175  _packedOwnerships[--tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":15147:15164  _packedOwnerships */\n      0x04\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":15147:15175  _packedOwnerships[--tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":15219:15244  if (packed == 0) continue */\n      dup1\n      iszero\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":15071:15668  for (;;) {... */\n      tag_268\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":15219:15244  if (packed == 0) continue */\n      jumpi\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":3412:3420  1 << 224 */\n      0x0100000000000000000000000000000000000000000000000000000000\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":15270:15276  packed */\n      dup2\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":15270:15294  packed & _BITMASK_BURNED */\n      and\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":15298:15299  0 */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":15270:15299  packed & _BITMASK_BURNED == 0 */\n      sub\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":15266:15314  if (packed & _BITMASK_BURNED == 0) return packed */\n      tag_272\n      jumpi\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":14144:16122  function _packedOwnershipOf(uint256 tokenId) private view returns (uint256 packed) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":15266:15314  if (packed & _BITMASK_BURNED == 0) return packed */\n    tag_272:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":15602:15649  _revert(OwnerQueryForNonexistentToken.selector) */\n      tag_273\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":15610:15648  OwnerQueryForNonexistentToken.selector */\n      0xdf2d9b4200000000000000000000000000000000000000000000000000000000\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":15602:15609  _revert */\n      tag_147\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":15602:15649  _revert(OwnerQueryForNonexistentToken.selector) */\n      jump\t// in\n    tag_273:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":15071:15668  for (;;) {... */\n      jump(tag_268)\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":14412:15682  if (packed == 0) {... */\n    tag_265:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":3412:3420  1 << 224 */\n      0x0100000000000000000000000000000000000000000000000000000000\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":16004:16010  packed */\n      dup2\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":16004:16028  packed & _BITMASK_BURNED */\n      and\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":16032:16033  0 */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":16004:16033  packed & _BITMASK_BURNED == 0 */\n      sub\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":16000:16048  if (packed & _BITMASK_BURNED == 0) return packed */\n      tag_274\n      jumpi\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":14144:16122  function _packedOwnershipOf(uint256 tokenId) private view returns (uint256 packed) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":16000:16048  if (packed & _BITMASK_BURNED == 0) return packed */\n    tag_274:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":16068:16115  _revert(OwnerQueryForNonexistentToken.selector) */\n      tag_246\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":16076:16114  OwnerQueryForNonexistentToken.selector */\n      0xdf2d9b4200000000000000000000000000000000000000000000000000000000\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":16068:16075  _revert */\n      tag_147\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":16068:16115  _revert(OwnerQueryForNonexistentToken.selector) */\n      jump\t// in\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":37335:40359  function _burn(uint256 tokenId, bool approvalCheck) internal virtual {... */\n    tag_191:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":37414:37441  uint256 prevOwnershipPacked */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":37444:37471  _packedOwnershipOf(tokenId) */\n      tag_287\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":37463:37470  tokenId */\n      dup4\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":37444:37462  _packedOwnershipOf */\n      tag_156\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":37444:37471  _packedOwnershipOf(tokenId) */\n      jump\t// in\n    tag_287:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":37414:37471  uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId) */\n      swap1\n      pop\n      dup1\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":37482:37494  address from */\n      0x00\n      dup1\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":37602:37637  _getApprovedSlotAndAddress(tokenId) */\n      tag_288\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":37629:37636  tokenId */\n      dup7\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":20864:20891  uint256 approvedAddressSlot */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":20973:20997  _tokenApprovals[tokenId] */\n      swap1\n      dup2\n      mstore\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":20973:20988  _tokenApprovals */\n      0x06\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":20973:20997  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":21197:21223  sload(approvedAddressSlot) */\n      dup1\n      sload\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":20973:20997  _tokenApprovals[tokenId] */\n      swap1\n      swap2\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":20765:21239  function _getApprovedSlotAndAddress(uint256 tokenId)... */\n      jump\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":37602:37637  _getApprovedSlotAndAddress(tokenId) */\n    tag_288:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":37545:37637  (uint256 approvedAddressSlot, address approvedAddress) = _getApprovedSlotAndAddress(tokenId) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":37652:37665  approvalCheck */\n      dup5\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":37648:37969  if (approvalCheck) {... */\n      iszero\n      tag_296\n      jumpi\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":37771:37839  _isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()) */\n      tag_290\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":37796:37811  approvedAddress */\n      dup2\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":37813:37817  from */\n      dup5\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":42781:42791  msg.sender */\n      caller\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":37819:37838  _msgSenderERC721A() */\n      tag_162\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":42695:42798  function _msgSenderERC721A() internal view virtual returns (address) {... */\n      jump\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":37771:37839  _isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()) */\n    tag_290:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":37766:37958  if (!_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()))... */\n      tag_296\n      jumpi\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":37862:37905  isApprovedForAll(from, _msgSenderERC721A()) */\n      tag_293\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":37879:37883  from */\n      dup4\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":42781:42791  msg.sender */\n      caller\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":19136:19298  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      tag_122\n      jump\t// in\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":37862:37905  isApprovedForAll(from, _msgSenderERC721A()) */\n    tag_293:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":37857:37958  if (!isApprovedForAll(from, _msgSenderERC721A())) _revert(TransferCallerNotOwnerNorApproved.selector) */\n      tag_296\n      jumpi\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":37907:37958  _revert(TransferCallerNotOwnerNorApproved.selector) */\n      tag_296\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":37915:37957  TransferCallerNotOwnerNorApproved.selector */\n      0x59c896be00000000000000000000000000000000000000000000000000000000\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":37907:37914  _revert */\n      tag_147\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":37907:37958  _revert(TransferCallerNotOwnerNorApproved.selector) */\n      jump\t// in\n    tag_296:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":38119:38134  approvedAddress */\n      dup1\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":38116:38273  if approvedAddress {... */\n      iszero\n      tag_298\n      jumpi\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":38257:38258  0 */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":38236:38255  approvedAddressSlot */\n      dup3\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":38229:38259  sstore(approvedAddressSlot, 0) */\n      sstore\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":38116:38273  if approvedAddress {... */\n    tag_298:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":38862:38886  _packedAddressData[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup4\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":38862:38880  _packedAddressData */\n      0x05\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":38862:38886  _packedAddressData[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":38862:38922  _packedAddressData[from] += (1 << _BITPOS_NUMBER_BURNED) - 1 */\n      dup1\n      sload\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":38890:38922  (1 << _BITPOS_NUMBER_BURNED) - 1 */\n      0xffffffffffffffffffffffffffffffff\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":38862:38922  _packedAddressData[from] += (1 << _BITPOS_NUMBER_BURNED) - 1 */\n      add\n      swap1\n      sstore\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":17061:17072  timestamp() */\n      timestamp\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":17036:17059  _BITPOS_START_TIMESTAMP */\n      0xa0\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":17032:17073  shl(_BITPOS_START_TIMESTAMP, timestamp()) */\n      shl\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":17019:17082  or(owner, or(shl(_BITPOS_START_TIMESTAMP, timestamp()), flags)) */\n      or\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":39241:39284  _BITMASK_BURNED | _BITMASK_NEXT_INITIALIZED */\n      0x0300000000000000000000000000000000000000000000000000000000\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":17019:17082  or(owner, or(shl(_BITPOS_START_TIMESTAMP, timestamp()), flags)) */\n      or\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":39153:39179  _packedOwnerships[tokenId] */\n      0x00\n      dup8\n      dup2\n      mstore\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":39153:39170  _packedOwnerships */\n      0x04\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":39153:39179  _packedOwnerships[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":39153:39355  _packedOwnerships[tokenId] = _packOwnershipData(... */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":3686:3694  1 << 225 */\n      0x0200000000000000000000000000000000000000000000000000000000\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":39472:39519  prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED */\n      dup6\n      and\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":39472:39524  prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0 */\n      swap1\n      sub\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":39468:40085  if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {... */\n      tag_301\n      jumpi\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":39576:39577  1 */\n      0x01\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":39566:39577  tokenId + 1 */\n      dup7\n      add\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":39544:39563  uint256 nextTokenId */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":39697:39727  _packedOwnerships[nextTokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":39697:39714  _packedOwnerships */\n      0x04\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":39697:39727  _packedOwnerships[nextTokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":39697:39732  _packedOwnerships[nextTokenId] == 0 */\n      swap1\n      sub\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":39693:40071  if (_packedOwnerships[nextTokenId] == 0) {... */\n      tag_303\n      jumpi\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":39833:39846  _currentIndex */\n      sload(0x00)\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":39818:39829  nextTokenId */\n      dup2\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":39818:39846  nextTokenId != _currentIndex */\n      eq\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":39814:40053  if (nextTokenId != _currentIndex) {... */\n      tag_303\n      jumpi\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":39978:40008  _packedOwnerships[nextTokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":39978:39995  _packedOwnerships */\n      0x04\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":39978:40008  _packedOwnerships[nextTokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":39978:40030  _packedOwnerships[nextTokenId] = prevOwnershipPacked */\n      dup6\n      swap1\n      sstore\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":39814:40053  if (nextTokenId != _currentIndex) {... */\n    tag_303:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":39526:40085  {... */\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":39468:40085  if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {... */\n    tag_301:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":40110:40145  Transfer(from, address(0), tokenId) */\n      mload(0x40)\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":40137:40144  tokenId */\n      dup7\n      swap1\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":40133:40134  0 */\n      0x00\n      swap1\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":40110:40145  Transfer(from, address(0), tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup7\n      and\n      swap1\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":40133:40134  0 */\n      dup4\n      swap1\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":40110:40145  Transfer(from, address(0), tokenId) */\n      log4\n      pop\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":40328:40340  _burnCounter */\n      0x01\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":40328:40342  _burnCounter++ */\n      dup1\n      sload\n      dup2\n      add\n      swap1\n      sstore\n      pop\n      pop\n      pop\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":37335:40359  function _burn(uint256 tokenId, bool approvalCheck) internal virtual {... */\n      jump\t// out\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":35423:35533  function _safeMint(address to, uint256 quantity) internal virtual {... */\n    tag_207:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":35499:35526  _safeMint(to, quantity, '') */\n      tag_149\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":35509:35511  to */\n      dup3\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":35513:35521  quantity */\n      dup3\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":35499:35526  _safeMint(to, quantity, '') */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":35499:35508  _safeMint */\n      tag_307\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":35499:35526  _safeMint(to, quantity, '') */\n      jump\t// in\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":28577:29250  function _checkContractOnERC721Received(... */\n    tag_219:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":28755:28843  ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) */\n      mload(0x40)\n      0x150b7a0200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":28735:28739  bool */\n      0x00\n      swap1\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":28755:28800  ERC721A__IERC721Receiver(to).onERC721Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup6\n      and\n      swap1\n      0x150b7a02\n      swap1\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":28755:28843  ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) */\n      tag_312\n      swap1\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":42781:42791  msg.sender */\n      caller\n      swap1\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":28822:28826  from */\n      dup10\n      swap1\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":28828:28835  tokenId */\n      dup9\n      swap1\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":28837:28842  _data */\n      dup9\n      swap1\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":28755:28843  ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) */\n      0x04\n      add\n      tag_313\n      jump\t// in\n    tag_312:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_314\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_315\n      swap2\n      dup2\n      add\n      swap1\n      tag_316\n      jump\t// in\n    tag_315:\n      0x01\n    tag_314:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":28751:29244  try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (... */\n      tag_317\n      jumpi\n      returndatasize\n      dup1\n      dup1\n      iszero\n      tag_322\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_321)\n    tag_322:\n      0x60\n      swap2\n      pop\n    tag_321:\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":29033:29039  reason */\n      dup1\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":29033:29046  reason.length */\n      mload\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":29050:29051  0 */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":29033:29051  reason.length == 0 */\n      sub\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":29029:29142  if (reason.length == 0) {... */\n      tag_324\n      jumpi\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":29071:29127  _revert(TransferToNonERC721ReceiverImplementer.selector) */\n      tag_324\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":29079:29126  TransferToNonERC721ReceiverImplementer.selector */\n      0xd1a57ed600000000000000000000000000000000000000000000000000000000\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":29071:29078  _revert */\n      tag_147\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":29071:29127  _revert(TransferToNonERC721ReceiverImplementer.selector) */\n      jump\t// in\n    tag_324:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":29212:29218  reason */\n      dup1\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":29206:29219  mload(reason) */\n      mload\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":29197:29203  reason */\n      dup2\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":29193:29195  32 */\n      0x20\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":29189:29204  add(32, reason) */\n      add\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":29182:29220  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":28751:29244  try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (... */\n    tag_317:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":28911:28975  retval == ERC721A__IERC721Receiver(to).onERC721Received.selector */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n      and\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":28921:28975  ERC721A__IERC721Receiver(to).onERC721Received.selector */\n      0x150b7a0200000000000000000000000000000000000000000000000000000000\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":28911:28975  retval == ERC721A__IERC721Receiver(to).onERC721Received.selector */\n      eq\n      swap1\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":28577:29250  function _checkContractOnERC721Received(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":42895:44603  function _toString(uint256 value) internal pure virtual returns (string memory str) {... */\n    tag_231:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":42960:42977  string memory str */\n      0x60\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":43388:43392  0xa0 */\n      0xa0\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":43381:43385  0x40 */\n      0x40\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":43375:43386  mload(0x40) */\n      mload\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":43371:43393  add(mload(0x40), 0xa0) */\n      add\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":43478:43479  m */\n      dup1\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":43472:43476  0x40 */\n      0x40\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":43465:43480  mstore(0x40, m) */\n      mstore\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":43551:43555  0x20 */\n      0x20\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":43548:43549  m */\n      dup2\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":43544:43556  sub(m, 0x20) */\n      sub\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":43537:43556  str := sub(m, 0x20) */\n      swap2\n      pop\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":43631:43632  0 */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":43626:43629  str */\n      dup2\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":43619:43633  mstore(str, 0) */\n      mstore\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":43732:43735  str */\n      dup1\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":43966:43971  value */\n      dup3\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":43948:44367  for { let temp := value } 1 {} {... */\n    tag_328:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":44013:44014  1 */\n      0x01\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":44008:44011  str */\n      dup4\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":44004:44015  sub(str, 1) */\n      sub\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":43997:44015  str := sub(str, 1) */\n      swap3\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":44181:44183  10 */\n      0x0a\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":44175:44179  temp */\n      dup2\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":44171:44184  mod(temp, 10) */\n      mod\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":44167:44169  48 */\n      0x30\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":44163:44185  add(48, mod(temp, 10)) */\n      add\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":44158:44161  str */\n      dup4\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":44150:44186  mstore8(str, add(48, mod(temp, 10))) */\n      mstore8\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":44273:44275  10 */\n      0x0a\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":44263:44276  div(temp, 10) */\n      swap1\n      div\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":44328:44353  if iszero(temp) { break } */\n      dup1\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":43948:44367  for { let temp := value } 1 {} {... */\n      tag_328\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":44328:44353  if iszero(temp) { break } */\n      jumpi\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":44395:44408  sub(end, str) */\n      dup2\n      swap1\n      sub\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":44508:44522  sub(str, 0x20) */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n      swap1\n      swap2\n      add\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":44568:44587  mstore(str, length) */\n      swap1\n      dup2\n      mstore\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":44508:44522  sub(str, 0x20) */\n      swap2\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":42895:44603  function _toString(uint256 value) internal pure virtual returns (string memory str) {... */\n      swap1\n      pop\n      jump\t// out\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":13291:13450  function _ownershipAt(uint256 index) internal view virtual returns (TokenOwnership memory) {... */\n    tag_242:\n      0x40\n      dup1\n      mload\n      0x80\n      dup2\n      add\n      dup3\n      mstore\n      0x00\n      dup1\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      swap2\n      dup2\n      add\n      dup3\n      swap1\n      mstore\n      0x60\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":13418:13442  _packedOwnerships[index] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":13418:13435  _packedOwnerships */\n      0x04\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":13418:13442  _packedOwnerships[index] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":13399:13443  _unpackedOwnership(_packedOwnerships[index]) */\n      tag_134\n      swap1\n      0x40\n      dup1\n      mload\n      0x80\n      dup2\n      add\n      dup3\n      mstore\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":16325:16366  ownership.addr = address(uint160(packed)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup4\n      and\n      dup2\n      mstore\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":3298:3301  160 */\n      0xa0\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":16410:16443  packed >> _BITPOS_START_TIMESTAMP */\n      dup4\n      swap1\n      shr\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":16376:16444  ownership.startTimestamp = uint64(packed >> _BITPOS_START_TIMESTAMP) */\n      0xffffffffffffffff\n      and\n      0x20\n      dup3\n      add\n      mstore\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":3412:3420  1 << 224 */\n      0x0100000000000000000000000000000000000000000000000000000000\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":16473:16497  packed & _BITMASK_BURNED */\n      dup4\n      and\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":16473:16502  packed & _BITMASK_BURNED != 0 */\n      iszero\n      iszero\n      swap2\n      dup2\n      add\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":16454:16502  ownership.burned = packed & _BITMASK_BURNED != 0 */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":3807:3810  232 */\n      0xe8\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":16541:16569  packed >> _BITPOS_EXTRA_DATA */\n      swap2\n      swap1\n      swap2\n      shr\n      0x60\n      dup3\n      add\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":16512:16570  ownership.extraData = uint24(packed >> _BITPOS_EXTRA_DATA) */\n      mstore\n      swap1\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":16216:16577  function _unpackedOwnership(uint256 packed) private pure returns (TokenOwnership memory ownership) {... */\n      jump\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":34656:35344  function _safeMint(... */\n    tag_307:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":34782:34801  _mint(to, quantity) */\n      tag_339\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":34788:34790  to */\n      dup4\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":34792:34800  quantity */\n      dup4\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":34782:34787  _mint */\n      tag_340\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":34782:34801  _mint(to, quantity) */\n      jump\t// in\n    tag_339:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":34840:34854  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup4\n      and\n      extcodesize\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":34840:34859  to.code.length != 0 */\n      iszero\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":34836:35328  if (to.code.length != 0) {... */\n      tag_188\n      jumpi\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":34879:34890  uint256 end */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":34893:34906  _currentIndex */\n      sload\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":34940:34954  end - quantity */\n      dup3\n      dup2\n      sub\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":34972:35210  do {... */\n    tag_342:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":35002:35064  _checkContractOnERC721Received(address(0), to, index++, _data) */\n      tag_345\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":35041:35042  0 */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":35045:35047  to */\n      dup7\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":35049:35056  index++ */\n      dup4\n      dup1\n      0x01\n      add\n      swap5\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":35058:35063  _data */\n      dup7\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":35002:35032  _checkContractOnERC721Received */\n      tag_219\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":35002:35064  _checkContractOnERC721Received(address(0), to, index++, _data) */\n      jump\t// in\n    tag_345:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":34997:35171  if (!_checkContractOnERC721Received(address(0), to, index++, _data)) {... */\n      tag_347\n      jumpi\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":35092:35148  _revert(TransferToNonERC721ReceiverImplementer.selector) */\n      tag_347\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":35100:35147  TransferToNonERC721ReceiverImplementer.selector */\n      0xd1a57ed600000000000000000000000000000000000000000000000000000000\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":35092:35099  _revert */\n      tag_147\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":35092:35148  _revert(TransferToNonERC721ReceiverImplementer.selector) */\n      jump\t// in\n    tag_347:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":35205:35208  end */\n      dup2\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":35197:35202  index */\n      dup2\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":35197:35208  index < end */\n      lt\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":34972:35210  do {... */\n      tag_342\n      jumpi\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":35290:35293  end */\n      dup2\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":35273:35286  _currentIndex */\n      sload(0x00)\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":35273:35293  _currentIndex != end */\n      eq\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":35269:35313  if (_currentIndex != end) _revert(bytes4(0)) */\n      tag_349\n      jumpi\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":35295:35313  _revert(bytes4(0)) */\n      tag_349\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":35310:35311  0 */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":35295:35302  _revert */\n      tag_147\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":35295:35313  _revert(bytes4(0)) */\n      jump\t// in\n    tag_349:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":34861:35328  {... */\n      pop\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":34656:35344  function _safeMint(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":29696:31947  function _mint(address to, uint256 quantity) internal virtual {... */\n    tag_340:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":29768:29788  uint256 startTokenId */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":29791:29804  _currentIndex */\n      dup1\n      sload\n      swap1\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":29818:29831  quantity == 0 */\n      dup3\n      swap1\n      sub\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":29814:29867  if (quantity == 0) _revert(MintZeroQuantity.selector) */\n      tag_354\n      jumpi\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":29833:29867  _revert(MintZeroQuantity.selector) */\n      tag_354\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":29841:29866  MintZeroQuantity.selector */\n      0xb562e8dd00000000000000000000000000000000000000000000000000000000\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":29833:29840  _revert */\n      tag_147\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":29833:29867  _revert(MintZeroQuantity.selector) */\n      jump\t// in\n    tag_354:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":30367:30398  _packedOwnerships[startTokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":30367:30384  _packedOwnerships */\n      0x04\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":30367:30398  _packedOwnerships[startTokenId] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":16900:16916  _BITMASK_ADDRESS */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":16889:16917  and(owner, _BITMASK_ADDRESS) */\n      dup8\n      and\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":17061:17072  timestamp() */\n      timestamp\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":17036:17059  _BITPOS_START_TIMESTAMP */\n      0xa0\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":17032:17073  shl(_BITPOS_START_TIMESTAMP, timestamp()) */\n      shl\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":17494:17495  1 */\n      0x01\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":17481:17496  eq(quantity, 1) */\n      dup9\n      eq\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":17455:17479  _BITPOS_NEXT_INITIALIZED */\n      0xe1\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":17451:17497  shl(_BITPOS_NEXT_INITIALIZED, eq(quantity, 1)) */\n      shl\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":17029:17081  or(shl(_BITPOS_START_TIMESTAMP, timestamp()), flags) */\n      or\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":17019:17082  or(owner, or(shl(_BITPOS_START_TIMESTAMP, timestamp()), flags)) */\n      dup2\n      or\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":30367:30537  _packedOwnerships[startTokenId] = _packOwnershipData(... */\n      swap1\n      swap2\n      sstore\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":30748:30770  _packedAddressData[to] */\n      dup1\n      dup5\n      mstore\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":30748:30766  _packedAddressData */\n      0x05\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":30748:30770  _packedAddressData[to] */\n      swap1\n      swap3\n      mstore\n      dup3\n      keccak256\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":30748:30819  _packedAddressData[to] += quantity * ((1 << _BITPOS_NUMBER_MINTED) | 1) */\n      dup1\n      sload\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":30786:30818  (1 << _BITPOS_NUMBER_MINTED) | 1 */\n      0x010000000000000001\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":30774:30819  quantity * ((1 << _BITPOS_NUMBER_MINTED) | 1) */\n      dup7\n      mul\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":30748:30819  _packedAddressData[to] += quantity * ((1 << _BITPOS_NUMBER_MINTED) | 1) */\n      add\n      swap1\n      sstore\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":16889:16917  and(owner, _BITMASK_ADDRESS) */\n      swap1\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":31004:31017  toMasked == 0 */\n      dup2\n      swap1\n      sub\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":31000:31054  if (toMasked == 0) _revert(MintToZeroAddress.selector) */\n      tag_361\n      jumpi\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":31019:31054  _revert(MintToZeroAddress.selector) */\n      tag_361\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":31027:31053  MintToZeroAddress.selector */\n      0x2e07630000000000000000000000000000000000000000000000000000000000\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":31019:31026  _revert */\n      tag_147\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":31019:31054  _revert(MintToZeroAddress.selector) */\n      jump\t// in\n    tag_361:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":31083:31106  startTokenId + quantity */\n      dup2\n      dup4\n      add\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":31083:31095  startTokenId */\n      dup3\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":31165:31827  do {... */\n    tag_362:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":31575:31582  tokenId */\n      dup1\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":31532:31540  toMasked */\n      dup4\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":31488:31489  0 */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":31423:31448  _TRANSFER_EVENT_SIGNATURE */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":31361:31362  0 */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":31297:31298  0 */\n      dup1\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":31267:31618  log4(... */\n      log4\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":31822:31825  end */\n      dup2\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":31809:31818  ++tokenId */\n      dup2\n      0x01\n      add\n      swap2\n      pop\n      dup2\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":31809:31825  ++tokenId != end */\n      sub\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":31165:31827  do {... */\n      tag_362\n      jumpi\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":31841:31854  _currentIndex */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":31841:31860  _currentIndex = end */\n      sstore\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":25378:25565  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:191   */\n    tag_367:\n        /* \"#utility.yul\":99:165   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":92:97   */\n      dup2\n        /* \"#utility.yul\":88:166   */\n      and\n        /* \"#utility.yul\":81:86   */\n      dup2\n        /* \"#utility.yul\":78:167   */\n      eq\n        /* \"#utility.yul\":68:185   */\n      tag_190\n      jumpi\n        /* \"#utility.yul\":181:182   */\n      0x00\n        /* \"#utility.yul\":178:179   */\n      dup1\n        /* \"#utility.yul\":171:183   */\n      revert\n        /* \"#utility.yul\":196:441   */\n    tag_33:\n        /* \"#utility.yul\":254:260   */\n      0x00\n        /* \"#utility.yul\":307:309   */\n      0x20\n        /* \"#utility.yul\":295:304   */\n      dup3\n        /* \"#utility.yul\":286:293   */\n      dup5\n        /* \"#utility.yul\":282:305   */\n      sub\n        /* \"#utility.yul\":278:310   */\n      slt\n        /* \"#utility.yul\":275:327   */\n      iszero\n      tag_376\n      jumpi\n        /* \"#utility.yul\":323:324   */\n      0x00\n        /* \"#utility.yul\":320:321   */\n      dup1\n        /* \"#utility.yul\":313:325   */\n      revert\n        /* \"#utility.yul\":275:327   */\n    tag_376:\n        /* \"#utility.yul\":362:371   */\n      dup2\n        /* \"#utility.yul\":349:372   */\n      calldataload\n        /* \"#utility.yul\":381:411   */\n      tag_229\n        /* \"#utility.yul\":405:410   */\n      dup2\n        /* \"#utility.yul\":381:411   */\n      tag_367\n      jump\t// in\n        /* \"#utility.yul\":638:888   */\n    tag_368:\n        /* \"#utility.yul\":723:724   */\n      0x00\n        /* \"#utility.yul\":733:846   */\n    tag_380:\n        /* \"#utility.yul\":747:753   */\n      dup4\n        /* \"#utility.yul\":744:745   */\n      dup2\n        /* \"#utility.yul\":741:754   */\n      lt\n        /* \"#utility.yul\":733:846   */\n      iszero\n      tag_382\n      jumpi\n        /* \"#utility.yul\":823:834   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":817:835   */\n      mload\n        /* \"#utility.yul\":804:815   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":797:836   */\n      mstore\n        /* \"#utility.yul\":769:771   */\n      0x20\n        /* \"#utility.yul\":762:772   */\n      add\n        /* \"#utility.yul\":733:846   */\n      jump(tag_380)\n    tag_382:\n      pop\n      pop\n        /* \"#utility.yul\":880:881   */\n      0x00\n        /* \"#utility.yul\":862:878   */\n      swap2\n      add\n        /* \"#utility.yul\":855:882   */\n      mstore\n        /* \"#utility.yul\":638:888   */\n      jump\t// out\n        /* \"#utility.yul\":893:1223   */\n    tag_369:\n        /* \"#utility.yul\":935:938   */\n      0x00\n        /* \"#utility.yul\":973:978   */\n      dup2\n        /* \"#utility.yul\":967:979   */\n      mload\n        /* \"#utility.yul\":1000:1006   */\n      dup1\n        /* \"#utility.yul\":995:998   */\n      dup5\n        /* \"#utility.yul\":988:1007   */\n      mstore\n        /* \"#utility.yul\":1016:1092   */\n      tag_384\n        /* \"#utility.yul\":1085:1091   */\n      dup2\n        /* \"#utility.yul\":1078:1082   */\n      0x20\n        /* \"#utility.yul\":1073:1076   */\n      dup7\n        /* \"#utility.yul\":1069:1083   */\n      add\n        /* \"#utility.yul\":1062:1066   */\n      0x20\n        /* \"#utility.yul\":1055:1060   */\n      dup7\n        /* \"#utility.yul\":1051:1067   */\n      add\n        /* \"#utility.yul\":1016:1092   */\n      tag_368\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":1137:1139   */\n      0x1f\n        /* \"#utility.yul\":1125:1140   */\n      add\n        /* \"#utility.yul\":1142:1208   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n        /* \"#utility.yul\":1121:1209   */\n      and\n        /* \"#utility.yul\":1112:1210   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":1212:1216   */\n      0x20\n        /* \"#utility.yul\":1108:1217   */\n      add\n      swap3\n        /* \"#utility.yul\":893:1223   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1228:1448   */\n    tag_41:\n        /* \"#utility.yul\":1377:1379   */\n      0x20\n        /* \"#utility.yul\":1366:1375   */\n      dup2\n        /* \"#utility.yul\":1359:1380   */\n      mstore\n        /* \"#utility.yul\":1340:1344   */\n      0x00\n        /* \"#utility.yul\":1397:1442   */\n      tag_229\n        /* \"#utility.yul\":1438:1440   */\n      0x20\n        /* \"#utility.yul\":1427:1436   */\n      dup4\n        /* \"#utility.yul\":1423:1441   */\n      add\n        /* \"#utility.yul\":1415:1421   */\n      dup5\n        /* \"#utility.yul\":1397:1442   */\n      tag_369\n      jump\t// in\n        /* \"#utility.yul\":1453:1679   */\n    tag_45:\n        /* \"#utility.yul\":1512:1518   */\n      0x00\n        /* \"#utility.yul\":1565:1567   */\n      0x20\n        /* \"#utility.yul\":1553:1562   */\n      dup3\n        /* \"#utility.yul\":1544:1551   */\n      dup5\n        /* \"#utility.yul\":1540:1563   */\n      sub\n        /* \"#utility.yul\":1536:1568   */\n      slt\n        /* \"#utility.yul\":1533:1585   */\n      iszero\n      tag_388\n      jumpi\n        /* \"#utility.yul\":1581:1582   */\n      0x00\n        /* \"#utility.yul\":1578:1579   */\n      dup1\n        /* \"#utility.yul\":1571:1583   */\n      revert\n        /* \"#utility.yul\":1533:1585   */\n    tag_388:\n      pop\n        /* \"#utility.yul\":1626:1649   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1453:1679   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1915:2111   */\n    tag_370:\n        /* \"#utility.yul\":1983:2003   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":2043:2085   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2032:2086   */\n      dup2\n      and\n        /* \"#utility.yul\":2022:2087   */\n      dup2\n      eq\n        /* \"#utility.yul\":2012:2105   */\n      tag_246\n      jumpi\n        /* \"#utility.yul\":2101:2102   */\n      0x00\n        /* \"#utility.yul\":2098:2099   */\n      dup1\n        /* \"#utility.yul\":2091:2103   */\n      revert\n        /* \"#utility.yul\":2116:2416   */\n    tag_51:\n        /* \"#utility.yul\":2184:2190   */\n      0x00\n        /* \"#utility.yul\":2192:2198   */\n      dup1\n        /* \"#utility.yul\":2245:2247   */\n      0x40\n        /* \"#utility.yul\":2233:2242   */\n      dup4\n        /* \"#utility.yul\":2224:2231   */\n      dup6\n        /* \"#utility.yul\":2220:2243   */\n      sub\n        /* \"#utility.yul\":2216:2248   */\n      slt\n        /* \"#utility.yul\":2213:2265   */\n      iszero\n      tag_393\n      jumpi\n        /* \"#utility.yul\":2261:2262   */\n      0x00\n        /* \"#utility.yul\":2258:2259   */\n      dup1\n        /* \"#utility.yul\":2251:2263   */\n      revert\n        /* \"#utility.yul\":2213:2265   */\n    tag_393:\n        /* \"#utility.yul\":2284:2313   */\n      tag_394\n        /* \"#utility.yul\":2303:2312   */\n      dup4\n        /* \"#utility.yul\":2284:2313   */\n      tag_370\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":2274:2313   */\n      swap5\n        /* \"#utility.yul\":2382:2384   */\n      0x20\n        /* \"#utility.yul\":2367:2385   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":2354:2386   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2116:2416   */\n      jump\t// out\n        /* \"#utility.yul\":2603:2977   */\n    tag_60:\n        /* \"#utility.yul\":2680:2686   */\n      0x00\n        /* \"#utility.yul\":2688:2694   */\n      dup1\n        /* \"#utility.yul\":2696:2702   */\n      0x00\n        /* \"#utility.yul\":2749:2751   */\n      0x60\n        /* \"#utility.yul\":2737:2746   */\n      dup5\n        /* \"#utility.yul\":2728:2735   */\n      dup7\n        /* \"#utility.yul\":2724:2747   */\n      sub\n        /* \"#utility.yul\":2720:2752   */\n      slt\n        /* \"#utility.yul\":2717:2769   */\n      iszero\n      tag_397\n      jumpi\n        /* \"#utility.yul\":2765:2766   */\n      0x00\n        /* \"#utility.yul\":2762:2763   */\n      dup1\n        /* \"#utility.yul\":2755:2767   */\n      revert\n        /* \"#utility.yul\":2717:2769   */\n    tag_397:\n        /* \"#utility.yul\":2788:2817   */\n      tag_398\n        /* \"#utility.yul\":2807:2816   */\n      dup5\n        /* \"#utility.yul\":2788:2817   */\n      tag_370\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":2778:2817   */\n      swap3\n      pop\n        /* \"#utility.yul\":2836:2874   */\n      tag_399\n        /* \"#utility.yul\":2870:2872   */\n      0x20\n        /* \"#utility.yul\":2859:2868   */\n      dup6\n        /* \"#utility.yul\":2855:2873   */\n      add\n        /* \"#utility.yul\":2836:2874   */\n      tag_370\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":2603:2977   */\n      swap3\n      swap6\n        /* \"#utility.yul\":2826:2874   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2943:2945   */\n      0x40\n        /* \"#utility.yul\":2928:2946   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":2915:2947   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":2603:2977   */\n      jump\t// out\n        /* \"#utility.yul\":2982:3168   */\n    tag_65:\n        /* \"#utility.yul\":3041:3047   */\n      0x00\n        /* \"#utility.yul\":3094:3096   */\n      0x20\n        /* \"#utility.yul\":3082:3091   */\n      dup3\n        /* \"#utility.yul\":3073:3080   */\n      dup5\n        /* \"#utility.yul\":3069:3092   */\n      sub\n        /* \"#utility.yul\":3065:3097   */\n      slt\n        /* \"#utility.yul\":3062:3114   */\n      iszero\n      tag_401\n      jumpi\n        /* \"#utility.yul\":3110:3111   */\n      0x00\n        /* \"#utility.yul\":3107:3108   */\n      dup1\n        /* \"#utility.yul\":3100:3112   */\n      revert\n        /* \"#utility.yul\":3062:3114   */\n    tag_401:\n        /* \"#utility.yul\":3133:3162   */\n      tag_229\n        /* \"#utility.yul\":3152:3161   */\n      dup3\n        /* \"#utility.yul\":3133:3162   */\n      tag_370\n      jump\t// in\n        /* \"#utility.yul\":3173:3520   */\n    tag_101:\n        /* \"#utility.yul\":3238:3244   */\n      0x00\n        /* \"#utility.yul\":3246:3252   */\n      dup1\n        /* \"#utility.yul\":3299:3301   */\n      0x40\n        /* \"#utility.yul\":3287:3296   */\n      dup4\n        /* \"#utility.yul\":3278:3285   */\n      dup6\n        /* \"#utility.yul\":3274:3297   */\n      sub\n        /* \"#utility.yul\":3270:3302   */\n      slt\n        /* \"#utility.yul\":3267:3319   */\n      iszero\n      tag_404\n      jumpi\n        /* \"#utility.yul\":3315:3316   */\n      0x00\n        /* \"#utility.yul\":3312:3313   */\n      dup1\n        /* \"#utility.yul\":3305:3317   */\n      revert\n        /* \"#utility.yul\":3267:3319   */\n    tag_404:\n        /* \"#utility.yul\":3338:3367   */\n      tag_405\n        /* \"#utility.yul\":3357:3366   */\n      dup4\n        /* \"#utility.yul\":3338:3367   */\n      tag_370\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":3328:3367   */\n      swap2\n      pop\n        /* \"#utility.yul\":3417:3419   */\n      0x20\n        /* \"#utility.yul\":3406:3415   */\n      dup4\n        /* \"#utility.yul\":3402:3420   */\n      add\n        /* \"#utility.yul\":3389:3421   */\n      calldataload\n        /* \"#utility.yul\":3464:3469   */\n      dup1\n        /* \"#utility.yul\":3457:3470   */\n      iszero\n        /* \"#utility.yul\":3450:3471   */\n      iszero\n        /* \"#utility.yul\":3443:3448   */\n      dup2\n        /* \"#utility.yul\":3440:3472   */\n      eq\n        /* \"#utility.yul\":3430:3490   */\n      tag_406\n      jumpi\n        /* \"#utility.yul\":3486:3487   */\n      0x00\n        /* \"#utility.yul\":3483:3484   */\n      dup1\n        /* \"#utility.yul\":3476:3488   */\n      revert\n        /* \"#utility.yul\":3430:3490   */\n    tag_406:\n        /* \"#utility.yul\":3509:3514   */\n      dup1\n        /* \"#utility.yul\":3499:3514   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":3173:3520   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3525:3709   */\n    tag_371:\n        /* \"#utility.yul\":3577:3654   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3574:3575   */\n      0x00\n        /* \"#utility.yul\":3567:3655   */\n      mstore\n        /* \"#utility.yul\":3674:3678   */\n      0x41\n        /* \"#utility.yul\":3671:3672   */\n      0x04\n        /* \"#utility.yul\":3664:3679   */\n      mstore\n        /* \"#utility.yul\":3698:3702   */\n      0x24\n        /* \"#utility.yul\":3695:3696   */\n      0x00\n        /* \"#utility.yul\":3688:3703   */\n      revert\n        /* \"#utility.yul\":3714:5039   */\n    tag_109:\n        /* \"#utility.yul\":3809:3815   */\n      0x00\n        /* \"#utility.yul\":3817:3823   */\n      dup1\n        /* \"#utility.yul\":3825:3831   */\n      0x00\n        /* \"#utility.yul\":3833:3839   */\n      dup1\n        /* \"#utility.yul\":3886:3889   */\n      0x80\n        /* \"#utility.yul\":3874:3883   */\n      dup6\n        /* \"#utility.yul\":3865:3872   */\n      dup8\n        /* \"#utility.yul\":3861:3884   */\n      sub\n        /* \"#utility.yul\":3857:3890   */\n      slt\n        /* \"#utility.yul\":3854:3907   */\n      iszero\n      tag_409\n      jumpi\n        /* \"#utility.yul\":3903:3904   */\n      0x00\n        /* \"#utility.yul\":3900:3901   */\n      dup1\n        /* \"#utility.yul\":3893:3905   */\n      revert\n        /* \"#utility.yul\":3854:3907   */\n    tag_409:\n        /* \"#utility.yul\":3926:3955   */\n      tag_410\n        /* \"#utility.yul\":3945:3954   */\n      dup6\n        /* \"#utility.yul\":3926:3955   */\n      tag_370\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":3916:3955   */\n      swap4\n      pop\n        /* \"#utility.yul\":3974:4012   */\n      tag_411\n        /* \"#utility.yul\":4008:4010   */\n      0x20\n        /* \"#utility.yul\":3997:4006   */\n      dup7\n        /* \"#utility.yul\":3993:4011   */\n      add\n        /* \"#utility.yul\":3974:4012   */\n      tag_370\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":3964:4012   */\n      swap3\n      pop\n        /* \"#utility.yul\":4081:4083   */\n      0x40\n        /* \"#utility.yul\":4066:4084   */\n      dup6\n      add\n        /* \"#utility.yul\":4053:4085   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":4160:4162   */\n      0x60\n        /* \"#utility.yul\":4145:4163   */\n      dup6\n      add\n        /* \"#utility.yul\":4132:4164   */\n      calldataload\n        /* \"#utility.yul\":4187:4205   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4176:4206   */\n      dup2\n      gt\n        /* \"#utility.yul\":4173:4223   */\n      iszero\n      tag_412\n      jumpi\n        /* \"#utility.yul\":4219:4220   */\n      0x00\n        /* \"#utility.yul\":4216:4217   */\n      dup1\n        /* \"#utility.yul\":4209:4221   */\n      revert\n        /* \"#utility.yul\":4173:4223   */\n    tag_412:\n        /* \"#utility.yul\":4242:4264   */\n      dup6\n      add\n        /* \"#utility.yul\":4295:4299   */\n      0x1f\n        /* \"#utility.yul\":4287:4300   */\n      dup2\n      add\n        /* \"#utility.yul\":4283:4310   */\n      dup8\n      sgt\n        /* \"#utility.yul\":4273:4328   */\n      tag_413\n      jumpi\n        /* \"#utility.yul\":4324:4325   */\n      0x00\n        /* \"#utility.yul\":4321:4322   */\n      dup1\n        /* \"#utility.yul\":4314:4326   */\n      revert\n        /* \"#utility.yul\":4273:4328   */\n    tag_413:\n        /* \"#utility.yul\":4364:4366   */\n      dup1\n        /* \"#utility.yul\":4351:4367   */\n      calldataload\n        /* \"#utility.yul\":4390:4408   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4382:4388   */\n      dup2\n        /* \"#utility.yul\":4379:4409   */\n      gt\n        /* \"#utility.yul\":4376:4432   */\n      iszero\n      tag_415\n      jumpi\n        /* \"#utility.yul\":4412:4430   */\n      tag_415\n      tag_371\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":4461:4463   */\n      0x40\n        /* \"#utility.yul\":4455:4464   */\n      mload\n        /* \"#utility.yul\":4608:4674   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n        /* \"#utility.yul\":4603:4605   */\n      0x3f\n        /* \"#utility.yul\":4534:4600   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n        /* \"#utility.yul\":4527:4531   */\n      0x1f\n        /* \"#utility.yul\":4519:4525   */\n      dup6\n        /* \"#utility.yul\":4515:4532   */\n      add\n        /* \"#utility.yul\":4511:4601   */\n      and\n        /* \"#utility.yul\":4507:4606   */\n      add\n        /* \"#utility.yul\":4503:4675   */\n      and\n        /* \"#utility.yul\":4495:4501   */\n      dup2\n        /* \"#utility.yul\":4491:4676   */\n      add\n        /* \"#utility.yul\":4742:4748   */\n      dup2\n        /* \"#utility.yul\":4730:4740   */\n      dup2\n        /* \"#utility.yul\":4727:4749   */\n      lt\n        /* \"#utility.yul\":4706:4724   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4694:4704   */\n      dup3\n        /* \"#utility.yul\":4691:4725   */\n      gt\n        /* \"#utility.yul\":4688:4750   */\n      or\n        /* \"#utility.yul\":4685:4773   */\n      iszero\n      tag_417\n      jumpi\n        /* \"#utility.yul\":4753:4771   */\n      tag_417\n      tag_371\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":4789:4791   */\n      0x40\n        /* \"#utility.yul\":4782:4804   */\n      mstore\n        /* \"#utility.yul\":4813:4835   */\n      dup2\n      dup2\n      mstore\n        /* \"#utility.yul\":4854:4869   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":4871:4873   */\n      0x20\n        /* \"#utility.yul\":4850:4874   */\n      add\n        /* \"#utility.yul\":4847:4884   */\n      dup10\n      lt\n        /* \"#utility.yul\":4844:4901   */\n      iszero\n      tag_418\n      jumpi\n        /* \"#utility.yul\":4897:4898   */\n      0x00\n        /* \"#utility.yul\":4894:4895   */\n      dup1\n        /* \"#utility.yul\":4887:4899   */\n      revert\n        /* \"#utility.yul\":4844:4901   */\n    tag_418:\n        /* \"#utility.yul\":4953:4959   */\n      dup2\n        /* \"#utility.yul\":4948:4950   */\n      0x20\n        /* \"#utility.yul\":4944:4946   */\n      dup5\n        /* \"#utility.yul\":4940:4951   */\n      add\n        /* \"#utility.yul\":4935:4937   */\n      0x20\n        /* \"#utility.yul\":4927:4933   */\n      dup4\n        /* \"#utility.yul\":4923:4938   */\n      add\n        /* \"#utility.yul\":4910:4960   */\n      calldatacopy\n        /* \"#utility.yul\":5006:5007   */\n      0x00\n        /* \"#utility.yul\":5001:5003   */\n      0x20\n        /* \"#utility.yul\":4992:4998   */\n      dup4\n        /* \"#utility.yul\":4984:4990   */\n      dup4\n        /* \"#utility.yul\":4980:4999   */\n      add\n        /* \"#utility.yul\":4976:5004   */\n      add\n        /* \"#utility.yul\":4969:5008   */\n      mstore\n        /* \"#utility.yul\":5027:5033   */\n      dup1\n        /* \"#utility.yul\":5017:5033   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3714:5039   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5044:5304   */\n    tag_123:\n        /* \"#utility.yul\":5112:5118   */\n      0x00\n        /* \"#utility.yul\":5120:5126   */\n      dup1\n        /* \"#utility.yul\":5173:5175   */\n      0x40\n        /* \"#utility.yul\":5161:5170   */\n      dup4\n        /* \"#utility.yul\":5152:5159   */\n      dup6\n        /* \"#utility.yul\":5148:5171   */\n      sub\n        /* \"#utility.yul\":5144:5176   */\n      slt\n        /* \"#utility.yul\":5141:5193   */\n      iszero\n      tag_420\n      jumpi\n        /* \"#utility.yul\":5189:5190   */\n      0x00\n        /* \"#utility.yul\":5186:5187   */\n      dup1\n        /* \"#utility.yul\":5179:5191   */\n      revert\n        /* \"#utility.yul\":5141:5193   */\n    tag_420:\n        /* \"#utility.yul\":5212:5241   */\n      tag_421\n        /* \"#utility.yul\":5231:5240   */\n      dup4\n        /* \"#utility.yul\":5212:5241   */\n      tag_370\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":5202:5241   */\n      swap2\n      pop\n        /* \"#utility.yul\":5260:5298   */\n      tag_422\n        /* \"#utility.yul\":5294:5296   */\n      0x20\n        /* \"#utility.yul\":5283:5292   */\n      dup5\n        /* \"#utility.yul\":5279:5297   */\n      add\n        /* \"#utility.yul\":5260:5298   */\n      tag_370\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":5250:5298   */\n      swap1\n      pop\n        /* \"#utility.yul\":5044:5304   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5857:6294   */\n    tag_137:\n        /* \"#utility.yul\":5936:5937   */\n      0x01\n        /* \"#utility.yul\":5932:5944   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":5979:5991   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":6000:6061   */\n      tag_425\n      jumpi\n        /* \"#utility.yul\":6054:6058   */\n      0x7f\n        /* \"#utility.yul\":6046:6052   */\n      dup3\n        /* \"#utility.yul\":6042:6059   */\n      and\n        /* \"#utility.yul\":6032:6059   */\n      swap2\n      pop\n        /* \"#utility.yul\":6000:6061   */\n    tag_425:\n        /* \"#utility.yul\":6107:6109   */\n      0x20\n        /* \"#utility.yul\":6099:6105   */\n      dup3\n        /* \"#utility.yul\":6096:6110   */\n      lt\n        /* \"#utility.yul\":6076:6094   */\n      dup2\n        /* \"#utility.yul\":6073:6111   */\n      sub\n        /* \"#utility.yul\":6070:6288   */\n      tag_426\n      jumpi\n        /* \"#utility.yul\":6144:6221   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6141:6142   */\n      0x00\n        /* \"#utility.yul\":6134:6222   */\n      mstore\n        /* \"#utility.yul\":6245:6249   */\n      0x22\n        /* \"#utility.yul\":6242:6243   */\n      0x04\n        /* \"#utility.yul\":6235:6250   */\n      mstore\n        /* \"#utility.yul\":6273:6277   */\n      0x24\n        /* \"#utility.yul\":6270:6271   */\n      0x00\n        /* \"#utility.yul\":6263:6278   */\n      revert\n        /* \"#utility.yul\":6070:6288   */\n    tag_426:\n      pop\n        /* \"#utility.yul\":5857:6294   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6299:6795   */\n    tag_233:\n        /* \"#utility.yul\":6478:6481   */\n      0x00\n        /* \"#utility.yul\":6516:6522   */\n      dup4\n        /* \"#utility.yul\":6510:6523   */\n      mload\n        /* \"#utility.yul\":6532:6598   */\n      tag_428\n        /* \"#utility.yul\":6591:6597   */\n      dup2\n        /* \"#utility.yul\":6586:6589   */\n      dup5\n        /* \"#utility.yul\":6579:6583   */\n      0x20\n        /* \"#utility.yul\":6571:6577   */\n      dup9\n        /* \"#utility.yul\":6567:6584   */\n      add\n        /* \"#utility.yul\":6532:6598   */\n      tag_368\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":6661:6674   */\n      dup4\n      mload\n        /* \"#utility.yul\":6620:6636   */\n      swap1\n      dup4\n      add\n      swap1\n        /* \"#utility.yul\":6683:6753   */\n      tag_429\n        /* \"#utility.yul\":6661:6674   */\n      dup2\n        /* \"#utility.yul\":6620:6636   */\n      dup4\n        /* \"#utility.yul\":6730:6734   */\n      0x20\n        /* \"#utility.yul\":6718:6735   */\n      dup9\n      add\n        /* \"#utility.yul\":6683:6753   */\n      tag_368\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":6769:6789   */\n      add\n      swap5\n        /* \"#utility.yul\":6299:6795   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6800:7150   */\n    tag_250:\n        /* \"#utility.yul\":6839:6842   */\n      0x00\n        /* \"#utility.yul\":6867:6872   */\n      dup2\n        /* \"#utility.yul\":6857:7050   */\n      tag_431\n      jumpi\n        /* \"#utility.yul\":6906:6983   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6903:6904   */\n      0x00\n        /* \"#utility.yul\":6896:6984   */\n      mstore\n        /* \"#utility.yul\":7007:7011   */\n      0x11\n        /* \"#utility.yul\":7004:7005   */\n      0x04\n        /* \"#utility.yul\":6997:7012   */\n      mstore\n        /* \"#utility.yul\":7035:7039   */\n      0x24\n        /* \"#utility.yul\":7032:7033   */\n      0x00\n        /* \"#utility.yul\":7025:7040   */\n      revert\n        /* \"#utility.yul\":6857:7050   */\n    tag_431:\n      pop\n        /* \"#utility.yul\":7077:7143   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":7066:7144   */\n      add\n      swap1\n        /* \"#utility.yul\":6800:7150   */\n      jump\t// out\n        /* \"#utility.yul\":7155:7686   */\n    tag_313:\n        /* \"#utility.yul\":7398:7440   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":7390:7396   */\n      dup6\n        /* \"#utility.yul\":7386:7441   */\n      and\n        /* \"#utility.yul\":7375:7384   */\n      dup2\n        /* \"#utility.yul\":7368:7442   */\n      mstore\n        /* \"#utility.yul\":7490:7532   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":7482:7488   */\n      dup5\n        /* \"#utility.yul\":7478:7533   */\n      and\n        /* \"#utility.yul\":7473:7475   */\n      0x20\n        /* \"#utility.yul\":7462:7471   */\n      dup3\n        /* \"#utility.yul\":7458:7476   */\n      add\n        /* \"#utility.yul\":7451:7534   */\n      mstore\n        /* \"#utility.yul\":7570:7576   */\n      dup3\n        /* \"#utility.yul\":7565:7567   */\n      0x40\n        /* \"#utility.yul\":7554:7563   */\n      dup3\n        /* \"#utility.yul\":7550:7568   */\n      add\n        /* \"#utility.yul\":7543:7577   */\n      mstore\n        /* \"#utility.yul\":7613:7616   */\n      0x80\n        /* \"#utility.yul\":7608:7610   */\n      0x60\n        /* \"#utility.yul\":7597:7606   */\n      dup3\n        /* \"#utility.yul\":7593:7611   */\n      add\n        /* \"#utility.yul\":7586:7617   */\n      mstore\n        /* \"#utility.yul\":7349:7353   */\n      0x00\n        /* \"#utility.yul\":7634:7680   */\n      tag_433\n        /* \"#utility.yul\":7675:7678   */\n      0x80\n        /* \"#utility.yul\":7664:7673   */\n      dup4\n        /* \"#utility.yul\":7660:7679   */\n      add\n        /* \"#utility.yul\":7652:7658   */\n      dup5\n        /* \"#utility.yul\":7634:7680   */\n      tag_369\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":7626:7680   */\n      swap7\n        /* \"#utility.yul\":7155:7686   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7691:7940   */\n    tag_316:\n        /* \"#utility.yul\":7760:7766   */\n      0x00\n        /* \"#utility.yul\":7813:7815   */\n      0x20\n        /* \"#utility.yul\":7801:7810   */\n      dup3\n        /* \"#utility.yul\":7792:7799   */\n      dup5\n        /* \"#utility.yul\":7788:7811   */\n      sub\n        /* \"#utility.yul\":7784:7816   */\n      slt\n        /* \"#utility.yul\":7781:7833   */\n      iszero\n      tag_435\n      jumpi\n        /* \"#utility.yul\":7829:7830   */\n      0x00\n        /* \"#utility.yul\":7826:7827   */\n      dup1\n        /* \"#utility.yul\":7819:7831   */\n      revert\n        /* \"#utility.yul\":7781:7833   */\n    tag_435:\n        /* \"#utility.yul\":7861:7870   */\n      dup2\n        /* \"#utility.yul\":7855:7871   */\n      mload\n        /* \"#utility.yul\":7880:7910   */\n      tag_229\n        /* \"#utility.yul\":7904:7909   */\n      dup2\n        /* \"#utility.yul\":7880:7910   */\n      tag_367\n      jump\t// in\n\n    auxdata: 0xa2646970667358221220221959a2f4c8296ff1e8e373a93622e8879ae1b5f1e34e4ddb9141831d8a2bda64736f6c634300081b0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_18": {
									"entryPoint": null,
									"id": 18,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_225": {
									"entryPoint": null,
									"id": 225,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_startTokenId_234": {
									"entryPoint": null,
									"id": 234,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 111,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 274,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 437,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 516,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 379,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 89,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:4053:5",
										"nodeType": "YulBlock",
										"src": "0:4053:5",
										"statements": [
											{
												"nativeSrc": "6:3:5",
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "46:95:5",
													"nodeType": "YulBlock",
													"src": "46:95:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "63:1:5",
																		"nodeType": "YulLiteral",
																		"src": "63:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "70:3:5",
																				"nodeType": "YulLiteral",
																				"src": "70:3:5",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "75:10:5",
																				"nodeType": "YulLiteral",
																				"src": "75:10:5",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "66:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:5"
																		},
																		"nativeSrc": "66:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "56:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:5"
																},
																"nativeSrc": "56:31:5",
																"nodeType": "YulFunctionCall",
																"src": "56:31:5"
															},
															"nativeSrc": "56:31:5",
															"nodeType": "YulExpressionStatement",
															"src": "56:31:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "103:1:5",
																		"nodeType": "YulLiteral",
																		"src": "103:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "106:4:5",
																		"nodeType": "YulLiteral",
																		"src": "106:4:5",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "96:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:5"
																},
																"nativeSrc": "96:15:5",
																"nodeType": "YulFunctionCall",
																"src": "96:15:5"
															},
															"nativeSrc": "96:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "96:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "127:1:5",
																		"nodeType": "YulLiteral",
																		"src": "127:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "130:4:5",
																		"nodeType": "YulLiteral",
																		"src": "130:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "120:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:5"
																},
																"nativeSrc": "120:15:5",
																"nodeType": "YulFunctionCall",
																"src": "120:15:5"
															},
															"nativeSrc": "120:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "120:15:5"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "14:127:5",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:5"
											},
											{
												"body": {
													"nativeSrc": "210:770:5",
													"nodeType": "YulBlock",
													"src": "210:770:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "259:16:5",
																"nodeType": "YulBlock",
																"src": "259:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "268:1:5",
																					"nodeType": "YulLiteral",
																					"src": "268:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "271:1:5",
																					"nodeType": "YulLiteral",
																					"src": "271:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "261:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "261:6:5"
																			},
																			"nativeSrc": "261:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "261:12:5"
																		},
																		"nativeSrc": "261:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "261:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "238:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "238:6:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "246:4:5",
																						"nodeType": "YulLiteral",
																						"src": "246:4:5",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "234:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:5"
																				},
																				"nativeSrc": "234:17:5",
																				"nodeType": "YulFunctionCall",
																				"src": "234:17:5"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "253:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "253:3:5"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "230:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "230:3:5"
																		},
																		"nativeSrc": "230:27:5",
																		"nodeType": "YulFunctionCall",
																		"src": "230:27:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "223:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:5"
																},
																"nativeSrc": "223:35:5",
																"nodeType": "YulFunctionCall",
																"src": "223:35:5"
															},
															"nativeSrc": "220:55:5",
															"nodeType": "YulIf",
															"src": "220:55:5"
														},
														{
															"nativeSrc": "284:27:5",
															"nodeType": "YulVariableDeclaration",
															"src": "284:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "304:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "304:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "298:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "298:5:5"
																},
																"nativeSrc": "298:13:5",
																"nodeType": "YulFunctionCall",
																"src": "298:13:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "288:6:5",
																	"nodeType": "YulTypedName",
																	"src": "288:6:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "354:22:5",
																"nodeType": "YulBlock",
																"src": "354:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "356:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "356:16:5"
																			},
																			"nativeSrc": "356:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "356:18:5"
																		},
																		"nativeSrc": "356:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "356:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "326:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "326:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "342:2:5",
																						"nodeType": "YulLiteral",
																						"src": "342:2:5",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "346:1:5",
																						"nodeType": "YulLiteral",
																						"src": "346:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "338:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "338:3:5"
																				},
																				"nativeSrc": "338:10:5",
																				"nodeType": "YulFunctionCall",
																				"src": "338:10:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "350:1:5",
																				"nodeType": "YulLiteral",
																				"src": "350:1:5",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "334:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "334:3:5"
																		},
																		"nativeSrc": "334:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "334:18:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "323:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "323:2:5"
																},
																"nativeSrc": "323:30:5",
																"nodeType": "YulFunctionCall",
																"src": "323:30:5"
															},
															"nativeSrc": "320:56:5",
															"nodeType": "YulIf",
															"src": "320:56:5"
														},
														{
															"nativeSrc": "385:23:5",
															"nodeType": "YulVariableDeclaration",
															"src": "385:23:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "405:2:5",
																		"nodeType": "YulLiteral",
																		"src": "405:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "399:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "399:5:5"
																},
																"nativeSrc": "399:9:5",
																"nodeType": "YulFunctionCall",
																"src": "399:9:5"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "389:6:5",
																	"nodeType": "YulTypedName",
																	"src": "389:6:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "417:85:5",
															"nodeType": "YulVariableDeclaration",
															"src": "417:85:5",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "439:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "439:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "length",
																										"nativeSrc": "463:6:5",
																										"nodeType": "YulIdentifier",
																										"src": "463:6:5"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "471:4:5",
																										"nodeType": "YulLiteral",
																										"src": "471:4:5",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "459:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "459:3:5"
																								},
																								"nativeSrc": "459:17:5",
																								"nodeType": "YulFunctionCall",
																								"src": "459:17:5"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "482:2:5",
																										"nodeType": "YulLiteral",
																										"src": "482:2:5",
																										"type": "",
																										"value": "31"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "478:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "478:3:5"
																								},
																								"nativeSrc": "478:7:5",
																								"nodeType": "YulFunctionCall",
																								"src": "478:7:5"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "455:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "455:3:5"
																						},
																						"nativeSrc": "455:31:5",
																						"nodeType": "YulFunctionCall",
																						"src": "455:31:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "488:2:5",
																						"nodeType": "YulLiteral",
																						"src": "488:2:5",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "451:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "451:3:5"
																				},
																				"nativeSrc": "451:40:5",
																				"nodeType": "YulFunctionCall",
																				"src": "451:40:5"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "497:2:5",
																						"nodeType": "YulLiteral",
																						"src": "497:2:5",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "493:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "493:3:5"
																				},
																				"nativeSrc": "493:7:5",
																				"nodeType": "YulFunctionCall",
																				"src": "493:7:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "447:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "447:3:5"
																		},
																		"nativeSrc": "447:54:5",
																		"nodeType": "YulFunctionCall",
																		"src": "447:54:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "435:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "435:3:5"
																},
																"nativeSrc": "435:67:5",
																"nodeType": "YulFunctionCall",
																"src": "435:67:5"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "421:10:5",
																	"nodeType": "YulTypedName",
																	"src": "421:10:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "577:22:5",
																"nodeType": "YulBlock",
																"src": "577:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "579:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "579:16:5"
																			},
																			"nativeSrc": "579:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "579:18:5"
																		},
																		"nativeSrc": "579:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "579:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "520:10:5",
																				"nodeType": "YulIdentifier",
																				"src": "520:10:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "540:2:5",
																								"nodeType": "YulLiteral",
																								"src": "540:2:5",
																								"type": "",
																								"value": "64"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "544:1:5",
																								"nodeType": "YulLiteral",
																								"src": "544:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "536:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "536:3:5"
																						},
																						"nativeSrc": "536:10:5",
																						"nodeType": "YulFunctionCall",
																						"src": "536:10:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "548:1:5",
																						"nodeType": "YulLiteral",
																						"src": "548:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "532:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "532:3:5"
																				},
																				"nativeSrc": "532:18:5",
																				"nodeType": "YulFunctionCall",
																				"src": "532:18:5"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "517:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "517:2:5"
																		},
																		"nativeSrc": "517:34:5",
																		"nodeType": "YulFunctionCall",
																		"src": "517:34:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "556:10:5",
																				"nodeType": "YulIdentifier",
																				"src": "556:10:5"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "568:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "568:6:5"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "553:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "553:2:5"
																		},
																		"nativeSrc": "553:22:5",
																		"nodeType": "YulFunctionCall",
																		"src": "553:22:5"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "514:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "514:2:5"
																},
																"nativeSrc": "514:62:5",
																"nodeType": "YulFunctionCall",
																"src": "514:62:5"
															},
															"nativeSrc": "511:88:5",
															"nodeType": "YulIf",
															"src": "511:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "615:2:5",
																		"nodeType": "YulLiteral",
																		"src": "615:2:5",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "619:10:5",
																		"nodeType": "YulIdentifier",
																		"src": "619:10:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "608:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "608:6:5"
																},
																"nativeSrc": "608:22:5",
																"nodeType": "YulFunctionCall",
																"src": "608:22:5"
															},
															"nativeSrc": "608:22:5",
															"nodeType": "YulExpressionStatement",
															"src": "608:22:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "646:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "646:6:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "654:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "654:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "639:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "639:6:5"
																},
																"nativeSrc": "639:22:5",
																"nodeType": "YulFunctionCall",
																"src": "639:22:5"
															},
															"nativeSrc": "639:22:5",
															"nodeType": "YulExpressionStatement",
															"src": "639:22:5"
														},
														{
															"body": {
																"nativeSrc": "713:16:5",
																"nodeType": "YulBlock",
																"src": "713:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "722:1:5",
																					"nodeType": "YulLiteral",
																					"src": "722:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "725:1:5",
																					"nodeType": "YulLiteral",
																					"src": "725:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "715:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "715:6:5"
																			},
																			"nativeSrc": "715:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "715:12:5"
																		},
																		"nativeSrc": "715:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "715:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "684:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "684:6:5"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "692:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "692:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "680:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "680:3:5"
																				},
																				"nativeSrc": "680:19:5",
																				"nodeType": "YulFunctionCall",
																				"src": "680:19:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "701:4:5",
																				"nodeType": "YulLiteral",
																				"src": "701:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "676:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "676:3:5"
																		},
																		"nativeSrc": "676:30:5",
																		"nodeType": "YulFunctionCall",
																		"src": "676:30:5"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "708:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "708:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "673:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "673:2:5"
																},
																"nativeSrc": "673:39:5",
																"nodeType": "YulFunctionCall",
																"src": "673:39:5"
															},
															"nativeSrc": "670:59:5",
															"nodeType": "YulIf",
															"src": "670:59:5"
														},
														{
															"nativeSrc": "738:10:5",
															"nodeType": "YulVariableDeclaration",
															"src": "738:10:5",
															"value": {
																"kind": "number",
																"nativeSrc": "747:1:5",
																"nodeType": "YulLiteral",
																"src": "747:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "742:1:5",
																	"nodeType": "YulTypedName",
																	"src": "742:1:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "809:91:5",
																"nodeType": "YulBlock",
																"src": "809:91:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nativeSrc": "838:6:5",
																									"nodeType": "YulIdentifier",
																									"src": "838:6:5"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "846:1:5",
																									"nodeType": "YulIdentifier",
																									"src": "846:1:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "834:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "834:3:5"
																							},
																							"nativeSrc": "834:14:5",
																							"nodeType": "YulFunctionCall",
																							"src": "834:14:5"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "850:4:5",
																							"nodeType": "YulLiteral",
																							"src": "850:4:5",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "830:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "830:3:5"
																					},
																					"nativeSrc": "830:25:5",
																					"nodeType": "YulFunctionCall",
																					"src": "830:25:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nativeSrc": "871:6:5",
																											"nodeType": "YulIdentifier",
																											"src": "871:6:5"
																										},
																										{
																											"name": "i",
																											"nativeSrc": "879:1:5",
																											"nodeType": "YulIdentifier",
																											"src": "879:1:5"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nativeSrc": "867:3:5",
																										"nodeType": "YulIdentifier",
																										"src": "867:3:5"
																									},
																									"nativeSrc": "867:14:5",
																									"nodeType": "YulFunctionCall",
																									"src": "867:14:5"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "883:4:5",
																									"nodeType": "YulLiteral",
																									"src": "883:4:5",
																									"type": "",
																									"value": "0x20"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "863:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "863:3:5"
																							},
																							"nativeSrc": "863:25:5",
																							"nodeType": "YulFunctionCall",
																							"src": "863:25:5"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "857:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "857:5:5"
																					},
																					"nativeSrc": "857:32:5",
																					"nodeType": "YulFunctionCall",
																					"src": "857:32:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "823:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "823:6:5"
																			},
																			"nativeSrc": "823:67:5",
																			"nodeType": "YulFunctionCall",
																			"src": "823:67:5"
																		},
																		"nativeSrc": "823:67:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "823:67:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "768:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "768:1:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "771:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "771:6:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "765:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "765:2:5"
																},
																"nativeSrc": "765:13:5",
																"nodeType": "YulFunctionCall",
																"src": "765:13:5"
															},
															"nativeSrc": "757:143:5",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "779:21:5",
																"nodeType": "YulBlock",
																"src": "779:21:5",
																"statements": [
																	{
																		"nativeSrc": "781:17:5",
																		"nodeType": "YulAssignment",
																		"src": "781:17:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "790:1:5",
																					"nodeType": "YulIdentifier",
																					"src": "790:1:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "793:4:5",
																					"nodeType": "YulLiteral",
																					"src": "793:4:5",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "786:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "786:3:5"
																			},
																			"nativeSrc": "786:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "786:12:5"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "781:1:5",
																				"nodeType": "YulIdentifier",
																				"src": "781:1:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "761:3:5",
																"nodeType": "YulBlock",
																"src": "761:3:5",
																"statements": []
															},
															"src": "757:143:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "924:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "924:6:5"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "932:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "932:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "920:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "920:3:5"
																				},
																				"nativeSrc": "920:19:5",
																				"nodeType": "YulFunctionCall",
																				"src": "920:19:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "941:4:5",
																				"nodeType": "YulLiteral",
																				"src": "941:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "916:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "916:3:5"
																		},
																		"nativeSrc": "916:30:5",
																		"nodeType": "YulFunctionCall",
																		"src": "916:30:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "948:1:5",
																		"nodeType": "YulLiteral",
																		"src": "948:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "909:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "909:6:5"
																},
																"nativeSrc": "909:41:5",
																"nodeType": "YulFunctionCall",
																"src": "909:41:5"
															},
															"nativeSrc": "909:41:5",
															"nodeType": "YulExpressionStatement",
															"src": "909:41:5"
														},
														{
															"nativeSrc": "959:15:5",
															"nodeType": "YulAssignment",
															"src": "959:15:5",
															"value": {
																"name": "memPtr",
																"nativeSrc": "968:6:5",
																"nodeType": "YulIdentifier",
																"src": "968:6:5"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "959:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "959:5:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nativeSrc": "146:834:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "184:6:5",
														"nodeType": "YulTypedName",
														"src": "184:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "192:3:5",
														"nodeType": "YulTypedName",
														"src": "192:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "200:5:5",
														"nodeType": "YulTypedName",
														"src": "200:5:5",
														"type": ""
													}
												],
												"src": "146:834:5"
											},
											{
												"body": {
													"nativeSrc": "1103:439:5",
													"nodeType": "YulBlock",
													"src": "1103:439:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1149:16:5",
																"nodeType": "YulBlock",
																"src": "1149:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1158:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1158:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1161:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1161:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1151:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1151:6:5"
																			},
																			"nativeSrc": "1151:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1151:12:5"
																		},
																		"nativeSrc": "1151:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1151:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1124:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1124:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1133:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1133:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1120:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1120:3:5"
																		},
																		"nativeSrc": "1120:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1120:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1145:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1145:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1116:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1116:3:5"
																},
																"nativeSrc": "1116:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1116:32:5"
															},
															"nativeSrc": "1113:52:5",
															"nodeType": "YulIf",
															"src": "1113:52:5"
														},
														{
															"nativeSrc": "1174:30:5",
															"nodeType": "YulVariableDeclaration",
															"src": "1174:30:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1194:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1194:9:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1188:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1188:5:5"
																},
																"nativeSrc": "1188:16:5",
																"nodeType": "YulFunctionCall",
																"src": "1188:16:5"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "1178:6:5",
																	"nodeType": "YulTypedName",
																	"src": "1178:6:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1247:16:5",
																"nodeType": "YulBlock",
																"src": "1247:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1256:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1256:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1259:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1259:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1249:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1249:6:5"
																			},
																			"nativeSrc": "1249:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1249:12:5"
																		},
																		"nativeSrc": "1249:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1249:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1219:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1219:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1235:2:5",
																						"nodeType": "YulLiteral",
																						"src": "1235:2:5",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1239:1:5",
																						"nodeType": "YulLiteral",
																						"src": "1239:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1231:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1231:3:5"
																				},
																				"nativeSrc": "1231:10:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1231:10:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1243:1:5",
																				"nodeType": "YulLiteral",
																				"src": "1243:1:5",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1227:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1227:3:5"
																		},
																		"nativeSrc": "1227:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1227:18:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1216:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "1216:2:5"
																},
																"nativeSrc": "1216:30:5",
																"nodeType": "YulFunctionCall",
																"src": "1216:30:5"
															},
															"nativeSrc": "1213:50:5",
															"nodeType": "YulIf",
															"src": "1213:50:5"
														},
														{
															"nativeSrc": "1272:71:5",
															"nodeType": "YulAssignment",
															"src": "1272:71:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1315:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1315:9:5"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "1326:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1326:6:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1311:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1311:3:5"
																		},
																		"nativeSrc": "1311:22:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1311:22:5"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1335:7:5",
																		"nodeType": "YulIdentifier",
																		"src": "1335:7:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nativeSrc": "1282:28:5",
																	"nodeType": "YulIdentifier",
																	"src": "1282:28:5"
																},
																"nativeSrc": "1282:61:5",
																"nodeType": "YulFunctionCall",
																"src": "1282:61:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1272:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1272:6:5"
																}
															]
														},
														{
															"nativeSrc": "1352:41:5",
															"nodeType": "YulVariableDeclaration",
															"src": "1352:41:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1378:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1378:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1389:2:5",
																				"nodeType": "YulLiteral",
																				"src": "1389:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1374:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1374:3:5"
																		},
																		"nativeSrc": "1374:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1374:18:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1368:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1368:5:5"
																},
																"nativeSrc": "1368:25:5",
																"nodeType": "YulFunctionCall",
																"src": "1368:25:5"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nativeSrc": "1356:8:5",
																	"nodeType": "YulTypedName",
																	"src": "1356:8:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1438:16:5",
																"nodeType": "YulBlock",
																"src": "1438:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1447:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1447:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1450:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1450:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1440:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1440:6:5"
																			},
																			"nativeSrc": "1440:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1440:12:5"
																		},
																		"nativeSrc": "1440:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1440:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nativeSrc": "1408:8:5",
																		"nodeType": "YulIdentifier",
																		"src": "1408:8:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1426:2:5",
																						"nodeType": "YulLiteral",
																						"src": "1426:2:5",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1430:1:5",
																						"nodeType": "YulLiteral",
																						"src": "1430:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1422:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1422:3:5"
																				},
																				"nativeSrc": "1422:10:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1422:10:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1434:1:5",
																				"nodeType": "YulLiteral",
																				"src": "1434:1:5",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1418:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1418:3:5"
																		},
																		"nativeSrc": "1418:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1418:18:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1405:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "1405:2:5"
																},
																"nativeSrc": "1405:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1405:32:5"
															},
															"nativeSrc": "1402:52:5",
															"nodeType": "YulIf",
															"src": "1402:52:5"
														},
														{
															"nativeSrc": "1463:73:5",
															"nodeType": "YulAssignment",
															"src": "1463:73:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1506:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1506:9:5"
																			},
																			{
																				"name": "offset_1",
																				"nativeSrc": "1517:8:5",
																				"nodeType": "YulIdentifier",
																				"src": "1517:8:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1502:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1502:3:5"
																		},
																		"nativeSrc": "1502:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1502:24:5"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1528:7:5",
																		"nodeType": "YulIdentifier",
																		"src": "1528:7:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nativeSrc": "1473:28:5",
																	"nodeType": "YulIdentifier",
																	"src": "1473:28:5"
																},
																"nativeSrc": "1473:63:5",
																"nodeType": "YulFunctionCall",
																"src": "1473:63:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1463:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1463:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nativeSrc": "985:557:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1061:9:5",
														"nodeType": "YulTypedName",
														"src": "1061:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1072:7:5",
														"nodeType": "YulTypedName",
														"src": "1072:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1084:6:5",
														"nodeType": "YulTypedName",
														"src": "1084:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1092:6:5",
														"nodeType": "YulTypedName",
														"src": "1092:6:5",
														"type": ""
													}
												],
												"src": "985:557:5"
											},
											{
												"body": {
													"nativeSrc": "1602:325:5",
													"nodeType": "YulBlock",
													"src": "1602:325:5",
													"statements": [
														{
															"nativeSrc": "1612:22:5",
															"nodeType": "YulAssignment",
															"src": "1612:22:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1626:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1626:1:5",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "1629:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "1629:4:5"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "1622:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1622:3:5"
																},
																"nativeSrc": "1622:12:5",
																"nodeType": "YulFunctionCall",
																"src": "1622:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1612:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1612:6:5"
																}
															]
														},
														{
															"nativeSrc": "1643:38:5",
															"nodeType": "YulVariableDeclaration",
															"src": "1643:38:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1673:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "1673:4:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1679:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1679:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1669:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1669:3:5"
																},
																"nativeSrc": "1669:12:5",
																"nodeType": "YulFunctionCall",
																"src": "1669:12:5"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "1647:18:5",
																	"nodeType": "YulTypedName",
																	"src": "1647:18:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1720:31:5",
																"nodeType": "YulBlock",
																"src": "1720:31:5",
																"statements": [
																	{
																		"nativeSrc": "1722:27:5",
																		"nodeType": "YulAssignment",
																		"src": "1722:27:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "1736:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "1736:6:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1744:4:5",
																					"nodeType": "YulLiteral",
																					"src": "1744:4:5",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "1732:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "1732:3:5"
																			},
																			"nativeSrc": "1732:17:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1732:17:5"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "1722:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1722:6:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1700:18:5",
																		"nodeType": "YulIdentifier",
																		"src": "1700:18:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1693:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1693:6:5"
																},
																"nativeSrc": "1693:26:5",
																"nodeType": "YulFunctionCall",
																"src": "1693:26:5"
															},
															"nativeSrc": "1690:61:5",
															"nodeType": "YulIf",
															"src": "1690:61:5"
														},
														{
															"body": {
																"nativeSrc": "1810:111:5",
																"nodeType": "YulBlock",
																"src": "1810:111:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1831:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1831:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1838:3:5",
																							"nodeType": "YulLiteral",
																							"src": "1838:3:5",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "1843:10:5",
																							"nodeType": "YulLiteral",
																							"src": "1843:10:5",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "1834:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "1834:3:5"
																					},
																					"nativeSrc": "1834:20:5",
																					"nodeType": "YulFunctionCall",
																					"src": "1834:20:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1824:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1824:6:5"
																			},
																			"nativeSrc": "1824:31:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1824:31:5"
																		},
																		"nativeSrc": "1824:31:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1824:31:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1875:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1875:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1878:4:5",
																					"nodeType": "YulLiteral",
																					"src": "1878:4:5",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1868:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1868:6:5"
																			},
																			"nativeSrc": "1868:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1868:15:5"
																		},
																		"nativeSrc": "1868:15:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1868:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1903:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1903:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1906:4:5",
																					"nodeType": "YulLiteral",
																					"src": "1906:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1896:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1896:6:5"
																			},
																			"nativeSrc": "1896:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1896:15:5"
																		},
																		"nativeSrc": "1896:15:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1896:15:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1766:18:5",
																		"nodeType": "YulIdentifier",
																		"src": "1766:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1789:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1789:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1797:2:5",
																				"nodeType": "YulLiteral",
																				"src": "1797:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1786:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "1786:2:5"
																		},
																		"nativeSrc": "1786:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1786:14:5"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "1763:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "1763:2:5"
																},
																"nativeSrc": "1763:38:5",
																"nodeType": "YulFunctionCall",
																"src": "1763:38:5"
															},
															"nativeSrc": "1760:161:5",
															"nodeType": "YulIf",
															"src": "1760:161:5"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1547:380:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1582:4:5",
														"nodeType": "YulTypedName",
														"src": "1582:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1591:6:5",
														"nodeType": "YulTypedName",
														"src": "1591:6:5",
														"type": ""
													}
												],
												"src": "1547:380:5"
											},
											{
												"body": {
													"nativeSrc": "1988:65:5",
													"nodeType": "YulBlock",
													"src": "1988:65:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2005:1:5",
																		"nodeType": "YulLiteral",
																		"src": "2005:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2008:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2008:3:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1998:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1998:6:5"
																},
																"nativeSrc": "1998:14:5",
																"nodeType": "YulFunctionCall",
																"src": "1998:14:5"
															},
															"nativeSrc": "1998:14:5",
															"nodeType": "YulExpressionStatement",
															"src": "1998:14:5"
														},
														{
															"nativeSrc": "2021:26:5",
															"nodeType": "YulAssignment",
															"src": "2021:26:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2039:1:5",
																		"nodeType": "YulLiteral",
																		"src": "2039:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2042:4:5",
																		"nodeType": "YulLiteral",
																		"src": "2042:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2029:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "2029:9:5"
																},
																"nativeSrc": "2029:18:5",
																"nodeType": "YulFunctionCall",
																"src": "2029:18:5"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2021:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "2021:4:5"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "1932:121:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "1971:3:5",
														"nodeType": "YulTypedName",
														"src": "1971:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "1979:4:5",
														"nodeType": "YulTypedName",
														"src": "1979:4:5",
														"type": ""
													}
												],
												"src": "1932:121:5"
											},
											{
												"body": {
													"nativeSrc": "2139:437:5",
													"nodeType": "YulBlock",
													"src": "2139:437:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2172:398:5",
																"nodeType": "YulBlock",
																"src": "2172:398:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2193:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2193:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "2196:5:5",
																					"nodeType": "YulIdentifier",
																					"src": "2196:5:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2186:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2186:6:5"
																			},
																			"nativeSrc": "2186:16:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2186:16:5"
																		},
																		"nativeSrc": "2186:16:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2186:16:5"
																	},
																	{
																		"nativeSrc": "2215:30:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2215:30:5",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2237:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2237:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2240:4:5",
																					"nodeType": "YulLiteral",
																					"src": "2240:4:5",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "2227:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2227:9:5"
																			},
																			"nativeSrc": "2227:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2227:18:5"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "2219:4:5",
																				"nodeType": "YulTypedName",
																				"src": "2219:4:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2258:57:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2258:57:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "2281:4:5",
																					"nodeType": "YulIdentifier",
																					"src": "2281:4:5"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2291:1:5",
																							"nodeType": "YulLiteral",
																							"src": "2291:1:5",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "2298:10:5",
																									"nodeType": "YulIdentifier",
																									"src": "2298:10:5"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2310:2:5",
																									"nodeType": "YulLiteral",
																									"src": "2310:2:5",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2294:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "2294:3:5"
																							},
																							"nativeSrc": "2294:19:5",
																							"nodeType": "YulFunctionCall",
																							"src": "2294:19:5"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "2287:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "2287:3:5"
																					},
																					"nativeSrc": "2287:27:5",
																					"nodeType": "YulFunctionCall",
																					"src": "2287:27:5"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2277:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "2277:3:5"
																			},
																			"nativeSrc": "2277:38:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2277:38:5"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2262:11:5",
																				"nodeType": "YulTypedName",
																				"src": "2262:11:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "2352:23:5",
																			"nodeType": "YulBlock",
																			"src": "2352:23:5",
																			"statements": [
																				{
																					"nativeSrc": "2354:19:5",
																					"nodeType": "YulAssignment",
																					"src": "2354:19:5",
																					"value": {
																						"name": "data",
																						"nativeSrc": "2369:4:5",
																						"nodeType": "YulIdentifier",
																						"src": "2369:4:5"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "2354:11:5",
																							"nodeType": "YulIdentifier",
																							"src": "2354:11:5"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "2334:10:5",
																					"nodeType": "YulIdentifier",
																					"src": "2334:10:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2346:4:5",
																					"nodeType": "YulLiteral",
																					"src": "2346:4:5",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "2331:2:5",
																				"nodeType": "YulIdentifier",
																				"src": "2331:2:5"
																			},
																			"nativeSrc": "2331:20:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2331:20:5"
																		},
																		"nativeSrc": "2328:47:5",
																		"nodeType": "YulIf",
																		"src": "2328:47:5"
																	},
																	{
																		"nativeSrc": "2388:41:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2388:41:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "2402:4:5",
																					"nodeType": "YulIdentifier",
																					"src": "2402:4:5"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2412:1:5",
																							"nodeType": "YulLiteral",
																							"src": "2412:1:5",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "2419:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "2419:3:5"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2424:2:5",
																									"nodeType": "YulLiteral",
																									"src": "2424:2:5",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2415:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "2415:3:5"
																							},
																							"nativeSrc": "2415:12:5",
																							"nodeType": "YulFunctionCall",
																							"src": "2415:12:5"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "2408:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "2408:3:5"
																					},
																					"nativeSrc": "2408:20:5",
																					"nodeType": "YulFunctionCall",
																					"src": "2408:20:5"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2398:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "2398:3:5"
																			},
																			"nativeSrc": "2398:31:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2398:31:5"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "2392:2:5",
																				"nodeType": "YulTypedName",
																				"src": "2392:2:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2442:24:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2442:24:5",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "2455:11:5",
																			"nodeType": "YulIdentifier",
																			"src": "2455:11:5"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "2446:5:5",
																				"nodeType": "YulTypedName",
																				"src": "2446:5:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "2540:20:5",
																			"nodeType": "YulBlock",
																			"src": "2540:20:5",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "2549:5:5",
																								"nodeType": "YulIdentifier",
																								"src": "2549:5:5"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2556:1:5",
																								"nodeType": "YulLiteral",
																								"src": "2556:1:5",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "2542:6:5",
																							"nodeType": "YulIdentifier",
																							"src": "2542:6:5"
																						},
																						"nativeSrc": "2542:16:5",
																						"nodeType": "YulFunctionCall",
																						"src": "2542:16:5"
																					},
																					"nativeSrc": "2542:16:5",
																					"nodeType": "YulExpressionStatement",
																					"src": "2542:16:5"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2490:5:5",
																					"nodeType": "YulIdentifier",
																					"src": "2490:5:5"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "2497:2:5",
																					"nodeType": "YulIdentifier",
																					"src": "2497:2:5"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "2487:2:5",
																				"nodeType": "YulIdentifier",
																				"src": "2487:2:5"
																			},
																			"nativeSrc": "2487:13:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2487:13:5"
																		},
																		"nativeSrc": "2479:81:5",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "2501:26:5",
																			"nodeType": "YulBlock",
																			"src": "2501:26:5",
																			"statements": [
																				{
																					"nativeSrc": "2503:22:5",
																					"nodeType": "YulAssignment",
																					"src": "2503:22:5",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "2516:5:5",
																								"nodeType": "YulIdentifier",
																								"src": "2516:5:5"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2523:1:5",
																								"nodeType": "YulLiteral",
																								"src": "2523:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "2512:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "2512:3:5"
																						},
																						"nativeSrc": "2512:13:5",
																						"nodeType": "YulFunctionCall",
																						"src": "2512:13:5"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "2503:5:5",
																							"nodeType": "YulIdentifier",
																							"src": "2503:5:5"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "2483:3:5",
																			"nodeType": "YulBlock",
																			"src": "2483:3:5",
																			"statements": []
																		},
																		"src": "2479:81:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2155:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2155:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2160:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2160:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2152:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "2152:2:5"
																},
																"nativeSrc": "2152:11:5",
																"nodeType": "YulFunctionCall",
																"src": "2152:11:5"
															},
															"nativeSrc": "2149:421:5",
															"nodeType": "YulIf",
															"src": "2149:421:5"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "2058:518:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2111:5:5",
														"nodeType": "YulTypedName",
														"src": "2111:5:5",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2118:3:5",
														"nodeType": "YulTypedName",
														"src": "2118:3:5",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2123:10:5",
														"nodeType": "YulTypedName",
														"src": "2123:10:5",
														"type": ""
													}
												],
												"src": "2058:518:5"
											},
											{
												"body": {
													"nativeSrc": "2666:81:5",
													"nodeType": "YulBlock",
													"src": "2666:81:5",
													"statements": [
														{
															"nativeSrc": "2676:65:5",
															"nodeType": "YulAssignment",
															"src": "2676:65:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "2691:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "2691:4:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2709:1:5",
																										"nodeType": "YulLiteral",
																										"src": "2709:1:5",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "2712:3:5",
																										"nodeType": "YulIdentifier",
																										"src": "2712:3:5"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "2705:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "2705:3:5"
																								},
																								"nativeSrc": "2705:11:5",
																								"nodeType": "YulFunctionCall",
																								"src": "2705:11:5"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2722:1:5",
																										"nodeType": "YulLiteral",
																										"src": "2722:1:5",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "2718:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "2718:3:5"
																								},
																								"nativeSrc": "2718:6:5",
																								"nodeType": "YulFunctionCall",
																								"src": "2718:6:5"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "2701:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "2701:3:5"
																						},
																						"nativeSrc": "2701:24:5",
																						"nodeType": "YulFunctionCall",
																						"src": "2701:24:5"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "2697:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "2697:3:5"
																				},
																				"nativeSrc": "2697:29:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2697:29:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2687:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2687:3:5"
																		},
																		"nativeSrc": "2687:40:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2687:40:5"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2733:1:5",
																				"nodeType": "YulLiteral",
																				"src": "2733:1:5",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "2736:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "2736:3:5"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "2729:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2729:3:5"
																		},
																		"nativeSrc": "2729:11:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2729:11:5"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2684:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "2684:2:5"
																},
																"nativeSrc": "2684:57:5",
																"nodeType": "YulFunctionCall",
																"src": "2684:57:5"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "2676:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "2676:4:5"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "2581:166:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2643:4:5",
														"nodeType": "YulTypedName",
														"src": "2643:4:5",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2649:3:5",
														"nodeType": "YulTypedName",
														"src": "2649:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "2657:4:5",
														"nodeType": "YulTypedName",
														"src": "2657:4:5",
														"type": ""
													}
												],
												"src": "2581:166:5"
											},
											{
												"body": {
													"nativeSrc": "2848:1203:5",
													"nodeType": "YulBlock",
													"src": "2848:1203:5",
													"statements": [
														{
															"nativeSrc": "2858:24:5",
															"nodeType": "YulVariableDeclaration",
															"src": "2858:24:5",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2878:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2878:3:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2872:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "2872:5:5"
																},
																"nativeSrc": "2872:10:5",
																"nodeType": "YulFunctionCall",
																"src": "2872:10:5"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "2862:6:5",
																	"nodeType": "YulTypedName",
																	"src": "2862:6:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2925:22:5",
																"nodeType": "YulBlock",
																"src": "2925:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2927:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "2927:16:5"
																			},
																			"nativeSrc": "2927:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2927:18:5"
																		},
																		"nativeSrc": "2927:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2927:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "2897:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2897:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2913:2:5",
																						"nodeType": "YulLiteral",
																						"src": "2913:2:5",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2917:1:5",
																						"nodeType": "YulLiteral",
																						"src": "2917:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "2909:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "2909:3:5"
																				},
																				"nativeSrc": "2909:10:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2909:10:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2921:1:5",
																				"nodeType": "YulLiteral",
																				"src": "2921:1:5",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2905:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2905:3:5"
																		},
																		"nativeSrc": "2905:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2905:18:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2894:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "2894:2:5"
																},
																"nativeSrc": "2894:30:5",
																"nodeType": "YulFunctionCall",
																"src": "2894:30:5"
															},
															"nativeSrc": "2891:56:5",
															"nodeType": "YulIf",
															"src": "2891:56:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3000:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "3000:4:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3038:4:5",
																						"nodeType": "YulIdentifier",
																						"src": "3038:4:5"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3032:5:5",
																					"nodeType": "YulIdentifier",
																					"src": "3032:5:5"
																				},
																				"nativeSrc": "3032:11:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3032:11:5"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "3006:25:5",
																			"nodeType": "YulIdentifier",
																			"src": "3006:25:5"
																		},
																		"nativeSrc": "3006:38:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3006:38:5"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "3046:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3046:6:5"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "2956:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "2956:43:5"
																},
																"nativeSrc": "2956:97:5",
																"nodeType": "YulFunctionCall",
																"src": "2956:97:5"
															},
															"nativeSrc": "2956:97:5",
															"nodeType": "YulExpressionStatement",
															"src": "2956:97:5"
														},
														{
															"nativeSrc": "3062:18:5",
															"nodeType": "YulVariableDeclaration",
															"src": "3062:18:5",
															"value": {
																"kind": "number",
																"nativeSrc": "3079:1:5",
																"nodeType": "YulLiteral",
																"src": "3079:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "3066:9:5",
																	"nodeType": "YulTypedName",
																	"src": "3066:9:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3089:17:5",
															"nodeType": "YulAssignment",
															"src": "3089:17:5",
															"value": {
																"kind": "number",
																"nativeSrc": "3102:4:5",
																"nodeType": "YulLiteral",
																"src": "3102:4:5",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "3089:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "3089:9:5"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "3152:642:5",
																		"nodeType": "YulBlock",
																		"src": "3152:642:5",
																		"statements": [
																			{
																				"nativeSrc": "3166:35:5",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3166:35:5",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "3185:6:5",
																							"nodeType": "YulIdentifier",
																							"src": "3185:6:5"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "3197:2:5",
																									"nodeType": "YulLiteral",
																									"src": "3197:2:5",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "3193:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "3193:3:5"
																							},
																							"nativeSrc": "3193:7:5",
																							"nodeType": "YulFunctionCall",
																							"src": "3193:7:5"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "3181:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "3181:3:5"
																					},
																					"nativeSrc": "3181:20:5",
																					"nodeType": "YulFunctionCall",
																					"src": "3181:20:5"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "3170:7:5",
																						"nodeType": "YulTypedName",
																						"src": "3170:7:5",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "3214:49:5",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3214:49:5",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3258:4:5",
																							"nodeType": "YulIdentifier",
																							"src": "3258:4:5"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "3228:29:5",
																						"nodeType": "YulIdentifier",
																						"src": "3228:29:5"
																					},
																					"nativeSrc": "3228:35:5",
																					"nodeType": "YulFunctionCall",
																					"src": "3228:35:5"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "3218:6:5",
																						"nodeType": "YulTypedName",
																						"src": "3218:6:5",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "3276:10:5",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3276:10:5",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3285:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3285:1:5",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "3280:1:5",
																						"nodeType": "YulTypedName",
																						"src": "3280:1:5",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "3356:165:5",
																					"nodeType": "YulBlock",
																					"src": "3356:165:5",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3381:6:5",
																										"nodeType": "YulIdentifier",
																										"src": "3381:6:5"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "3399:3:5",
																														"nodeType": "YulIdentifier",
																														"src": "3399:3:5"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "3404:9:5",
																														"nodeType": "YulIdentifier",
																														"src": "3404:9:5"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "3395:3:5",
																													"nodeType": "YulIdentifier",
																													"src": "3395:3:5"
																												},
																												"nativeSrc": "3395:19:5",
																												"nodeType": "YulFunctionCall",
																												"src": "3395:19:5"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "3389:5:5",
																											"nodeType": "YulIdentifier",
																											"src": "3389:5:5"
																										},
																										"nativeSrc": "3389:26:5",
																										"nodeType": "YulFunctionCall",
																										"src": "3389:26:5"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "3374:6:5",
																									"nodeType": "YulIdentifier",
																									"src": "3374:6:5"
																								},
																								"nativeSrc": "3374:42:5",
																								"nodeType": "YulFunctionCall",
																								"src": "3374:42:5"
																							},
																							"nativeSrc": "3374:42:5",
																							"nodeType": "YulExpressionStatement",
																							"src": "3374:42:5"
																						},
																						{
																							"nativeSrc": "3433:24:5",
																							"nodeType": "YulAssignment",
																							"src": "3433:24:5",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3447:6:5",
																										"nodeType": "YulIdentifier",
																										"src": "3447:6:5"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3455:1:5",
																										"nodeType": "YulLiteral",
																										"src": "3455:1:5",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3443:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "3443:3:5"
																								},
																								"nativeSrc": "3443:14:5",
																								"nodeType": "YulFunctionCall",
																								"src": "3443:14:5"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "3433:6:5",
																									"nodeType": "YulIdentifier",
																									"src": "3433:6:5"
																								}
																							]
																						},
																						{
																							"nativeSrc": "3474:33:5",
																							"nodeType": "YulAssignment",
																							"src": "3474:33:5",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "3491:9:5",
																										"nodeType": "YulIdentifier",
																										"src": "3491:9:5"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3502:4:5",
																										"nodeType": "YulLiteral",
																										"src": "3502:4:5",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3487:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "3487:3:5"
																								},
																								"nativeSrc": "3487:20:5",
																								"nodeType": "YulFunctionCall",
																								"src": "3487:20:5"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "3474:9:5",
																									"nodeType": "YulIdentifier",
																									"src": "3474:9:5"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "3310:1:5",
																							"nodeType": "YulIdentifier",
																							"src": "3310:1:5"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "3313:7:5",
																							"nodeType": "YulIdentifier",
																							"src": "3313:7:5"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "3307:2:5",
																						"nodeType": "YulIdentifier",
																						"src": "3307:2:5"
																					},
																					"nativeSrc": "3307:14:5",
																					"nodeType": "YulFunctionCall",
																					"src": "3307:14:5"
																				},
																				"nativeSrc": "3299:222:5",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "3322:21:5",
																					"nodeType": "YulBlock",
																					"src": "3322:21:5",
																					"statements": [
																						{
																							"nativeSrc": "3324:17:5",
																							"nodeType": "YulAssignment",
																							"src": "3324:17:5",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "3333:1:5",
																										"nodeType": "YulIdentifier",
																										"src": "3333:1:5"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3336:4:5",
																										"nodeType": "YulLiteral",
																										"src": "3336:4:5",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3329:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "3329:3:5"
																								},
																								"nativeSrc": "3329:12:5",
																								"nodeType": "YulFunctionCall",
																								"src": "3329:12:5"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "3324:1:5",
																									"nodeType": "YulIdentifier",
																									"src": "3324:1:5"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "3303:3:5",
																					"nodeType": "YulBlock",
																					"src": "3303:3:5",
																					"statements": []
																				},
																				"src": "3299:222:5"
																			},
																			{
																				"body": {
																					"nativeSrc": "3569:166:5",
																					"nodeType": "YulBlock",
																					"src": "3569:166:5",
																					"statements": [
																						{
																							"nativeSrc": "3587:43:5",
																							"nodeType": "YulVariableDeclaration",
																							"src": "3587:43:5",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "3614:3:5",
																												"nodeType": "YulIdentifier",
																												"src": "3614:3:5"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "3619:9:5",
																												"nodeType": "YulIdentifier",
																												"src": "3619:9:5"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "3610:3:5",
																											"nodeType": "YulIdentifier",
																											"src": "3610:3:5"
																										},
																										"nativeSrc": "3610:19:5",
																										"nodeType": "YulFunctionCall",
																										"src": "3610:19:5"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "3604:5:5",
																									"nodeType": "YulIdentifier",
																									"src": "3604:5:5"
																								},
																								"nativeSrc": "3604:26:5",
																								"nodeType": "YulFunctionCall",
																								"src": "3604:26:5"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "3591:9:5",
																									"nodeType": "YulTypedName",
																									"src": "3591:9:5",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3654:6:5",
																										"nodeType": "YulIdentifier",
																										"src": "3654:6:5"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "3666:9:5",
																												"nodeType": "YulIdentifier",
																												"src": "3666:9:5"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "3693:1:5",
																																				"nodeType": "YulLiteral",
																																				"src": "3693:1:5",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "3696:6:5",
																																				"nodeType": "YulIdentifier",
																																				"src": "3696:6:5"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "3689:3:5",
																																			"nodeType": "YulIdentifier",
																																			"src": "3689:3:5"
																																		},
																																		"nativeSrc": "3689:14:5",
																																		"nodeType": "YulFunctionCall",
																																		"src": "3689:14:5"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "3705:3:5",
																																		"nodeType": "YulLiteral",
																																		"src": "3705:3:5",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "3685:3:5",
																																	"nodeType": "YulIdentifier",
																																	"src": "3685:3:5"
																																},
																																"nativeSrc": "3685:24:5",
																																"nodeType": "YulFunctionCall",
																																"src": "3685:24:5"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "3715:1:5",
																																		"nodeType": "YulLiteral",
																																		"src": "3715:1:5",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "3711:3:5",
																																	"nodeType": "YulIdentifier",
																																	"src": "3711:3:5"
																																},
																																"nativeSrc": "3711:6:5",
																																"nodeType": "YulFunctionCall",
																																"src": "3711:6:5"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "3681:3:5",
																															"nodeType": "YulIdentifier",
																															"src": "3681:3:5"
																														},
																														"nativeSrc": "3681:37:5",
																														"nodeType": "YulFunctionCall",
																														"src": "3681:37:5"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "3677:3:5",
																													"nodeType": "YulIdentifier",
																													"src": "3677:3:5"
																												},
																												"nativeSrc": "3677:42:5",
																												"nodeType": "YulFunctionCall",
																												"src": "3677:42:5"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "3662:3:5",
																											"nodeType": "YulIdentifier",
																											"src": "3662:3:5"
																										},
																										"nativeSrc": "3662:58:5",
																										"nodeType": "YulFunctionCall",
																										"src": "3662:58:5"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "3647:6:5",
																									"nodeType": "YulIdentifier",
																									"src": "3647:6:5"
																								},
																								"nativeSrc": "3647:74:5",
																								"nodeType": "YulFunctionCall",
																								"src": "3647:74:5"
																							},
																							"nativeSrc": "3647:74:5",
																							"nodeType": "YulExpressionStatement",
																							"src": "3647:74:5"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "3540:7:5",
																							"nodeType": "YulIdentifier",
																							"src": "3540:7:5"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "3549:6:5",
																							"nodeType": "YulIdentifier",
																							"src": "3549:6:5"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "3537:2:5",
																						"nodeType": "YulIdentifier",
																						"src": "3537:2:5"
																					},
																					"nativeSrc": "3537:19:5",
																					"nodeType": "YulFunctionCall",
																					"src": "3537:19:5"
																				},
																				"nativeSrc": "3534:201:5",
																				"nodeType": "YulIf",
																				"src": "3534:201:5"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3755:4:5",
																							"nodeType": "YulIdentifier",
																							"src": "3755:4:5"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "3769:1:5",
																											"nodeType": "YulLiteral",
																											"src": "3769:1:5",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "3772:6:5",
																											"nodeType": "YulIdentifier",
																											"src": "3772:6:5"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "3765:3:5",
																										"nodeType": "YulIdentifier",
																										"src": "3765:3:5"
																									},
																									"nativeSrc": "3765:14:5",
																									"nodeType": "YulFunctionCall",
																									"src": "3765:14:5"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "3781:1:5",
																									"nodeType": "YulLiteral",
																									"src": "3781:1:5",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "3761:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "3761:3:5"
																							},
																							"nativeSrc": "3761:22:5",
																							"nodeType": "YulFunctionCall",
																							"src": "3761:22:5"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "3748:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "3748:6:5"
																					},
																					"nativeSrc": "3748:36:5",
																					"nodeType": "YulFunctionCall",
																					"src": "3748:36:5"
																				},
																				"nativeSrc": "3748:36:5",
																				"nodeType": "YulExpressionStatement",
																				"src": "3748:36:5"
																			}
																		]
																	},
																	"nativeSrc": "3145:649:5",
																	"nodeType": "YulCase",
																	"src": "3145:649:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3150:1:5",
																		"nodeType": "YulLiteral",
																		"src": "3150:1:5",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "3811:234:5",
																		"nodeType": "YulBlock",
																		"src": "3811:234:5",
																		"statements": [
																			{
																				"nativeSrc": "3825:14:5",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3825:14:5",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3838:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3838:1:5",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "3829:5:5",
																						"nodeType": "YulTypedName",
																						"src": "3829:5:5",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "3874:67:5",
																					"nodeType": "YulBlock",
																					"src": "3874:67:5",
																					"statements": [
																						{
																							"nativeSrc": "3892:35:5",
																							"nodeType": "YulAssignment",
																							"src": "3892:35:5",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "3911:3:5",
																												"nodeType": "YulIdentifier",
																												"src": "3911:3:5"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "3916:9:5",
																												"nodeType": "YulIdentifier",
																												"src": "3916:9:5"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "3907:3:5",
																											"nodeType": "YulIdentifier",
																											"src": "3907:3:5"
																										},
																										"nativeSrc": "3907:19:5",
																										"nodeType": "YulFunctionCall",
																										"src": "3907:19:5"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "3901:5:5",
																									"nodeType": "YulIdentifier",
																									"src": "3901:5:5"
																								},
																								"nativeSrc": "3901:26:5",
																								"nodeType": "YulFunctionCall",
																								"src": "3901:26:5"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "3892:5:5",
																									"nodeType": "YulIdentifier",
																									"src": "3892:5:5"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "3855:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "3855:6:5"
																				},
																				"nativeSrc": "3852:89:5",
																				"nodeType": "YulIf",
																				"src": "3852:89:5"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3961:4:5",
																							"nodeType": "YulIdentifier",
																							"src": "3961:4:5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "4020:5:5",
																									"nodeType": "YulIdentifier",
																									"src": "4020:5:5"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "4027:6:5",
																									"nodeType": "YulIdentifier",
																									"src": "4027:6:5"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "3967:52:5",
																								"nodeType": "YulIdentifier",
																								"src": "3967:52:5"
																							},
																							"nativeSrc": "3967:67:5",
																							"nodeType": "YulFunctionCall",
																							"src": "3967:67:5"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "3954:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "3954:6:5"
																					},
																					"nativeSrc": "3954:81:5",
																					"nodeType": "YulFunctionCall",
																					"src": "3954:81:5"
																				},
																				"nativeSrc": "3954:81:5",
																				"nodeType": "YulExpressionStatement",
																				"src": "3954:81:5"
																			}
																		]
																	},
																	"nativeSrc": "3803:242:5",
																	"nodeType": "YulCase",
																	"src": "3803:242:5",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "3125:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3125:6:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3133:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3133:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3122:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "3122:2:5"
																},
																"nativeSrc": "3122:14:5",
																"nodeType": "YulFunctionCall",
																"src": "3122:14:5"
															},
															"nativeSrc": "3115:930:5",
															"nodeType": "YulSwitch",
															"src": "3115:930:5"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "2752:1299:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2833:4:5",
														"nodeType": "YulTypedName",
														"src": "2833:4:5",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "2839:3:5",
														"nodeType": "YulTypedName",
														"src": "2839:3:5",
														"type": ""
													}
												],
												"src": "2752:1299:5"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := mload(offset)\n        if gt(length, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 0x1f), not(31)), 63), not(31)))\n        if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, length)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            mstore(add(add(memPtr, i), 0x20), mload(add(add(offset, i), 0x20)))\n        }\n        mstore(add(add(memPtr, length), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        if gt(offset, sub(shl(64, 1), 1)) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, sub(shl(64, 1), 1)) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1B92 CODESIZE SUB DUP1 PUSH2 0x1B92 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x112 JUMP JUMPDEST DUP2 DUP2 PUSH1 0x2 PUSH2 0x3D DUP4 DUP3 PUSH2 0x204 JUMP JUMPDEST POP PUSH1 0x3 PUSH2 0x4A DUP3 DUP3 PUSH2 0x204 JUMP JUMPDEST POP PUSH1 0x0 DUP1 SSTORE POP PUSH2 0x2C2 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x80 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x99 JUMPI PUSH2 0x99 PUSH2 0x59 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xC7 JUMPI PUSH2 0xC7 PUSH2 0x59 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP4 DUP3 ADD PUSH1 0x20 ADD DUP6 LT ISZERO PUSH2 0xDF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xFE JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP4 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xE2 JUMP JUMPDEST POP PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x125 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x13B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x147 DUP6 DUP3 DUP7 ADD PUSH2 0x6F JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MLOAD SWAP1 SWAP4 POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x165 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x171 DUP6 DUP3 DUP7 ADD PUSH2 0x6F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x18F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1AF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1FF JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1DC JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1FC JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1E8 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x21D JUMPI PUSH2 0x21D PUSH2 0x59 JUMP JUMPDEST PUSH2 0x231 DUP2 PUSH2 0x22B DUP5 SLOAD PUSH2 0x17B JUMP JUMPDEST DUP5 PUSH2 0x1B5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x265 JUMPI PUSH1 0x0 DUP4 ISZERO PUSH2 0x24D JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x1FC JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x295 JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x275 JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x2B3 JUMPI DUP7 DUP5 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x18C1 DUP1 PUSH2 0x2D1 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x16A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0xCB JUMPI DUP1 PUSH4 0xA2309FF8 GT PUSH2 0x7F JUMPI DUP1 PUSH4 0xD89135CD GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xD89135CD EQ PUSH2 0x3A6 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x3BB JUMPI DUP1 PUSH4 0xF2523633 EQ PUSH2 0x411 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA2309FF8 EQ PUSH2 0x35E JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x373 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x386 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95D89B41 GT PUSH2 0xB0 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x309 JUMPI DUP1 PUSH4 0xA1448194 EQ PUSH2 0x31E JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x33E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x2C9 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x122 JUMPI DUP1 PUSH4 0x42842E0E GT PUSH2 0x107 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x276 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x289 JUMPI DUP1 PUSH4 0x4F558E79 EQ PUSH2 0x2A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0x2478D639 EQ PUSH2 0x256 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x81812FC GT PUSH2 0x153 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x20B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x220 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1A4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18F PUSH2 0x18A CALLDATASIZE PUSH1 0x4 PUSH2 0x1419 JUMP JUMPDEST PUSH2 0x48B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B9 PUSH2 0x570 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19B SWAP2 SWAP1 PUSH2 0x14A4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E6 PUSH2 0x1E1 CALLDATASIZE PUSH1 0x4 PUSH2 0x14B7 JUMP JUMPDEST PUSH2 0x602 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x19B JUMP JUMPDEST PUSH2 0x21E PUSH2 0x219 CALLDATASIZE PUSH1 0x4 PUSH2 0x14F4 JUMP JUMPDEST PUSH2 0x663 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD SUB JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x19B JUMP JUMPDEST PUSH2 0x21E PUSH2 0x251 CALLDATASIZE PUSH1 0x4 PUSH2 0x151E JUMP JUMPDEST PUSH2 0x673 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x262 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x235 PUSH2 0x271 CALLDATASIZE PUSH1 0x4 PUSH2 0x155B JUMP JUMPDEST PUSH2 0x8B2 JUMP JUMPDEST PUSH2 0x21E PUSH2 0x284 CALLDATASIZE PUSH1 0x4 PUSH2 0x151E JUMP JUMPDEST PUSH2 0x8ED JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x295 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21E PUSH2 0x2A4 CALLDATASIZE PUSH1 0x4 PUSH2 0x14B7 JUMP JUMPDEST PUSH2 0x90D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18F PUSH2 0x2C4 CALLDATASIZE PUSH1 0x4 PUSH2 0x14B7 JUMP JUMPDEST PUSH2 0x91B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E6 PUSH2 0x2E4 CALLDATASIZE PUSH1 0x4 PUSH2 0x14B7 JUMP JUMPDEST PUSH2 0x926 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x235 PUSH2 0x304 CALLDATASIZE PUSH1 0x4 PUSH2 0x155B JUMP JUMPDEST PUSH2 0x931 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x315 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B9 PUSH2 0x9AA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21E PUSH2 0x339 CALLDATASIZE PUSH1 0x4 PUSH2 0x14F4 JUMP JUMPDEST PUSH2 0x9B9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21E PUSH2 0x359 CALLDATASIZE PUSH1 0x4 PUSH2 0x1576 JUMP JUMPDEST PUSH2 0x9C3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0x235 JUMP JUMPDEST PUSH2 0x21E PUSH2 0x381 CALLDATASIZE PUSH1 0x4 PUSH2 0x15E1 JUMP JUMPDEST PUSH2 0xA5F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x392 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B9 PUSH2 0x3A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x14B7 JUMP JUMPDEST PUSH2 0xAC6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x235 PUSH2 0xB67 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18F PUSH2 0x3D6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1702 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x431 PUSH2 0x42C CALLDATASIZE PUSH1 0x4 PUSH2 0x14B7 JUMP JUMPDEST PUSH2 0xB72 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19B SWAP2 SWAP1 DUP2 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 DUP3 ADD MSTORE PUSH1 0x40 DUP1 DUP4 ADD MLOAD ISZERO ISZERO SWAP1 DUP3 ADD MSTORE PUSH1 0x60 SWAP2 DUP3 ADD MLOAD PUSH3 0xFFFFFF AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND EQ DUP1 PUSH2 0x51E JUMPI POP PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND EQ JUMPDEST DUP1 PUSH2 0x56A JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x57F SWAP1 PUSH2 0x1735 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5AB SWAP1 PUSH2 0x1735 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5F8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5CD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5F8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5DB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x60D DUP3 PUSH2 0xB9F JUMP JUMPDEST PUSH2 0x63A JUMPI PUSH2 0x63A PUSH32 0xCF4700E400000000000000000000000000000000000000000000000000000000 PUSH2 0xBFD JUMP JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0x66F DUP3 DUP3 PUSH1 0x1 PUSH2 0xC07 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x67E DUP3 PUSH2 0xCF5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP5 DUP6 AND SWAP5 SWAP1 SWAP2 POP DUP2 AND DUP5 EQ PUSH2 0x6CB JUMPI PUSH2 0x6CB PUSH32 0xA114810000000000000000000000000000000000000000000000000000000000 PUSH2 0xBFD JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x704 DUP2 DUP8 CALLER JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND SWAP2 AND DUP2 EQ SWAP2 EQ OR SWAP1 JUMP JUMPDEST PUSH2 0x73F JUMPI PUSH2 0x712 DUP7 CALLER PUSH2 0x3D6 JUMP JUMPDEST PUSH2 0x73F JUMPI PUSH2 0x73F PUSH32 0x59C896BE00000000000000000000000000000000000000000000000000000000 PUSH2 0xBFD JUMP JUMPDEST DUP1 ISZERO PUSH2 0x74A JUMPI PUSH1 0x0 DUP3 SSTORE JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD SWAP1 SSTORE SWAP2 DUP8 AND DUP1 DUP3 MSTORE SWAP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE TIMESTAMP PUSH1 0xA0 SHL OR PUSH29 0x200000000000000000000000000000000000000000000000000000000 OR PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH29 0x200000000000000000000000000000000000000000000000000000000 DUP5 AND SWAP1 SUB PUSH2 0x839 JUMPI PUSH1 0x1 DUP5 ADD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x837 JUMPI PUSH1 0x0 SLOAD DUP2 EQ PUSH2 0x837 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE JUMPDEST POP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND DUP5 DUP2 DUP9 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x0 DUP1 LOG4 DUP1 PUSH1 0x0 SUB PUSH2 0x8A9 JUMPI PUSH2 0x8A9 PUSH32 0xEA553B3400000000000000000000000000000000000000000000000000000000 PUSH2 0xBFD JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x56A DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x80 SHR PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0x908 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xA5F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x918 DUP2 PUSH1 0x1 PUSH2 0xE26 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x56A DUP3 PUSH2 0xB9F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x56A DUP3 PUSH2 0xCF5 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x977 JUMPI PUSH2 0x977 PUSH32 0x8F4EB60400000000000000000000000000000000000000000000000000000000 PUSH2 0xBFD JUMP JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x57F SWAP1 PUSH2 0x1735 JUMP JUMPDEST PUSH2 0x66F DUP3 DUP3 PUSH2 0xFCC JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xA6A DUP5 DUP5 DUP5 PUSH2 0x673 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND EXTCODESIZE ISZERO PUSH2 0xAC0 JUMPI PUSH2 0xA93 DUP5 DUP5 DUP5 DUP5 PUSH2 0xFE6 JUMP JUMPDEST PUSH2 0xAC0 JUMPI PUSH2 0xAC0 PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 PUSH2 0xBFD JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xAD1 DUP3 PUSH2 0xB9F JUMP JUMPDEST PUSH2 0xAFE JUMPI PUSH2 0xAFE PUSH32 0xA14C4B5000000000000000000000000000000000000000000000000000000000 PUSH2 0xBFD JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB15 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0xB35 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xB60 JUMP JUMPDEST DUP1 PUSH2 0xB3F DUP5 PUSH2 0x1156 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xB50 SWAP3 SWAP2 SWAP1 PUSH2 0x1788 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA5A PUSH1 0x1 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x56A DUP3 PUSH2 0x11B8 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD DUP3 LT ISZERO PUSH2 0xBF8 JUMPI PUSH1 0x0 JUMPDEST POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 DUP2 SWAP1 SUB PUSH2 0xBD5 JUMPI PUSH2 0xBCE DUP4 PUSH2 0x17B7 JUMP JUMPDEST SWAP3 POP PUSH2 0xBAD JUMP JUMPDEST PUSH29 0x100000000000000000000000000000000000000000000000000000000 AND ISZERO SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xC12 DUP4 PUSH2 0x926 JUMP JUMPDEST SWAP1 POP DUP2 DUP1 ISZERO PUSH2 0xC37 JUMPI POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND EQ ISZERO JUMPDEST ISZERO PUSH2 0xC73 JUMPI PUSH2 0xC46 DUP2 CALLER PUSH2 0x3D6 JUMP JUMPDEST PUSH2 0xC73 JUMPI PUSH2 0xC73 PUSH32 0xCFB3B94200000000000000000000000000000000000000000000000000000000 PUSH2 0xBFD JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP7 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 LOG4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 DUP2 SWAP1 SUB PUSH2 0xDD1 JUMPI PUSH1 0x0 SLOAD DUP3 LT PUSH2 0xD3E JUMPI PUSH2 0xD3E PUSH32 0xDF2D9B4200000000000000000000000000000000000000000000000000000000 PUSH2 0xBFD JUMP JUMPDEST JUMPDEST POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0xD3F JUMPI PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP2 AND PUSH1 0x0 SUB PUSH2 0xDA3 JUMPI SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDCC PUSH32 0xDF2D9B4200000000000000000000000000000000000000000000000000000000 PUSH2 0xBFD JUMP JUMPDEST PUSH2 0xD3F JUMP JUMPDEST PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP2 AND PUSH1 0x0 SUB PUSH2 0xDFD JUMPI SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBF8 PUSH32 0xDF2D9B4200000000000000000000000000000000000000000000000000000000 PUSH2 0xBFD JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE31 DUP4 PUSH2 0xCF5 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 DUP1 PUSH2 0xE4F DUP7 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP5 ISZERO PUSH2 0xE9F JUMPI PUSH2 0xE64 DUP2 DUP5 CALLER PUSH2 0x6E2 JUMP JUMPDEST PUSH2 0xE9F JUMPI PUSH2 0xE72 DUP4 CALLER PUSH2 0x3D6 JUMP JUMPDEST PUSH2 0xE9F JUMPI PUSH2 0xE9F PUSH32 0x59C896BE00000000000000000000000000000000000000000000000000000000 PUSH2 0xBFD JUMP JUMPDEST DUP1 ISZERO PUSH2 0xEAA JUMPI PUSH1 0x0 DUP3 SSTORE JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD SWAP1 SSTORE TIMESTAMP PUSH1 0xA0 SHL OR PUSH29 0x300000000000000000000000000000000000000000000000000000000 OR PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH29 0x200000000000000000000000000000000000000000000000000000000 DUP6 AND SWAP1 SUB PUSH2 0xF77 JUMPI PUSH1 0x1 DUP7 ADD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0xF75 JUMPI PUSH1 0x0 SLOAD DUP2 EQ PUSH2 0xF75 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD DUP7 SWAP1 PUSH1 0x0 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP4 SWAP1 LOG4 POP POP PUSH1 0x1 DUP1 SLOAD DUP2 ADD SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH2 0x66F DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x125D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x150B7A0200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x1041 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1813 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x109A JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1097 SWAP2 DUP2 ADD SWAP1 PUSH2 0x186E JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1108 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x10C8 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x10CD JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x1100 JUMPI PUSH2 0x1100 PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 PUSH2 0xBFD JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH32 0x150B7A0200000000000000000000000000000000000000000000000000000000 EQ SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xA0 PUSH1 0x40 MLOAD ADD DUP1 PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 SUB SWAP2 POP POP PUSH1 0x0 DUP2 MSTORE DUP1 DUP3 JUMPDEST PUSH1 0x1 DUP4 SUB SWAP3 POP PUSH1 0xA DUP2 MOD PUSH1 0x30 ADD DUP4 MSTORE8 PUSH1 0xA SWAP1 DIV DUP1 PUSH2 0x1170 JUMPI POP DUP2 SWAP1 SUB PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP1 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x56A SWAP1 PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND DUP2 MSTORE PUSH1 0xA0 DUP4 SWAP1 SHR PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x20 DUP3 ADD MSTORE PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP4 AND ISZERO ISZERO SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xE8 SWAP2 SWAP1 SWAP2 SHR PUSH1 0x60 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x1267 DUP4 DUP4 PUSH2 0x12EC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND EXTCODESIZE ISZERO PUSH2 0x908 JUMPI PUSH1 0x0 SLOAD DUP3 DUP2 SUB JUMPDEST PUSH2 0x129E PUSH1 0x0 DUP7 DUP4 DUP1 PUSH1 0x1 ADD SWAP5 POP DUP7 PUSH2 0xFE6 JUMP JUMPDEST PUSH2 0x12CB JUMPI PUSH2 0x12CB PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 PUSH2 0xBFD JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x128B JUMPI DUP2 PUSH1 0x0 SLOAD EQ PUSH2 0x12E5 JUMPI PUSH2 0x12E5 PUSH1 0x0 PUSH2 0xBFD JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 DUP3 SWAP1 SUB PUSH2 0x1321 JUMPI PUSH2 0x1321 PUSH32 0xB562E8DD00000000000000000000000000000000000000000000000000000000 PUSH2 0xBFD JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND TIMESTAMP PUSH1 0xA0 SHL PUSH1 0x1 DUP9 EQ PUSH1 0xE1 SHL OR DUP2 OR SWAP1 SWAP2 SSTORE DUP1 DUP5 MSTORE PUSH1 0x5 SWAP1 SWAP3 MSTORE DUP3 KECCAK256 DUP1 SLOAD PUSH9 0x10000000000000001 DUP7 MUL ADD SWAP1 SSTORE SWAP1 DUP2 SWAP1 SUB PUSH2 0x13A6 JUMPI PUSH2 0x13A6 PUSH32 0x2E07630000000000000000000000000000000000000000000000000000000000 PUSH2 0xBFD JUMP JUMPDEST DUP2 DUP4 ADD DUP3 JUMPDEST DUP1 DUP4 PUSH1 0x0 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x0 DUP1 LOG4 DUP2 DUP2 PUSH1 0x1 ADD SWAP2 POP DUP2 SUB PUSH2 0x13AB JUMPI POP PUSH1 0x0 SSTORE POP POP POP POP JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP2 EQ PUSH2 0x918 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x142B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xB60 DUP2 PUSH2 0x13EB JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1451 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1439 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1472 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1436 JUMP JUMPDEST PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xB60 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x145A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xBF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1507 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1510 DUP4 PUSH2 0x14D0 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1533 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x153C DUP5 PUSH2 0x14D0 JUMP JUMPDEST SWAP3 POP PUSH2 0x154A PUSH1 0x20 DUP6 ADD PUSH2 0x14D0 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x156D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB60 DUP3 PUSH2 0x14D0 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1589 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1592 DUP4 PUSH2 0x14D0 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x15A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x15F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1600 DUP6 PUSH2 0x14D0 JUMP JUMPDEST SWAP4 POP PUSH2 0x160E PUSH1 0x20 DUP7 ADD PUSH2 0x14D0 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1631 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x1642 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x165C JUMPI PUSH2 0x165C PUSH2 0x15B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x3F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP6 ADD AND ADD AND DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x16C8 JUMPI PUSH2 0x16C8 PUSH2 0x15B2 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP3 DUP3 ADD PUSH1 0x20 ADD DUP10 LT ISZERO PUSH2 0x16E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP4 DUP4 ADD ADD MSTORE DUP1 SWAP4 POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1715 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x171E DUP4 PUSH2 0x14D0 JUMP JUMPDEST SWAP2 POP PUSH2 0x172C PUSH1 0x20 DUP5 ADD PUSH2 0x14D0 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1749 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1782 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x179A DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x1436 JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x17AE DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x1436 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x17ED JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x1864 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x145A JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1880 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xB60 DUP2 PUSH2 0x13EB JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x22 NOT MSIZE LOG2 DELEGATECALL 0xC8 0x29 PUSH16 0xF1E8E373A93622E8879AE1B5F1E34E4D 0xDB SWAP2 COINBASE DUP4 SAR DUP11 0x2B 0xDA PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ",
							"sourceMap": "1449:797:0:-:0;;;1512:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1576:5;1583:7;6306:5:1;:13;1576:5:0;6306::1;:13;:::i;:::-;-1:-1:-1;6329:7:1;:17;6339:7;6329;:17;:::i;:::-;-1:-1:-1;6776:7:1;6356:13;:31;-1:-1:-1;1449:797:0;;-1:-1:-1;;;1449:797:0;14:127:5;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:834;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;298:13;;-1:-1:-1;;;;;323:30:5;;320:56;;;356:18;;:::i;:::-;405:2;399:9;497:2;459:17;;-1:-1:-1;;455:31:5;;;488:2;451:40;447:54;435:67;;-1:-1:-1;;;;;517:34:5;;553:22;;;514:62;511:88;;;579:18;;:::i;:::-;615:2;608:22;639;;;680:19;;;701:4;676:30;673:39;-1:-1:-1;670:59:5;;;725:1;722;715:12;670:59;747:1;757:143;771:6;768:1;765:13;757:143;;;883:4;867:14;;;863:25;;857:32;834:14;;;830:25;;823:67;786:12;757:143;;;-1:-1:-1;948:1:5;920:19;;;941:4;916:30;909:41;;;;924:6;146:834;-1:-1:-1;;;146:834:5:o;985:557::-;1084:6;1092;1145:2;1133:9;1124:7;1120:23;1116:32;1113:52;;;1161:1;1158;1151:12;1113:52;1188:16;;-1:-1:-1;;;;;1216:30:5;;1213:50;;;1259:1;1256;1249:12;1213:50;1282:61;1335:7;1326:6;1315:9;1311:22;1282:61;:::i;:::-;1389:2;1374:18;;1368:25;1272:71;;-1:-1:-1;1368:25:5;-1:-1:-1;;;;;;1405:32:5;;1402:52;;;1450:1;1447;1440:12;1402:52;1473:63;1528:7;1517:8;1506:9;1502:24;1473:63;:::i;:::-;1463:73;;;985:557;;;;;:::o;1547:380::-;1626:1;1622:12;;;;1669;;;1690:61;;1744:4;1736:6;1732:17;1722:27;;1690:61;1797:2;1789:6;1786:14;1766:18;1763:38;1760:161;;1843:10;1838:3;1834:20;1831:1;1824:31;1878:4;1875:1;1868:15;1906:4;1903:1;1896:15;1760:161;;1547:380;;;:::o;2058:518::-;2160:2;2155:3;2152:11;2149:421;;;2196:5;2193:1;2186:16;2240:4;2237:1;2227:18;2310:2;2298:10;2294:19;2291:1;2287:27;2281:4;2277:38;2346:4;2334:10;2331:20;2328:47;;;-1:-1:-1;2369:4:5;2328:47;2424:2;2419:3;2415:12;2412:1;2408:20;2402:4;2398:31;2388:41;;2479:81;2497:2;2490:5;2487:13;2479:81;;;2556:1;2542:16;;2523:1;2512:13;2479:81;;;2483:3;;2149:421;2058:518;;;:::o;2752:1299::-;2872:10;;-1:-1:-1;;;;;2894:30:5;;2891:56;;;2927:18;;:::i;:::-;2956:97;3046:6;3006:38;3038:4;3032:11;3006:38;:::i;:::-;3000:4;2956:97;:::i;:::-;3102:4;3133:2;3122:14;;3150:1;3145:649;;;;3838:1;3855:6;3852:89;;;-1:-1:-1;3907:19:5;;;3901:26;3852:89;-1:-1:-1;;2709:1:5;2705:11;;;2701:24;2697:29;2687:40;2733:1;2729:11;;;2684:57;3954:81;;3115:930;;3145:649;2005:1;1998:14;;;2042:4;2029:18;;-1:-1:-1;;3181:20:5;;;3299:222;3313:7;3310:1;3307:14;3299:222;;;3395:19;;;3389:26;3374:42;;3502:4;3487:20;;;;3455:1;3443:14;;;;3329:12;3299:222;;;3303:3;3549:6;3540:7;3537:19;3534:201;;;3610:19;;;3604:26;-1:-1:-1;;3693:1:5;3689:14;;;3705:3;3685:24;3681:37;3677:42;3662:58;3647:74;;3534:201;-1:-1:-1;;;;3781:1:5;3765:14;;;3761:22;3748:36;;-1:-1:-1;2752:1299:5:o;:::-;1449:797:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfers_1156": {
									"entryPoint": null,
									"id": 1156,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_approve_1597": {
									"entryPoint": 3079,
									"id": 1597,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_baseURI_496": {
									"entryPoint": null,
									"id": 496,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_beforeTokenTransfers_1143": {
									"entryPoint": null,
									"id": 1143,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_1763": {
									"entryPoint": 3622,
									"id": 1763,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkContractOnERC721Received_1212": {
									"entryPoint": 4070,
									"id": 1212,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@_exists_865": {
									"entryPoint": 2975,
									"id": 865,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_extraData_1822": {
									"entryPoint": null,
									"id": 1822,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_getApprovedSlotAndAddress_898": {
									"entryPoint": null,
									"id": 898,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@_isSenderApprovedOrOwner_879": {
									"entryPoint": null,
									"id": 879,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_mint_1331": {
									"entryPoint": 4844,
									"id": 1331,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSenderERC721A_1865": {
									"entryPoint": null,
									"id": 1865,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nextExtraData_1855": {
									"entryPoint": null,
									"id": 1855,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_nextInitializedFlag_737": {
									"entryPoint": null,
									"id": 737,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_numberBurned_345": {
									"entryPoint": null,
									"id": 345,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_ownershipAt_548": {
									"entryPoint": 4536,
									"id": 548,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_packOwnershipData_727": {
									"entryPoint": null,
									"id": 727,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_packedOwnershipOf_661": {
									"entryPoint": 3317,
									"id": 661,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_revert_1883": {
									"entryPoint": 3069,
									"id": 1883,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_safeMint_1517": {
									"entryPoint": 4701,
									"id": 1517,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_safeMint_1532": {
									"entryPoint": 4044,
									"id": 1532,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_startTokenId_234": {
									"entryPoint": null,
									"id": 234,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_toString_1875": {
									"entryPoint": 4438,
									"id": 1875,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_totalBurned_281": {
									"entryPoint": null,
									"id": 281,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_totalMinted_272": {
									"entryPoint": null,
									"id": 272,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_unpackedOwnership_715": {
									"entryPoint": null,
									"id": 715,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@approve_753": {
									"entryPoint": 1635,
									"id": 753,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_309": {
									"entryPoint": 2353,
									"id": 309,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burn_2112": {
									"entryPoint": 2317,
									"id": 2112,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@exists_30": {
									"entryPoint": 2331,
									"id": 30,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_778": {
									"entryPoint": 1538,
									"id": 778,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getOwnershipAt_56": {
									"entryPoint": 2930,
									"id": 56,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_822": {
									"entryPoint": null,
									"id": 822,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_432": {
									"entryPoint": 1392,
									"id": 432,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@numberBurned_86": {
									"entryPoint": 2226,
									"id": 86,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@ownerOf_516": {
									"entryPoint": 2342,
									"id": 516,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeMint_43": {
									"entryPoint": 2489,
									"id": 43,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@safeTransferFrom_1090": {
									"entryPoint": 2285,
									"id": 1090,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_1130": {
									"entryPoint": 2655,
									"id": 1130,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_804": {
									"entryPoint": 2499,
									"id": 804,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_422": {
									"entryPoint": 1163,
									"id": 422,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_442": {
									"entryPoint": 2474,
									"id": 442,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@tokenURI_487": {
									"entryPoint": 2758,
									"id": 487,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalBurned_74": {
									"entryPoint": 2919,
									"id": 74,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalMinted_65": {
									"entryPoint": null,
									"id": 65,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_259": {
									"entryPoint": null,
									"id": 259,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_1071": {
									"entryPoint": 1651,
									"id": 1071,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 5328,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5467,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 5890,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 5406,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 5601,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 5494,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5364,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 5145,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 6254,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5303,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 5210,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 6024,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 6163,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5284,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_TokenOwnership_$1935_memory_ptr__to_t_struct$_TokenOwnership_$1935_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 5174,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"decrement_t_uint256": {
									"entryPoint": 6071,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 5941,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 5554,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_bytes4": {
									"entryPoint": 5099,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:7942:5",
										"nodeType": "YulBlock",
										"src": "0:7942:5",
										"statements": [
											{
												"nativeSrc": "6:3:5",
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "58:133:5",
													"nodeType": "YulBlock",
													"src": "58:133:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "169:16:5",
																"nodeType": "YulBlock",
																"src": "169:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "178:1:5",
																					"nodeType": "YulLiteral",
																					"src": "178:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "181:1:5",
																					"nodeType": "YulLiteral",
																					"src": "181:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "171:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "171:6:5"
																			},
																			"nativeSrc": "171:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "171:12:5"
																		},
																		"nativeSrc": "171:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "171:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "81:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "81:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "92:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "92:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "99:66:5",
																						"nodeType": "YulLiteral",
																						"src": "99:66:5",
																						"type": "",
																						"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "88:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "88:3:5"
																				},
																				"nativeSrc": "88:78:5",
																				"nodeType": "YulFunctionCall",
																				"src": "88:78:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "78:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "78:2:5"
																		},
																		"nativeSrc": "78:89:5",
																		"nodeType": "YulFunctionCall",
																		"src": "78:89:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "71:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "71:6:5"
																},
																"nativeSrc": "71:97:5",
																"nodeType": "YulFunctionCall",
																"src": "71:97:5"
															},
															"nativeSrc": "68:117:5",
															"nodeType": "YulIf",
															"src": "68:117:5"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nativeSrc": "14:177:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "47:5:5",
														"nodeType": "YulTypedName",
														"src": "47:5:5",
														"type": ""
													}
												],
												"src": "14:177:5"
											},
											{
												"body": {
													"nativeSrc": "265:176:5",
													"nodeType": "YulBlock",
													"src": "265:176:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "311:16:5",
																"nodeType": "YulBlock",
																"src": "311:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "320:1:5",
																					"nodeType": "YulLiteral",
																					"src": "320:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "323:1:5",
																					"nodeType": "YulLiteral",
																					"src": "323:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "313:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "313:6:5"
																			},
																			"nativeSrc": "313:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "313:12:5"
																		},
																		"nativeSrc": "313:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "313:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "286:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "286:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "295:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "295:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "282:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "282:3:5"
																		},
																		"nativeSrc": "282:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "282:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "307:2:5",
																		"nodeType": "YulLiteral",
																		"src": "307:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "278:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "278:3:5"
																},
																"nativeSrc": "278:32:5",
																"nodeType": "YulFunctionCall",
																"src": "278:32:5"
															},
															"nativeSrc": "275:52:5",
															"nodeType": "YulIf",
															"src": "275:52:5"
														},
														{
															"nativeSrc": "336:36:5",
															"nodeType": "YulVariableDeclaration",
															"src": "336:36:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "362:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "362:9:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "349:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "349:12:5"
																},
																"nativeSrc": "349:23:5",
																"nodeType": "YulFunctionCall",
																"src": "349:23:5"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "340:5:5",
																	"nodeType": "YulTypedName",
																	"src": "340:5:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "405:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "405:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nativeSrc": "381:23:5",
																	"nodeType": "YulIdentifier",
																	"src": "381:23:5"
																},
																"nativeSrc": "381:30:5",
																"nodeType": "YulFunctionCall",
																"src": "381:30:5"
															},
															"nativeSrc": "381:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "381:30:5"
														},
														{
															"nativeSrc": "420:15:5",
															"nodeType": "YulAssignment",
															"src": "420:15:5",
															"value": {
																"name": "value",
																"nativeSrc": "430:5:5",
																"nodeType": "YulIdentifier",
																"src": "430:5:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "420:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "420:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "196:245:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "231:9:5",
														"nodeType": "YulTypedName",
														"src": "231:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "242:7:5",
														"nodeType": "YulTypedName",
														"src": "242:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "254:6:5",
														"nodeType": "YulTypedName",
														"src": "254:6:5",
														"type": ""
													}
												],
												"src": "196:245:5"
											},
											{
												"body": {
													"nativeSrc": "541:92:5",
													"nodeType": "YulBlock",
													"src": "541:92:5",
													"statements": [
														{
															"nativeSrc": "551:26:5",
															"nodeType": "YulAssignment",
															"src": "551:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "563:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "563:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "574:2:5",
																		"nodeType": "YulLiteral",
																		"src": "574:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "559:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "559:3:5"
																},
																"nativeSrc": "559:18:5",
																"nodeType": "YulFunctionCall",
																"src": "559:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "551:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "551:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "593:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "593:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "618:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "618:6:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "611:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "611:6:5"
																				},
																				"nativeSrc": "611:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "611:14:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "604:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "604:6:5"
																		},
																		"nativeSrc": "604:22:5",
																		"nodeType": "YulFunctionCall",
																		"src": "604:22:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "586:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "586:6:5"
																},
																"nativeSrc": "586:41:5",
																"nodeType": "YulFunctionCall",
																"src": "586:41:5"
															},
															"nativeSrc": "586:41:5",
															"nodeType": "YulExpressionStatement",
															"src": "586:41:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "446:187:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "510:9:5",
														"nodeType": "YulTypedName",
														"src": "510:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "521:6:5",
														"nodeType": "YulTypedName",
														"src": "521:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "532:4:5",
														"nodeType": "YulTypedName",
														"src": "532:4:5",
														"type": ""
													}
												],
												"src": "446:187:5"
											},
											{
												"body": {
													"nativeSrc": "704:184:5",
													"nodeType": "YulBlock",
													"src": "704:184:5",
													"statements": [
														{
															"nativeSrc": "714:10:5",
															"nodeType": "YulVariableDeclaration",
															"src": "714:10:5",
															"value": {
																"kind": "number",
																"nativeSrc": "723:1:5",
																"nodeType": "YulLiteral",
																"src": "723:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "718:1:5",
																	"nodeType": "YulTypedName",
																	"src": "718:1:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "783:63:5",
																"nodeType": "YulBlock",
																"src": "783:63:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "808:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "808:3:5"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "813:1:5",
																							"nodeType": "YulIdentifier",
																							"src": "813:1:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "804:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "804:3:5"
																					},
																					"nativeSrc": "804:11:5",
																					"nodeType": "YulFunctionCall",
																					"src": "804:11:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "827:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "827:3:5"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "832:1:5",
																									"nodeType": "YulIdentifier",
																									"src": "832:1:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "823:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "823:3:5"
																							},
																							"nativeSrc": "823:11:5",
																							"nodeType": "YulFunctionCall",
																							"src": "823:11:5"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "817:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "817:5:5"
																					},
																					"nativeSrc": "817:18:5",
																					"nodeType": "YulFunctionCall",
																					"src": "817:18:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "797:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "797:6:5"
																			},
																			"nativeSrc": "797:39:5",
																			"nodeType": "YulFunctionCall",
																			"src": "797:39:5"
																		},
																		"nativeSrc": "797:39:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "797:39:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "744:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "744:1:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "747:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "747:6:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "741:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "741:2:5"
																},
																"nativeSrc": "741:13:5",
																"nodeType": "YulFunctionCall",
																"src": "741:13:5"
															},
															"nativeSrc": "733:113:5",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "755:19:5",
																"nodeType": "YulBlock",
																"src": "755:19:5",
																"statements": [
																	{
																		"nativeSrc": "757:15:5",
																		"nodeType": "YulAssignment",
																		"src": "757:15:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "766:1:5",
																					"nodeType": "YulIdentifier",
																					"src": "766:1:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "769:2:5",
																					"nodeType": "YulLiteral",
																					"src": "769:2:5",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "762:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "762:3:5"
																			},
																			"nativeSrc": "762:10:5",
																			"nodeType": "YulFunctionCall",
																			"src": "762:10:5"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "757:1:5",
																				"nodeType": "YulIdentifier",
																				"src": "757:1:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "737:3:5",
																"nodeType": "YulBlock",
																"src": "737:3:5",
																"statements": []
															},
															"src": "733:113:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "866:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "866:3:5"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "871:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "871:6:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "862:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "862:3:5"
																		},
																		"nativeSrc": "862:16:5",
																		"nodeType": "YulFunctionCall",
																		"src": "862:16:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "880:1:5",
																		"nodeType": "YulLiteral",
																		"src": "880:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "855:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "855:6:5"
																},
																"nativeSrc": "855:27:5",
																"nodeType": "YulFunctionCall",
																"src": "855:27:5"
															},
															"nativeSrc": "855:27:5",
															"nodeType": "YulExpressionStatement",
															"src": "855:27:5"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "638:250:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "682:3:5",
														"nodeType": "YulTypedName",
														"src": "682:3:5",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "687:3:5",
														"nodeType": "YulTypedName",
														"src": "687:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "692:6:5",
														"nodeType": "YulTypedName",
														"src": "692:6:5",
														"type": ""
													}
												],
												"src": "638:250:5"
											},
											{
												"body": {
													"nativeSrc": "943:280:5",
													"nodeType": "YulBlock",
													"src": "943:280:5",
													"statements": [
														{
															"nativeSrc": "953:26:5",
															"nodeType": "YulVariableDeclaration",
															"src": "953:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "973:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "973:5:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "967:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "967:5:5"
																},
																"nativeSrc": "967:12:5",
																"nodeType": "YulFunctionCall",
																"src": "967:12:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "957:6:5",
																	"nodeType": "YulTypedName",
																	"src": "957:6:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "995:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "995:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1000:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1000:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "988:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "988:6:5"
																},
																"nativeSrc": "988:19:5",
																"nodeType": "YulFunctionCall",
																"src": "988:19:5"
															},
															"nativeSrc": "988:19:5",
															"nodeType": "YulExpressionStatement",
															"src": "988:19:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1055:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "1055:5:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1062:4:5",
																				"nodeType": "YulLiteral",
																				"src": "1062:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1051:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1051:3:5"
																		},
																		"nativeSrc": "1051:16:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1051:16:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "1073:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "1073:3:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1078:4:5",
																				"nodeType": "YulLiteral",
																				"src": "1078:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1069:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1069:3:5"
																		},
																		"nativeSrc": "1069:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1069:14:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1085:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1085:6:5"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "1016:34:5",
																	"nodeType": "YulIdentifier",
																	"src": "1016:34:5"
																},
																"nativeSrc": "1016:76:5",
																"nodeType": "YulFunctionCall",
																"src": "1016:76:5"
															},
															"nativeSrc": "1016:76:5",
															"nodeType": "YulExpressionStatement",
															"src": "1016:76:5"
														},
														{
															"nativeSrc": "1101:116:5",
															"nodeType": "YulAssignment",
															"src": "1101:116:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "1116:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "1116:3:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "1129:6:5",
																								"nodeType": "YulIdentifier",
																								"src": "1129:6:5"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1137:2:5",
																								"nodeType": "YulLiteral",
																								"src": "1137:2:5",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "1125:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "1125:3:5"
																						},
																						"nativeSrc": "1125:15:5",
																						"nodeType": "YulFunctionCall",
																						"src": "1125:15:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1142:66:5",
																						"nodeType": "YulLiteral",
																						"src": "1142:66:5",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "1121:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:5"
																				},
																				"nativeSrc": "1121:88:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1121:88:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1112:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1112:3:5"
																		},
																		"nativeSrc": "1112:98:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1112:98:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1212:4:5",
																		"nodeType": "YulLiteral",
																		"src": "1212:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1108:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1108:3:5"
																},
																"nativeSrc": "1108:109:5",
																"nodeType": "YulFunctionCall",
																"src": "1108:109:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1101:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1101:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nativeSrc": "893:330:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "920:5:5",
														"nodeType": "YulTypedName",
														"src": "920:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "927:3:5",
														"nodeType": "YulTypedName",
														"src": "927:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "935:3:5",
														"nodeType": "YulTypedName",
														"src": "935:3:5",
														"type": ""
													}
												],
												"src": "893:330:5"
											},
											{
												"body": {
													"nativeSrc": "1349:99:5",
													"nodeType": "YulBlock",
													"src": "1349:99:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1366:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1366:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1377:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1377:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1359:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1359:6:5"
																},
																"nativeSrc": "1359:21:5",
																"nodeType": "YulFunctionCall",
																"src": "1359:21:5"
															},
															"nativeSrc": "1359:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "1359:21:5"
														},
														{
															"nativeSrc": "1389:53:5",
															"nodeType": "YulAssignment",
															"src": "1389:53:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1415:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1415:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1427:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1427:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1438:2:5",
																				"nodeType": "YulLiteral",
																				"src": "1438:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1423:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1423:3:5"
																		},
																		"nativeSrc": "1423:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1423:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "1397:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "1397:17:5"
																},
																"nativeSrc": "1397:45:5",
																"nodeType": "YulFunctionCall",
																"src": "1397:45:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1389:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1389:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1228:220:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1318:9:5",
														"nodeType": "YulTypedName",
														"src": "1318:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1329:6:5",
														"nodeType": "YulTypedName",
														"src": "1329:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1340:4:5",
														"nodeType": "YulTypedName",
														"src": "1340:4:5",
														"type": ""
													}
												],
												"src": "1228:220:5"
											},
											{
												"body": {
													"nativeSrc": "1523:156:5",
													"nodeType": "YulBlock",
													"src": "1523:156:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1569:16:5",
																"nodeType": "YulBlock",
																"src": "1569:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1578:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1578:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1581:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1581:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1571:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1571:6:5"
																			},
																			"nativeSrc": "1571:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1571:12:5"
																		},
																		"nativeSrc": "1571:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1571:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1544:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1544:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1553:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1553:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1540:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1540:3:5"
																		},
																		"nativeSrc": "1540:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1540:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1565:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1565:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1536:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1536:3:5"
																},
																"nativeSrc": "1536:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1536:32:5"
															},
															"nativeSrc": "1533:52:5",
															"nodeType": "YulIf",
															"src": "1533:52:5"
														},
														{
															"nativeSrc": "1594:14:5",
															"nodeType": "YulVariableDeclaration",
															"src": "1594:14:5",
															"value": {
																"kind": "number",
																"nativeSrc": "1607:1:5",
																"nodeType": "YulLiteral",
																"src": "1607:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1598:5:5",
																	"nodeType": "YulTypedName",
																	"src": "1598:5:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1617:32:5",
															"nodeType": "YulAssignment",
															"src": "1617:32:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1639:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1639:9:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1626:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "1626:12:5"
																},
																"nativeSrc": "1626:23:5",
																"nodeType": "YulFunctionCall",
																"src": "1626:23:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1617:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1617:5:5"
																}
															]
														},
														{
															"nativeSrc": "1658:15:5",
															"nodeType": "YulAssignment",
															"src": "1658:15:5",
															"value": {
																"name": "value",
																"nativeSrc": "1668:5:5",
																"nodeType": "YulIdentifier",
																"src": "1668:5:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1658:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1658:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1453:226:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1489:9:5",
														"nodeType": "YulTypedName",
														"src": "1489:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1500:7:5",
														"nodeType": "YulTypedName",
														"src": "1500:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1512:6:5",
														"nodeType": "YulTypedName",
														"src": "1512:6:5",
														"type": ""
													}
												],
												"src": "1453:226:5"
											},
											{
												"body": {
													"nativeSrc": "1785:125:5",
													"nodeType": "YulBlock",
													"src": "1785:125:5",
													"statements": [
														{
															"nativeSrc": "1795:26:5",
															"nodeType": "YulAssignment",
															"src": "1795:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1807:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1807:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1818:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1818:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1803:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1803:3:5"
																},
																"nativeSrc": "1803:18:5",
																"nodeType": "YulFunctionCall",
																"src": "1803:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1795:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1795:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1837:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1837:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1852:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1852:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1860:42:5",
																				"nodeType": "YulLiteral",
																				"src": "1860:42:5",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1848:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1848:3:5"
																		},
																		"nativeSrc": "1848:55:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1848:55:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1830:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1830:6:5"
																},
																"nativeSrc": "1830:74:5",
																"nodeType": "YulFunctionCall",
																"src": "1830:74:5"
															},
															"nativeSrc": "1830:74:5",
															"nodeType": "YulExpressionStatement",
															"src": "1830:74:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1684:226:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1754:9:5",
														"nodeType": "YulTypedName",
														"src": "1754:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1765:6:5",
														"nodeType": "YulTypedName",
														"src": "1765:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1776:4:5",
														"nodeType": "YulTypedName",
														"src": "1776:4:5",
														"type": ""
													}
												],
												"src": "1684:226:5"
											},
											{
												"body": {
													"nativeSrc": "1964:147:5",
													"nodeType": "YulBlock",
													"src": "1964:147:5",
													"statements": [
														{
															"nativeSrc": "1974:29:5",
															"nodeType": "YulAssignment",
															"src": "1974:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1996:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1996:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1983:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "1983:12:5"
																},
																"nativeSrc": "1983:20:5",
																"nodeType": "YulFunctionCall",
																"src": "1983:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1974:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1974:5:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2089:16:5",
																"nodeType": "YulBlock",
																"src": "2089:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2098:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2098:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2101:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2101:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2091:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2091:6:5"
																			},
																			"nativeSrc": "2091:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2091:12:5"
																		},
																		"nativeSrc": "2091:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2091:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2025:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "2025:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2036:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "2036:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2043:42:5",
																						"nodeType": "YulLiteral",
																						"src": "2043:42:5",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "2032:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "2032:3:5"
																				},
																				"nativeSrc": "2032:54:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2032:54:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2022:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "2022:2:5"
																		},
																		"nativeSrc": "2022:65:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2022:65:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2015:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2015:6:5"
																},
																"nativeSrc": "2015:73:5",
																"nodeType": "YulFunctionCall",
																"src": "2015:73:5"
															},
															"nativeSrc": "2012:93:5",
															"nodeType": "YulIf",
															"src": "2012:93:5"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "1915:196:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1943:6:5",
														"nodeType": "YulTypedName",
														"src": "1943:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1954:5:5",
														"nodeType": "YulTypedName",
														"src": "1954:5:5",
														"type": ""
													}
												],
												"src": "1915:196:5"
											},
											{
												"body": {
													"nativeSrc": "2203:213:5",
													"nodeType": "YulBlock",
													"src": "2203:213:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2249:16:5",
																"nodeType": "YulBlock",
																"src": "2249:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2258:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2258:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2261:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2261:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2251:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2251:6:5"
																			},
																			"nativeSrc": "2251:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2251:12:5"
																		},
																		"nativeSrc": "2251:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2251:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2224:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2224:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2233:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2233:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2220:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2220:3:5"
																		},
																		"nativeSrc": "2220:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2220:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2245:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2245:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2216:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2216:3:5"
																},
																"nativeSrc": "2216:32:5",
																"nodeType": "YulFunctionCall",
																"src": "2216:32:5"
															},
															"nativeSrc": "2213:52:5",
															"nodeType": "YulIf",
															"src": "2213:52:5"
														},
														{
															"nativeSrc": "2274:39:5",
															"nodeType": "YulAssignment",
															"src": "2274:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2303:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2303:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2284:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "2284:18:5"
																},
																"nativeSrc": "2284:29:5",
																"nodeType": "YulFunctionCall",
																"src": "2284:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2274:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2274:6:5"
																}
															]
														},
														{
															"nativeSrc": "2322:14:5",
															"nodeType": "YulVariableDeclaration",
															"src": "2322:14:5",
															"value": {
																"kind": "number",
																"nativeSrc": "2335:1:5",
																"nodeType": "YulLiteral",
																"src": "2335:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2326:5:5",
																	"nodeType": "YulTypedName",
																	"src": "2326:5:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2345:41:5",
															"nodeType": "YulAssignment",
															"src": "2345:41:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2371:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2371:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2382:2:5",
																				"nodeType": "YulLiteral",
																				"src": "2382:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2367:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2367:3:5"
																		},
																		"nativeSrc": "2367:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2367:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2354:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "2354:12:5"
																},
																"nativeSrc": "2354:32:5",
																"nodeType": "YulFunctionCall",
																"src": "2354:32:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2345:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "2345:5:5"
																}
															]
														},
														{
															"nativeSrc": "2395:15:5",
															"nodeType": "YulAssignment",
															"src": "2395:15:5",
															"value": {
																"name": "value",
																"nativeSrc": "2405:5:5",
																"nodeType": "YulIdentifier",
																"src": "2405:5:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2395:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2395:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2116:300:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2161:9:5",
														"nodeType": "YulTypedName",
														"src": "2161:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2172:7:5",
														"nodeType": "YulTypedName",
														"src": "2172:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2184:6:5",
														"nodeType": "YulTypedName",
														"src": "2184:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2192:6:5",
														"nodeType": "YulTypedName",
														"src": "2192:6:5",
														"type": ""
													}
												],
												"src": "2116:300:5"
											},
											{
												"body": {
													"nativeSrc": "2522:76:5",
													"nodeType": "YulBlock",
													"src": "2522:76:5",
													"statements": [
														{
															"nativeSrc": "2532:26:5",
															"nodeType": "YulAssignment",
															"src": "2532:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2544:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2544:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2555:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2555:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2540:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2540:3:5"
																},
																"nativeSrc": "2540:18:5",
																"nodeType": "YulFunctionCall",
																"src": "2540:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2532:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "2532:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2574:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2574:9:5"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "2585:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2585:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2567:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2567:6:5"
																},
																"nativeSrc": "2567:25:5",
																"nodeType": "YulFunctionCall",
																"src": "2567:25:5"
															},
															"nativeSrc": "2567:25:5",
															"nodeType": "YulExpressionStatement",
															"src": "2567:25:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "2421:177:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2491:9:5",
														"nodeType": "YulTypedName",
														"src": "2491:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2502:6:5",
														"nodeType": "YulTypedName",
														"src": "2502:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2513:4:5",
														"nodeType": "YulTypedName",
														"src": "2513:4:5",
														"type": ""
													}
												],
												"src": "2421:177:5"
											},
											{
												"body": {
													"nativeSrc": "2707:270:5",
													"nodeType": "YulBlock",
													"src": "2707:270:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2753:16:5",
																"nodeType": "YulBlock",
																"src": "2753:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2762:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2762:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2765:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2765:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2755:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2755:6:5"
																			},
																			"nativeSrc": "2755:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2755:12:5"
																		},
																		"nativeSrc": "2755:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2755:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2728:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2728:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2737:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2737:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2724:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2724:3:5"
																		},
																		"nativeSrc": "2724:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2724:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2749:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2749:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2720:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2720:3:5"
																},
																"nativeSrc": "2720:32:5",
																"nodeType": "YulFunctionCall",
																"src": "2720:32:5"
															},
															"nativeSrc": "2717:52:5",
															"nodeType": "YulIf",
															"src": "2717:52:5"
														},
														{
															"nativeSrc": "2778:39:5",
															"nodeType": "YulAssignment",
															"src": "2778:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2807:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2807:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2788:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "2788:18:5"
																},
																"nativeSrc": "2788:29:5",
																"nodeType": "YulFunctionCall",
																"src": "2788:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2778:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2778:6:5"
																}
															]
														},
														{
															"nativeSrc": "2826:48:5",
															"nodeType": "YulAssignment",
															"src": "2826:48:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2859:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2859:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2870:2:5",
																				"nodeType": "YulLiteral",
																				"src": "2870:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2855:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2855:3:5"
																		},
																		"nativeSrc": "2855:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2855:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2836:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "2836:18:5"
																},
																"nativeSrc": "2836:38:5",
																"nodeType": "YulFunctionCall",
																"src": "2836:38:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2826:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2826:6:5"
																}
															]
														},
														{
															"nativeSrc": "2883:14:5",
															"nodeType": "YulVariableDeclaration",
															"src": "2883:14:5",
															"value": {
																"kind": "number",
																"nativeSrc": "2896:1:5",
																"nodeType": "YulLiteral",
																"src": "2896:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2887:5:5",
																	"nodeType": "YulTypedName",
																	"src": "2887:5:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2906:41:5",
															"nodeType": "YulAssignment",
															"src": "2906:41:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2932:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2932:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2943:2:5",
																				"nodeType": "YulLiteral",
																				"src": "2943:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2928:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2928:3:5"
																		},
																		"nativeSrc": "2928:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2928:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2915:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "2915:12:5"
																},
																"nativeSrc": "2915:32:5",
																"nodeType": "YulFunctionCall",
																"src": "2915:32:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2906:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "2906:5:5"
																}
															]
														},
														{
															"nativeSrc": "2956:15:5",
															"nodeType": "YulAssignment",
															"src": "2956:15:5",
															"value": {
																"name": "value",
																"nativeSrc": "2966:5:5",
																"nodeType": "YulIdentifier",
																"src": "2966:5:5"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "2956:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2956:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "2603:374:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2657:9:5",
														"nodeType": "YulTypedName",
														"src": "2657:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2668:7:5",
														"nodeType": "YulTypedName",
														"src": "2668:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2680:6:5",
														"nodeType": "YulTypedName",
														"src": "2680:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2688:6:5",
														"nodeType": "YulTypedName",
														"src": "2688:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2696:6:5",
														"nodeType": "YulTypedName",
														"src": "2696:6:5",
														"type": ""
													}
												],
												"src": "2603:374:5"
											},
											{
												"body": {
													"nativeSrc": "3052:116:5",
													"nodeType": "YulBlock",
													"src": "3052:116:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "3098:16:5",
																"nodeType": "YulBlock",
																"src": "3098:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3107:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3107:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3110:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3110:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3100:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "3100:6:5"
																			},
																			"nativeSrc": "3100:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3100:12:5"
																		},
																		"nativeSrc": "3100:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "3100:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3073:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "3073:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3082:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3082:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3069:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3069:3:5"
																		},
																		"nativeSrc": "3069:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3069:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3094:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3094:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3065:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3065:3:5"
																},
																"nativeSrc": "3065:32:5",
																"nodeType": "YulFunctionCall",
																"src": "3065:32:5"
															},
															"nativeSrc": "3062:52:5",
															"nodeType": "YulIf",
															"src": "3062:52:5"
														},
														{
															"nativeSrc": "3123:39:5",
															"nodeType": "YulAssignment",
															"src": "3123:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3152:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3152:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3133:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "3133:18:5"
																},
																"nativeSrc": "3133:29:5",
																"nodeType": "YulFunctionCall",
																"src": "3133:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3123:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3123:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2982:186:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3018:9:5",
														"nodeType": "YulTypedName",
														"src": "3018:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3029:7:5",
														"nodeType": "YulTypedName",
														"src": "3029:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3041:6:5",
														"nodeType": "YulTypedName",
														"src": "3041:6:5",
														"type": ""
													}
												],
												"src": "2982:186:5"
											},
											{
												"body": {
													"nativeSrc": "3257:263:5",
													"nodeType": "YulBlock",
													"src": "3257:263:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "3303:16:5",
																"nodeType": "YulBlock",
																"src": "3303:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3312:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3312:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3315:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3315:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3305:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "3305:6:5"
																			},
																			"nativeSrc": "3305:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3305:12:5"
																		},
																		"nativeSrc": "3305:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "3305:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3278:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "3278:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3287:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3287:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3274:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3274:3:5"
																		},
																		"nativeSrc": "3274:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3274:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3299:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3299:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3270:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3270:3:5"
																},
																"nativeSrc": "3270:32:5",
																"nodeType": "YulFunctionCall",
																"src": "3270:32:5"
															},
															"nativeSrc": "3267:52:5",
															"nodeType": "YulIf",
															"src": "3267:52:5"
														},
														{
															"nativeSrc": "3328:39:5",
															"nodeType": "YulAssignment",
															"src": "3328:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3357:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3357:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3338:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "3338:18:5"
																},
																"nativeSrc": "3338:29:5",
																"nodeType": "YulFunctionCall",
																"src": "3338:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3328:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3328:6:5"
																}
															]
														},
														{
															"nativeSrc": "3376:45:5",
															"nodeType": "YulVariableDeclaration",
															"src": "3376:45:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3406:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3406:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3417:2:5",
																				"nodeType": "YulLiteral",
																				"src": "3417:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3402:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3402:3:5"
																		},
																		"nativeSrc": "3402:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3402:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3389:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "3389:12:5"
																},
																"nativeSrc": "3389:32:5",
																"nodeType": "YulFunctionCall",
																"src": "3389:32:5"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "3380:5:5",
																	"nodeType": "YulTypedName",
																	"src": "3380:5:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3474:16:5",
																"nodeType": "YulBlock",
																"src": "3474:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3483:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3483:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3486:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3486:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3476:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "3476:6:5"
																			},
																			"nativeSrc": "3476:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3476:12:5"
																		},
																		"nativeSrc": "3476:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "3476:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3443:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "3443:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "3464:5:5",
																								"nodeType": "YulIdentifier",
																								"src": "3464:5:5"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "3457:6:5",
																							"nodeType": "YulIdentifier",
																							"src": "3457:6:5"
																						},
																						"nativeSrc": "3457:13:5",
																						"nodeType": "YulFunctionCall",
																						"src": "3457:13:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "3450:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "3450:6:5"
																				},
																				"nativeSrc": "3450:21:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3450:21:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3440:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "3440:2:5"
																		},
																		"nativeSrc": "3440:32:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3440:32:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3433:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3433:6:5"
																},
																"nativeSrc": "3433:40:5",
																"nodeType": "YulFunctionCall",
																"src": "3433:40:5"
															},
															"nativeSrc": "3430:60:5",
															"nodeType": "YulIf",
															"src": "3430:60:5"
														},
														{
															"nativeSrc": "3499:15:5",
															"nodeType": "YulAssignment",
															"src": "3499:15:5",
															"value": {
																"name": "value",
																"nativeSrc": "3509:5:5",
																"nodeType": "YulIdentifier",
																"src": "3509:5:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3499:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3499:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "3173:347:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3215:9:5",
														"nodeType": "YulTypedName",
														"src": "3215:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3226:7:5",
														"nodeType": "YulTypedName",
														"src": "3226:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3238:6:5",
														"nodeType": "YulTypedName",
														"src": "3238:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3246:6:5",
														"nodeType": "YulTypedName",
														"src": "3246:6:5",
														"type": ""
													}
												],
												"src": "3173:347:5"
											},
											{
												"body": {
													"nativeSrc": "3557:152:5",
													"nodeType": "YulBlock",
													"src": "3557:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3574:1:5",
																		"nodeType": "YulLiteral",
																		"src": "3574:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3577:77:5",
																		"nodeType": "YulLiteral",
																		"src": "3577:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3567:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3567:6:5"
																},
																"nativeSrc": "3567:88:5",
																"nodeType": "YulFunctionCall",
																"src": "3567:88:5"
															},
															"nativeSrc": "3567:88:5",
															"nodeType": "YulExpressionStatement",
															"src": "3567:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3671:1:5",
																		"nodeType": "YulLiteral",
																		"src": "3671:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3674:4:5",
																		"nodeType": "YulLiteral",
																		"src": "3674:4:5",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3664:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3664:6:5"
																},
																"nativeSrc": "3664:15:5",
																"nodeType": "YulFunctionCall",
																"src": "3664:15:5"
															},
															"nativeSrc": "3664:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "3664:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3695:1:5",
																		"nodeType": "YulLiteral",
																		"src": "3695:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3698:4:5",
																		"nodeType": "YulLiteral",
																		"src": "3698:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3688:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3688:6:5"
																},
																"nativeSrc": "3688:15:5",
																"nodeType": "YulFunctionCall",
																"src": "3688:15:5"
															},
															"nativeSrc": "3688:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "3688:15:5"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "3525:184:5",
												"nodeType": "YulFunctionDefinition",
												"src": "3525:184:5"
											},
											{
												"body": {
													"nativeSrc": "3844:1195:5",
													"nodeType": "YulBlock",
													"src": "3844:1195:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "3891:16:5",
																"nodeType": "YulBlock",
																"src": "3891:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3900:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3900:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3903:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3903:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3893:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "3893:6:5"
																			},
																			"nativeSrc": "3893:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3893:12:5"
																		},
																		"nativeSrc": "3893:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "3893:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3865:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "3865:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3874:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3874:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3861:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3861:3:5"
																		},
																		"nativeSrc": "3861:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3861:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3886:3:5",
																		"nodeType": "YulLiteral",
																		"src": "3886:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3857:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3857:3:5"
																},
																"nativeSrc": "3857:33:5",
																"nodeType": "YulFunctionCall",
																"src": "3857:33:5"
															},
															"nativeSrc": "3854:53:5",
															"nodeType": "YulIf",
															"src": "3854:53:5"
														},
														{
															"nativeSrc": "3916:39:5",
															"nodeType": "YulAssignment",
															"src": "3916:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3945:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3945:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3926:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "3926:18:5"
																},
																"nativeSrc": "3926:29:5",
																"nodeType": "YulFunctionCall",
																"src": "3926:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3916:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3916:6:5"
																}
															]
														},
														{
															"nativeSrc": "3964:48:5",
															"nodeType": "YulAssignment",
															"src": "3964:48:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3997:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3997:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4008:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4008:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3993:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3993:3:5"
																		},
																		"nativeSrc": "3993:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3993:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3974:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "3974:18:5"
																},
																"nativeSrc": "3974:38:5",
																"nodeType": "YulFunctionCall",
																"src": "3974:38:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3964:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3964:6:5"
																}
															]
														},
														{
															"nativeSrc": "4021:14:5",
															"nodeType": "YulVariableDeclaration",
															"src": "4021:14:5",
															"value": {
																"kind": "number",
																"nativeSrc": "4034:1:5",
																"nodeType": "YulLiteral",
																"src": "4034:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "4025:5:5",
																	"nodeType": "YulTypedName",
																	"src": "4025:5:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4044:41:5",
															"nodeType": "YulAssignment",
															"src": "4044:41:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4070:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4070:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4081:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4081:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4066:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4066:3:5"
																		},
																		"nativeSrc": "4066:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4066:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4053:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "4053:12:5"
																},
																"nativeSrc": "4053:32:5",
																"nodeType": "YulFunctionCall",
																"src": "4053:32:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4044:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "4044:5:5"
																}
															]
														},
														{
															"nativeSrc": "4094:15:5",
															"nodeType": "YulAssignment",
															"src": "4094:15:5",
															"value": {
																"name": "value",
																"nativeSrc": "4104:5:5",
																"nodeType": "YulIdentifier",
																"src": "4104:5:5"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "4094:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4094:6:5"
																}
															]
														},
														{
															"nativeSrc": "4118:46:5",
															"nodeType": "YulVariableDeclaration",
															"src": "4118:46:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4149:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4149:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4160:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4160:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4145:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4145:3:5"
																		},
																		"nativeSrc": "4145:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4145:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4132:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "4132:12:5"
																},
																"nativeSrc": "4132:32:5",
																"nodeType": "YulFunctionCall",
																"src": "4132:32:5"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "4122:6:5",
																	"nodeType": "YulTypedName",
																	"src": "4122:6:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4207:16:5",
																"nodeType": "YulBlock",
																"src": "4207:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4216:1:5",
																					"nodeType": "YulLiteral",
																					"src": "4216:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4219:1:5",
																					"nodeType": "YulLiteral",
																					"src": "4219:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4209:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "4209:6:5"
																			},
																			"nativeSrc": "4209:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "4209:12:5"
																		},
																		"nativeSrc": "4209:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "4209:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4179:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "4179:6:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4187:18:5",
																		"nodeType": "YulLiteral",
																		"src": "4187:18:5",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4176:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "4176:2:5"
																},
																"nativeSrc": "4176:30:5",
																"nodeType": "YulFunctionCall",
																"src": "4176:30:5"
															},
															"nativeSrc": "4173:50:5",
															"nodeType": "YulIf",
															"src": "4173:50:5"
														},
														{
															"nativeSrc": "4232:32:5",
															"nodeType": "YulVariableDeclaration",
															"src": "4232:32:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4246:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4246:9:5"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "4257:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "4257:6:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4242:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4242:3:5"
																},
																"nativeSrc": "4242:22:5",
																"nodeType": "YulFunctionCall",
																"src": "4242:22:5"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "4236:2:5",
																	"nodeType": "YulTypedName",
																	"src": "4236:2:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4312:16:5",
																"nodeType": "YulBlock",
																"src": "4312:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4321:1:5",
																					"nodeType": "YulLiteral",
																					"src": "4321:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4324:1:5",
																					"nodeType": "YulLiteral",
																					"src": "4324:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4314:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "4314:6:5"
																			},
																			"nativeSrc": "4314:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "4314:12:5"
																		},
																		"nativeSrc": "4314:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "4314:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "4291:2:5",
																						"nodeType": "YulIdentifier",
																						"src": "4291:2:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4295:4:5",
																						"nodeType": "YulLiteral",
																						"src": "4295:4:5",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4287:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4287:3:5"
																				},
																				"nativeSrc": "4287:13:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4287:13:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4302:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "4302:7:5"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "4283:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4283:3:5"
																		},
																		"nativeSrc": "4283:27:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4283:27:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4276:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4276:6:5"
																},
																"nativeSrc": "4276:35:5",
																"nodeType": "YulFunctionCall",
																"src": "4276:35:5"
															},
															"nativeSrc": "4273:55:5",
															"nodeType": "YulIf",
															"src": "4273:55:5"
														},
														{
															"nativeSrc": "4337:30:5",
															"nodeType": "YulVariableDeclaration",
															"src": "4337:30:5",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "4364:2:5",
																		"nodeType": "YulIdentifier",
																		"src": "4364:2:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4351:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "4351:12:5"
																},
																"nativeSrc": "4351:16:5",
																"nodeType": "YulFunctionCall",
																"src": "4351:16:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "4341:6:5",
																	"nodeType": "YulTypedName",
																	"src": "4341:6:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4410:22:5",
																"nodeType": "YulBlock",
																"src": "4410:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4412:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "4412:16:5"
																			},
																			"nativeSrc": "4412:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "4412:18:5"
																		},
																		"nativeSrc": "4412:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "4412:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "4382:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "4382:6:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4390:18:5",
																		"nodeType": "YulLiteral",
																		"src": "4390:18:5",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4379:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "4379:2:5"
																},
																"nativeSrc": "4379:30:5",
																"nodeType": "YulFunctionCall",
																"src": "4379:30:5"
															},
															"nativeSrc": "4376:56:5",
															"nodeType": "YulIf",
															"src": "4376:56:5"
														},
														{
															"nativeSrc": "4441:23:5",
															"nodeType": "YulVariableDeclaration",
															"src": "4441:23:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4461:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4461:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4455:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "4455:5:5"
																},
																"nativeSrc": "4455:9:5",
																"nodeType": "YulFunctionCall",
																"src": "4455:9:5"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "4445:6:5",
																	"nodeType": "YulTypedName",
																	"src": "4445:6:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4473:203:5",
															"nodeType": "YulVariableDeclaration",
															"src": "4473:203:5",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "4495:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "4495:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "length",
																										"nativeSrc": "4519:6:5",
																										"nodeType": "YulIdentifier",
																										"src": "4519:6:5"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4527:4:5",
																										"nodeType": "YulLiteral",
																										"src": "4527:4:5",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4515:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "4515:3:5"
																								},
																								"nativeSrc": "4515:17:5",
																								"nodeType": "YulFunctionCall",
																								"src": "4515:17:5"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4534:66:5",
																								"nodeType": "YulLiteral",
																								"src": "4534:66:5",
																								"type": "",
																								"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "4511:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "4511:3:5"
																						},
																						"nativeSrc": "4511:90:5",
																						"nodeType": "YulFunctionCall",
																						"src": "4511:90:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4603:2:5",
																						"nodeType": "YulLiteral",
																						"src": "4603:2:5",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4507:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4507:3:5"
																				},
																				"nativeSrc": "4507:99:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4507:99:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4608:66:5",
																				"nodeType": "YulLiteral",
																				"src": "4608:66:5",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4503:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4503:3:5"
																		},
																		"nativeSrc": "4503:172:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4503:172:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4491:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4491:3:5"
																},
																"nativeSrc": "4491:185:5",
																"nodeType": "YulFunctionCall",
																"src": "4491:185:5"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "4477:10:5",
																	"nodeType": "YulTypedName",
																	"src": "4477:10:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4751:22:5",
																"nodeType": "YulBlock",
																"src": "4751:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4753:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "4753:16:5"
																			},
																			"nativeSrc": "4753:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "4753:18:5"
																		},
																		"nativeSrc": "4753:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "4753:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "4694:10:5",
																				"nodeType": "YulIdentifier",
																				"src": "4694:10:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4706:18:5",
																				"nodeType": "YulLiteral",
																				"src": "4706:18:5",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "4691:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "4691:2:5"
																		},
																		"nativeSrc": "4691:34:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4691:34:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "4730:10:5",
																				"nodeType": "YulIdentifier",
																				"src": "4730:10:5"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "4742:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "4742:6:5"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4727:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "4727:2:5"
																		},
																		"nativeSrc": "4727:22:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4727:22:5"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4688:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "4688:2:5"
																},
																"nativeSrc": "4688:62:5",
																"nodeType": "YulFunctionCall",
																"src": "4688:62:5"
															},
															"nativeSrc": "4685:88:5",
															"nodeType": "YulIf",
															"src": "4685:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4789:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4789:2:5",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "4793:10:5",
																		"nodeType": "YulIdentifier",
																		"src": "4793:10:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4782:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4782:6:5"
																},
																"nativeSrc": "4782:22:5",
																"nodeType": "YulFunctionCall",
																"src": "4782:22:5"
															},
															"nativeSrc": "4782:22:5",
															"nodeType": "YulExpressionStatement",
															"src": "4782:22:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "4820:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "4820:6:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4828:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "4828:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4813:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4813:6:5"
																},
																"nativeSrc": "4813:22:5",
																"nodeType": "YulFunctionCall",
																"src": "4813:22:5"
															},
															"nativeSrc": "4813:22:5",
															"nodeType": "YulExpressionStatement",
															"src": "4813:22:5"
														},
														{
															"body": {
																"nativeSrc": "4885:16:5",
																"nodeType": "YulBlock",
																"src": "4885:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4894:1:5",
																					"nodeType": "YulLiteral",
																					"src": "4894:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4897:1:5",
																					"nodeType": "YulLiteral",
																					"src": "4897:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4887:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "4887:6:5"
																			},
																			"nativeSrc": "4887:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "4887:12:5"
																		},
																		"nativeSrc": "4887:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "4887:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "4858:2:5",
																						"nodeType": "YulIdentifier",
																						"src": "4858:2:5"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "4862:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "4862:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4854:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4854:3:5"
																				},
																				"nativeSrc": "4854:15:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4854:15:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4871:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4871:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4850:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4850:3:5"
																		},
																		"nativeSrc": "4850:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4850:24:5"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "4876:7:5",
																		"nodeType": "YulIdentifier",
																		"src": "4876:7:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4847:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "4847:2:5"
																},
																"nativeSrc": "4847:37:5",
																"nodeType": "YulFunctionCall",
																"src": "4847:37:5"
															},
															"nativeSrc": "4844:57:5",
															"nodeType": "YulIf",
															"src": "4844:57:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4927:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "4927:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4935:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4935:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4923:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4923:3:5"
																		},
																		"nativeSrc": "4923:15:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4923:15:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "4944:2:5",
																				"nodeType": "YulIdentifier",
																				"src": "4944:2:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4948:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4948:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4940:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4940:3:5"
																		},
																		"nativeSrc": "4940:11:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4940:11:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4953:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "4953:6:5"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "4910:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "4910:12:5"
																},
																"nativeSrc": "4910:50:5",
																"nodeType": "YulFunctionCall",
																"src": "4910:50:5"
															},
															"nativeSrc": "4910:50:5",
															"nodeType": "YulExpressionStatement",
															"src": "4910:50:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "4984:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "4984:6:5"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "4992:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "4992:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4980:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4980:3:5"
																				},
																				"nativeSrc": "4980:19:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4980:19:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5001:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5001:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4976:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4976:3:5"
																		},
																		"nativeSrc": "4976:28:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4976:28:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5006:1:5",
																		"nodeType": "YulLiteral",
																		"src": "5006:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4969:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4969:6:5"
																},
																"nativeSrc": "4969:39:5",
																"nodeType": "YulFunctionCall",
																"src": "4969:39:5"
															},
															"nativeSrc": "4969:39:5",
															"nodeType": "YulExpressionStatement",
															"src": "4969:39:5"
														},
														{
															"nativeSrc": "5017:16:5",
															"nodeType": "YulAssignment",
															"src": "5017:16:5",
															"value": {
																"name": "memPtr",
																"nativeSrc": "5027:6:5",
																"nodeType": "YulIdentifier",
																"src": "5027:6:5"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "5017:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5017:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nativeSrc": "3714:1325:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3786:9:5",
														"nodeType": "YulTypedName",
														"src": "3786:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3797:7:5",
														"nodeType": "YulTypedName",
														"src": "3797:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3809:6:5",
														"nodeType": "YulTypedName",
														"src": "3809:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3817:6:5",
														"nodeType": "YulTypedName",
														"src": "3817:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3825:6:5",
														"nodeType": "YulTypedName",
														"src": "3825:6:5",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "3833:6:5",
														"nodeType": "YulTypedName",
														"src": "3833:6:5",
														"type": ""
													}
												],
												"src": "3714:1325:5"
											},
											{
												"body": {
													"nativeSrc": "5131:173:5",
													"nodeType": "YulBlock",
													"src": "5131:173:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "5177:16:5",
																"nodeType": "YulBlock",
																"src": "5177:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5186:1:5",
																					"nodeType": "YulLiteral",
																					"src": "5186:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5189:1:5",
																					"nodeType": "YulLiteral",
																					"src": "5189:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5179:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "5179:6:5"
																			},
																			"nativeSrc": "5179:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "5179:12:5"
																		},
																		"nativeSrc": "5179:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "5179:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5152:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "5152:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5161:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5161:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5148:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5148:3:5"
																		},
																		"nativeSrc": "5148:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5148:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5173:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5173:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5144:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5144:3:5"
																},
																"nativeSrc": "5144:32:5",
																"nodeType": "YulFunctionCall",
																"src": "5144:32:5"
															},
															"nativeSrc": "5141:52:5",
															"nodeType": "YulIf",
															"src": "5141:52:5"
														},
														{
															"nativeSrc": "5202:39:5",
															"nodeType": "YulAssignment",
															"src": "5202:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5231:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "5231:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "5212:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "5212:18:5"
																},
																"nativeSrc": "5212:29:5",
																"nodeType": "YulFunctionCall",
																"src": "5212:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "5202:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5202:6:5"
																}
															]
														},
														{
															"nativeSrc": "5250:48:5",
															"nodeType": "YulAssignment",
															"src": "5250:48:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5283:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5283:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5294:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5294:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5279:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5279:3:5"
																		},
																		"nativeSrc": "5279:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5279:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "5260:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "5260:18:5"
																},
																"nativeSrc": "5260:38:5",
																"nodeType": "YulFunctionCall",
																"src": "5260:38:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "5250:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5250:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "5044:260:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5089:9:5",
														"nodeType": "YulTypedName",
														"src": "5089:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5100:7:5",
														"nodeType": "YulTypedName",
														"src": "5100:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5112:6:5",
														"nodeType": "YulTypedName",
														"src": "5112:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5120:6:5",
														"nodeType": "YulTypedName",
														"src": "5120:6:5",
														"type": ""
													}
												],
												"src": "5044:260:5"
											},
											{
												"body": {
													"nativeSrc": "5474:378:5",
													"nodeType": "YulBlock",
													"src": "5474:378:5",
													"statements": [
														{
															"nativeSrc": "5484:27:5",
															"nodeType": "YulAssignment",
															"src": "5484:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5496:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "5496:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5507:3:5",
																		"nodeType": "YulLiteral",
																		"src": "5507:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5492:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5492:3:5"
																},
																"nativeSrc": "5492:19:5",
																"nodeType": "YulFunctionCall",
																"src": "5492:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5484:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "5484:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5527:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "5527:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "5548:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "5548:6:5"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nativeSrc": "5542:5:5",
																					"nodeType": "YulIdentifier",
																					"src": "5542:5:5"
																				},
																				"nativeSrc": "5542:13:5",
																				"nodeType": "YulFunctionCall",
																				"src": "5542:13:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5557:42:5",
																				"nodeType": "YulLiteral",
																				"src": "5557:42:5",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5538:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5538:3:5"
																		},
																		"nativeSrc": "5538:62:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5538:62:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5520:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5520:6:5"
																},
																"nativeSrc": "5520:81:5",
																"nodeType": "YulFunctionCall",
																"src": "5520:81:5"
															},
															"nativeSrc": "5520:81:5",
															"nodeType": "YulExpressionStatement",
															"src": "5520:81:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5621:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5621:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5632:4:5",
																				"nodeType": "YulLiteral",
																				"src": "5632:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5617:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5617:3:5"
																		},
																		"nativeSrc": "5617:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5617:20:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value0",
																								"nativeSrc": "5653:6:5",
																								"nodeType": "YulIdentifier",
																								"src": "5653:6:5"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "5661:4:5",
																								"nodeType": "YulLiteral",
																								"src": "5661:4:5",
																								"type": "",
																								"value": "0x20"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "5649:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "5649:3:5"
																						},
																						"nativeSrc": "5649:17:5",
																						"nodeType": "YulFunctionCall",
																						"src": "5649:17:5"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nativeSrc": "5643:5:5",
																					"nodeType": "YulIdentifier",
																					"src": "5643:5:5"
																				},
																				"nativeSrc": "5643:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "5643:24:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5669:18:5",
																				"nodeType": "YulLiteral",
																				"src": "5669:18:5",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5639:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5639:3:5"
																		},
																		"nativeSrc": "5639:49:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5639:49:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5610:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5610:6:5"
																},
																"nativeSrc": "5610:79:5",
																"nodeType": "YulFunctionCall",
																"src": "5610:79:5"
															},
															"nativeSrc": "5610:79:5",
															"nodeType": "YulExpressionStatement",
															"src": "5610:79:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5709:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5709:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5720:4:5",
																				"nodeType": "YulLiteral",
																				"src": "5720:4:5",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5705:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5705:3:5"
																		},
																		"nativeSrc": "5705:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5705:20:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "value0",
																										"nativeSrc": "5751:6:5",
																										"nodeType": "YulIdentifier",
																										"src": "5751:6:5"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5759:4:5",
																										"nodeType": "YulLiteral",
																										"src": "5759:4:5",
																										"type": "",
																										"value": "0x40"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5747:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "5747:3:5"
																								},
																								"nativeSrc": "5747:17:5",
																								"nodeType": "YulFunctionCall",
																								"src": "5747:17:5"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nativeSrc": "5741:5:5",
																							"nodeType": "YulIdentifier",
																							"src": "5741:5:5"
																						},
																						"nativeSrc": "5741:24:5",
																						"nodeType": "YulFunctionCall",
																						"src": "5741:24:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "5734:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "5734:6:5"
																				},
																				"nativeSrc": "5734:32:5",
																				"nodeType": "YulFunctionCall",
																				"src": "5734:32:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "5727:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "5727:6:5"
																		},
																		"nativeSrc": "5727:40:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5727:40:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5698:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5698:6:5"
																},
																"nativeSrc": "5698:70:5",
																"nodeType": "YulFunctionCall",
																"src": "5698:70:5"
															},
															"nativeSrc": "5698:70:5",
															"nodeType": "YulExpressionStatement",
															"src": "5698:70:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5788:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5788:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5799:4:5",
																				"nodeType": "YulLiteral",
																				"src": "5799:4:5",
																				"type": "",
																				"value": "0x60"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5784:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5784:3:5"
																		},
																		"nativeSrc": "5784:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5784:20:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value0",
																								"nativeSrc": "5820:6:5",
																								"nodeType": "YulIdentifier",
																								"src": "5820:6:5"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "5828:4:5",
																								"nodeType": "YulLiteral",
																								"src": "5828:4:5",
																								"type": "",
																								"value": "0x60"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "5816:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "5816:3:5"
																						},
																						"nativeSrc": "5816:17:5",
																						"nodeType": "YulFunctionCall",
																						"src": "5816:17:5"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nativeSrc": "5810:5:5",
																					"nodeType": "YulIdentifier",
																					"src": "5810:5:5"
																				},
																				"nativeSrc": "5810:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "5810:24:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5836:8:5",
																				"nodeType": "YulLiteral",
																				"src": "5836:8:5",
																				"type": "",
																				"value": "0xffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5806:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5806:3:5"
																		},
																		"nativeSrc": "5806:39:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5806:39:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5777:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5777:6:5"
																},
																"nativeSrc": "5777:69:5",
																"nodeType": "YulFunctionCall",
																"src": "5777:69:5"
															},
															"nativeSrc": "5777:69:5",
															"nodeType": "YulExpressionStatement",
															"src": "5777:69:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_TokenOwnership_$1935_memory_ptr__to_t_struct$_TokenOwnership_$1935_memory_ptr__fromStack_reversed",
												"nativeSrc": "5309:543:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5443:9:5",
														"nodeType": "YulTypedName",
														"src": "5443:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5454:6:5",
														"nodeType": "YulTypedName",
														"src": "5454:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5465:4:5",
														"nodeType": "YulTypedName",
														"src": "5465:4:5",
														"type": ""
													}
												],
												"src": "5309:543:5"
											},
											{
												"body": {
													"nativeSrc": "5912:382:5",
													"nodeType": "YulBlock",
													"src": "5912:382:5",
													"statements": [
														{
															"nativeSrc": "5922:22:5",
															"nodeType": "YulAssignment",
															"src": "5922:22:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5936:1:5",
																		"nodeType": "YulLiteral",
																		"src": "5936:1:5",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "5939:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "5939:4:5"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "5932:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5932:3:5"
																},
																"nativeSrc": "5932:12:5",
																"nodeType": "YulFunctionCall",
																"src": "5932:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "5922:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5922:6:5"
																}
															]
														},
														{
															"nativeSrc": "5953:38:5",
															"nodeType": "YulVariableDeclaration",
															"src": "5953:38:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5983:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "5983:4:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5989:1:5",
																		"nodeType": "YulLiteral",
																		"src": "5989:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5979:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5979:3:5"
																},
																"nativeSrc": "5979:12:5",
																"nodeType": "YulFunctionCall",
																"src": "5979:12:5"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "5957:18:5",
																	"nodeType": "YulTypedName",
																	"src": "5957:18:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6030:31:5",
																"nodeType": "YulBlock",
																"src": "6030:31:5",
																"statements": [
																	{
																		"nativeSrc": "6032:27:5",
																		"nodeType": "YulAssignment",
																		"src": "6032:27:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "6046:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "6046:6:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6054:4:5",
																					"nodeType": "YulLiteral",
																					"src": "6054:4:5",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "6042:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "6042:3:5"
																			},
																			"nativeSrc": "6042:17:5",
																			"nodeType": "YulFunctionCall",
																			"src": "6042:17:5"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "6032:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "6032:6:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6010:18:5",
																		"nodeType": "YulIdentifier",
																		"src": "6010:18:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6003:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6003:6:5"
																},
																"nativeSrc": "6003:26:5",
																"nodeType": "YulFunctionCall",
																"src": "6003:26:5"
															},
															"nativeSrc": "6000:61:5",
															"nodeType": "YulIf",
															"src": "6000:61:5"
														},
														{
															"body": {
																"nativeSrc": "6120:168:5",
																"nodeType": "YulBlock",
																"src": "6120:168:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6141:1:5",
																					"nodeType": "YulLiteral",
																					"src": "6141:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6144:77:5",
																					"nodeType": "YulLiteral",
																					"src": "6144:77:5",
																					"type": "",
																					"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6134:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "6134:6:5"
																			},
																			"nativeSrc": "6134:88:5",
																			"nodeType": "YulFunctionCall",
																			"src": "6134:88:5"
																		},
																		"nativeSrc": "6134:88:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "6134:88:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6242:1:5",
																					"nodeType": "YulLiteral",
																					"src": "6242:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6245:4:5",
																					"nodeType": "YulLiteral",
																					"src": "6245:4:5",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6235:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "6235:6:5"
																			},
																			"nativeSrc": "6235:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "6235:15:5"
																		},
																		"nativeSrc": "6235:15:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "6235:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6270:1:5",
																					"nodeType": "YulLiteral",
																					"src": "6270:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6273:4:5",
																					"nodeType": "YulLiteral",
																					"src": "6273:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6263:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "6263:6:5"
																			},
																			"nativeSrc": "6263:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "6263:15:5"
																		},
																		"nativeSrc": "6263:15:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "6263:15:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6076:18:5",
																		"nodeType": "YulIdentifier",
																		"src": "6076:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6099:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "6099:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6107:2:5",
																				"nodeType": "YulLiteral",
																				"src": "6107:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6096:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "6096:2:5"
																		},
																		"nativeSrc": "6096:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6096:14:5"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "6073:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "6073:2:5"
																},
																"nativeSrc": "6073:38:5",
																"nodeType": "YulFunctionCall",
																"src": "6073:38:5"
															},
															"nativeSrc": "6070:218:5",
															"nodeType": "YulIf",
															"src": "6070:218:5"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "5857:437:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "5892:4:5",
														"nodeType": "YulTypedName",
														"src": "5892:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "5901:6:5",
														"nodeType": "YulTypedName",
														"src": "5901:6:5",
														"type": ""
													}
												],
												"src": "5857:437:5"
											},
											{
												"body": {
													"nativeSrc": "6486:309:5",
													"nodeType": "YulBlock",
													"src": "6486:309:5",
													"statements": [
														{
															"nativeSrc": "6496:27:5",
															"nodeType": "YulVariableDeclaration",
															"src": "6496:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6516:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "6516:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6510:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "6510:5:5"
																},
																"nativeSrc": "6510:13:5",
																"nodeType": "YulFunctionCall",
																"src": "6510:13:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "6500:6:5",
																	"nodeType": "YulTypedName",
																	"src": "6500:6:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "6571:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "6571:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6579:4:5",
																				"nodeType": "YulLiteral",
																				"src": "6579:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6567:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6567:3:5"
																		},
																		"nativeSrc": "6567:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6567:17:5"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "6586:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "6586:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6591:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "6591:6:5"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "6532:34:5",
																	"nodeType": "YulIdentifier",
																	"src": "6532:34:5"
																},
																"nativeSrc": "6532:66:5",
																"nodeType": "YulFunctionCall",
																"src": "6532:66:5"
															},
															"nativeSrc": "6532:66:5",
															"nodeType": "YulExpressionStatement",
															"src": "6532:66:5"
														},
														{
															"nativeSrc": "6607:29:5",
															"nodeType": "YulVariableDeclaration",
															"src": "6607:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6624:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "6624:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6629:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "6629:6:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6620:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6620:3:5"
																},
																"nativeSrc": "6620:16:5",
																"nodeType": "YulFunctionCall",
																"src": "6620:16:5"
															},
															"variables": [
																{
																	"name": "end_1",
																	"nativeSrc": "6611:5:5",
																	"nodeType": "YulTypedName",
																	"src": "6611:5:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6645:29:5",
															"nodeType": "YulVariableDeclaration",
															"src": "6645:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6667:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "6667:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6661:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "6661:5:5"
																},
																"nativeSrc": "6661:13:5",
																"nodeType": "YulFunctionCall",
																"src": "6661:13:5"
															},
															"variables": [
																{
																	"name": "length_1",
																	"nativeSrc": "6649:8:5",
																	"nodeType": "YulTypedName",
																	"src": "6649:8:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "6722:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "6722:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6730:4:5",
																				"nodeType": "YulLiteral",
																				"src": "6730:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6718:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6718:3:5"
																		},
																		"nativeSrc": "6718:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6718:17:5"
																	},
																	{
																		"name": "end_1",
																		"nativeSrc": "6737:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "6737:5:5"
																	},
																	{
																		"name": "length_1",
																		"nativeSrc": "6744:8:5",
																		"nodeType": "YulIdentifier",
																		"src": "6744:8:5"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "6683:34:5",
																	"nodeType": "YulIdentifier",
																	"src": "6683:34:5"
																},
																"nativeSrc": "6683:70:5",
																"nodeType": "YulFunctionCall",
																"src": "6683:70:5"
															},
															"nativeSrc": "6683:70:5",
															"nodeType": "YulExpressionStatement",
															"src": "6683:70:5"
														},
														{
															"nativeSrc": "6762:27:5",
															"nodeType": "YulAssignment",
															"src": "6762:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "end_1",
																		"nativeSrc": "6773:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "6773:5:5"
																	},
																	{
																		"name": "length_1",
																		"nativeSrc": "6780:8:5",
																		"nodeType": "YulIdentifier",
																		"src": "6780:8:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6769:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6769:3:5"
																},
																"nativeSrc": "6769:20:5",
																"nodeType": "YulFunctionCall",
																"src": "6769:20:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6762:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6762:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "6299:496:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6454:3:5",
														"nodeType": "YulTypedName",
														"src": "6454:3:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6459:6:5",
														"nodeType": "YulTypedName",
														"src": "6459:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6467:6:5",
														"nodeType": "YulTypedName",
														"src": "6467:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6478:3:5",
														"nodeType": "YulTypedName",
														"src": "6478:3:5",
														"type": ""
													}
												],
												"src": "6299:496:5"
											},
											{
												"body": {
													"nativeSrc": "6847:303:5",
													"nodeType": "YulBlock",
													"src": "6847:303:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "6882:168:5",
																"nodeType": "YulBlock",
																"src": "6882:168:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6903:1:5",
																					"nodeType": "YulLiteral",
																					"src": "6903:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6906:77:5",
																					"nodeType": "YulLiteral",
																					"src": "6906:77:5",
																					"type": "",
																					"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6896:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "6896:6:5"
																			},
																			"nativeSrc": "6896:88:5",
																			"nodeType": "YulFunctionCall",
																			"src": "6896:88:5"
																		},
																		"nativeSrc": "6896:88:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "6896:88:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7004:1:5",
																					"nodeType": "YulLiteral",
																					"src": "7004:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7007:4:5",
																					"nodeType": "YulLiteral",
																					"src": "7007:4:5",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6997:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "6997:6:5"
																			},
																			"nativeSrc": "6997:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "6997:15:5"
																		},
																		"nativeSrc": "6997:15:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "6997:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7032:1:5",
																					"nodeType": "YulLiteral",
																					"src": "7032:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7035:4:5",
																					"nodeType": "YulLiteral",
																					"src": "7035:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7025:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "7025:6:5"
																			},
																			"nativeSrc": "7025:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "7025:15:5"
																		},
																		"nativeSrc": "7025:15:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "7025:15:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6867:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "6867:5:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6860:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6860:6:5"
																},
																"nativeSrc": "6860:13:5",
																"nodeType": "YulFunctionCall",
																"src": "6860:13:5"
															},
															"nativeSrc": "6857:193:5",
															"nodeType": "YulIf",
															"src": "6857:193:5"
														},
														{
															"nativeSrc": "7059:85:5",
															"nodeType": "YulAssignment",
															"src": "7059:85:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7070:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "7070:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7077:66:5",
																		"nodeType": "YulLiteral",
																		"src": "7077:66:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7066:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7066:3:5"
																},
																"nativeSrc": "7066:78:5",
																"nodeType": "YulFunctionCall",
																"src": "7066:78:5"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "7059:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7059:3:5"
																}
															]
														}
													]
												},
												"name": "decrement_t_uint256",
												"nativeSrc": "6800:350:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6829:5:5",
														"nodeType": "YulTypedName",
														"src": "6829:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6839:3:5",
														"nodeType": "YulTypedName",
														"src": "6839:3:5",
														"type": ""
													}
												],
												"src": "6800:350:5"
											},
											{
												"body": {
													"nativeSrc": "7358:328:5",
													"nodeType": "YulBlock",
													"src": "7358:328:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7375:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "7375:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "7390:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "7390:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7398:42:5",
																				"nodeType": "YulLiteral",
																				"src": "7398:42:5",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7386:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "7386:3:5"
																		},
																		"nativeSrc": "7386:55:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7386:55:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7368:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "7368:6:5"
																},
																"nativeSrc": "7368:74:5",
																"nodeType": "YulFunctionCall",
																"src": "7368:74:5"
															},
															"nativeSrc": "7368:74:5",
															"nodeType": "YulExpressionStatement",
															"src": "7368:74:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7462:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "7462:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7473:2:5",
																				"nodeType": "YulLiteral",
																				"src": "7473:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7458:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "7458:3:5"
																		},
																		"nativeSrc": "7458:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7458:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "7482:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "7482:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7490:42:5",
																				"nodeType": "YulLiteral",
																				"src": "7490:42:5",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7478:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "7478:3:5"
																		},
																		"nativeSrc": "7478:55:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7478:55:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7451:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "7451:6:5"
																},
																"nativeSrc": "7451:83:5",
																"nodeType": "YulFunctionCall",
																"src": "7451:83:5"
															},
															"nativeSrc": "7451:83:5",
															"nodeType": "YulExpressionStatement",
															"src": "7451:83:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7554:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "7554:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7565:2:5",
																				"nodeType": "YulLiteral",
																				"src": "7565:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7550:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "7550:3:5"
																		},
																		"nativeSrc": "7550:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7550:18:5"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "7570:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "7570:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7543:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "7543:6:5"
																},
																"nativeSrc": "7543:34:5",
																"nodeType": "YulFunctionCall",
																"src": "7543:34:5"
															},
															"nativeSrc": "7543:34:5",
															"nodeType": "YulExpressionStatement",
															"src": "7543:34:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7597:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "7597:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7608:2:5",
																				"nodeType": "YulLiteral",
																				"src": "7608:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7593:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "7593:3:5"
																		},
																		"nativeSrc": "7593:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7593:18:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7613:3:5",
																		"nodeType": "YulLiteral",
																		"src": "7613:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7586:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "7586:6:5"
																},
																"nativeSrc": "7586:31:5",
																"nodeType": "YulFunctionCall",
																"src": "7586:31:5"
															},
															"nativeSrc": "7586:31:5",
															"nodeType": "YulExpressionStatement",
															"src": "7586:31:5"
														},
														{
															"nativeSrc": "7626:54:5",
															"nodeType": "YulAssignment",
															"src": "7626:54:5",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "7652:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "7652:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7664:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "7664:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7675:3:5",
																				"nodeType": "YulLiteral",
																				"src": "7675:3:5",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7660:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "7660:3:5"
																		},
																		"nativeSrc": "7660:19:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7660:19:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "7634:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "7634:17:5"
																},
																"nativeSrc": "7634:46:5",
																"nodeType": "YulFunctionCall",
																"src": "7634:46:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7626:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "7626:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "7155:531:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7303:9:5",
														"nodeType": "YulTypedName",
														"src": "7303:9:5",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "7314:6:5",
														"nodeType": "YulTypedName",
														"src": "7314:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7322:6:5",
														"nodeType": "YulTypedName",
														"src": "7322:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7330:6:5",
														"nodeType": "YulTypedName",
														"src": "7330:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7338:6:5",
														"nodeType": "YulTypedName",
														"src": "7338:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7349:4:5",
														"nodeType": "YulTypedName",
														"src": "7349:4:5",
														"type": ""
													}
												],
												"src": "7155:531:5"
											},
											{
												"body": {
													"nativeSrc": "7771:169:5",
													"nodeType": "YulBlock",
													"src": "7771:169:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "7817:16:5",
																"nodeType": "YulBlock",
																"src": "7817:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7826:1:5",
																					"nodeType": "YulLiteral",
																					"src": "7826:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7829:1:5",
																					"nodeType": "YulLiteral",
																					"src": "7829:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7819:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "7819:6:5"
																			},
																			"nativeSrc": "7819:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "7819:12:5"
																		},
																		"nativeSrc": "7819:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "7819:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7792:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "7792:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7801:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "7801:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7788:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "7788:3:5"
																		},
																		"nativeSrc": "7788:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7788:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7813:2:5",
																		"nodeType": "YulLiteral",
																		"src": "7813:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7784:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7784:3:5"
																},
																"nativeSrc": "7784:32:5",
																"nodeType": "YulFunctionCall",
																"src": "7784:32:5"
															},
															"nativeSrc": "7781:52:5",
															"nodeType": "YulIf",
															"src": "7781:52:5"
														},
														{
															"nativeSrc": "7842:29:5",
															"nodeType": "YulVariableDeclaration",
															"src": "7842:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7861:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "7861:9:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7855:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "7855:5:5"
																},
																"nativeSrc": "7855:16:5",
																"nodeType": "YulFunctionCall",
																"src": "7855:16:5"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "7846:5:5",
																	"nodeType": "YulTypedName",
																	"src": "7846:5:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7904:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "7904:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nativeSrc": "7880:23:5",
																	"nodeType": "YulIdentifier",
																	"src": "7880:23:5"
																},
																"nativeSrc": "7880:30:5",
																"nodeType": "YulFunctionCall",
																"src": "7880:30:5"
															},
															"nativeSrc": "7880:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "7880:30:5"
														},
														{
															"nativeSrc": "7919:15:5",
															"nodeType": "YulAssignment",
															"src": "7919:15:5",
															"value": {
																"name": "value",
																"nativeSrc": "7929:5:5",
																"nodeType": "YulIdentifier",
																"src": "7929:5:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "7919:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "7919:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nativeSrc": "7691:249:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7737:9:5",
														"nodeType": "YulTypedName",
														"src": "7737:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7748:7:5",
														"nodeType": "YulTypedName",
														"src": "7748:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7760:6:5",
														"nodeType": "YulTypedName",
														"src": "7760:6:5",
														"type": ""
													}
												],
												"src": "7691:249:5"
											}
										]
									},
									"contents": "{\n    { }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_1)\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 0x1f), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0), 63), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, length)\n        if gt(add(add(_1, length), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_1, 32), length)\n        mstore(add(add(memPtr, length), 32), 0)\n        value3 := memPtr\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_struct$_TokenOwnership_$1935_memory_ptr__to_t_struct$_TokenOwnership_$1935_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, and(mload(value0), 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 0x20), and(mload(add(value0, 0x20)), 0xffffffffffffffff))\n        mstore(add(headStart, 0x40), iszero(iszero(mload(add(value0, 0x40)))))\n        mstore(add(headStart, 0x60), and(mload(add(value0, 0x60)), 0xffffff))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        let length_1 := mload(value1)\n        copy_memory_to_memory_with_cleanup(add(value1, 0x20), end_1, length_1)\n        end := add(end_1, length_1)\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value)\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        ret := add(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_string(value3, add(headStart, 128))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061016a5760003560e01c80636352211e116100cb578063a2309ff81161007f578063d89135cd11610059578063d89135cd146103a6578063e985e9c5146103bb578063f25236331461041157600080fd5b8063a2309ff81461035e578063b88d4fde14610373578063c87b56dd1461038657600080fd5b806395d89b41116100b057806395d89b4114610309578063a14481941461031e578063a22cb4651461033e57600080fd5b80636352211e146102c957806370a08231146102e957600080fd5b806323b872dd1161012257806342842e0e1161010757806342842e0e1461027657806342966c68146102895780634f558e79146102a957600080fd5b806323b872dd146102435780632478d6391461025657600080fd5b8063081812fc11610153578063081812fc146101c6578063095ea7b31461020b57806318160ddd1461022057600080fd5b806301ffc9a71461016f57806306fdde03146101a4575b600080fd5b34801561017b57600080fd5b5061018f61018a366004611419565b61048b565b60405190151581526020015b60405180910390f35b3480156101b057600080fd5b506101b9610570565b60405161019b91906114a4565b3480156101d257600080fd5b506101e66101e13660046114b7565b610602565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161019b565b61021e6102193660046114f4565b610663565b005b34801561022c57600080fd5b50600154600054035b60405190815260200161019b565b61021e61025136600461151e565b610673565b34801561026257600080fd5b5061023561027136600461155b565b6108b2565b61021e61028436600461151e565b6108ed565b34801561029557600080fd5b5061021e6102a43660046114b7565b61090d565b3480156102b557600080fd5b5061018f6102c43660046114b7565b61091b565b3480156102d557600080fd5b506101e66102e43660046114b7565b610926565b3480156102f557600080fd5b5061023561030436600461155b565b610931565b34801561031557600080fd5b506101b96109aa565b34801561032a57600080fd5b5061021e6103393660046114f4565b6109b9565b34801561034a57600080fd5b5061021e610359366004611576565b6109c3565b34801561036a57600080fd5b50600054610235565b61021e6103813660046115e1565b610a5f565b34801561039257600080fd5b506101b96103a13660046114b7565b610ac6565b3480156103b257600080fd5b50610235610b67565b3480156103c757600080fd5b5061018f6103d6366004611702565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260076020908152604080832093909416825291909152205460ff1690565b34801561041d57600080fd5b5061043161042c3660046114b7565b610b72565b60405161019b9190815173ffffffffffffffffffffffffffffffffffffffff16815260208083015167ffffffffffffffff169082015260408083015115159082015260609182015162ffffff169181019190915260800190565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316148061051e57507f80ac58cd000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b8061056a57507f5b5e139f000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b60606002805461057f90611735565b80601f01602080910402602001604051908101604052809291908181526020018280546105ab90611735565b80156105f85780601f106105cd576101008083540402835291602001916105f8565b820191906000526020600020905b8154815290600101906020018083116105db57829003601f168201915b5050505050905090565b600061060d82610b9f565b61063a5761063a7fcf4700e400000000000000000000000000000000000000000000000000000000610bfd565b5060009081526006602052604090205473ffffffffffffffffffffffffffffffffffffffff1690565b61066f82826001610c07565b5050565b600061067e82610cf5565b73ffffffffffffffffffffffffffffffffffffffff94851694909150811684146106cb576106cb7fa114810000000000000000000000000000000000000000000000000000000000610bfd565b600082815260066020526040902080546107048187335b73ffffffffffffffffffffffffffffffffffffffff9081169116811491141790565b61073f5761071286336103d6565b61073f5761073f7f59c896be00000000000000000000000000000000000000000000000000000000610bfd565b801561074a57600082555b73ffffffffffffffffffffffffffffffffffffffff86811660009081526005602052604080822080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff019055918716808252919020805460010190554260a01b177c0200000000000000000000000000000000000000000000000000000000176000858152600460205260408120919091557c020000000000000000000000000000000000000000000000000000000084169003610839576001840160008181526004602052604081205490036108375760005481146108375760008181526004602052604090208490555b505b73ffffffffffffffffffffffffffffffffffffffff85168481887fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a4806000036108a9576108a97fea553b3400000000000000000000000000000000000000000000000000000000610bfd565b50505050505050565b600061056a8273ffffffffffffffffffffffffffffffffffffffff1660009081526005602052604090205460801c67ffffffffffffffff1690565b61090883838360405180602001604052806000815250610a5f565b505050565b610918816001610e26565b50565b600061056a82610b9f565b600061056a82610cf5565b600073ffffffffffffffffffffffffffffffffffffffff8216610977576109777f8f4eb60400000000000000000000000000000000000000000000000000000000610bfd565b5073ffffffffffffffffffffffffffffffffffffffff1660009081526005602052604090205467ffffffffffffffff1690565b60606003805461057f90611735565b61066f8282610fcc565b33600081815260076020908152604080832073ffffffffffffffffffffffffffffffffffffffff87168085529083529281902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b905090565b610a6a848484610673565b73ffffffffffffffffffffffffffffffffffffffff83163b15610ac057610a9384848484610fe6565b610ac057610ac07fd1a57ed600000000000000000000000000000000000000000000000000000000610bfd565b50505050565b6060610ad182610b9f565b610afe57610afe7fa14c4b5000000000000000000000000000000000000000000000000000000000610bfd565b6000610b1560408051602081019091526000815290565b90508051600003610b355760405180602001604052806000815250610b60565b80610b3f84611156565b604051602001610b50929190611788565b6040516020818303038152906040525b9392505050565b6000610a5a60015490565b60408051608081018252600080825260208201819052918101829052606081019190915261056a826111b8565b60008054821015610bf85760005b5060008281526004602052604081205490819003610bd557610bce836117b7565b9250610bad565b7c0100000000000000000000000000000000000000000000000000000000161590505b919050565b8060005260046000fd5b6000610c1283610926565b9050818015610c3757503373ffffffffffffffffffffffffffffffffffffffff821614155b15610c7357610c4681336103d6565b610c7357610c737fcfb3b94200000000000000000000000000000000000000000000000000000000610bfd565b60008381526006602052604080822080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff88811691821790925591518693918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a450505050565b60008181526004602052604081205490819003610dd1576000548210610d3e57610d3e7fdf2d9b4200000000000000000000000000000000000000000000000000000000610bfd565b5b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016000818152600460205260409020548015610d3f577c01000000000000000000000000000000000000000000000000000000008116600003610da357919050565b610dcc7fdf2d9b4200000000000000000000000000000000000000000000000000000000610bfd565b610d3f565b7c01000000000000000000000000000000000000000000000000000000008116600003610dfd57919050565b610bf87fdf2d9b4200000000000000000000000000000000000000000000000000000000610bfd565b6000610e3183610cf5565b905080600080610e4f86600090815260066020526040902080549091565b915091508415610e9f57610e648184336106e2565b610e9f57610e7283336103d6565b610e9f57610e9f7f59c896be00000000000000000000000000000000000000000000000000000000610bfd565b8015610eaa57600082555b73ffffffffffffffffffffffffffffffffffffffff8316600081815260056020526040902080546fffffffffffffffffffffffffffffffff0190554260a01b177c0300000000000000000000000000000000000000000000000000000000176000878152600460205260408120919091557c020000000000000000000000000000000000000000000000000000000085169003610f7757600186016000818152600460205260408120549003610f75576000548114610f755760008181526004602052604090208590555b505b604051869060009073ffffffffffffffffffffffffffffffffffffffff8616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050600180548101905550505050565b61066f82826040518060200160405280600081525061125d565b6040517f150b7a0200000000000000000000000000000000000000000000000000000000815260009073ffffffffffffffffffffffffffffffffffffffff85169063150b7a0290611041903390899088908890600401611813565b6020604051808303816000875af192505050801561109a575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682019092526110979181019061186e565b60015b611108573d8080156110c8576040519150601f19603f3d011682016040523d82523d6000602084013e6110cd565b606091505b508051600003611100576111007fd1a57ed600000000000000000000000000000000000000000000000000000000610bfd565b805181602001fd5b7fffffffff00000000000000000000000000000000000000000000000000000000167f150b7a0200000000000000000000000000000000000000000000000000000000149050949350505050565b606060a06040510180604052602081039150506000815280825b600183039250600a81066030018353600a90048061117057508190037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0909101908152919050565b60408051608081018252600080825260208201819052918101829052606081019190915260008281526004602052604090205461056a906040805160808101825273ffffffffffffffffffffffffffffffffffffffff8316815260a083901c67ffffffffffffffff1660208201527c0100000000000000000000000000000000000000000000000000000000831615159181019190915260e89190911c606082015290565b61126783836112ec565b73ffffffffffffffffffffffffffffffffffffffff83163b15610908576000548281035b61129e6000868380600101945086610fe6565b6112cb576112cb7fd1a57ed600000000000000000000000000000000000000000000000000000000610bfd565b81811061128b5781600054146112e5576112e56000610bfd565b5050505050565b6000805490829003611321576113217fb562e8dd00000000000000000000000000000000000000000000000000000000610bfd565b600081815260046020908152604080832073ffffffffffffffffffffffffffffffffffffffff87164260a01b6001881460e11b178117909155808452600590925282208054680100000000000000018602019055908190036113a6576113a67f2e07630000000000000000000000000000000000000000000000000000000000610bfd565b818301825b808360007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a48181600101915081036113ab575060005550505050565b7fffffffff000000000000000000000000000000000000000000000000000000008116811461091857600080fd5b60006020828403121561142b57600080fd5b8135610b60816113eb565b60005b83811015611451578181015183820152602001611439565b50506000910152565b60008151808452611472816020860160208601611436565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b602081526000610b60602083018461145a565b6000602082840312156114c957600080fd5b5035919050565b803573ffffffffffffffffffffffffffffffffffffffff81168114610bf857600080fd5b6000806040838503121561150757600080fd5b611510836114d0565b946020939093013593505050565b60008060006060848603121561153357600080fd5b61153c846114d0565b925061154a602085016114d0565b929592945050506040919091013590565b60006020828403121561156d57600080fd5b610b60826114d0565b6000806040838503121561158957600080fd5b611592836114d0565b9150602083013580151581146115a757600080fd5b809150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080600080608085870312156115f757600080fd5b611600856114d0565b935061160e602086016114d0565b925060408501359150606085013567ffffffffffffffff81111561163157600080fd5b8501601f8101871361164257600080fd5b803567ffffffffffffffff81111561165c5761165c6115b2565b6040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0603f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8501160116810181811067ffffffffffffffff821117156116c8576116c86115b2565b6040528181528282016020018910156116e057600080fd5b8160208401602083013760006020838301015280935050505092959194509250565b6000806040838503121561171557600080fd5b61171e836114d0565b915061172c602084016114d0565b90509250929050565b600181811c9082168061174957607f821691505b602082108103611782577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b6000835161179a818460208801611436565b8351908301906117ae818360208801611436565b01949350505050565b6000816117ed577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190565b73ffffffffffffffffffffffffffffffffffffffff8516815273ffffffffffffffffffffffffffffffffffffffff84166020820152826040820152608060608201526000611864608083018461145a565b9695505050505050565b60006020828403121561188057600080fd5b8151610b60816113eb56fea2646970667358221220221959a2f4c8296ff1e8e373a93622e8879ae1b5f1e34e4ddb9141831d8a2bda64736f6c634300081b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x16A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0xCB JUMPI DUP1 PUSH4 0xA2309FF8 GT PUSH2 0x7F JUMPI DUP1 PUSH4 0xD89135CD GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xD89135CD EQ PUSH2 0x3A6 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x3BB JUMPI DUP1 PUSH4 0xF2523633 EQ PUSH2 0x411 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA2309FF8 EQ PUSH2 0x35E JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x373 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x386 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95D89B41 GT PUSH2 0xB0 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x309 JUMPI DUP1 PUSH4 0xA1448194 EQ PUSH2 0x31E JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x33E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x2C9 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x122 JUMPI DUP1 PUSH4 0x42842E0E GT PUSH2 0x107 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x276 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x289 JUMPI DUP1 PUSH4 0x4F558E79 EQ PUSH2 0x2A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0x2478D639 EQ PUSH2 0x256 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x81812FC GT PUSH2 0x153 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x20B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x220 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1A4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18F PUSH2 0x18A CALLDATASIZE PUSH1 0x4 PUSH2 0x1419 JUMP JUMPDEST PUSH2 0x48B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B9 PUSH2 0x570 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19B SWAP2 SWAP1 PUSH2 0x14A4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E6 PUSH2 0x1E1 CALLDATASIZE PUSH1 0x4 PUSH2 0x14B7 JUMP JUMPDEST PUSH2 0x602 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x19B JUMP JUMPDEST PUSH2 0x21E PUSH2 0x219 CALLDATASIZE PUSH1 0x4 PUSH2 0x14F4 JUMP JUMPDEST PUSH2 0x663 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD SUB JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x19B JUMP JUMPDEST PUSH2 0x21E PUSH2 0x251 CALLDATASIZE PUSH1 0x4 PUSH2 0x151E JUMP JUMPDEST PUSH2 0x673 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x262 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x235 PUSH2 0x271 CALLDATASIZE PUSH1 0x4 PUSH2 0x155B JUMP JUMPDEST PUSH2 0x8B2 JUMP JUMPDEST PUSH2 0x21E PUSH2 0x284 CALLDATASIZE PUSH1 0x4 PUSH2 0x151E JUMP JUMPDEST PUSH2 0x8ED JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x295 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21E PUSH2 0x2A4 CALLDATASIZE PUSH1 0x4 PUSH2 0x14B7 JUMP JUMPDEST PUSH2 0x90D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18F PUSH2 0x2C4 CALLDATASIZE PUSH1 0x4 PUSH2 0x14B7 JUMP JUMPDEST PUSH2 0x91B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E6 PUSH2 0x2E4 CALLDATASIZE PUSH1 0x4 PUSH2 0x14B7 JUMP JUMPDEST PUSH2 0x926 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x235 PUSH2 0x304 CALLDATASIZE PUSH1 0x4 PUSH2 0x155B JUMP JUMPDEST PUSH2 0x931 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x315 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B9 PUSH2 0x9AA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21E PUSH2 0x339 CALLDATASIZE PUSH1 0x4 PUSH2 0x14F4 JUMP JUMPDEST PUSH2 0x9B9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21E PUSH2 0x359 CALLDATASIZE PUSH1 0x4 PUSH2 0x1576 JUMP JUMPDEST PUSH2 0x9C3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0x235 JUMP JUMPDEST PUSH2 0x21E PUSH2 0x381 CALLDATASIZE PUSH1 0x4 PUSH2 0x15E1 JUMP JUMPDEST PUSH2 0xA5F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x392 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B9 PUSH2 0x3A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x14B7 JUMP JUMPDEST PUSH2 0xAC6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x235 PUSH2 0xB67 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18F PUSH2 0x3D6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1702 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x431 PUSH2 0x42C CALLDATASIZE PUSH1 0x4 PUSH2 0x14B7 JUMP JUMPDEST PUSH2 0xB72 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19B SWAP2 SWAP1 DUP2 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 DUP3 ADD MSTORE PUSH1 0x40 DUP1 DUP4 ADD MLOAD ISZERO ISZERO SWAP1 DUP3 ADD MSTORE PUSH1 0x60 SWAP2 DUP3 ADD MLOAD PUSH3 0xFFFFFF AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND EQ DUP1 PUSH2 0x51E JUMPI POP PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND EQ JUMPDEST DUP1 PUSH2 0x56A JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x57F SWAP1 PUSH2 0x1735 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5AB SWAP1 PUSH2 0x1735 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5F8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5CD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5F8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5DB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x60D DUP3 PUSH2 0xB9F JUMP JUMPDEST PUSH2 0x63A JUMPI PUSH2 0x63A PUSH32 0xCF4700E400000000000000000000000000000000000000000000000000000000 PUSH2 0xBFD JUMP JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0x66F DUP3 DUP3 PUSH1 0x1 PUSH2 0xC07 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x67E DUP3 PUSH2 0xCF5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP5 DUP6 AND SWAP5 SWAP1 SWAP2 POP DUP2 AND DUP5 EQ PUSH2 0x6CB JUMPI PUSH2 0x6CB PUSH32 0xA114810000000000000000000000000000000000000000000000000000000000 PUSH2 0xBFD JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x704 DUP2 DUP8 CALLER JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND SWAP2 AND DUP2 EQ SWAP2 EQ OR SWAP1 JUMP JUMPDEST PUSH2 0x73F JUMPI PUSH2 0x712 DUP7 CALLER PUSH2 0x3D6 JUMP JUMPDEST PUSH2 0x73F JUMPI PUSH2 0x73F PUSH32 0x59C896BE00000000000000000000000000000000000000000000000000000000 PUSH2 0xBFD JUMP JUMPDEST DUP1 ISZERO PUSH2 0x74A JUMPI PUSH1 0x0 DUP3 SSTORE JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD SWAP1 SSTORE SWAP2 DUP8 AND DUP1 DUP3 MSTORE SWAP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE TIMESTAMP PUSH1 0xA0 SHL OR PUSH29 0x200000000000000000000000000000000000000000000000000000000 OR PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH29 0x200000000000000000000000000000000000000000000000000000000 DUP5 AND SWAP1 SUB PUSH2 0x839 JUMPI PUSH1 0x1 DUP5 ADD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x837 JUMPI PUSH1 0x0 SLOAD DUP2 EQ PUSH2 0x837 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE JUMPDEST POP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND DUP5 DUP2 DUP9 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x0 DUP1 LOG4 DUP1 PUSH1 0x0 SUB PUSH2 0x8A9 JUMPI PUSH2 0x8A9 PUSH32 0xEA553B3400000000000000000000000000000000000000000000000000000000 PUSH2 0xBFD JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x56A DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x80 SHR PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0x908 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xA5F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x918 DUP2 PUSH1 0x1 PUSH2 0xE26 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x56A DUP3 PUSH2 0xB9F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x56A DUP3 PUSH2 0xCF5 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x977 JUMPI PUSH2 0x977 PUSH32 0x8F4EB60400000000000000000000000000000000000000000000000000000000 PUSH2 0xBFD JUMP JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x57F SWAP1 PUSH2 0x1735 JUMP JUMPDEST PUSH2 0x66F DUP3 DUP3 PUSH2 0xFCC JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xA6A DUP5 DUP5 DUP5 PUSH2 0x673 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND EXTCODESIZE ISZERO PUSH2 0xAC0 JUMPI PUSH2 0xA93 DUP5 DUP5 DUP5 DUP5 PUSH2 0xFE6 JUMP JUMPDEST PUSH2 0xAC0 JUMPI PUSH2 0xAC0 PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 PUSH2 0xBFD JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xAD1 DUP3 PUSH2 0xB9F JUMP JUMPDEST PUSH2 0xAFE JUMPI PUSH2 0xAFE PUSH32 0xA14C4B5000000000000000000000000000000000000000000000000000000000 PUSH2 0xBFD JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB15 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0xB35 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xB60 JUMP JUMPDEST DUP1 PUSH2 0xB3F DUP5 PUSH2 0x1156 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xB50 SWAP3 SWAP2 SWAP1 PUSH2 0x1788 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA5A PUSH1 0x1 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x56A DUP3 PUSH2 0x11B8 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD DUP3 LT ISZERO PUSH2 0xBF8 JUMPI PUSH1 0x0 JUMPDEST POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 DUP2 SWAP1 SUB PUSH2 0xBD5 JUMPI PUSH2 0xBCE DUP4 PUSH2 0x17B7 JUMP JUMPDEST SWAP3 POP PUSH2 0xBAD JUMP JUMPDEST PUSH29 0x100000000000000000000000000000000000000000000000000000000 AND ISZERO SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xC12 DUP4 PUSH2 0x926 JUMP JUMPDEST SWAP1 POP DUP2 DUP1 ISZERO PUSH2 0xC37 JUMPI POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND EQ ISZERO JUMPDEST ISZERO PUSH2 0xC73 JUMPI PUSH2 0xC46 DUP2 CALLER PUSH2 0x3D6 JUMP JUMPDEST PUSH2 0xC73 JUMPI PUSH2 0xC73 PUSH32 0xCFB3B94200000000000000000000000000000000000000000000000000000000 PUSH2 0xBFD JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP7 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 LOG4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 DUP2 SWAP1 SUB PUSH2 0xDD1 JUMPI PUSH1 0x0 SLOAD DUP3 LT PUSH2 0xD3E JUMPI PUSH2 0xD3E PUSH32 0xDF2D9B4200000000000000000000000000000000000000000000000000000000 PUSH2 0xBFD JUMP JUMPDEST JUMPDEST POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0xD3F JUMPI PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP2 AND PUSH1 0x0 SUB PUSH2 0xDA3 JUMPI SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDCC PUSH32 0xDF2D9B4200000000000000000000000000000000000000000000000000000000 PUSH2 0xBFD JUMP JUMPDEST PUSH2 0xD3F JUMP JUMPDEST PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP2 AND PUSH1 0x0 SUB PUSH2 0xDFD JUMPI SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBF8 PUSH32 0xDF2D9B4200000000000000000000000000000000000000000000000000000000 PUSH2 0xBFD JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE31 DUP4 PUSH2 0xCF5 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 DUP1 PUSH2 0xE4F DUP7 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP5 ISZERO PUSH2 0xE9F JUMPI PUSH2 0xE64 DUP2 DUP5 CALLER PUSH2 0x6E2 JUMP JUMPDEST PUSH2 0xE9F JUMPI PUSH2 0xE72 DUP4 CALLER PUSH2 0x3D6 JUMP JUMPDEST PUSH2 0xE9F JUMPI PUSH2 0xE9F PUSH32 0x59C896BE00000000000000000000000000000000000000000000000000000000 PUSH2 0xBFD JUMP JUMPDEST DUP1 ISZERO PUSH2 0xEAA JUMPI PUSH1 0x0 DUP3 SSTORE JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD SWAP1 SSTORE TIMESTAMP PUSH1 0xA0 SHL OR PUSH29 0x300000000000000000000000000000000000000000000000000000000 OR PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH29 0x200000000000000000000000000000000000000000000000000000000 DUP6 AND SWAP1 SUB PUSH2 0xF77 JUMPI PUSH1 0x1 DUP7 ADD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0xF75 JUMPI PUSH1 0x0 SLOAD DUP2 EQ PUSH2 0xF75 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD DUP7 SWAP1 PUSH1 0x0 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP4 SWAP1 LOG4 POP POP PUSH1 0x1 DUP1 SLOAD DUP2 ADD SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH2 0x66F DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x125D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x150B7A0200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x1041 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1813 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x109A JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1097 SWAP2 DUP2 ADD SWAP1 PUSH2 0x186E JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1108 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x10C8 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x10CD JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x1100 JUMPI PUSH2 0x1100 PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 PUSH2 0xBFD JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH32 0x150B7A0200000000000000000000000000000000000000000000000000000000 EQ SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xA0 PUSH1 0x40 MLOAD ADD DUP1 PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 SUB SWAP2 POP POP PUSH1 0x0 DUP2 MSTORE DUP1 DUP3 JUMPDEST PUSH1 0x1 DUP4 SUB SWAP3 POP PUSH1 0xA DUP2 MOD PUSH1 0x30 ADD DUP4 MSTORE8 PUSH1 0xA SWAP1 DIV DUP1 PUSH2 0x1170 JUMPI POP DUP2 SWAP1 SUB PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP1 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x56A SWAP1 PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND DUP2 MSTORE PUSH1 0xA0 DUP4 SWAP1 SHR PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x20 DUP3 ADD MSTORE PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP4 AND ISZERO ISZERO SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xE8 SWAP2 SWAP1 SWAP2 SHR PUSH1 0x60 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x1267 DUP4 DUP4 PUSH2 0x12EC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND EXTCODESIZE ISZERO PUSH2 0x908 JUMPI PUSH1 0x0 SLOAD DUP3 DUP2 SUB JUMPDEST PUSH2 0x129E PUSH1 0x0 DUP7 DUP4 DUP1 PUSH1 0x1 ADD SWAP5 POP DUP7 PUSH2 0xFE6 JUMP JUMPDEST PUSH2 0x12CB JUMPI PUSH2 0x12CB PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 PUSH2 0xBFD JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x128B JUMPI DUP2 PUSH1 0x0 SLOAD EQ PUSH2 0x12E5 JUMPI PUSH2 0x12E5 PUSH1 0x0 PUSH2 0xBFD JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 DUP3 SWAP1 SUB PUSH2 0x1321 JUMPI PUSH2 0x1321 PUSH32 0xB562E8DD00000000000000000000000000000000000000000000000000000000 PUSH2 0xBFD JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND TIMESTAMP PUSH1 0xA0 SHL PUSH1 0x1 DUP9 EQ PUSH1 0xE1 SHL OR DUP2 OR SWAP1 SWAP2 SSTORE DUP1 DUP5 MSTORE PUSH1 0x5 SWAP1 SWAP3 MSTORE DUP3 KECCAK256 DUP1 SLOAD PUSH9 0x10000000000000001 DUP7 MUL ADD SWAP1 SSTORE SWAP1 DUP2 SWAP1 SUB PUSH2 0x13A6 JUMPI PUSH2 0x13A6 PUSH32 0x2E07630000000000000000000000000000000000000000000000000000000000 PUSH2 0xBFD JUMP JUMPDEST DUP2 DUP4 ADD DUP3 JUMPDEST DUP1 DUP4 PUSH1 0x0 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x0 DUP1 LOG4 DUP2 DUP2 PUSH1 0x1 ADD SWAP2 POP DUP2 SUB PUSH2 0x13AB JUMPI POP PUSH1 0x0 SSTORE POP POP POP POP JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP2 EQ PUSH2 0x918 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x142B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xB60 DUP2 PUSH2 0x13EB JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1451 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1439 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1472 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1436 JUMP JUMPDEST PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xB60 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x145A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xBF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1507 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1510 DUP4 PUSH2 0x14D0 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1533 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x153C DUP5 PUSH2 0x14D0 JUMP JUMPDEST SWAP3 POP PUSH2 0x154A PUSH1 0x20 DUP6 ADD PUSH2 0x14D0 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x156D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB60 DUP3 PUSH2 0x14D0 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1589 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1592 DUP4 PUSH2 0x14D0 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x15A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x15F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1600 DUP6 PUSH2 0x14D0 JUMP JUMPDEST SWAP4 POP PUSH2 0x160E PUSH1 0x20 DUP7 ADD PUSH2 0x14D0 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1631 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x1642 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x165C JUMPI PUSH2 0x165C PUSH2 0x15B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x3F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP6 ADD AND ADD AND DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x16C8 JUMPI PUSH2 0x16C8 PUSH2 0x15B2 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP3 DUP3 ADD PUSH1 0x20 ADD DUP10 LT ISZERO PUSH2 0x16E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP4 DUP4 ADD ADD MSTORE DUP1 SWAP4 POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1715 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x171E DUP4 PUSH2 0x14D0 JUMP JUMPDEST SWAP2 POP PUSH2 0x172C PUSH1 0x20 DUP5 ADD PUSH2 0x14D0 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1749 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1782 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x179A DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x1436 JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x17AE DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x1436 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x17ED JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x1864 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x145A JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1880 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xB60 DUP2 PUSH2 0x13EB JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x22 NOT MSIZE LOG2 DELEGATECALL 0xC8 0x29 PUSH16 0xF1E8E373A93622E8879AE1B5F1E34E4D 0xDB SWAP2 COINBASE DUP4 SAR DUP11 0x2B 0xDA PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ",
							"sourceMap": "1449:797:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10458:630:1;;;;;;;;;;-1:-1:-1;10458:630:1;;;;;:::i;:::-;;:::i;:::-;;;611:14:5;;604:22;586:41;;574:2;559:18;10458:630:1;;;;;;;;11342:98;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;18205:223::-;;;;;;;;;;-1:-1:-1;18205:223:1;;;;;:::i;:::-;;:::i;:::-;;;1860:42:5;1848:55;;;1830:74;;1818:2;1803:18;18205:223:1;1684:226:5;17933:122:1;;;;;;:::i;:::-;;:::i;:::-;;7188:317;;;;;;;;;;-1:-1:-1;7458:12:1;;7249:7;7442:13;:28;7188:317;;;2567:25:5;;;2555:2;2540:18;7188:317:1;2421:177:5;21840:3447:1;;;;;;:::i;:::-;;:::i;2133:111:0:-;;;;;;;;;;-1:-1:-1;2133:111:0;;;;;:::i;:::-;;:::i;25378:187:1:-;;;;;;:::i;:::-;;:::i;1804:92:3:-;;;;;;;;;;-1:-1:-1;1804:92:3;;;;;:::i;:::-;;:::i;1600:100:0:-;;;;;;;;;;-1:-1:-1;1600:100:0;;;;;:::i;:::-;;:::i;12703:150:1:-;;;;;;;;;;-1:-1:-1;12703:150:1;;;;;:::i;:::-;;:::i;8339:239::-;;;;;;;;;;-1:-1:-1;8339:239:1;;;;;:::i;:::-;;:::i;11511:102::-;;;;;;;;;;;;;:::i;1706:95:0:-;;;;;;;;;;-1:-1:-1;1706:95:0;;;;;:::i;:::-;;:::i;18755:231:1:-;;;;;;;;;;-1:-1:-1;18755:231:1;;;;;:::i;:::-;;:::i;1939:91:0:-;;;;;;;;;;-1:-1:-1;1983:7:0;7840:13:1;1939:91:0;;26146:405:1;;;;;;:::i;:::-;;:::i;11714:322::-;;;;;;;;;;-1:-1:-1;11714:322:1;;;;;:::i;:::-;;:::i;2036:91:0:-;;;;;;;;;;;;;:::i;19136:162:1:-;;;;;;;;;;-1:-1:-1;19136:162:1;;;;;:::i;:::-;19256:25;;;;19233:4;19256:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;19136:162;1807:126:0;;;;;;;;;;-1:-1:-1;1807:126:0;;;;;:::i;:::-;;:::i;:::-;;;;;;5542:13:5;;5557:42;5538:62;5520:81;;5661:4;5649:17;;;5643:24;5669:18;5639:49;5617:20;;;5610:79;5759:4;5747:17;;;5741:24;5734:32;5727:40;5705:20;;;5698:70;5828:4;5816:17;;;5810:24;5836:8;5806:39;5784:20;;;5777:69;;;;5507:3;5492:19;;5309:543;10458:630:1;10543:4;10861:25;;;;;;:101;;-1:-1:-1;10937:25:1;;;;;10861:101;:177;;;-1:-1:-1;11013:25:1;;;;;10861:177;10842:196;10458:630;-1:-1:-1;;10458:630:1:o;11342:98::-;11396:13;11428:5;11421:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11342:98;:::o;18205:223::-;18281:7;18305:16;18313:7;18305;:16::i;:::-;18300:73;;18323:50;18331:41;18323:7;:50::i;:::-;-1:-1:-1;18391:24:1;;;;:15;:24;;;;;:30;;;;18205:223::o;17933:122::-;18021:27;18030:2;18034:7;18043:4;18021:8;:27::i;:::-;17933:122;;:::o;21840:3447::-;21977:27;22007;22026:7;22007:18;:27::i;:::-;4079:14;22159:22;;;;21977:57;;-1:-1:-1;22217:45:1;;;;22213:95;;22264:44;22272:35;22264:7;:44::i;:::-;22320:27;20973:24;;;:15;:24;;;;;21197:26;;22508:68;21197:26;22550:4;42781:10;22556:19;20318:16;20461:32;;;20307:28;;20588:20;;20610:30;;20585:56;;20011:646;22508:68;22503:188;;22595:43;22612:4;42781:10;19136:162;:::i;22595:43::-;22590:101;;22640:51;22648:42;22640:7;:51::i;:::-;22834:15;22831:157;;;22972:1;22951:19;22944:30;22831:157;23360:24;;;;;;;;:18;:24;;;;;;23358:26;;;;;;23428:22;;;;;;;;;23426:24;;-1:-1:-1;23426:24:1;;;17061:11;17036:23;17032:41;17019:63;3686:8;17019:63;23714:26;;;;:17;:26;;;;;:172;;;;3686:8;24003:47;;:52;;23999:617;;24107:1;24097:11;;24075:19;24228:30;;;:17;:30;;;;;;:35;;24224:378;;24364:13;;24349:11;:28;24345:239;;24509:30;;;;:17;:30;;;;;:52;;;24345:239;24057:559;23999:617;4079:14;24744:20;;25115:7;24744:20;25047:4;24990:25;24725:16;;24858:292;25173:8;25185:1;25173:13;25169:58;;25188:39;25196:30;25188:7;:39::i;:::-;21967:3320;;;;21840:3447;;;:::o;2133:111:0:-;2191:7;2217:20;2231:5;9012:25:1;;8985:7;9012:25;;;:18;:25;;;;;;2913:3;9012:50;2654:13;9011:82;;8924:176;25378:187;25519:39;25536:4;25542:2;25546:7;25519:39;;;;;;;;;;;;:16;:39::i;:::-;25378:187;;;:::o;1804:92:3:-;1869:20;1875:7;1884:4;1869:5;:20::i;:::-;1804:92;:::o;1600:100:0:-;1654:4;1677:16;1685:7;1677;:16::i;12703:150:1:-;12775:7;12817:27;12836:7;12817:18;:27::i;8339:239::-;8411:7;8434:19;;;8430:69;;8455:44;8463:35;8455:7;:44::i;:::-;-1:-1:-1;8516:25:1;;;;;;:18;:25;;;;;;2654:13;8516:55;;8339:239::o;11511:102::-;11567:13;11599:7;11592:14;;;;;:::i;1706:95:0:-;1771:23;1781:2;1785:8;1771:9;:23::i;18755:231:1:-;42781:10;18849:39;;;;:18;:39;;;;;;;;;:49;;;;;;;;;;;;:60;;;;;;;;;;;;;18924:55;;586:41:5;;;18849:49:1;;42781:10;18924:55;;559:18:5;18924:55:1;;;;;;;18755:231;;:::o;2009:14:0:-;2002:21;;1939:91;:::o;26146:405:1:-;26315:31;26328:4;26334:2;26338:7;26315:12;:31::i;:::-;26360:14;;;;:19;26356:189;;26398:56;26429:4;26435:2;26439:7;26448:5;26398:30;:56::i;:::-;26393:152;;26474:56;26482:47;26474:7;:56::i;:::-;26146:405;;;;:::o;11714:322::-;11787:13;11817:16;11825:7;11817;:16::i;:::-;11812:68;;11835:45;11843:36;11835:7;:45::i;:::-;11891:21;11915:10;12357:9;;;;;;;;;-1:-1:-1;12357:9:1;;;12281:92;11915:10;11891:34;;11948:7;11942:21;11967:1;11942:26;:87;;;;;;;;;;;;;;;;;11995:7;12004:18;12014:7;12004:9;:18::i;:::-;11978:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;11942:87;11935:94;11714:322;-1:-1:-1;;;11714:322:1:o;2036:91:0:-;2080:7;2106:14;8046:12:1;;;7965:100;1807:126:0;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1907:19:0;1920:5;1907:12;:19::i;19547:360:1:-;19612:11;19695:13;;19685:7;:23;19681:210;;;19728:14;19760:60;-1:-1:-1;19777:26:1;;;;:17;:26;;;;;;;19767:42;;;19760:60;;19811:9;;;:::i;:::-;;;19760:60;;;3412:8;19847:24;:29;;-1:-1:-1;19681:210:1;19547:360;;;:::o;44665:160::-;44764:13;44758:4;44751:27;44804:4;44798;44791:18;36313:460;36437:13;36453:16;36461:7;36453;:16::i;:::-;36437:32;;36484:13;:45;;;;-1:-1:-1;42781:10:1;36501:28;;;;;36484:45;36480:198;;;36548:44;36565:5;42781:10;19136:162;:::i;36548:44::-;36543:135;;36612:51;36620:42;36612:7;:51::i;:::-;36688:24;;;;:15;:24;;;;;;:35;;;;;;;;;;;;;;36738:28;;36688:24;;36738:28;;;;;;;36427:346;36313:460;;;:::o;14144:1978::-;14292:26;;;;:17;:26;;;;;;;14416:11;;;14412:1270;;14462:13;;14451:7;:24;14447:77;;14477:47;14485:38;14477:7;:47::i;:::-;15071:597;-1:-1:-1;15165:9:1;;15147:28;;;;:17;:28;;;;;;15219:25;;15071:597;15219:25;3412:8;15270:6;:24;15298:1;15270:29;15266:48;;14144:1978;;;:::o;15266:48::-;15602:47;15610:38;15602:7;:47::i;:::-;15071:597;;14412:1270;3412:8;16004:6;:24;16032:1;16004:29;16000:48;;14144:1978;;;:::o;16000:48::-;16068:47;16076:38;16068:7;:47::i;37335:3024::-;37414:27;37444;37463:7;37444:18;:27::i;:::-;37414:57;-1:-1:-1;37414:57:1;37482:12;;37602:35;37629:7;20864:27;20973:24;;;:15;:24;;;;;21197:26;;20973:24;;20765:474;37602:35;37545:92;;;;37652:13;37648:321;;;37771:68;37796:15;37813:4;42781:10;37819:19;42695:103;37771:68;37766:192;;37862:43;37879:4;42781:10;19136:162;:::i;37862:43::-;37857:101;;37907:51;37915:42;37907:7;:51::i;:::-;38119:15;38116:157;;;38257:1;38236:19;38229:30;38116:157;38862:24;;;;;;;:18;:24;;;;;:60;;38890:32;38862:60;;;17061:11;17036:23;17032:41;17019:63;39241:43;17019:63;39153:26;;;;:17;:26;;;;;:202;;;;3686:8;39472:47;;:52;;39468:617;;39576:1;39566:11;;39544:19;39697:30;;;:17;:30;;;;;;:35;;39693:378;;39833:13;;39818:11;:28;39814:239;;39978:30;;;;:17;:30;;;;;:52;;;39814:239;39526:559;39468:617;40110:35;;40137:7;;40133:1;;40110:35;;;;;;40133:1;;40110:35;-1:-1:-1;;40328:12:1;:14;;;;;;-1:-1:-1;;;;37335:3024:1:o;35423:110::-;35499:27;35509:2;35513:8;35499:27;;;;;;;;;;;;:9;:27::i;28577:673::-;28755:88;;;;;28735:4;;28755:45;;;;;;:88;;42781:10;;28822:4;;28828:7;;28837:5;;28755:88;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;28755:88:1;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;28751:493;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;29033:6;:13;29050:1;29033:18;29029:113;;29071:56;29079:47;29071:7;:56::i;:::-;29212:6;29206:13;29197:6;29193:2;29189:15;29182:38;28751:493;28911:64;;28921:54;28911:64;;-1:-1:-1;28577:673:1;;;;;;:::o;42895:1708::-;42960:17;43388:4;43381;43375:11;43371:22;43478:1;43472:4;43465:15;43551:4;43548:1;43544:12;43537:19;;;43631:1;43626:3;43619:14;43732:3;43966:5;43948:419;44013:1;44008:3;44004:11;43997:18;;44181:2;44175:4;44171:13;44167:2;44163:22;44158:3;44150:36;44273:2;44263:13;;44328:25;43948:419;44328:25;-1:-1:-1;44395:13:1;;;44508:14;;;;44568:19;;;44508:14;42895:1708;-1:-1:-1;42895:1708:1:o;13291:159::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13418:24:1;;;;:17;:24;;;;;;13399:44;;-1:-1:-1;;;;;;;;16325:41:1;;;;;3298:3;16410:33;;;16376:68;;-1:-1:-1;;;16376:68:1;3412:8;16473:24;;:29;;-1:-1:-1;;;16454:48:1;;;;3807:3;16541:28;;;;-1:-1:-1;;;16512:58:1;-1:-1:-1;16216:361:1;34656:688;34782:19;34788:2;34792:8;34782:5;:19::i;:::-;34840:14;;;;:19;34836:492;;34879:11;34893:13;34940:14;;;34972:238;35002:62;35041:1;35045:2;35049:7;;;;;;35058:5;35002:30;:62::i;:::-;34997:174;;35092:56;35100:47;35092:7;:56::i;:::-;35205:3;35197:5;:11;34972:238;;35290:3;35273:13;;:20;35269:44;;35295:18;35310:1;35295:7;:18::i;:::-;34861:467;;34656:688;;;:::o;29696:2251::-;29768:20;29791:13;;;29818;;;29814:53;;29833:34;29841:25;29833:7;:34::i;:::-;30367:31;;;;:17;:31;;;;;;;;16900:16;16889:28;;17061:11;17036:23;17032:41;17494:1;17481:15;;17455:24;17451:46;17029:52;17019:63;;30367:170;;;30748:22;;;:18;:22;;;;;:71;;30786:32;30774:45;;30748:71;;;16889:28;31004:13;;;31000:54;;31019:35;31027:26;31019:7;:35::i;:::-;31083:23;;;:12;31165:662;31575:7;31532:8;31488:1;31423:25;31361:1;31297;31267:351;31822:3;31809:9;;;;;;:16;31165:662;;-1:-1:-1;31841:13:1;:19;-1:-1:-1;25378:187:1;;;:::o;14:177:5:-;99:66;92:5;88:78;81:5;78:89;68:117;;181:1;178;171:12;196:245;254:6;307:2;295:9;286:7;282:23;278:32;275:52;;;323:1;320;313:12;275:52;362:9;349:23;381:30;405:5;381:30;:::i;638:250::-;723:1;733:113;747:6;744:1;741:13;733:113;;;823:11;;;817:18;804:11;;;797:39;769:2;762:10;733:113;;;-1:-1:-1;;880:1:5;862:16;;855:27;638:250::o;893:330::-;935:3;973:5;967:12;1000:6;995:3;988:19;1016:76;1085:6;1078:4;1073:3;1069:14;1062:4;1055:5;1051:16;1016:76;:::i;:::-;1137:2;1125:15;1142:66;1121:88;1112:98;;;;1212:4;1108:109;;893:330;-1:-1:-1;;893:330:5:o;1228:220::-;1377:2;1366:9;1359:21;1340:4;1397:45;1438:2;1427:9;1423:18;1415:6;1397:45;:::i;1453:226::-;1512:6;1565:2;1553:9;1544:7;1540:23;1536:32;1533:52;;;1581:1;1578;1571:12;1533:52;-1:-1:-1;1626:23:5;;1453:226;-1:-1:-1;1453:226:5:o;1915:196::-;1983:20;;2043:42;2032:54;;2022:65;;2012:93;;2101:1;2098;2091:12;2116:300;2184:6;2192;2245:2;2233:9;2224:7;2220:23;2216:32;2213:52;;;2261:1;2258;2251:12;2213:52;2284:29;2303:9;2284:29;:::i;:::-;2274:39;2382:2;2367:18;;;;2354:32;;-1:-1:-1;;;2116:300:5:o;2603:374::-;2680:6;2688;2696;2749:2;2737:9;2728:7;2724:23;2720:32;2717:52;;;2765:1;2762;2755:12;2717:52;2788:29;2807:9;2788:29;:::i;:::-;2778:39;;2836:38;2870:2;2859:9;2855:18;2836:38;:::i;:::-;2603:374;;2826:48;;-1:-1:-1;;;2943:2:5;2928:18;;;;2915:32;;2603:374::o;2982:186::-;3041:6;3094:2;3082:9;3073:7;3069:23;3065:32;3062:52;;;3110:1;3107;3100:12;3062:52;3133:29;3152:9;3133:29;:::i;3173:347::-;3238:6;3246;3299:2;3287:9;3278:7;3274:23;3270:32;3267:52;;;3315:1;3312;3305:12;3267:52;3338:29;3357:9;3338:29;:::i;:::-;3328:39;;3417:2;3406:9;3402:18;3389:32;3464:5;3457:13;3450:21;3443:5;3440:32;3430:60;;3486:1;3483;3476:12;3430:60;3509:5;3499:15;;;3173:347;;;;;:::o;3525:184::-;3577:77;3574:1;3567:88;3674:4;3671:1;3664:15;3698:4;3695:1;3688:15;3714:1325;3809:6;3817;3825;3833;3886:3;3874:9;3865:7;3861:23;3857:33;3854:53;;;3903:1;3900;3893:12;3854:53;3926:29;3945:9;3926:29;:::i;:::-;3916:39;;3974:38;4008:2;3997:9;3993:18;3974:38;:::i;:::-;3964:48;-1:-1:-1;4081:2:5;4066:18;;4053:32;;-1:-1:-1;4160:2:5;4145:18;;4132:32;4187:18;4176:30;;4173:50;;;4219:1;4216;4209:12;4173:50;4242:22;;4295:4;4287:13;;4283:27;-1:-1:-1;4273:55:5;;4324:1;4321;4314:12;4273:55;4364:2;4351:16;4390:18;4382:6;4379:30;4376:56;;;4412:18;;:::i;:::-;4461:2;4455:9;4608:66;4603:2;4534:66;4527:4;4519:6;4515:17;4511:90;4507:99;4503:172;4495:6;4491:185;4742:6;4730:10;4727:22;4706:18;4694:10;4691:34;4688:62;4685:88;;;4753:18;;:::i;:::-;4789:2;4782:22;4813;;;4854:15;;;4871:2;4850:24;4847:37;-1:-1:-1;4844:57:5;;;4897:1;4894;4887:12;4844:57;4953:6;4948:2;4944;4940:11;4935:2;4927:6;4923:15;4910:50;5006:1;5001:2;4992:6;4984;4980:19;4976:28;4969:39;5027:6;5017:16;;;;;3714:1325;;;;;;;:::o;5044:260::-;5112:6;5120;5173:2;5161:9;5152:7;5148:23;5144:32;5141:52;;;5189:1;5186;5179:12;5141:52;5212:29;5231:9;5212:29;:::i;:::-;5202:39;;5260:38;5294:2;5283:9;5279:18;5260:38;:::i;:::-;5250:48;;5044:260;;;;;:::o;5857:437::-;5936:1;5932:12;;;;5979;;;6000:61;;6054:4;6046:6;6042:17;6032:27;;6000:61;6107:2;6099:6;6096:14;6076:18;6073:38;6070:218;;6144:77;6141:1;6134:88;6245:4;6242:1;6235:15;6273:4;6270:1;6263:15;6070:218;;5857:437;;;:::o;6299:496::-;6478:3;6516:6;6510:13;6532:66;6591:6;6586:3;6579:4;6571:6;6567:17;6532:66;:::i;:::-;6661:13;;6620:16;;;;6683:70;6661:13;6620:16;6730:4;6718:17;;6683:70;:::i;:::-;6769:20;;6299:496;-1:-1:-1;;;;6299:496:5:o;6800:350::-;6839:3;6867:5;6857:193;;6906:77;6903:1;6896:88;7007:4;7004:1;6997:15;7035:4;7032:1;7025:15;6857:193;-1:-1:-1;7077:66:5;7066:78;;6800:350::o;7155:531::-;7398:42;7390:6;7386:55;7375:9;7368:74;7490:42;7482:6;7478:55;7473:2;7462:9;7458:18;7451:83;7570:6;7565:2;7554:9;7550:18;7543:34;7613:3;7608:2;7597:9;7593:18;7586:31;7349:4;7634:46;7675:3;7664:9;7660:19;7652:6;7634:46;:::i;:::-;7626:54;7155:531;-1:-1:-1;;;;;;7155:531:5:o;7691:249::-;7760:6;7813:2;7801:9;7792:7;7788:23;7784:32;7781:52;;;7829:1;7826;7819:12;7781:52;7861:9;7855:16;7880:30;7904:5;7880:30;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1267400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "1327",
								"burn(uint256)": "infinite",
								"exists(uint256)": "infinite",
								"getApproved(uint256)": "infinite",
								"getOwnershipAt(uint256)": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"name()": "infinite",
								"numberBurned(address)": "1333",
								"ownerOf(uint256)": "infinite",
								"safeMint(address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "23247",
								"supportsInterface(bytes4)": "479",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"totalBurned()": "1074",
								"totalMinted()": "1037",
								"totalSupply()": "1877",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1449,
									"end": 2246,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 1449,
									"end": 2246,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1449,
									"end": 2246,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1512,
									"end": 1594,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 1512,
									"end": 1594,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1512,
									"end": 1594,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1512,
									"end": 1594,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1512,
									"end": 1594,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1512,
									"end": 1594,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1512,
									"end": 1594,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1512,
									"end": 1594,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1512,
									"end": 1594,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1512,
									"end": 1594,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1512,
									"end": 1594,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1512,
									"end": 1594,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1512,
									"end": 1594,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1512,
									"end": 1594,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1512,
									"end": 1594,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 1512,
									"end": 1594,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1512,
									"end": 1594,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1512,
									"end": 1594,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1512,
									"end": 1594,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1512,
									"end": 1594,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1512,
									"end": 1594,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1512,
									"end": 1594,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1512,
									"end": 1594,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1512,
									"end": 1594,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1512,
									"end": 1594,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1512,
									"end": 1594,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1512,
									"end": 1594,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1512,
									"end": 1594,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1512,
									"end": 1594,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1512,
									"end": 1594,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1512,
									"end": 1594,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1512,
									"end": 1594,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1576,
									"end": 1581,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1583,
									"end": 1590,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6306,
									"end": 6311,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 6306,
									"end": 6319,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1576,
									"end": 1581,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6306,
									"end": 6311,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6306,
									"end": 6319,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 6306,
									"end": 6319,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6306,
									"end": 6319,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 6306,
									"end": 6319,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6329,
									"end": 6336,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 6329,
									"end": 6346,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 6339,
									"end": 6346,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6329,
									"end": 6336,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6329,
									"end": 6346,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 6329,
									"end": 6346,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6329,
									"end": 6346,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 6329,
									"end": 6346,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6776,
									"end": 6783,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6356,
									"end": 6369,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6356,
									"end": 6387,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1449,
									"end": 2246,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 1449,
									"end": 2246,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1449,
									"end": 2246,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 5,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 146,
									"end": 980,
									"name": "tag",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 146,
									"end": 980,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 200,
									"end": 205,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 256,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 246,
									"end": 250,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 238,
									"end": 244,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 234,
									"end": 251,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 230,
									"end": 257,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 220,
									"end": 275,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 271,
									"end": 272,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 269,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 261,
									"end": 273,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 220,
									"end": 275,
									"name": "tag",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 298,
									"end": 311,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 298,
									"end": 311,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 323,
									"end": 353,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 323,
									"end": 353,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 320,
									"end": 376,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 320,
									"end": 376,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "26"
								},
								{
									"begin": 320,
									"end": 376,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 356,
									"end": 374,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "26"
								},
								{
									"begin": 356,
									"end": 374,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 356,
									"end": 374,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 356,
									"end": 374,
									"name": "tag",
									"source": 5,
									"value": "26"
								},
								{
									"begin": 356,
									"end": 374,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 405,
									"end": 407,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 399,
									"end": 408,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 497,
									"end": 499,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 459,
									"end": 476,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 459,
									"end": 476,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 455,
									"end": 486,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 455,
									"end": 486,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 455,
									"end": 486,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 488,
									"end": 490,
									"name": "PUSH",
									"source": 5,
									"value": "3F"
								},
								{
									"begin": 451,
									"end": 491,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 447,
									"end": 501,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 435,
									"end": 502,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 435,
									"end": 502,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 517,
									"end": 551,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 517,
									"end": 551,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 553,
									"end": 575,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 553,
									"end": 575,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 553,
									"end": 575,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 514,
									"end": 576,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 511,
									"end": 599,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 511,
									"end": 599,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 511,
									"end": 599,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 579,
									"end": 597,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 579,
									"end": 597,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 579,
									"end": 597,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 579,
									"end": 597,
									"name": "tag",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 579,
									"end": 597,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 615,
									"end": 617,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 608,
									"end": 630,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 639,
									"end": 661,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 639,
									"end": 661,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 639,
									"end": 661,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 680,
									"end": 699,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 680,
									"end": 699,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 680,
									"end": 699,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 701,
									"end": 705,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 676,
									"end": 706,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 673,
									"end": 712,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 670,
									"end": 729,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 670,
									"end": 729,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 670,
									"end": 729,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 725,
									"end": 726,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 722,
									"end": 723,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 715,
									"end": 727,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 670,
									"end": 729,
									"name": "tag",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 670,
									"end": 729,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 747,
									"end": 748,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 757,
									"end": 900,
									"name": "tag",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 757,
									"end": 900,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 771,
									"end": 777,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 768,
									"end": 769,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 765,
									"end": 778,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 757,
									"end": 900,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 757,
									"end": 900,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 757,
									"end": 900,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 883,
									"end": 887,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 867,
									"end": 881,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 867,
									"end": 881,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 867,
									"end": 881,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 863,
									"end": 888,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 863,
									"end": 888,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 857,
									"end": 889,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 834,
									"end": 848,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 834,
									"end": 848,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 834,
									"end": 848,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 830,
									"end": 855,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 830,
									"end": 855,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 823,
									"end": 890,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 786,
									"end": 798,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 757,
									"end": 900,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 757,
									"end": 900,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 757,
									"end": 900,
									"name": "tag",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 757,
									"end": 900,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 948,
									"end": 949,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 920,
									"end": 939,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 920,
									"end": 939,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 920,
									"end": 939,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 941,
									"end": 945,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 916,
									"end": 946,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 909,
									"end": 950,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 909,
									"end": 950,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 909,
									"end": 950,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 909,
									"end": 950,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 924,
									"end": 930,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 146,
									"end": 980,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 146,
									"end": 980,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 985,
									"end": 1542,
									"name": "tag",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 985,
									"end": 1542,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1084,
									"end": 1090,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1092,
									"end": 1098,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1145,
									"end": 1147,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1133,
									"end": 1142,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1124,
									"end": 1131,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1120,
									"end": 1143,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 1116,
									"end": 1148,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 1113,
									"end": 1165,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1113,
									"end": 1165,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "34"
								},
								{
									"begin": 1113,
									"end": 1165,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1161,
									"end": 1162,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1158,
									"end": 1159,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1151,
									"end": 1163,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1113,
									"end": 1165,
									"name": "tag",
									"source": 5,
									"value": "34"
								},
								{
									"begin": 1113,
									"end": 1165,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1188,
									"end": 1204,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1188,
									"end": 1204,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1216,
									"end": 1246,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1216,
									"end": 1246,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 1213,
									"end": 1263,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1213,
									"end": 1263,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "35"
								},
								{
									"begin": 1213,
									"end": 1263,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1259,
									"end": 1260,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1256,
									"end": 1257,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1249,
									"end": 1261,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1213,
									"end": 1263,
									"name": "tag",
									"source": 5,
									"value": "35"
								},
								{
									"begin": 1213,
									"end": 1263,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1282,
									"end": 1343,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 1335,
									"end": 1342,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1326,
									"end": 1332,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1315,
									"end": 1324,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 1311,
									"end": 1333,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1282,
									"end": 1343,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 1282,
									"end": 1343,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1282,
									"end": 1343,
									"name": "tag",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 1282,
									"end": 1343,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1389,
									"end": 1391,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1374,
									"end": 1392,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1374,
									"end": 1392,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1368,
									"end": 1393,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1272,
									"end": 1343,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1272,
									"end": 1343,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1368,
									"end": 1393,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1405,
									"end": 1437,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1405,
									"end": 1437,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 1402,
									"end": 1454,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1402,
									"end": 1454,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 1402,
									"end": 1454,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1450,
									"end": 1451,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1447,
									"end": 1448,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1440,
									"end": 1452,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1402,
									"end": 1454,
									"name": "tag",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 1402,
									"end": 1454,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1473,
									"end": 1536,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "38"
								},
								{
									"begin": 1528,
									"end": 1535,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1517,
									"end": 1525,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1506,
									"end": 1515,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 1502,
									"end": 1526,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1473,
									"end": 1536,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 1473,
									"end": 1536,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1473,
									"end": 1536,
									"name": "tag",
									"source": 5,
									"value": "38"
								},
								{
									"begin": 1473,
									"end": 1536,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1463,
									"end": 1536,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1463,
									"end": 1536,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1463,
									"end": 1536,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 985,
									"end": 1542,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 985,
									"end": 1542,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 985,
									"end": 1542,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 985,
									"end": 1542,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 985,
									"end": 1542,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 985,
									"end": 1542,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1547,
									"end": 1927,
									"name": "tag",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 1547,
									"end": 1927,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1626,
									"end": 1627,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1622,
									"end": 1634,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1622,
									"end": 1634,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1622,
									"end": 1634,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 1622,
									"end": 1634,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1669,
									"end": 1681,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1669,
									"end": 1681,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1669,
									"end": 1681,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1690,
									"end": 1751,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1690,
									"end": 1751,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1744,
									"end": 1748,
									"name": "PUSH",
									"source": 5,
									"value": "7F"
								},
								{
									"begin": 1736,
									"end": 1742,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1732,
									"end": 1749,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1722,
									"end": 1749,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1722,
									"end": 1749,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1690,
									"end": 1751,
									"name": "tag",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1690,
									"end": 1751,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1797,
									"end": 1799,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1789,
									"end": 1795,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1786,
									"end": 1800,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 1766,
									"end": 1784,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1763,
									"end": 1801,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 1760,
									"end": 1921,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 1760,
									"end": 1921,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1843,
									"end": 1853,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B71"
								},
								{
									"begin": 1838,
									"end": 1841,
									"name": "PUSH",
									"source": 5,
									"value": "E0"
								},
								{
									"begin": 1834,
									"end": 1854,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 1831,
									"end": 1832,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1824,
									"end": 1855,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1878,
									"end": 1882,
									"name": "PUSH",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 1875,
									"end": 1876,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 1868,
									"end": 1883,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1906,
									"end": 1910,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 1903,
									"end": 1904,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1896,
									"end": 1911,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1760,
									"end": 1921,
									"name": "tag",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 1760,
									"end": 1921,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1760,
									"end": 1921,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1547,
									"end": 1927,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1547,
									"end": 1927,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1547,
									"end": 1927,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1547,
									"end": 1927,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2058,
									"end": 2576,
									"name": "tag",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 2058,
									"end": 2576,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2160,
									"end": 2162,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 2155,
									"end": 2158,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2152,
									"end": 2163,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 2149,
									"end": 2570,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2149,
									"end": 2570,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "44"
								},
								{
									"begin": 2149,
									"end": 2570,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2196,
									"end": 2201,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2193,
									"end": 2194,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2186,
									"end": 2202,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2240,
									"end": 2244,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2237,
									"end": 2238,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2227,
									"end": 2245,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 2310,
									"end": 2312,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 2298,
									"end": 2308,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2294,
									"end": 2313,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2291,
									"end": 2292,
									"name": "PUSH",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 2287,
									"end": 2314,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 2281,
									"end": 2285,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2277,
									"end": 2315,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2346,
									"end": 2350,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2334,
									"end": 2344,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 2331,
									"end": 2351,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 2328,
									"end": 2375,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2328,
									"end": 2375,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "45"
								},
								{
									"begin": 2328,
									"end": 2375,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2369,
									"end": 2373,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2328,
									"end": 2375,
									"name": "tag",
									"source": 5,
									"value": "45"
								},
								{
									"begin": 2328,
									"end": 2375,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2424,
									"end": 2426,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 2419,
									"end": 2422,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2415,
									"end": 2427,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2412,
									"end": 2413,
									"name": "PUSH",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 2408,
									"end": 2428,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 2402,
									"end": 2406,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2398,
									"end": 2429,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2388,
									"end": 2429,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2388,
									"end": 2429,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2479,
									"end": 2560,
									"name": "tag",
									"source": 5,
									"value": "46"
								},
								{
									"begin": 2479,
									"end": 2560,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2497,
									"end": 2499,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2490,
									"end": 2495,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2487,
									"end": 2500,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 2479,
									"end": 2560,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2479,
									"end": 2560,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "48"
								},
								{
									"begin": 2479,
									"end": 2560,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2556,
									"end": 2557,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2542,
									"end": 2558,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2542,
									"end": 2558,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 2523,
									"end": 2524,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 2512,
									"end": 2525,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2479,
									"end": 2560,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "46"
								},
								{
									"begin": 2479,
									"end": 2560,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2479,
									"end": 2560,
									"name": "tag",
									"source": 5,
									"value": "48"
								},
								{
									"begin": 2479,
									"end": 2560,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2483,
									"end": 2486,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2483,
									"end": 2486,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2149,
									"end": 2570,
									"name": "tag",
									"source": 5,
									"value": "44"
								},
								{
									"begin": 2149,
									"end": 2570,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2058,
									"end": 2576,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2058,
									"end": 2576,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2058,
									"end": 2576,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2058,
									"end": 2576,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2752,
									"end": 4051,
									"name": "tag",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 2752,
									"end": 4051,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2872,
									"end": 2882,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2872,
									"end": 2882,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2894,
									"end": 2924,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2894,
									"end": 2924,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 2891,
									"end": 2947,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2891,
									"end": 2947,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "52"
								},
								{
									"begin": 2891,
									"end": 2947,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2927,
									"end": 2945,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "52"
								},
								{
									"begin": 2927,
									"end": 2945,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 2927,
									"end": 2945,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2927,
									"end": 2945,
									"name": "tag",
									"source": 5,
									"value": "52"
								},
								{
									"begin": 2927,
									"end": 2945,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2956,
									"end": 3053,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "53"
								},
								{
									"begin": 3046,
									"end": 3052,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3006,
									"end": 3044,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "54"
								},
								{
									"begin": 3038,
									"end": 3042,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 3032,
									"end": 3043,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 3006,
									"end": 3044,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 3006,
									"end": 3044,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3006,
									"end": 3044,
									"name": "tag",
									"source": 5,
									"value": "54"
								},
								{
									"begin": 3006,
									"end": 3044,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3000,
									"end": 3004,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2956,
									"end": 3053,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 2956,
									"end": 3053,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2956,
									"end": 3053,
									"name": "tag",
									"source": 5,
									"value": "53"
								},
								{
									"begin": 2956,
									"end": 3053,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3102,
									"end": 3106,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 3133,
									"end": 3135,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 3122,
									"end": 3136,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3122,
									"end": 3136,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 3150,
									"end": 3151,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 3145,
									"end": 3794,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3145,
									"end": 3794,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 3145,
									"end": 3794,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "56"
								},
								{
									"begin": 3145,
									"end": 3794,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 3838,
									"end": 3839,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3855,
									"end": 3861,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 3852,
									"end": 3941,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 3852,
									"end": 3941,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "57"
								},
								{
									"begin": 3852,
									"end": 3941,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3907,
									"end": 3926,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 3907,
									"end": 3926,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3907,
									"end": 3926,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3901,
									"end": 3927,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 3852,
									"end": 3941,
									"name": "tag",
									"source": 5,
									"value": "57"
								},
								{
									"begin": 3852,
									"end": 3941,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2709,
									"end": 2710,
									"name": "PUSH",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 2705,
									"end": 2716,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 2705,
									"end": 2716,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2705,
									"end": 2716,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 2701,
									"end": 2725,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 2697,
									"end": 2726,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 2687,
									"end": 2727,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 2733,
									"end": 2734,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 2729,
									"end": 2740,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2729,
									"end": 2740,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2729,
									"end": 2740,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 2684,
									"end": 2741,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 3954,
									"end": 4035,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 3954,
									"end": 4035,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 3115,
									"end": 4045,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "48"
								},
								{
									"begin": 3115,
									"end": 4045,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3145,
									"end": 3794,
									"name": "tag",
									"source": 5,
									"value": "56"
								},
								{
									"begin": 3145,
									"end": 3794,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2005,
									"end": 2006,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1998,
									"end": 2012,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1998,
									"end": 2012,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1998,
									"end": 2012,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2042,
									"end": 2046,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2029,
									"end": 2047,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2029,
									"end": 2047,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3181,
									"end": 3201,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 3181,
									"end": 3201,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 3181,
									"end": 3201,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 3299,
									"end": 3521,
									"name": "tag",
									"source": 5,
									"value": "60"
								},
								{
									"begin": 3299,
									"end": 3521,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3313,
									"end": 3320,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3310,
									"end": 3311,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3307,
									"end": 3321,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 3299,
									"end": 3521,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 3299,
									"end": 3521,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "62"
								},
								{
									"begin": 3299,
									"end": 3521,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 3395,
									"end": 3414,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 3395,
									"end": 3414,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 3395,
									"end": 3414,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3389,
									"end": 3415,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 3374,
									"end": 3416,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3374,
									"end": 3416,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 3502,
									"end": 3506,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 3487,
									"end": 3507,
									"name": "SWAP5",
									"source": 5
								},
								{
									"begin": 3487,
									"end": 3507,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 3487,
									"end": 3507,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3487,
									"end": 3507,
									"name": "SWAP5",
									"source": 5
								},
								{
									"begin": 3455,
									"end": 3456,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 3443,
									"end": 3457,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3443,
									"end": 3457,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 3443,
									"end": 3457,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3443,
									"end": 3457,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 3329,
									"end": 3341,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3299,
									"end": 3521,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "60"
								},
								{
									"begin": 3299,
									"end": 3521,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3299,
									"end": 3521,
									"name": "tag",
									"source": 5,
									"value": "62"
								},
								{
									"begin": 3299,
									"end": 3521,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3303,
									"end": 3306,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3549,
									"end": 3555,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 3540,
									"end": 3547,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3537,
									"end": 3556,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 3534,
									"end": 3735,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 3534,
									"end": 3735,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "63"
								},
								{
									"begin": 3534,
									"end": 3735,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 3610,
									"end": 3629,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 3610,
									"end": 3629,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 3610,
									"end": 3629,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3604,
									"end": 3630,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3693,
									"end": 3694,
									"name": "PUSH",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 3689,
									"end": 3703,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 3689,
									"end": 3703,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3689,
									"end": 3703,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 3705,
									"end": 3708,
									"name": "PUSH",
									"source": 5,
									"value": "F8"
								},
								{
									"begin": 3685,
									"end": 3709,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 3681,
									"end": 3718,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 3677,
									"end": 3719,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 3662,
									"end": 3720,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 3647,
									"end": 3721,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3647,
									"end": 3721,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 3534,
									"end": 3735,
									"name": "tag",
									"source": 5,
									"value": "63"
								},
								{
									"begin": 3534,
									"end": 3735,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3781,
									"end": 3782,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 3765,
									"end": 3779,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3765,
									"end": 3779,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3765,
									"end": 3779,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 3761,
									"end": 3783,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3748,
									"end": 3784,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3748,
									"end": 3784,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2752,
									"end": 4051,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2752,
									"end": 4051,
									"name": "tag",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 2752,
									"end": 4051,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1449,
									"end": 2246,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1449,
									"end": 2246,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1449,
									"end": 2246,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1449,
									"end": 2246,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1449,
									"end": 2246,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1449,
									"end": 2246,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1449,
									"end": 2246,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220221959a2f4c8296ff1e8e373a93622e8879ae1b5f1e34e4ddb9141831d8a2bda64736f6c634300081b0033",
									".code": [
										{
											"begin": 1449,
											"end": 2246,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "PUSH",
											"source": 0,
											"value": "6352211E"
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "PUSH",
											"source": 0,
											"value": "A2309FF8"
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "PUSH",
											"source": 0,
											"value": "D89135CD"
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "PUSH",
											"source": 0,
											"value": "D89135CD"
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "PUSH",
											"source": 0,
											"value": "E985E9C5"
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "PUSH",
											"source": 0,
											"value": "F2523633"
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "PUSH",
											"source": 0,
											"value": "A2309FF8"
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "PUSH",
											"source": 0,
											"value": "B88D4FDE"
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "PUSH",
											"source": 0,
											"value": "C87B56DD"
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "PUSH",
											"source": 0,
											"value": "A1448194"
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "PUSH",
											"source": 0,
											"value": "6352211E"
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "PUSH",
											"source": 0,
											"value": "42842E0E"
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "PUSH",
											"source": 0,
											"value": "42842E0E"
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "PUSH",
											"source": 0,
											"value": "42966C68"
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "PUSH",
											"source": 0,
											"value": "4F558E79"
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "PUSH",
											"source": 0,
											"value": "2478D639"
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "PUSH",
											"source": 0,
											"value": "81812FC"
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "PUSH",
											"source": 0,
											"value": "81812FC"
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 2246,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10458,
											"end": 11088,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 10458,
											"end": 11088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10458,
											"end": 11088,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 10458,
											"end": 11088,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10458,
											"end": 11088,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10458,
											"end": 11088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 10458,
											"end": 11088,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10458,
											"end": 11088,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10458,
											"end": 11088,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10458,
											"end": 11088,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10458,
											"end": 11088,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 10458,
											"end": 11088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10458,
											"end": 11088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 10458,
											"end": 11088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 10458,
											"end": 11088,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 10458,
											"end": 11088,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10458,
											"end": 11088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 10458,
											"end": 11088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10458,
											"end": 11088,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 10458,
											"end": 11088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10458,
											"end": 11088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 10458,
											"end": 11088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10458,
											"end": 11088,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 10458,
											"end": 11088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10458,
											"end": 11088,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10458,
											"end": 11088,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 611,
											"end": 625,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 611,
											"end": 625,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 604,
											"end": 626,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 586,
											"end": 627,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 586,
											"end": 627,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 574,
											"end": 576,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 559,
											"end": 577,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10458,
											"end": 11088,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 10458,
											"end": 11088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10458,
											"end": 11088,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10458,
											"end": 11088,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10458,
											"end": 11088,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10458,
											"end": 11088,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10458,
											"end": 11088,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10458,
											"end": 11088,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10458,
											"end": 11088,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 11342,
											"end": 11440,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 11342,
											"end": 11440,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11342,
											"end": 11440,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 11342,
											"end": 11440,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11342,
											"end": 11440,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11342,
											"end": 11440,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 11342,
											"end": 11440,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11342,
											"end": 11440,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11342,
											"end": 11440,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11342,
											"end": 11440,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 11342,
											"end": 11440,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 11342,
											"end": 11440,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11342,
											"end": 11440,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11342,
											"end": 11440,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 11342,
											"end": 11440,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 11342,
											"end": 11440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11342,
											"end": 11440,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 11342,
											"end": 11440,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11342,
											"end": 11440,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11342,
											"end": 11440,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11342,
											"end": 11440,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 11342,
											"end": 11440,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11342,
											"end": 11440,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11342,
											"end": 11440,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 11342,
											"end": 11440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18205,
											"end": 18428,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 18205,
											"end": 18428,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18205,
											"end": 18428,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 18205,
											"end": 18428,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18205,
											"end": 18428,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 18205,
											"end": 18428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 18205,
											"end": 18428,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18205,
											"end": 18428,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18205,
											"end": 18428,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18205,
											"end": 18428,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 18205,
											"end": 18428,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 18205,
											"end": 18428,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18205,
											"end": 18428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 18205,
											"end": 18428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 18205,
											"end": 18428,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 18205,
											"end": 18428,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 18205,
											"end": 18428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 18205,
											"end": 18428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18205,
											"end": 18428,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 18205,
											"end": 18428,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18205,
											"end": 18428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 18205,
											"end": 18428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18205,
											"end": 18428,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 18205,
											"end": 18428,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18205,
											"end": 18428,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 18205,
											"end": 18428,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1860,
											"end": 1902,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1848,
											"end": 1903,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1848,
											"end": 1903,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1848,
											"end": 1903,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1904,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1904,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1820,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1803,
											"end": 1821,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 18205,
											"end": 18428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1684,
											"end": 1910,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 17933,
											"end": 18055,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 17933,
											"end": 18055,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17933,
											"end": 18055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 17933,
											"end": 18055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 17933,
											"end": 18055,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 17933,
											"end": 18055,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 17933,
											"end": 18055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 17933,
											"end": 18055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17933,
											"end": 18055,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 17933,
											"end": 18055,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17933,
											"end": 18055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 17933,
											"end": 18055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17933,
											"end": 18055,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 17933,
											"end": 18055,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17933,
											"end": 18055,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 7188,
											"end": 7505,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 7188,
											"end": 7505,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7188,
											"end": 7505,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 7188,
											"end": 7505,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7188,
											"end": 7505,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7188,
											"end": 7505,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 7188,
											"end": 7505,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7188,
											"end": 7505,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7188,
											"end": 7505,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7188,
											"end": 7505,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7188,
											"end": 7505,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 7188,
											"end": 7505,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7458,
											"end": 7470,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 7458,
											"end": 7470,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7249,
											"end": 7256,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7442,
											"end": 7455,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7442,
											"end": 7470,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7188,
											"end": 7505,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 7188,
											"end": 7505,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7188,
											"end": 7505,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7188,
											"end": 7505,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2592,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2567,
											"end": 2592,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2567,
											"end": 2592,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2555,
											"end": 2557,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2540,
											"end": 2558,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7188,
											"end": 7505,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 2421,
											"end": 2598,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 21840,
											"end": 25287,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 21840,
											"end": 25287,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21840,
											"end": 25287,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 21840,
											"end": 25287,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 21840,
											"end": 25287,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 21840,
											"end": 25287,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 21840,
											"end": 25287,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 21840,
											"end": 25287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21840,
											"end": 25287,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 21840,
											"end": 25287,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21840,
											"end": 25287,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 21840,
											"end": 25287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2133,
											"end": 2244,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2133,
											"end": 2244,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2133,
											"end": 2244,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2133,
											"end": 2244,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2133,
											"end": 2244,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2133,
											"end": 2244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2133,
											"end": 2244,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2133,
											"end": 2244,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2133,
											"end": 2244,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2133,
											"end": 2244,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2133,
											"end": 2244,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2133,
											"end": 2244,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2133,
											"end": 2244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2133,
											"end": 2244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2133,
											"end": 2244,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2133,
											"end": 2244,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2133,
											"end": 2244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2133,
											"end": 2244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2133,
											"end": 2244,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2133,
											"end": 2244,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2133,
											"end": 2244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2133,
											"end": 2244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25378,
											"end": 25565,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 25378,
											"end": 25565,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25378,
											"end": 25565,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 25378,
											"end": 25565,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 25378,
											"end": 25565,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 25378,
											"end": 25565,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 25378,
											"end": 25565,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 25378,
											"end": 25565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 25378,
											"end": 25565,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 25378,
											"end": 25565,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25378,
											"end": 25565,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 25378,
											"end": 25565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1804,
											"end": 1896,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 1804,
											"end": 1896,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1804,
											"end": 1896,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1804,
											"end": 1896,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1804,
											"end": 1896,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1804,
											"end": 1896,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 1804,
											"end": 1896,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1804,
											"end": 1896,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1804,
											"end": 1896,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1804,
											"end": 1896,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1804,
											"end": 1896,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 1804,
											"end": 1896,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1804,
											"end": 1896,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 1804,
											"end": 1896,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 1804,
											"end": 1896,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1804,
											"end": 1896,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1804,
											"end": 1896,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 1804,
											"end": 1896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1804,
											"end": 1896,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 1804,
											"end": 1896,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1804,
											"end": 1896,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 1804,
											"end": 1896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1600,
											"end": 1700,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1600,
											"end": 1700,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1600,
											"end": 1700,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1600,
											"end": 1700,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1600,
											"end": 1700,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1600,
											"end": 1700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1600,
											"end": 1700,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1600,
											"end": 1700,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1600,
											"end": 1700,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1600,
											"end": 1700,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1600,
											"end": 1700,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1600,
											"end": 1700,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1600,
											"end": 1700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1600,
											"end": 1700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1600,
											"end": 1700,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1600,
											"end": 1700,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1600,
											"end": 1700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1600,
											"end": 1700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1600,
											"end": 1700,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1600,
											"end": 1700,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1600,
											"end": 1700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1600,
											"end": 1700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12703,
											"end": 12853,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 12703,
											"end": 12853,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12703,
											"end": 12853,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 12703,
											"end": 12853,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12703,
											"end": 12853,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12703,
											"end": 12853,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 12703,
											"end": 12853,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12703,
											"end": 12853,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12703,
											"end": 12853,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12703,
											"end": 12853,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 12703,
											"end": 12853,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 12703,
											"end": 12853,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12703,
											"end": 12853,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 12703,
											"end": 12853,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 12703,
											"end": 12853,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 12703,
											"end": 12853,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 12703,
											"end": 12853,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 12703,
											"end": 12853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12703,
											"end": 12853,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 12703,
											"end": 12853,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12703,
											"end": 12853,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 12703,
											"end": 12853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8339,
											"end": 8578,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 8339,
											"end": 8578,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8339,
											"end": 8578,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 8339,
											"end": 8578,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8339,
											"end": 8578,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8339,
											"end": 8578,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 8339,
											"end": 8578,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8339,
											"end": 8578,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8339,
											"end": 8578,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8339,
											"end": 8578,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8339,
											"end": 8578,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 8339,
											"end": 8578,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8339,
											"end": 8578,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 8339,
											"end": 8578,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 8339,
											"end": 8578,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 8339,
											"end": 8578,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8339,
											"end": 8578,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 8339,
											"end": 8578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8339,
											"end": 8578,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 8339,
											"end": 8578,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8339,
											"end": 8578,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 8339,
											"end": 8578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11511,
											"end": 11613,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 11511,
											"end": 11613,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11511,
											"end": 11613,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 11511,
											"end": 11613,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11511,
											"end": 11613,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11511,
											"end": 11613,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 11511,
											"end": 11613,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11511,
											"end": 11613,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11511,
											"end": 11613,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11511,
											"end": 11613,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 11511,
											"end": 11613,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 11511,
											"end": 11613,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11511,
											"end": 11613,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11511,
											"end": 11613,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 11511,
											"end": 11613,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 11511,
											"end": 11613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1706,
											"end": 1801,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1706,
											"end": 1801,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1706,
											"end": 1801,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1706,
											"end": 1801,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1706,
											"end": 1801,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1706,
											"end": 1801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1706,
											"end": 1801,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1706,
											"end": 1801,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1706,
											"end": 1801,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1706,
											"end": 1801,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1706,
											"end": 1801,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1706,
											"end": 1801,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1706,
											"end": 1801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1706,
											"end": 1801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1706,
											"end": 1801,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1706,
											"end": 1801,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1706,
											"end": 1801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1706,
											"end": 1801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1706,
											"end": 1801,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1706,
											"end": 1801,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1706,
											"end": 1801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1706,
											"end": 1801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18755,
											"end": 18986,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 18755,
											"end": 18986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18755,
											"end": 18986,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 18755,
											"end": 18986,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18755,
											"end": 18986,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 18755,
											"end": 18986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 18755,
											"end": 18986,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18755,
											"end": 18986,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18755,
											"end": 18986,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18755,
											"end": 18986,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 18755,
											"end": 18986,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 18755,
											"end": 18986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18755,
											"end": 18986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 18755,
											"end": 18986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 18755,
											"end": 18986,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 18755,
											"end": 18986,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 18755,
											"end": 18986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 18755,
											"end": 18986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18755,
											"end": 18986,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 18755,
											"end": 18986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18755,
											"end": 18986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 18755,
											"end": 18986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1939,
											"end": 2030,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1939,
											"end": 2030,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1939,
											"end": 2030,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1939,
											"end": 2030,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1939,
											"end": 2030,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1939,
											"end": 2030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1939,
											"end": 2030,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1939,
											"end": 2030,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1939,
											"end": 2030,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1939,
											"end": 2030,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1939,
											"end": 2030,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1939,
											"end": 2030,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1983,
											"end": 1990,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7840,
											"end": 7853,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1939,
											"end": 2030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1939,
											"end": 2030,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26146,
											"end": 26551,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 26146,
											"end": 26551,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26146,
											"end": 26551,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 26146,
											"end": 26551,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 26146,
											"end": 26551,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 26146,
											"end": 26551,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 26146,
											"end": 26551,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 26146,
											"end": 26551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26146,
											"end": 26551,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 26146,
											"end": 26551,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26146,
											"end": 26551,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 26146,
											"end": 26551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11714,
											"end": 12036,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 11714,
											"end": 12036,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11714,
											"end": 12036,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 11714,
											"end": 12036,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11714,
											"end": 12036,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11714,
											"end": 12036,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 11714,
											"end": 12036,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11714,
											"end": 12036,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11714,
											"end": 12036,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11714,
											"end": 12036,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 11714,
											"end": 12036,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 11714,
											"end": 12036,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11714,
											"end": 12036,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 11714,
											"end": 12036,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 11714,
											"end": 12036,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 11714,
											"end": 12036,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11714,
											"end": 12036,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 11714,
											"end": 12036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11714,
											"end": 12036,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 11714,
											"end": 12036,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11714,
											"end": 12036,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 11714,
											"end": 12036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2036,
											"end": 2127,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2036,
											"end": 2127,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2036,
											"end": 2127,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2036,
											"end": 2127,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2036,
											"end": 2127,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2036,
											"end": 2127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2036,
											"end": 2127,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2036,
											"end": 2127,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2036,
											"end": 2127,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2036,
											"end": 2127,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2036,
											"end": 2127,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2036,
											"end": 2127,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2036,
											"end": 2127,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2036,
											"end": 2127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2036,
											"end": 2127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 2036,
											"end": 2127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19136,
											"end": 19298,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 19136,
											"end": 19298,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19136,
											"end": 19298,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 19136,
											"end": 19298,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19136,
											"end": 19298,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 19136,
											"end": 19298,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 19136,
											"end": 19298,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 19136,
											"end": 19298,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19136,
											"end": 19298,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19136,
											"end": 19298,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 19136,
											"end": 19298,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 19136,
											"end": 19298,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19136,
											"end": 19298,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 19136,
											"end": 19298,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 19136,
											"end": 19298,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 19136,
											"end": 19298,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 19136,
											"end": 19298,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 19136,
											"end": 19298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19136,
											"end": 19298,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 19136,
											"end": 19298,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19256,
											"end": 19281,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19256,
											"end": 19281,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19256,
											"end": 19281,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19256,
											"end": 19281,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 19233,
											"end": 19237,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19256,
											"end": 19281,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19256,
											"end": 19281,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19256,
											"end": 19281,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19256,
											"end": 19274,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 19256,
											"end": 19281,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19256,
											"end": 19281,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19256,
											"end": 19281,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19256,
											"end": 19281,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19256,
											"end": 19281,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 19256,
											"end": 19281,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19256,
											"end": 19281,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 19256,
											"end": 19281,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 19256,
											"end": 19291,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 19256,
											"end": 19291,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19256,
											"end": 19291,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 19256,
											"end": 19291,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 19256,
											"end": 19291,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19256,
											"end": 19291,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19256,
											"end": 19291,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19256,
											"end": 19291,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19256,
											"end": 19291,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19256,
											"end": 19291,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19256,
											"end": 19291,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 19256,
											"end": 19291,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 19256,
											"end": 19291,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 19256,
											"end": 19291,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 19256,
											"end": 19291,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19136,
											"end": 19298,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1807,
											"end": 1933,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1807,
											"end": 1933,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1933,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1933,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1933,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 1807,
											"end": 1933,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1933,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1807,
											"end": 1933,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1933,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1933,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 1807,
											"end": 1933,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1807,
											"end": 1933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1807,
											"end": 1933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1807,
											"end": 1933,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1933,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1807,
											"end": 1933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1807,
											"end": 1933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1933,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1807,
											"end": 1933,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1807,
											"end": 1933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1933,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1807,
											"end": 1933,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1933,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1807,
											"end": 1933,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1807,
											"end": 1933,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1933,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5542,
											"end": 5555,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5542,
											"end": 5555,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5557,
											"end": 5599,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5538,
											"end": 5600,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5520,
											"end": 5601,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5520,
											"end": 5601,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5661,
											"end": 5665,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5649,
											"end": 5666,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5649,
											"end": 5666,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5649,
											"end": 5666,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5643,
											"end": 5667,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5669,
											"end": 5687,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5639,
											"end": 5688,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5617,
											"end": 5637,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5617,
											"end": 5637,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5617,
											"end": 5637,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5610,
											"end": 5689,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5759,
											"end": 5763,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5747,
											"end": 5764,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5747,
											"end": 5764,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5747,
											"end": 5764,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5741,
											"end": 5765,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5734,
											"end": 5766,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5727,
											"end": 5767,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5705,
											"end": 5725,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5705,
											"end": 5725,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5705,
											"end": 5725,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5698,
											"end": 5768,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5828,
											"end": 5832,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 5816,
											"end": 5833,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5816,
											"end": 5833,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5816,
											"end": 5833,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5810,
											"end": 5834,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5836,
											"end": 5844,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFF"
										},
										{
											"begin": 5806,
											"end": 5845,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5804,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5804,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5804,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5777,
											"end": 5846,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5777,
											"end": 5846,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5777,
											"end": 5846,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5777,
											"end": 5846,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5507,
											"end": 5510,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 5492,
											"end": 5511,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5492,
											"end": 5511,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5309,
											"end": 5852,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10458,
											"end": 11088,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 10458,
											"end": 11088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10543,
											"end": 10547,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10861,
											"end": 10886,
											"name": "PUSH",
											"source": 1,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10861,
											"end": 10886,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10861,
											"end": 10886,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10861,
											"end": 10886,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10861,
											"end": 10886,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 10861,
											"end": 10886,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10861,
											"end": 10962,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 10861,
											"end": 10962,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10937,
											"end": 10962,
											"name": "PUSH",
											"source": 1,
											"value": "80AC58CD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10937,
											"end": 10962,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10937,
											"end": 10962,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10937,
											"end": 10962,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10937,
											"end": 10962,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 10861,
											"end": 10962,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 10861,
											"end": 10962,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10861,
											"end": 11038,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10861,
											"end": 11038,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 10861,
											"end": 11038,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11013,
											"end": 11038,
											"name": "PUSH",
											"source": 1,
											"value": "5B5E139F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11013,
											"end": 11038,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11013,
											"end": 11038,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11013,
											"end": 11038,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11013,
											"end": 11038,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 10861,
											"end": 11038,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 10861,
											"end": 11038,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10842,
											"end": 11038,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10458,
											"end": 11088,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10458,
											"end": 11088,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11342,
											"end": 11440,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 11342,
											"end": 11440,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11396,
											"end": 11409,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 11428,
											"end": 11433,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 11421,
											"end": 11433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 11421,
											"end": 11433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11342,
											"end": 11440,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11342,
											"end": 11440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18205,
											"end": 18428,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 18205,
											"end": 18428,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18281,
											"end": 18288,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18305,
											"end": 18321,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 18313,
											"end": 18320,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18305,
											"end": 18312,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 18305,
											"end": 18321,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18305,
											"end": 18321,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 18305,
											"end": 18321,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18300,
											"end": 18373,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 18300,
											"end": 18373,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18323,
											"end": 18373,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 18331,
											"end": 18372,
											"name": "PUSH",
											"source": 1,
											"value": "CF4700E400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18323,
											"end": 18330,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 18323,
											"end": 18373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18323,
											"end": 18373,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 18323,
											"end": 18373,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18391,
											"end": 18415,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18391,
											"end": 18415,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18391,
											"end": 18415,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18391,
											"end": 18415,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18391,
											"end": 18406,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 18391,
											"end": 18415,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18391,
											"end": 18415,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18391,
											"end": 18415,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 18391,
											"end": 18415,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18391,
											"end": 18415,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 18391,
											"end": 18421,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 18391,
											"end": 18421,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18391,
											"end": 18421,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18391,
											"end": 18421,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18205,
											"end": 18428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17933,
											"end": 18055,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 17933,
											"end": 18055,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18021,
											"end": 18048,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 18030,
											"end": 18032,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18034,
											"end": 18041,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18043,
											"end": 18047,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 18021,
											"end": 18029,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 18021,
											"end": 18048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18021,
											"end": 18048,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 18021,
											"end": 18048,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17933,
											"end": 18055,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17933,
											"end": 18055,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17933,
											"end": 18055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21840,
											"end": 25287,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 21840,
											"end": 25287,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21977,
											"end": 22004,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22007,
											"end": 22034,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 22026,
											"end": 22033,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22007,
											"end": 22025,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 22007,
											"end": 22034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22007,
											"end": 22034,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 22007,
											"end": 22034,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4079,
											"end": 4093,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22159,
											"end": 22181,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 22159,
											"end": 22181,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 22159,
											"end": 22181,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 22159,
											"end": 22181,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 21977,
											"end": 22034,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21977,
											"end": 22034,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 22217,
											"end": 22262,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22217,
											"end": 22262,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 22217,
											"end": 22262,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 22217,
											"end": 22262,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 22213,
											"end": 22308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 22213,
											"end": 22308,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 22264,
											"end": 22308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 22272,
											"end": 22307,
											"name": "PUSH",
											"source": 1,
											"value": "A114810000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22264,
											"end": 22271,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 22264,
											"end": 22308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22264,
											"end": 22308,
											"name": "tag",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 22264,
											"end": 22308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22320,
											"end": 22347,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20973,
											"end": 20997,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20973,
											"end": 20997,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20973,
											"end": 20997,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20973,
											"end": 20988,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 20973,
											"end": 20997,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 20973,
											"end": 20997,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20973,
											"end": 20997,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 20973,
											"end": 20997,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20973,
											"end": 20997,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 21197,
											"end": 21223,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 21197,
											"end": 21223,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 22508,
											"end": 22576,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 21197,
											"end": 21223,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22550,
											"end": 22554,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 42781,
											"end": 42791,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 22556,
											"end": 22575,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 22556,
											"end": 22575,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20318,
											"end": 20334,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20461,
											"end": 20493,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20461,
											"end": 20493,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20461,
											"end": 20493,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 20307,
											"end": 20335,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20307,
											"end": 20335,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 20588,
											"end": 20608,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20588,
											"end": 20608,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 20610,
											"end": 20640,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20610,
											"end": 20640,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 20585,
											"end": 20641,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 20585,
											"end": 20641,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20011,
											"end": 20657,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22508,
											"end": 22576,
											"name": "tag",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 22508,
											"end": 22576,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22503,
											"end": 22691,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 22503,
											"end": 22691,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 22595,
											"end": 22638,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 22612,
											"end": 22616,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 42781,
											"end": 42791,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 19136,
											"end": 19298,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 19136,
											"end": 19298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22595,
											"end": 22638,
											"name": "tag",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 22595,
											"end": 22638,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22590,
											"end": 22691,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 22590,
											"end": 22691,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 22640,
											"end": 22691,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 22648,
											"end": 22690,
											"name": "PUSH",
											"source": 1,
											"value": "59C896BE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22640,
											"end": 22647,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 22640,
											"end": 22691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22640,
											"end": 22691,
											"name": "tag",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 22640,
											"end": 22691,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22834,
											"end": 22849,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 22831,
											"end": 22988,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 22831,
											"end": 22988,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 22831,
											"end": 22988,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 22972,
											"end": 22973,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22951,
											"end": 22970,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22944,
											"end": 22974,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 22831,
											"end": 22988,
											"name": "tag",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 22831,
											"end": 22988,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23360,
											"end": 23384,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23360,
											"end": 23384,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 23360,
											"end": 23384,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23360,
											"end": 23384,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 23360,
											"end": 23384,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23360,
											"end": 23384,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23360,
											"end": 23384,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23360,
											"end": 23384,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23360,
											"end": 23378,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 23360,
											"end": 23384,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23360,
											"end": 23384,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23360,
											"end": 23384,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 23360,
											"end": 23384,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 23360,
											"end": 23384,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23360,
											"end": 23384,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 23358,
											"end": 23384,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 23358,
											"end": 23384,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 23358,
											"end": 23384,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23358,
											"end": 23384,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23358,
											"end": 23384,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23358,
											"end": 23384,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 23428,
											"end": 23450,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23428,
											"end": 23450,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 23428,
											"end": 23450,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 23428,
											"end": 23450,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 23428,
											"end": 23450,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23428,
											"end": 23450,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23428,
											"end": 23450,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23428,
											"end": 23450,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23428,
											"end": 23450,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 23426,
											"end": 23450,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 23426,
											"end": 23450,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 23426,
											"end": 23450,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23426,
											"end": 23450,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23426,
											"end": 23450,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 17061,
											"end": 17072,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 17036,
											"end": 17059,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 17032,
											"end": 17073,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 17019,
											"end": 17082,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3694,
											"name": "PUSH",
											"source": 1,
											"value": "200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17019,
											"end": 17082,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 23714,
											"end": 23740,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23714,
											"end": 23740,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 23714,
											"end": 23740,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23714,
											"end": 23740,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23714,
											"end": 23731,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 23714,
											"end": 23740,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23714,
											"end": 23740,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23714,
											"end": 23740,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 23714,
											"end": 23740,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23714,
											"end": 23740,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 23714,
											"end": 23886,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23714,
											"end": 23886,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23714,
											"end": 23886,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23714,
											"end": 23886,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3694,
											"name": "PUSH",
											"source": 1,
											"value": "200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 24003,
											"end": 24050,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 24003,
											"end": 24050,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 24003,
											"end": 24055,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24003,
											"end": 24055,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 23999,
											"end": 24616,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 23999,
											"end": 24616,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 24107,
											"end": 24108,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 24097,
											"end": 24108,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 24097,
											"end": 24108,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24075,
											"end": 24094,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24228,
											"end": 24258,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24228,
											"end": 24258,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24228,
											"end": 24258,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24228,
											"end": 24245,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 24228,
											"end": 24258,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24228,
											"end": 24258,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24228,
											"end": 24258,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 24228,
											"end": 24258,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24228,
											"end": 24258,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 24228,
											"end": 24258,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 24228,
											"end": 24263,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24228,
											"end": 24263,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 24224,
											"end": 24602,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 24224,
											"end": 24602,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 24364,
											"end": 24377,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24364,
											"end": 24377,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 24349,
											"end": 24360,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24349,
											"end": 24377,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 24345,
											"end": 24584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 24345,
											"end": 24584,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 24509,
											"end": 24539,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24509,
											"end": 24539,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24509,
											"end": 24539,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24509,
											"end": 24539,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24509,
											"end": 24526,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 24509,
											"end": 24539,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24509,
											"end": 24539,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24509,
											"end": 24539,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 24509,
											"end": 24539,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24509,
											"end": 24539,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 24509,
											"end": 24561,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 24509,
											"end": 24561,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24509,
											"end": 24561,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 24345,
											"end": 24584,
											"name": "tag",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 24345,
											"end": 24584,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24057,
											"end": 24616,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23999,
											"end": 24616,
											"name": "tag",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 23999,
											"end": 24616,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4079,
											"end": 4093,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24744,
											"end": 24764,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 24744,
											"end": 24764,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 25115,
											"end": 25122,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 24744,
											"end": 24764,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 25047,
											"end": 25051,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 24990,
											"end": 25015,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 24725,
											"end": 24741,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24725,
											"end": 24741,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 24858,
											"end": 25150,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 25173,
											"end": 25181,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 25185,
											"end": 25186,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25173,
											"end": 25186,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 25169,
											"end": 25227,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 25169,
											"end": 25227,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 25188,
											"end": 25227,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 25196,
											"end": 25226,
											"name": "PUSH",
											"source": 1,
											"value": "EA553B3400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 25188,
											"end": 25195,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 25188,
											"end": 25227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 25188,
											"end": 25227,
											"name": "tag",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 25188,
											"end": 25227,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21967,
											"end": 25287,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21967,
											"end": 25287,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21967,
											"end": 25287,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21967,
											"end": 25287,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21840,
											"end": 25287,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21840,
											"end": 25287,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21840,
											"end": 25287,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21840,
											"end": 25287,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2133,
											"end": 2244,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2133,
											"end": 2244,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2191,
											"end": 2198,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2217,
											"end": 2237,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 2231,
											"end": 2236,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9012,
											"end": 9037,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9012,
											"end": 9037,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8985,
											"end": 8992,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9012,
											"end": 9037,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9012,
											"end": 9037,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9012,
											"end": 9037,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9012,
											"end": 9030,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 9012,
											"end": 9037,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9012,
											"end": 9037,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9012,
											"end": 9037,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9012,
											"end": 9037,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9012,
											"end": 9037,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9012,
											"end": 9037,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2913,
											"end": 2916,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 9012,
											"end": 9062,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 2654,
											"end": 2667,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9011,
											"end": 9093,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9011,
											"end": 9093,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8924,
											"end": 9100,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 25378,
											"end": 25565,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 25378,
											"end": 25565,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25519,
											"end": 25558,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 25536,
											"end": 25540,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 25542,
											"end": 25544,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 25546,
											"end": 25553,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 25519,
											"end": 25558,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 25519,
											"end": 25558,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 25519,
											"end": 25558,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 25519,
											"end": 25558,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 25519,
											"end": 25558,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25519,
											"end": 25558,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 25519,
											"end": 25558,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 25519,
											"end": 25558,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 25519,
											"end": 25558,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25519,
											"end": 25558,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 25519,
											"end": 25558,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 25519,
											"end": 25558,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25519,
											"end": 25535,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 25519,
											"end": 25558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 25519,
											"end": 25558,
											"name": "tag",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 25519,
											"end": 25558,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25378,
											"end": 25565,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25378,
											"end": 25565,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25378,
											"end": 25565,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25378,
											"end": 25565,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1804,
											"end": 1896,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 1804,
											"end": 1896,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1869,
											"end": 1889,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 1875,
											"end": 1882,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1884,
											"end": 1888,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 1869,
											"end": 1889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1869,
											"end": 1889,
											"name": "tag",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 1869,
											"end": 1889,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1804,
											"end": 1896,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1804,
											"end": 1896,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1600,
											"end": 1700,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1600,
											"end": 1700,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1654,
											"end": 1658,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1677,
											"end": 1693,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1677,
											"end": 1684,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1677,
											"end": 1693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12703,
											"end": 12853,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 12703,
											"end": 12853,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12775,
											"end": 12782,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12817,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 12836,
											"end": 12843,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12817,
											"end": 12835,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 12817,
											"end": 12844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8339,
											"end": 8578,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 8339,
											"end": 8578,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8411,
											"end": 8418,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8434,
											"end": 8453,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8434,
											"end": 8453,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8434,
											"end": 8453,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8430,
											"end": 8499,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 8430,
											"end": 8499,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8455,
											"end": 8499,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 8463,
											"end": 8498,
											"name": "PUSH",
											"source": 1,
											"value": "8F4EB60400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8455,
											"end": 8462,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 8455,
											"end": 8499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8455,
											"end": 8499,
											"name": "tag",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 8455,
											"end": 8499,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8516,
											"end": 8541,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8516,
											"end": 8541,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8516,
											"end": 8541,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8516,
											"end": 8541,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8516,
											"end": 8541,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8516,
											"end": 8541,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8516,
											"end": 8534,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 8516,
											"end": 8541,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8516,
											"end": 8541,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8516,
											"end": 8541,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8516,
											"end": 8541,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8516,
											"end": 8541,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8516,
											"end": 8541,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2654,
											"end": 2667,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8516,
											"end": 8571,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8516,
											"end": 8571,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8339,
											"end": 8578,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11511,
											"end": 11613,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 11511,
											"end": 11613,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11567,
											"end": 11580,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 11599,
											"end": 11606,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 11592,
											"end": 11606,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11592,
											"end": 11606,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 11592,
											"end": 11606,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 11592,
											"end": 11606,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11592,
											"end": 11606,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 11592,
											"end": 11606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1706,
											"end": 1801,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1706,
											"end": 1801,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 1781,
											"end": 1783,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1785,
											"end": 1793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 1771,
											"end": 1794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18755,
											"end": 18986,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 18755,
											"end": 18986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 42781,
											"end": 42791,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 18849,
											"end": 18888,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18849,
											"end": 18888,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18849,
											"end": 18888,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18849,
											"end": 18888,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18849,
											"end": 18867,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 18849,
											"end": 18888,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18849,
											"end": 18888,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18849,
											"end": 18888,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18849,
											"end": 18888,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18849,
											"end": 18888,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 18849,
											"end": 18888,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18849,
											"end": 18888,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 18849,
											"end": 18888,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 18849,
											"end": 18888,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18849,
											"end": 18898,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 18849,
											"end": 18898,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18849,
											"end": 18898,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18849,
											"end": 18898,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 18849,
											"end": 18898,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18849,
											"end": 18898,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18849,
											"end": 18898,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 18849,
											"end": 18898,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18849,
											"end": 18898,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 18849,
											"end": 18898,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18849,
											"end": 18898,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18849,
											"end": 18898,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 18849,
											"end": 18909,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18849,
											"end": 18909,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 18849,
											"end": 18909,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00"
										},
										{
											"begin": 18849,
											"end": 18909,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18849,
											"end": 18909,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 18849,
											"end": 18909,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 18849,
											"end": 18909,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 18849,
											"end": 18909,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18849,
											"end": 18909,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18849,
											"end": 18909,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 18849,
											"end": 18909,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18849,
											"end": 18909,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18849,
											"end": 18909,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 18924,
											"end": 18979,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18924,
											"end": 18979,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 586,
											"end": 627,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 586,
											"end": 627,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 586,
											"end": 627,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 18849,
											"end": 18898,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18849,
											"end": 18898,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 42781,
											"end": 42791,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18924,
											"end": 18979,
											"name": "PUSH",
											"source": 1,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 18924,
											"end": 18979,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 559,
											"end": 577,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 18924,
											"end": 18979,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 18924,
											"end": 18979,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 18924,
											"end": 18979,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18924,
											"end": 18979,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18924,
											"end": 18979,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 18924,
											"end": 18979,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18924,
											"end": 18979,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 18755,
											"end": 18986,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18755,
											"end": 18986,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18755,
											"end": 18986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2009,
											"end": 2023,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 2009,
											"end": 2023,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2002,
											"end": 2023,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2002,
											"end": 2023,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1939,
											"end": 2030,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1939,
											"end": 2030,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26146,
											"end": 26551,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 26146,
											"end": 26551,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26315,
											"end": 26346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 26328,
											"end": 26332,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 26334,
											"end": 26336,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 26338,
											"end": 26345,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 26315,
											"end": 26327,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 26315,
											"end": 26346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26315,
											"end": 26346,
											"name": "tag",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 26315,
											"end": 26346,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26360,
											"end": 26374,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26360,
											"end": 26374,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 26360,
											"end": 26374,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 26360,
											"end": 26374,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 26360,
											"end": 26379,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 26356,
											"end": 26545,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 26356,
											"end": 26545,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 26398,
											"end": 26454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 26429,
											"end": 26433,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 26435,
											"end": 26437,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 26439,
											"end": 26446,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 26448,
											"end": 26453,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 26398,
											"end": 26428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 26398,
											"end": 26454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26398,
											"end": 26454,
											"name": "tag",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 26398,
											"end": 26454,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26393,
											"end": 26545,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 26393,
											"end": 26545,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 26474,
											"end": 26530,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 26482,
											"end": 26529,
											"name": "PUSH",
											"source": 1,
											"value": "D1A57ED600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 26474,
											"end": 26481,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 26474,
											"end": 26530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26474,
											"end": 26530,
											"name": "tag",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 26474,
											"end": 26530,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26146,
											"end": 26551,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26146,
											"end": 26551,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26146,
											"end": 26551,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26146,
											"end": 26551,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26146,
											"end": 26551,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11714,
											"end": 12036,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 11714,
											"end": 12036,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11787,
											"end": 11800,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 11817,
											"end": 11833,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 11825,
											"end": 11832,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11817,
											"end": 11824,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 11817,
											"end": 11833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11817,
											"end": 11833,
											"name": "tag",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 11817,
											"end": 11833,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11812,
											"end": 11880,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 11812,
											"end": 11880,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11835,
											"end": 11880,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 11843,
											"end": 11879,
											"name": "PUSH",
											"source": 1,
											"value": "A14C4B5000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11835,
											"end": 11842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 11835,
											"end": 11880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11835,
											"end": 11880,
											"name": "tag",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 11835,
											"end": 11880,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11891,
											"end": 11912,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11915,
											"end": 11925,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 12357,
											"end": 12366,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12357,
											"end": 12366,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12357,
											"end": 12366,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12357,
											"end": 12366,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12357,
											"end": 12366,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12357,
											"end": 12366,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12357,
											"end": 12366,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12357,
											"end": 12366,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12357,
											"end": 12366,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 12357,
											"end": 12366,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12357,
											"end": 12366,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12357,
											"end": 12366,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12281,
											"end": 12373,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11915,
											"end": 11925,
											"name": "tag",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 11915,
											"end": 11925,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11891,
											"end": 11925,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11891,
											"end": 11925,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11948,
											"end": 11955,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11942,
											"end": 11963,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11967,
											"end": 11968,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11942,
											"end": 11968,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11942,
											"end": 12029,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 11942,
											"end": 12029,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11942,
											"end": 12029,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11942,
											"end": 12029,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11942,
											"end": 12029,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11942,
											"end": 12029,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11942,
											"end": 12029,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11942,
											"end": 12029,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11942,
											"end": 12029,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11942,
											"end": 12029,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11942,
											"end": 12029,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11942,
											"end": 12029,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11942,
											"end": 12029,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11942,
											"end": 12029,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11942,
											"end": 12029,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 11942,
											"end": 12029,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11942,
											"end": 12029,
											"name": "tag",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 11942,
											"end": 12029,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11995,
											"end": 12002,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12004,
											"end": 12022,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 12014,
											"end": 12021,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12004,
											"end": 12013,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 12004,
											"end": 12022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12004,
											"end": 12022,
											"name": "tag",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 12004,
											"end": 12022,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11978,
											"end": 12023,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11978,
											"end": 12023,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11978,
											"end": 12023,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11978,
											"end": 12023,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11978,
											"end": 12023,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 11978,
											"end": 12023,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11978,
											"end": 12023,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11978,
											"end": 12023,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11978,
											"end": 12023,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 11978,
											"end": 12023,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11978,
											"end": 12023,
											"name": "tag",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 11978,
											"end": 12023,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11978,
											"end": 12023,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11978,
											"end": 12023,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11978,
											"end": 12023,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11978,
											"end": 12023,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11978,
											"end": 12023,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11978,
											"end": 12023,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11978,
											"end": 12023,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11978,
											"end": 12023,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11978,
											"end": 12023,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11978,
											"end": 12023,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11978,
											"end": 12023,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11978,
											"end": 12023,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11942,
											"end": 12029,
											"name": "tag",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 11942,
											"end": 12029,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11935,
											"end": 12029,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 11714,
											"end": 12036,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11714,
											"end": 12036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2036,
											"end": 2127,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 2036,
											"end": 2127,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2080,
											"end": 2087,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2106,
											"end": 2120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 8046,
											"end": 8058,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 8046,
											"end": 8058,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8046,
											"end": 8058,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7965,
											"end": 8065,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1807,
											"end": 1933,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1807,
											"end": 1933,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1907,
											"end": 1926,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 1920,
											"end": 1925,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1907,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 1907,
											"end": 1926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19547,
											"end": 19907,
											"name": "tag",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 19547,
											"end": 19907,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19612,
											"end": 19623,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19695,
											"end": 19708,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19695,
											"end": 19708,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 19685,
											"end": 19692,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19685,
											"end": 19708,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 19681,
											"end": 19891,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 19681,
											"end": 19891,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 19681,
											"end": 19891,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 19728,
											"end": 19742,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19760,
											"end": 19820,
											"name": "tag",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 19760,
											"end": 19820,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19777,
											"end": 19803,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19777,
											"end": 19803,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19777,
											"end": 19803,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19777,
											"end": 19803,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19777,
											"end": 19794,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 19777,
											"end": 19803,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19777,
											"end": 19803,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19777,
											"end": 19803,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 19777,
											"end": 19803,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19777,
											"end": 19803,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 19777,
											"end": 19803,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 19777,
											"end": 19803,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19767,
											"end": 19809,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19767,
											"end": 19809,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19767,
											"end": 19809,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 19760,
											"end": 19820,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 19760,
											"end": 19820,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 19811,
											"end": 19820,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 19811,
											"end": 19820,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 19811,
											"end": 19820,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 19811,
											"end": 19820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19811,
											"end": 19820,
											"name": "tag",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 19811,
											"end": 19820,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19811,
											"end": 19820,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 19811,
											"end": 19820,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19760,
											"end": 19820,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 19760,
											"end": 19820,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19760,
											"end": 19820,
											"name": "tag",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 19760,
											"end": 19820,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3412,
											"end": 3420,
											"name": "PUSH",
											"source": 1,
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19847,
											"end": 19871,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 19847,
											"end": 19876,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 19847,
											"end": 19876,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19681,
											"end": 19891,
											"name": "tag",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 19681,
											"end": 19891,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19547,
											"end": 19907,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19547,
											"end": 19907,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19547,
											"end": 19907,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19547,
											"end": 19907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 44665,
											"end": 44825,
											"name": "tag",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 44665,
											"end": 44825,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 44764,
											"end": 44777,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 44758,
											"end": 44762,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 44751,
											"end": 44778,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 44804,
											"end": 44808,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 44798,
											"end": 44802,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 44791,
											"end": 44809,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 36313,
											"end": 36773,
											"name": "tag",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 36313,
											"end": 36773,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 36437,
											"end": 36450,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 36453,
											"end": 36469,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 36461,
											"end": 36468,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 36453,
											"end": 36460,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 36453,
											"end": 36469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 36453,
											"end": 36469,
											"name": "tag",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 36453,
											"end": 36469,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 36437,
											"end": 36469,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 36437,
											"end": 36469,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 36484,
											"end": 36497,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 36484,
											"end": 36529,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 36484,
											"end": 36529,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 36484,
											"end": 36529,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 36484,
											"end": 36529,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 42781,
											"end": 42791,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 36501,
											"end": 36529,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36501,
											"end": 36529,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 36501,
											"end": 36529,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 36501,
											"end": 36529,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 36501,
											"end": 36529,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 36484,
											"end": 36529,
											"name": "tag",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 36484,
											"end": 36529,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 36480,
											"end": 36678,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 36480,
											"end": 36678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 36480,
											"end": 36678,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 36548,
											"end": 36592,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 36565,
											"end": 36570,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 42781,
											"end": 42791,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 19136,
											"end": 19298,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 19136,
											"end": 19298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 36548,
											"end": 36592,
											"name": "tag",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 36548,
											"end": 36592,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 36543,
											"end": 36678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 36543,
											"end": 36678,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 36612,
											"end": 36663,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 36620,
											"end": 36662,
											"name": "PUSH",
											"source": 1,
											"value": "CFB3B94200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 36612,
											"end": 36619,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 36612,
											"end": 36663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 36612,
											"end": 36663,
											"name": "tag",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 36612,
											"end": 36663,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 36688,
											"end": 36712,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 36688,
											"end": 36712,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 36688,
											"end": 36712,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 36688,
											"end": 36712,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 36688,
											"end": 36703,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 36688,
											"end": 36712,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 36688,
											"end": 36712,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 36688,
											"end": 36712,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 36688,
											"end": 36712,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 36688,
											"end": 36712,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 36688,
											"end": 36712,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 36688,
											"end": 36723,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 36688,
											"end": 36723,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 36688,
											"end": 36723,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 36688,
											"end": 36723,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 36688,
											"end": 36723,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36688,
											"end": 36723,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 36688,
											"end": 36723,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 36688,
											"end": 36723,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 36688,
											"end": 36723,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 36688,
											"end": 36723,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 36688,
											"end": 36723,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 36688,
											"end": 36723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 36688,
											"end": 36723,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 36688,
											"end": 36723,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 36738,
											"end": 36766,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 36738,
											"end": 36766,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 36688,
											"end": 36712,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 36688,
											"end": 36712,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 36738,
											"end": 36766,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 36738,
											"end": 36766,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 36738,
											"end": 36766,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 36738,
											"end": 36766,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 36738,
											"end": 36766,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 36738,
											"end": 36766,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 36738,
											"end": 36766,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 36427,
											"end": 36773,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 36313,
											"end": 36773,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 36313,
											"end": 36773,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 36313,
											"end": 36773,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 36313,
											"end": 36773,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14144,
											"end": 16122,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 14144,
											"end": 16122,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14292,
											"end": 14318,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14292,
											"end": 14318,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14292,
											"end": 14318,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14292,
											"end": 14318,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14292,
											"end": 14309,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 14292,
											"end": 14318,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14292,
											"end": 14318,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14292,
											"end": 14318,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14292,
											"end": 14318,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14292,
											"end": 14318,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 14292,
											"end": 14318,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 14292,
											"end": 14318,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14416,
											"end": 14427,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14416,
											"end": 14427,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14416,
											"end": 14427,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14412,
											"end": 15682,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 14412,
											"end": 15682,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14462,
											"end": 14475,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14462,
											"end": 14475,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 14451,
											"end": 14458,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14451,
											"end": 14475,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 14447,
											"end": 14524,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 14447,
											"end": 14524,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14477,
											"end": 14524,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 14485,
											"end": 14523,
											"name": "PUSH",
											"source": 1,
											"value": "DF2D9B4200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14477,
											"end": 14484,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 14477,
											"end": 14524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14477,
											"end": 14524,
											"name": "tag",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 14477,
											"end": 14524,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15071,
											"end": 15668,
											"name": "tag",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 15071,
											"end": 15668,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15165,
											"end": 15174,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15165,
											"end": 15174,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15147,
											"end": 15175,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15147,
											"end": 15175,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15147,
											"end": 15175,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15147,
											"end": 15175,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15147,
											"end": 15164,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 15147,
											"end": 15175,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15147,
											"end": 15175,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15147,
											"end": 15175,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15147,
											"end": 15175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15147,
											"end": 15175,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 15147,
											"end": 15175,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 15219,
											"end": 15244,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15219,
											"end": 15244,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15071,
											"end": 15668,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 15219,
											"end": 15244,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3412,
											"end": 3420,
											"name": "PUSH",
											"source": 1,
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15270,
											"end": 15276,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15270,
											"end": 15294,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15298,
											"end": 15299,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15270,
											"end": 15299,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15266,
											"end": 15314,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 15266,
											"end": 15314,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14144,
											"end": 16122,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14144,
											"end": 16122,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14144,
											"end": 16122,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14144,
											"end": 16122,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15266,
											"end": 15314,
											"name": "tag",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 15266,
											"end": 15314,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15602,
											"end": 15649,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 15610,
											"end": 15648,
											"name": "PUSH",
											"source": 1,
											"value": "DF2D9B4200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15602,
											"end": 15609,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 15602,
											"end": 15649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15602,
											"end": 15649,
											"name": "tag",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 15602,
											"end": 15649,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15071,
											"end": 15668,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 15071,
											"end": 15668,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14412,
											"end": 15682,
											"name": "tag",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 14412,
											"end": 15682,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3412,
											"end": 3420,
											"name": "PUSH",
											"source": 1,
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16004,
											"end": 16010,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16004,
											"end": 16028,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16032,
											"end": 16033,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16004,
											"end": 16033,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16000,
											"end": 16048,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 16000,
											"end": 16048,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14144,
											"end": 16122,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14144,
											"end": 16122,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14144,
											"end": 16122,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14144,
											"end": 16122,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16000,
											"end": 16048,
											"name": "tag",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 16000,
											"end": 16048,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16068,
											"end": 16115,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 16076,
											"end": 16114,
											"name": "PUSH",
											"source": 1,
											"value": "DF2D9B4200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16068,
											"end": 16075,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 16068,
											"end": 16115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 37335,
											"end": 40359,
											"name": "tag",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 37335,
											"end": 40359,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 37414,
											"end": 37441,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 37444,
											"end": 37471,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 37463,
											"end": 37470,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 37444,
											"end": 37462,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 37444,
											"end": 37471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 37444,
											"end": 37471,
											"name": "tag",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 37444,
											"end": 37471,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 37414,
											"end": 37471,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 37414,
											"end": 37471,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 37482,
											"end": 37494,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 37482,
											"end": 37494,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 37602,
											"end": 37637,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 37629,
											"end": 37636,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 20864,
											"end": 20891,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20973,
											"end": 20997,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20973,
											"end": 20997,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20973,
											"end": 20997,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20973,
											"end": 20988,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 20973,
											"end": 20997,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 20973,
											"end": 20997,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20973,
											"end": 20997,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 20973,
											"end": 20997,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20973,
											"end": 20997,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 21197,
											"end": 21223,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 21197,
											"end": 21223,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 20973,
											"end": 20997,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20973,
											"end": 20997,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20765,
											"end": 21239,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 37602,
											"end": 37637,
											"name": "tag",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 37602,
											"end": 37637,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 37545,
											"end": 37637,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 37545,
											"end": 37637,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 37545,
											"end": 37637,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 37545,
											"end": 37637,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 37652,
											"end": 37665,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 37648,
											"end": 37969,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 37648,
											"end": 37969,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 37648,
											"end": 37969,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 37771,
											"end": 37839,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 37796,
											"end": 37811,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 37813,
											"end": 37817,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 42781,
											"end": 42791,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 37819,
											"end": 37838,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 42695,
											"end": 42798,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 37771,
											"end": 37839,
											"name": "tag",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 37771,
											"end": 37839,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 37766,
											"end": 37958,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 37766,
											"end": 37958,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 37862,
											"end": 37905,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 37879,
											"end": 37883,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 42781,
											"end": 42791,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 19136,
											"end": 19298,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 19136,
											"end": 19298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 37862,
											"end": 37905,
											"name": "tag",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 37862,
											"end": 37905,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 37857,
											"end": 37958,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 37857,
											"end": 37958,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 37907,
											"end": 37958,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 37915,
											"end": 37957,
											"name": "PUSH",
											"source": 1,
											"value": "59C896BE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 37907,
											"end": 37914,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 37907,
											"end": 37958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 37907,
											"end": 37958,
											"name": "tag",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 37907,
											"end": 37958,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 38119,
											"end": 38134,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 38116,
											"end": 38273,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 38116,
											"end": 38273,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 38116,
											"end": 38273,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 38257,
											"end": 38258,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 38236,
											"end": 38255,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 38229,
											"end": 38259,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 38116,
											"end": 38273,
											"name": "tag",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 38116,
											"end": 38273,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 38862,
											"end": 38886,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38862,
											"end": 38886,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 38862,
											"end": 38886,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 38862,
											"end": 38886,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 38862,
											"end": 38886,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 38862,
											"end": 38886,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 38862,
											"end": 38886,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 38862,
											"end": 38880,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 38862,
											"end": 38886,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 38862,
											"end": 38886,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 38862,
											"end": 38886,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 38862,
											"end": 38886,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 38862,
											"end": 38886,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 38862,
											"end": 38922,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 38862,
											"end": 38922,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 38890,
											"end": 38922,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38862,
											"end": 38922,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 38862,
											"end": 38922,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 38862,
											"end": 38922,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 17061,
											"end": 17072,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 17036,
											"end": 17059,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 17032,
											"end": 17073,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 17019,
											"end": 17082,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 39241,
											"end": 39284,
											"name": "PUSH",
											"source": 1,
											"value": "300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17019,
											"end": 17082,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 39153,
											"end": 39179,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 39153,
											"end": 39179,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 39153,
											"end": 39179,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 39153,
											"end": 39179,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 39153,
											"end": 39170,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 39153,
											"end": 39179,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 39153,
											"end": 39179,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 39153,
											"end": 39179,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 39153,
											"end": 39179,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 39153,
											"end": 39179,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 39153,
											"end": 39355,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 39153,
											"end": 39355,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 39153,
											"end": 39355,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 39153,
											"end": 39355,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3694,
											"name": "PUSH",
											"source": 1,
											"value": "200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 39472,
											"end": 39519,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 39472,
											"end": 39519,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 39472,
											"end": 39524,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 39472,
											"end": 39524,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 39468,
											"end": 40085,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 39468,
											"end": 40085,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 39576,
											"end": 39577,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 39566,
											"end": 39577,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 39566,
											"end": 39577,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 39544,
											"end": 39563,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 39697,
											"end": 39727,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 39697,
											"end": 39727,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 39697,
											"end": 39727,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 39697,
											"end": 39714,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 39697,
											"end": 39727,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 39697,
											"end": 39727,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 39697,
											"end": 39727,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 39697,
											"end": 39727,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 39697,
											"end": 39727,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 39697,
											"end": 39727,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 39697,
											"end": 39732,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 39697,
											"end": 39732,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 39693,
											"end": 40071,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 39693,
											"end": 40071,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 39833,
											"end": 39846,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 39833,
											"end": 39846,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 39818,
											"end": 39829,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 39818,
											"end": 39846,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 39814,
											"end": 40053,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 39814,
											"end": 40053,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 39978,
											"end": 40008,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 39978,
											"end": 40008,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 39978,
											"end": 40008,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 39978,
											"end": 40008,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 39978,
											"end": 39995,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 39978,
											"end": 40008,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 39978,
											"end": 40008,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 39978,
											"end": 40008,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 39978,
											"end": 40008,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 39978,
											"end": 40008,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 39978,
											"end": 40030,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 39978,
											"end": 40030,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 39978,
											"end": 40030,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 39814,
											"end": 40053,
											"name": "tag",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 39814,
											"end": 40053,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 39526,
											"end": 40085,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 39468,
											"end": 40085,
											"name": "tag",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 39468,
											"end": 40085,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 40110,
											"end": 40145,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 40110,
											"end": 40145,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 40137,
											"end": 40144,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 40137,
											"end": 40144,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 40133,
											"end": 40134,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 40133,
											"end": 40134,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 40110,
											"end": 40145,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 40110,
											"end": 40145,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 40110,
											"end": 40145,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 40110,
											"end": 40145,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 40110,
											"end": 40145,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 40110,
											"end": 40145,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 40133,
											"end": 40134,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 40133,
											"end": 40134,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 40110,
											"end": 40145,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 40328,
											"end": 40340,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 40328,
											"end": 40342,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 40328,
											"end": 40342,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 40328,
											"end": 40342,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 40328,
											"end": 40342,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 40328,
											"end": 40342,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 40328,
											"end": 40342,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 37335,
											"end": 40359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 35423,
											"end": 35533,
											"name": "tag",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 35423,
											"end": 35533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 35499,
											"end": 35526,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 35509,
											"end": 35511,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 35513,
											"end": 35521,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 35499,
											"end": 35526,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 35499,
											"end": 35526,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 35499,
											"end": 35526,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 35499,
											"end": 35526,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 35499,
											"end": 35526,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 35499,
											"end": 35526,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 35499,
											"end": 35526,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 35499,
											"end": 35526,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 35499,
											"end": 35526,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 35499,
											"end": 35526,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 35499,
											"end": 35526,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 35499,
											"end": 35526,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 35499,
											"end": 35508,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 35499,
											"end": 35526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 28577,
											"end": 29250,
											"name": "tag",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 28577,
											"end": 29250,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28755,
											"end": 28843,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 28755,
											"end": 28843,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 28755,
											"end": 28843,
											"name": "PUSH",
											"source": 1,
											"value": "150B7A0200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 28755,
											"end": 28843,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28755,
											"end": 28843,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 28735,
											"end": 28739,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28735,
											"end": 28739,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28755,
											"end": 28800,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28755,
											"end": 28800,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 28755,
											"end": 28800,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 28755,
											"end": 28800,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28755,
											"end": 28800,
											"name": "PUSH",
											"source": 1,
											"value": "150B7A02"
										},
										{
											"begin": 28755,
											"end": 28800,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28755,
											"end": 28843,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 28755,
											"end": 28843,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 42781,
											"end": 42791,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 42781,
											"end": 42791,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28822,
											"end": 28826,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 28822,
											"end": 28826,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28828,
											"end": 28835,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 28828,
											"end": 28835,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28837,
											"end": 28842,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 28837,
											"end": 28842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28755,
											"end": 28843,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 28755,
											"end": 28843,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28755,
											"end": 28843,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 28755,
											"end": 28843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 28755,
											"end": 28843,
											"name": "tag",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 28755,
											"end": 28843,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28755,
											"end": 28843,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 28755,
											"end": 28843,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 28755,
											"end": 28843,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 28755,
											"end": 28843,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28755,
											"end": 28843,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 28755,
											"end": 28843,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 28755,
											"end": 28843,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28755,
											"end": 28843,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28755,
											"end": 28843,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 28755,
											"end": 28843,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 28755,
											"end": 28843,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 28755,
											"end": 28843,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 28755,
											"end": 28843,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28755,
											"end": 28843,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28755,
											"end": 28843,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28755,
											"end": 28843,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28755,
											"end": 28843,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 28755,
											"end": 28843,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 28755,
											"end": 28843,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28755,
											"end": 28843,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 28755,
											"end": 28843,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28755,
											"end": 28843,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 28755,
											"end": 28843,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 28755,
											"end": 28843,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 28755,
											"end": 28843,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28755,
											"end": 28843,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28755,
											"end": 28843,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28755,
											"end": 28843,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 28755,
											"end": 28843,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 28755,
											"end": 28843,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 28755,
											"end": 28843,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28755,
											"end": 28843,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28755,
											"end": 28843,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 28755,
											"end": 28843,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 28755,
											"end": 28843,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 28755,
											"end": 28843,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 28755,
											"end": 28843,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28755,
											"end": 28843,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28755,
											"end": 28843,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28755,
											"end": 28843,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 28755,
											"end": 28843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 28755,
											"end": 28843,
											"name": "tag",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 28755,
											"end": 28843,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28755,
											"end": 28843,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 28755,
											"end": 28843,
											"name": "tag",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 28755,
											"end": 28843,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28751,
											"end": 29244,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 28751,
											"end": 29244,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 28751,
											"end": 29244,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 28751,
											"end": 29244,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28751,
											"end": 29244,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28751,
											"end": 29244,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 28751,
											"end": 29244,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 28751,
											"end": 29244,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 28751,
											"end": 29244,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 28751,
											"end": 29244,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 28751,
											"end": 29244,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 28751,
											"end": 29244,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28751,
											"end": 29244,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 28751,
											"end": 29244,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 28751,
											"end": 29244,
											"name": "PUSH",
											"source": 1,
											"value": "3F"
										},
										{
											"begin": 28751,
											"end": 29244,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 28751,
											"end": 29244,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28751,
											"end": 29244,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 28751,
											"end": 29244,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 28751,
											"end": 29244,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28751,
											"end": 29244,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 28751,
											"end": 29244,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 28751,
											"end": 29244,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 28751,
											"end": 29244,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 28751,
											"end": 29244,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 28751,
											"end": 29244,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 28751,
											"end": 29244,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28751,
											"end": 29244,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 28751,
											"end": 29244,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 28751,
											"end": 29244,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28751,
											"end": 29244,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 28751,
											"end": 29244,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 28751,
											"end": 29244,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 28751,
											"end": 29244,
											"name": "tag",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 28751,
											"end": 29244,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28751,
											"end": 29244,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 28751,
											"end": 29244,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 28751,
											"end": 29244,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28751,
											"end": 29244,
											"name": "tag",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 28751,
											"end": 29244,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28751,
											"end": 29244,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29033,
											"end": 29039,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 29033,
											"end": 29046,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 29050,
											"end": 29051,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 29033,
											"end": 29051,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 29029,
											"end": 29142,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 29029,
											"end": 29142,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 29071,
											"end": 29127,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 29079,
											"end": 29126,
											"name": "PUSH",
											"source": 1,
											"value": "D1A57ED600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 29071,
											"end": 29078,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 29071,
											"end": 29127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 29071,
											"end": 29127,
											"name": "tag",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 29071,
											"end": 29127,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 29212,
											"end": 29218,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 29206,
											"end": 29219,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 29197,
											"end": 29203,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 29193,
											"end": 29195,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 29189,
											"end": 29204,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29182,
											"end": 29220,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 28751,
											"end": 29244,
											"name": "tag",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 28751,
											"end": 29244,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28911,
											"end": 28975,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 28911,
											"end": 28975,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 28921,
											"end": 28975,
											"name": "PUSH",
											"source": 1,
											"value": "150B7A0200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 28911,
											"end": 28975,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 28911,
											"end": 28975,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28577,
											"end": 29250,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 28577,
											"end": 29250,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 28577,
											"end": 29250,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28577,
											"end": 29250,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28577,
											"end": 29250,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28577,
											"end": 29250,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28577,
											"end": 29250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 42895,
											"end": 44603,
											"name": "tag",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 42895,
											"end": 44603,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 42960,
											"end": 42977,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 43388,
											"end": 43392,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 43381,
											"end": 43385,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 43375,
											"end": 43386,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 43371,
											"end": 43393,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 43478,
											"end": 43479,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 43472,
											"end": 43476,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 43465,
											"end": 43480,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 43551,
											"end": 43555,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 43548,
											"end": 43549,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 43544,
											"end": 43556,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 43537,
											"end": 43556,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 43537,
											"end": 43556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 43537,
											"end": 43556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 43631,
											"end": 43632,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 43626,
											"end": 43629,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 43619,
											"end": 43633,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 43732,
											"end": 43735,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 43966,
											"end": 43971,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 43948,
											"end": 44367,
											"name": "tag",
											"source": 1,
											"value": "328"
										},
										{
											"begin": 43948,
											"end": 44367,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 44013,
											"end": 44014,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 44008,
											"end": 44011,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 44004,
											"end": 44015,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 43997,
											"end": 44015,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 43997,
											"end": 44015,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 44181,
											"end": 44183,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 44175,
											"end": 44179,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 44171,
											"end": 44184,
											"name": "MOD",
											"source": 1
										},
										{
											"begin": 44167,
											"end": 44169,
											"name": "PUSH",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 44163,
											"end": 44185,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 44158,
											"end": 44161,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 44150,
											"end": 44186,
											"name": "MSTORE8",
											"source": 1
										},
										{
											"begin": 44273,
											"end": 44275,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 44263,
											"end": 44276,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 44263,
											"end": 44276,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 44328,
											"end": 44353,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 43948,
											"end": 44367,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "328"
										},
										{
											"begin": 44328,
											"end": 44353,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 44395,
											"end": 44408,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 44395,
											"end": 44408,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 44395,
											"end": 44408,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 44508,
											"end": 44522,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 44508,
											"end": 44522,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 44508,
											"end": 44522,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 44508,
											"end": 44522,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 44568,
											"end": 44587,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 44568,
											"end": 44587,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 44568,
											"end": 44587,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 44508,
											"end": 44522,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 42895,
											"end": 44603,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 42895,
											"end": 44603,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13291,
											"end": 13450,
											"name": "tag",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 13291,
											"end": 13450,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 13418,
											"end": 13442,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13418,
											"end": 13442,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13418,
											"end": 13442,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13418,
											"end": 13442,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13418,
											"end": 13435,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 13418,
											"end": 13442,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13418,
											"end": 13442,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13418,
											"end": 13442,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13418,
											"end": 13442,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13418,
											"end": 13442,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 13418,
											"end": 13442,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 13399,
											"end": 13443,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 13399,
											"end": 13443,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 16325,
											"end": 16366,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16325,
											"end": 16366,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16325,
											"end": 16366,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16325,
											"end": 16366,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16325,
											"end": 16366,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3298,
											"end": 3301,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 16410,
											"end": 16443,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16410,
											"end": 16443,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16410,
											"end": 16443,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 16376,
											"end": 16444,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16376,
											"end": 16444,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 16376,
											"end": 16444,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3412,
											"end": 3420,
											"name": "PUSH",
											"source": 1,
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16473,
											"end": 16497,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16473,
											"end": 16497,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16473,
											"end": 16502,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 16473,
											"end": 16502,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 16454,
											"end": 16502,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16454,
											"end": 16502,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16454,
											"end": 16502,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16454,
											"end": 16502,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3807,
											"end": 3810,
											"name": "PUSH",
											"source": 1,
											"value": "E8"
										},
										{
											"begin": 16541,
											"end": 16569,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16541,
											"end": 16569,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16541,
											"end": 16569,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16541,
											"end": 16569,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 16512,
											"end": 16570,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 16216,
											"end": 16577,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 34656,
											"end": 35344,
											"name": "tag",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 34656,
											"end": 35344,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 34782,
											"end": 34801,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 34788,
											"end": 34790,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 34792,
											"end": 34800,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 34782,
											"end": 34787,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 34782,
											"end": 34801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 34782,
											"end": 34801,
											"name": "tag",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 34782,
											"end": 34801,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 34840,
											"end": 34854,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34840,
											"end": 34854,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 34840,
											"end": 34854,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 34840,
											"end": 34854,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 34840,
											"end": 34859,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 34836,
											"end": 35328,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 34836,
											"end": 35328,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 34879,
											"end": 34890,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 34893,
											"end": 34906,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 34940,
											"end": 34954,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 34940,
											"end": 34954,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 34940,
											"end": 34954,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 34972,
											"end": 35210,
											"name": "tag",
											"source": 1,
											"value": "342"
										},
										{
											"begin": 34972,
											"end": 35210,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 35002,
											"end": 35064,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "345"
										},
										{
											"begin": 35041,
											"end": 35042,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 35045,
											"end": 35047,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 35049,
											"end": 35056,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 35049,
											"end": 35056,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 35049,
											"end": 35056,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 35049,
											"end": 35056,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 35049,
											"end": 35056,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 35049,
											"end": 35056,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 35058,
											"end": 35063,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 35002,
											"end": 35032,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 35002,
											"end": 35064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 35002,
											"end": 35064,
											"name": "tag",
											"source": 1,
											"value": "345"
										},
										{
											"begin": 35002,
											"end": 35064,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 34997,
											"end": 35171,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 34997,
											"end": 35171,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 35092,
											"end": 35148,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 35100,
											"end": 35147,
											"name": "PUSH",
											"source": 1,
											"value": "D1A57ED600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 35092,
											"end": 35099,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 35092,
											"end": 35148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 35092,
											"end": 35148,
											"name": "tag",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 35092,
											"end": 35148,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 35205,
											"end": 35208,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 35197,
											"end": 35202,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 35197,
											"end": 35208,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 34972,
											"end": 35210,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "342"
										},
										{
											"begin": 34972,
											"end": 35210,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 35290,
											"end": 35293,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 35273,
											"end": 35286,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 35273,
											"end": 35286,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 35273,
											"end": 35293,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 35269,
											"end": 35313,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 35269,
											"end": 35313,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 35295,
											"end": 35313,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 35310,
											"end": 35311,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 35295,
											"end": 35302,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 35295,
											"end": 35313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 35295,
											"end": 35313,
											"name": "tag",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 35295,
											"end": 35313,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 34861,
											"end": 35328,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34861,
											"end": 35328,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34656,
											"end": 35344,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34656,
											"end": 35344,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34656,
											"end": 35344,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34656,
											"end": 35344,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 29696,
											"end": 31947,
											"name": "tag",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 29696,
											"end": 31947,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 29768,
											"end": 29788,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 29791,
											"end": 29804,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 29791,
											"end": 29804,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 29791,
											"end": 29804,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 29818,
											"end": 29831,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 29818,
											"end": 29831,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 29818,
											"end": 29831,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 29814,
											"end": 29867,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 29814,
											"end": 29867,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 29833,
											"end": 29867,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 29841,
											"end": 29866,
											"name": "PUSH",
											"source": 1,
											"value": "B562E8DD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 29833,
											"end": 29840,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 29833,
											"end": 29867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 29833,
											"end": 29867,
											"name": "tag",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 29833,
											"end": 29867,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30367,
											"end": 30398,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 30367,
											"end": 30398,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 30367,
											"end": 30398,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 30367,
											"end": 30398,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 30367,
											"end": 30384,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 30367,
											"end": 30398,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 30367,
											"end": 30398,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30367,
											"end": 30398,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 30367,
											"end": 30398,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 30367,
											"end": 30398,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 30367,
											"end": 30398,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 30367,
											"end": 30398,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 30367,
											"end": 30398,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 16900,
											"end": 16916,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16889,
											"end": 16917,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 16889,
											"end": 16917,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17061,
											"end": 17072,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 17036,
											"end": 17059,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 17032,
											"end": 17073,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 17494,
											"end": 17495,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 17481,
											"end": 17496,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 17481,
											"end": 17496,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 17455,
											"end": 17479,
											"name": "PUSH",
											"source": 1,
											"value": "E1"
										},
										{
											"begin": 17451,
											"end": 17497,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 17029,
											"end": 17081,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 17019,
											"end": 17082,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17019,
											"end": 17082,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 30367,
											"end": 30537,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30367,
											"end": 30537,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 30367,
											"end": 30537,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 30748,
											"end": 30770,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 30748,
											"end": 30770,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 30748,
											"end": 30770,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 30748,
											"end": 30766,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 30748,
											"end": 30770,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30748,
											"end": 30770,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 30748,
											"end": 30770,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 30748,
											"end": 30770,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 30748,
											"end": 30770,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 30748,
											"end": 30819,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 30748,
											"end": 30819,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 30786,
											"end": 30818,
											"name": "PUSH",
											"source": 1,
											"value": "10000000000000001"
										},
										{
											"begin": 30774,
											"end": 30819,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 30774,
											"end": 30819,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 30748,
											"end": 30819,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30748,
											"end": 30819,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30748,
											"end": 30819,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 16889,
											"end": 16917,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 31004,
											"end": 31017,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 31004,
											"end": 31017,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 31004,
											"end": 31017,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 31000,
											"end": 31054,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "361"
										},
										{
											"begin": 31000,
											"end": 31054,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 31019,
											"end": 31054,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "361"
										},
										{
											"begin": 31027,
											"end": 31053,
											"name": "PUSH",
											"source": 1,
											"value": "2E07630000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 31019,
											"end": 31026,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 31019,
											"end": 31054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 31019,
											"end": 31054,
											"name": "tag",
											"source": 1,
											"value": "361"
										},
										{
											"begin": 31019,
											"end": 31054,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31083,
											"end": 31106,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 31083,
											"end": 31106,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 31083,
											"end": 31106,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 31083,
											"end": 31095,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 31165,
											"end": 31827,
											"name": "tag",
											"source": 1,
											"value": "362"
										},
										{
											"begin": 31165,
											"end": 31827,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31575,
											"end": 31582,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 31532,
											"end": 31540,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 31488,
											"end": 31489,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 31423,
											"end": 31448,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 31361,
											"end": 31362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 31297,
											"end": 31298,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 31267,
											"end": 31618,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 31822,
											"end": 31825,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 31809,
											"end": 31818,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 31809,
											"end": 31818,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 31809,
											"end": 31818,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 31809,
											"end": 31818,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 31809,
											"end": 31818,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31809,
											"end": 31818,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 31809,
											"end": 31825,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 31165,
											"end": 31827,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "362"
										},
										{
											"begin": 31165,
											"end": 31827,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 31841,
											"end": 31854,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 31841,
											"end": 31860,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 25378,
											"end": 25565,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25378,
											"end": 25565,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25378,
											"end": 25565,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25378,
											"end": 25565,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 191,
											"name": "tag",
											"source": 5,
											"value": "367"
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 99,
											"end": 165,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 92,
											"end": 97,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 88,
											"end": 166,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 81,
											"end": 86,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 78,
											"end": 167,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 68,
											"end": 185,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 68,
											"end": 185,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 181,
											"end": 182,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 178,
											"end": 179,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 171,
											"end": 183,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 196,
											"end": 441,
											"name": "tag",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 196,
											"end": 441,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 254,
											"end": 260,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 307,
											"end": 309,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 295,
											"end": 304,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 286,
											"end": 293,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 282,
											"end": 305,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 278,
											"end": 310,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 275,
											"end": 327,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 275,
											"end": 327,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "376"
										},
										{
											"begin": 275,
											"end": 327,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 323,
											"end": 324,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 320,
											"end": 321,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 313,
											"end": 325,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 275,
											"end": 327,
											"name": "tag",
											"source": 5,
											"value": "376"
										},
										{
											"begin": 275,
											"end": 327,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 362,
											"end": 371,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 349,
											"end": 372,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 381,
											"end": 411,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 405,
											"end": 410,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 381,
											"end": 411,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "367"
										},
										{
											"begin": 381,
											"end": 411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 638,
											"end": 888,
											"name": "tag",
											"source": 5,
											"value": "368"
										},
										{
											"begin": 638,
											"end": 888,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 723,
											"end": 724,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 733,
											"end": 846,
											"name": "tag",
											"source": 5,
											"value": "380"
										},
										{
											"begin": 733,
											"end": 846,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 747,
											"end": 753,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 744,
											"end": 745,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 741,
											"end": 754,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 733,
											"end": 846,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 733,
											"end": 846,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "382"
										},
										{
											"begin": 733,
											"end": 846,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 823,
											"end": 834,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 823,
											"end": 834,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 823,
											"end": 834,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 804,
											"end": 815,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 804,
											"end": 815,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 804,
											"end": 815,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 797,
											"end": 836,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 769,
											"end": 771,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 762,
											"end": 772,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 733,
											"end": 846,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "380"
										},
										{
											"begin": 733,
											"end": 846,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 733,
											"end": 846,
											"name": "tag",
											"source": 5,
											"value": "382"
										},
										{
											"begin": 733,
											"end": 846,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 880,
											"end": 881,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 862,
											"end": 878,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 862,
											"end": 878,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 855,
											"end": 882,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 638,
											"end": 888,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 893,
											"end": 1223,
											"name": "tag",
											"source": 5,
											"value": "369"
										},
										{
											"begin": 893,
											"end": 1223,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 935,
											"end": 938,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 973,
											"end": 978,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 967,
											"end": 979,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1000,
											"end": 1006,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 995,
											"end": 998,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 988,
											"end": 1007,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1016,
											"end": 1092,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "384"
										},
										{
											"begin": 1085,
											"end": 1091,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1078,
											"end": 1082,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1073,
											"end": 1076,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1069,
											"end": 1083,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1062,
											"end": 1066,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1055,
											"end": 1060,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1051,
											"end": 1067,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1016,
											"end": 1092,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "368"
										},
										{
											"begin": 1016,
											"end": 1092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1016,
											"end": 1092,
											"name": "tag",
											"source": 5,
											"value": "384"
										},
										{
											"begin": 1016,
											"end": 1092,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1137,
											"end": 1139,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1125,
											"end": 1140,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1142,
											"end": 1208,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 1121,
											"end": 1209,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1112,
											"end": 1210,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1112,
											"end": 1210,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1112,
											"end": 1210,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1112,
											"end": 1210,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1212,
											"end": 1216,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1108,
											"end": 1217,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1108,
											"end": 1217,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 893,
											"end": 1223,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 893,
											"end": 1223,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1228,
											"end": 1448,
											"name": "tag",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 1228,
											"end": 1448,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1377,
											"end": 1379,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1366,
											"end": 1375,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1359,
											"end": 1380,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1340,
											"end": 1344,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1397,
											"end": 1442,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 1438,
											"end": 1440,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1427,
											"end": 1436,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1423,
											"end": 1441,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1415,
											"end": 1421,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1397,
											"end": 1442,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "369"
										},
										{
											"begin": 1397,
											"end": 1442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1453,
											"end": 1679,
											"name": "tag",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 1453,
											"end": 1679,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1512,
											"end": 1518,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1565,
											"end": 1567,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1553,
											"end": 1562,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1544,
											"end": 1551,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1540,
											"end": 1563,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1536,
											"end": 1568,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1533,
											"end": 1585,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1533,
											"end": 1585,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "388"
										},
										{
											"begin": 1533,
											"end": 1585,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1581,
											"end": 1582,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1578,
											"end": 1579,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1571,
											"end": 1583,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1533,
											"end": 1585,
											"name": "tag",
											"source": 5,
											"value": "388"
										},
										{
											"begin": 1533,
											"end": 1585,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1626,
											"end": 1649,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1626,
											"end": 1649,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1453,
											"end": 1679,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1453,
											"end": 1679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1915,
											"end": 2111,
											"name": "tag",
											"source": 5,
											"value": "370"
										},
										{
											"begin": 1915,
											"end": 2111,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1983,
											"end": 2003,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1983,
											"end": 2003,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 2043,
											"end": 2085,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2032,
											"end": 2086,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2032,
											"end": 2086,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2022,
											"end": 2087,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2022,
											"end": 2087,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2012,
											"end": 2105,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 2012,
											"end": 2105,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2101,
											"end": 2102,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2098,
											"end": 2099,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2116,
											"end": 2416,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 2116,
											"end": 2416,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2184,
											"end": 2190,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2192,
											"end": 2198,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2245,
											"end": 2247,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2233,
											"end": 2242,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2224,
											"end": 2231,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2220,
											"end": 2243,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2216,
											"end": 2248,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2213,
											"end": 2265,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2213,
											"end": 2265,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "393"
										},
										{
											"begin": 2213,
											"end": 2265,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2261,
											"end": 2262,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2258,
											"end": 2259,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2251,
											"end": 2263,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2213,
											"end": 2265,
											"name": "tag",
											"source": 5,
											"value": "393"
										},
										{
											"begin": 2213,
											"end": 2265,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2284,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "394"
										},
										{
											"begin": 2303,
											"end": 2312,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2284,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "370"
										},
										{
											"begin": 2284,
											"end": 2313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2284,
											"end": 2313,
											"name": "tag",
											"source": 5,
											"value": "394"
										},
										{
											"begin": 2284,
											"end": 2313,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 2382,
											"end": 2384,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2367,
											"end": 2385,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2367,
											"end": 2385,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2367,
											"end": 2385,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2367,
											"end": 2385,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2354,
											"end": 2386,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 2354,
											"end": 2386,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2116,
											"end": 2416,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2603,
											"end": 2977,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2603,
											"end": 2977,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2680,
											"end": 2686,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2688,
											"end": 2694,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2696,
											"end": 2702,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2749,
											"end": 2751,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2737,
											"end": 2746,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2728,
											"end": 2735,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2724,
											"end": 2747,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2720,
											"end": 2752,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2717,
											"end": 2769,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2717,
											"end": 2769,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "397"
										},
										{
											"begin": 2717,
											"end": 2769,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2765,
											"end": 2766,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2762,
											"end": 2763,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2755,
											"end": 2767,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2717,
											"end": 2769,
											"name": "tag",
											"source": 5,
											"value": "397"
										},
										{
											"begin": 2717,
											"end": 2769,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2788,
											"end": 2817,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "398"
										},
										{
											"begin": 2807,
											"end": 2816,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2788,
											"end": 2817,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "370"
										},
										{
											"begin": 2788,
											"end": 2817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2788,
											"end": 2817,
											"name": "tag",
											"source": 5,
											"value": "398"
										},
										{
											"begin": 2788,
											"end": 2817,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2778,
											"end": 2817,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2778,
											"end": 2817,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2836,
											"end": 2874,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "399"
										},
										{
											"begin": 2870,
											"end": 2872,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2859,
											"end": 2868,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2855,
											"end": 2873,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2836,
											"end": 2874,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "370"
										},
										{
											"begin": 2836,
											"end": 2874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2836,
											"end": 2874,
											"name": "tag",
											"source": 5,
											"value": "399"
										},
										{
											"begin": 2836,
											"end": 2874,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2603,
											"end": 2977,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2603,
											"end": 2977,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 2826,
											"end": 2874,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2826,
											"end": 2874,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2943,
											"end": 2945,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2928,
											"end": 2946,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2928,
											"end": 2946,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2928,
											"end": 2946,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2928,
											"end": 2946,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2915,
											"end": 2947,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 2915,
											"end": 2947,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2603,
											"end": 2977,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2982,
											"end": 3168,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 2982,
											"end": 3168,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3041,
											"end": 3047,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3094,
											"end": 3096,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3082,
											"end": 3091,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3073,
											"end": 3080,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3069,
											"end": 3092,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3065,
											"end": 3097,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 3062,
											"end": 3114,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3062,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "401"
										},
										{
											"begin": 3062,
											"end": 3114,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3110,
											"end": 3111,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3107,
											"end": 3108,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3062,
											"end": 3114,
											"name": "tag",
											"source": 5,
											"value": "401"
										},
										{
											"begin": 3062,
											"end": 3114,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3133,
											"end": 3162,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 3152,
											"end": 3161,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3133,
											"end": 3162,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "370"
										},
										{
											"begin": 3133,
											"end": 3162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3173,
											"end": 3520,
											"name": "tag",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 3173,
											"end": 3520,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3238,
											"end": 3244,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3246,
											"end": 3252,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3299,
											"end": 3301,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3287,
											"end": 3296,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3278,
											"end": 3285,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3274,
											"end": 3297,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3270,
											"end": 3302,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 3267,
											"end": 3319,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3267,
											"end": 3319,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "404"
										},
										{
											"begin": 3267,
											"end": 3319,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3316,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3313,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3305,
											"end": 3317,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3267,
											"end": 3319,
											"name": "tag",
											"source": 5,
											"value": "404"
										},
										{
											"begin": 3267,
											"end": 3319,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3338,
											"end": 3367,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "405"
										},
										{
											"begin": 3357,
											"end": 3366,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3338,
											"end": 3367,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "370"
										},
										{
											"begin": 3338,
											"end": 3367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3338,
											"end": 3367,
											"name": "tag",
											"source": 5,
											"value": "405"
										},
										{
											"begin": 3338,
											"end": 3367,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3328,
											"end": 3367,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3328,
											"end": 3367,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3417,
											"end": 3419,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3406,
											"end": 3415,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3402,
											"end": 3420,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3389,
											"end": 3421,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 3464,
											"end": 3469,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3457,
											"end": 3470,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3450,
											"end": 3471,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3443,
											"end": 3448,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3440,
											"end": 3472,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 3430,
											"end": 3490,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "406"
										},
										{
											"begin": 3430,
											"end": 3490,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3486,
											"end": 3487,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3483,
											"end": 3484,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3476,
											"end": 3488,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3430,
											"end": 3490,
											"name": "tag",
											"source": 5,
											"value": "406"
										},
										{
											"begin": 3430,
											"end": 3490,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3509,
											"end": 3514,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3499,
											"end": 3514,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3499,
											"end": 3514,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3499,
											"end": 3514,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3173,
											"end": 3520,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3173,
											"end": 3520,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3173,
											"end": 3520,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3173,
											"end": 3520,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3173,
											"end": 3520,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3173,
											"end": 3520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3525,
											"end": 3709,
											"name": "tag",
											"source": 5,
											"value": "371"
										},
										{
											"begin": 3525,
											"end": 3709,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3577,
											"end": 3654,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3574,
											"end": 3575,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3567,
											"end": 3655,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3674,
											"end": 3678,
											"name": "PUSH",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 3671,
											"end": 3672,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3664,
											"end": 3679,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3698,
											"end": 3702,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3695,
											"end": 3696,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3688,
											"end": 3703,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3714,
											"end": 5039,
											"name": "tag",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 3714,
											"end": 5039,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3809,
											"end": 3815,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3817,
											"end": 3823,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3825,
											"end": 3831,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3833,
											"end": 3839,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3886,
											"end": 3889,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 3874,
											"end": 3883,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3865,
											"end": 3872,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 3861,
											"end": 3884,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3857,
											"end": 3890,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 3854,
											"end": 3907,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3854,
											"end": 3907,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "409"
										},
										{
											"begin": 3854,
											"end": 3907,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3903,
											"end": 3904,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3900,
											"end": 3901,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3893,
											"end": 3905,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3854,
											"end": 3907,
											"name": "tag",
											"source": 5,
											"value": "409"
										},
										{
											"begin": 3854,
											"end": 3907,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3926,
											"end": 3955,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "410"
										},
										{
											"begin": 3945,
											"end": 3954,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3926,
											"end": 3955,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "370"
										},
										{
											"begin": 3926,
											"end": 3955,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3926,
											"end": 3955,
											"name": "tag",
											"source": 5,
											"value": "410"
										},
										{
											"begin": 3926,
											"end": 3955,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3916,
											"end": 3955,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3916,
											"end": 3955,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3974,
											"end": 4012,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "411"
										},
										{
											"begin": 4008,
											"end": 4010,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3997,
											"end": 4006,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3993,
											"end": 4011,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3974,
											"end": 4012,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "370"
										},
										{
											"begin": 3974,
											"end": 4012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3974,
											"end": 4012,
											"name": "tag",
											"source": 5,
											"value": "411"
										},
										{
											"begin": 3974,
											"end": 4012,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3964,
											"end": 4012,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4081,
											"end": 4083,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4066,
											"end": 4084,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4066,
											"end": 4084,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4053,
											"end": 4085,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 4053,
											"end": 4085,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4160,
											"end": 4162,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 4145,
											"end": 4163,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4145,
											"end": 4163,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4132,
											"end": 4164,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 4187,
											"end": 4205,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4176,
											"end": 4206,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4176,
											"end": 4206,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 4173,
											"end": 4223,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4173,
											"end": 4223,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "412"
										},
										{
											"begin": 4173,
											"end": 4223,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4219,
											"end": 4220,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4216,
											"end": 4217,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4209,
											"end": 4221,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4173,
											"end": 4223,
											"name": "tag",
											"source": 5,
											"value": "412"
										},
										{
											"begin": 4173,
											"end": 4223,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4242,
											"end": 4264,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4242,
											"end": 4264,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4295,
											"end": 4299,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 4287,
											"end": 4300,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4287,
											"end": 4300,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4283,
											"end": 4310,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 4273,
											"end": 4328,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "413"
										},
										{
											"begin": 4273,
											"end": 4328,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4324,
											"end": 4325,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4321,
											"end": 4322,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4314,
											"end": 4326,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4273,
											"end": 4328,
											"name": "tag",
											"source": 5,
											"value": "413"
										},
										{
											"begin": 4273,
											"end": 4328,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4364,
											"end": 4366,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4351,
											"end": 4367,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 4390,
											"end": 4408,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4382,
											"end": 4388,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4379,
											"end": 4409,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 4376,
											"end": 4432,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4376,
											"end": 4432,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "415"
										},
										{
											"begin": 4376,
											"end": 4432,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4412,
											"end": 4430,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "415"
										},
										{
											"begin": 4412,
											"end": 4430,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "371"
										},
										{
											"begin": 4412,
											"end": 4430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4412,
											"end": 4430,
											"name": "tag",
											"source": 5,
											"value": "415"
										},
										{
											"begin": 4412,
											"end": 4430,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4461,
											"end": 4463,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4455,
											"end": 4464,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4608,
											"end": 4674,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 4603,
											"end": 4605,
											"name": "PUSH",
											"source": 5,
											"value": "3F"
										},
										{
											"begin": 4534,
											"end": 4600,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 4527,
											"end": 4531,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 4519,
											"end": 4525,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4515,
											"end": 4532,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4511,
											"end": 4601,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4507,
											"end": 4606,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4503,
											"end": 4675,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4495,
											"end": 4501,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4491,
											"end": 4676,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4742,
											"end": 4748,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4730,
											"end": 4740,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4727,
											"end": 4749,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 4706,
											"end": 4724,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4694,
											"end": 4704,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4691,
											"end": 4725,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 4688,
											"end": 4750,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 4685,
											"end": 4773,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4685,
											"end": 4773,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "417"
										},
										{
											"begin": 4685,
											"end": 4773,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4753,
											"end": 4771,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "417"
										},
										{
											"begin": 4753,
											"end": 4771,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "371"
										},
										{
											"begin": 4753,
											"end": 4771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4753,
											"end": 4771,
											"name": "tag",
											"source": 5,
											"value": "417"
										},
										{
											"begin": 4753,
											"end": 4771,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4789,
											"end": 4791,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4782,
											"end": 4804,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4813,
											"end": 4835,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4813,
											"end": 4835,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4813,
											"end": 4835,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4854,
											"end": 4869,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4854,
											"end": 4869,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4854,
											"end": 4869,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4871,
											"end": 4873,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4850,
											"end": 4874,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4847,
											"end": 4884,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4844,
											"end": 4901,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4844,
											"end": 4901,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "418"
										},
										{
											"begin": 4844,
											"end": 4901,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4897,
											"end": 4898,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4894,
											"end": 4895,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4887,
											"end": 4899,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4844,
											"end": 4901,
											"name": "tag",
											"source": 5,
											"value": "418"
										},
										{
											"begin": 4844,
											"end": 4901,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4953,
											"end": 4959,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4948,
											"end": 4950,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4944,
											"end": 4946,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4940,
											"end": 4951,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4935,
											"end": 4937,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4927,
											"end": 4933,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4923,
											"end": 4938,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4910,
											"end": 4960,
											"name": "CALLDATACOPY",
											"source": 5
										},
										{
											"begin": 5006,
											"end": 5007,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5001,
											"end": 5003,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4992,
											"end": 4998,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4984,
											"end": 4990,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4980,
											"end": 4999,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4976,
											"end": 5004,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4969,
											"end": 5008,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5027,
											"end": 5033,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5017,
											"end": 5033,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 5017,
											"end": 5033,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5017,
											"end": 5033,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5017,
											"end": 5033,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5017,
											"end": 5033,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3714,
											"end": 5039,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3714,
											"end": 5039,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 3714,
											"end": 5039,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3714,
											"end": 5039,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 3714,
											"end": 5039,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3714,
											"end": 5039,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3714,
											"end": 5039,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3714,
											"end": 5039,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5044,
											"end": 5304,
											"name": "tag",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 5044,
											"end": 5304,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5112,
											"end": 5118,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5120,
											"end": 5126,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5173,
											"end": 5175,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5161,
											"end": 5170,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5152,
											"end": 5159,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5148,
											"end": 5171,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5144,
											"end": 5176,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 5141,
											"end": 5193,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5141,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "420"
										},
										{
											"begin": 5141,
											"end": 5193,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5189,
											"end": 5190,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5186,
											"end": 5187,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5179,
											"end": 5191,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5141,
											"end": 5193,
											"name": "tag",
											"source": 5,
											"value": "420"
										},
										{
											"begin": 5141,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5212,
											"end": 5241,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "421"
										},
										{
											"begin": 5231,
											"end": 5240,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5212,
											"end": 5241,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "370"
										},
										{
											"begin": 5212,
											"end": 5241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5212,
											"end": 5241,
											"name": "tag",
											"source": 5,
											"value": "421"
										},
										{
											"begin": 5212,
											"end": 5241,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5202,
											"end": 5241,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5202,
											"end": 5241,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5260,
											"end": 5298,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "422"
										},
										{
											"begin": 5294,
											"end": 5296,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5283,
											"end": 5292,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5279,
											"end": 5297,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5260,
											"end": 5298,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "370"
										},
										{
											"begin": 5260,
											"end": 5298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5260,
											"end": 5298,
											"name": "tag",
											"source": 5,
											"value": "422"
										},
										{
											"begin": 5260,
											"end": 5298,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5250,
											"end": 5298,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5250,
											"end": 5298,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5044,
											"end": 5304,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5044,
											"end": 5304,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5044,
											"end": 5304,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5044,
											"end": 5304,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5044,
											"end": 5304,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5044,
											"end": 5304,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5857,
											"end": 6294,
											"name": "tag",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 5857,
											"end": 6294,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5936,
											"end": 5937,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 5932,
											"end": 5944,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5932,
											"end": 5944,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5932,
											"end": 5944,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 5932,
											"end": 5944,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5979,
											"end": 5991,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5979,
											"end": 5991,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5979,
											"end": 5991,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6000,
											"end": 6061,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "425"
										},
										{
											"begin": 6000,
											"end": 6061,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6054,
											"end": 6058,
											"name": "PUSH",
											"source": 5,
											"value": "7F"
										},
										{
											"begin": 6046,
											"end": 6052,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6042,
											"end": 6059,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6032,
											"end": 6059,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6032,
											"end": 6059,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6000,
											"end": 6061,
											"name": "tag",
											"source": 5,
											"value": "425"
										},
										{
											"begin": 6000,
											"end": 6061,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6107,
											"end": 6109,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6099,
											"end": 6105,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6096,
											"end": 6110,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 6076,
											"end": 6094,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6073,
											"end": 6111,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6070,
											"end": 6288,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "426"
										},
										{
											"begin": 6070,
											"end": 6288,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6144,
											"end": 6221,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6141,
											"end": 6142,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6134,
											"end": 6222,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6245,
											"end": 6249,
											"name": "PUSH",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 6242,
											"end": 6243,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6235,
											"end": 6250,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6273,
											"end": 6277,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 6270,
											"end": 6271,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6263,
											"end": 6278,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6070,
											"end": 6288,
											"name": "tag",
											"source": 5,
											"value": "426"
										},
										{
											"begin": 6070,
											"end": 6288,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6070,
											"end": 6288,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5857,
											"end": 6294,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5857,
											"end": 6294,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5857,
											"end": 6294,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5857,
											"end": 6294,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6299,
											"end": 6795,
											"name": "tag",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 6299,
											"end": 6795,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6478,
											"end": 6481,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6516,
											"end": 6522,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6510,
											"end": 6523,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6532,
											"end": 6598,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "428"
										},
										{
											"begin": 6591,
											"end": 6597,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6586,
											"end": 6589,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6579,
											"end": 6583,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6577,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 6567,
											"end": 6584,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6532,
											"end": 6598,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "368"
										},
										{
											"begin": 6532,
											"end": 6598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6532,
											"end": 6598,
											"name": "tag",
											"source": 5,
											"value": "428"
										},
										{
											"begin": 6532,
											"end": 6598,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6661,
											"end": 6674,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6661,
											"end": 6674,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6620,
											"end": 6636,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6620,
											"end": 6636,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6620,
											"end": 6636,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6620,
											"end": 6636,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6683,
											"end": 6753,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "429"
										},
										{
											"begin": 6661,
											"end": 6674,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6620,
											"end": 6636,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6730,
											"end": 6734,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6718,
											"end": 6735,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 6718,
											"end": 6735,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6683,
											"end": 6753,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "368"
										},
										{
											"begin": 6683,
											"end": 6753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6683,
											"end": 6753,
											"name": "tag",
											"source": 5,
											"value": "429"
										},
										{
											"begin": 6683,
											"end": 6753,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6769,
											"end": 6789,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6769,
											"end": 6789,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 6299,
											"end": 6795,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6299,
											"end": 6795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6800,
											"end": 7150,
											"name": "tag",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 6800,
											"end": 7150,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6839,
											"end": 6842,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6867,
											"end": 6872,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6857,
											"end": 7050,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "431"
										},
										{
											"begin": 6857,
											"end": 7050,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6906,
											"end": 6983,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6903,
											"end": 6904,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6896,
											"end": 6984,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7007,
											"end": 7011,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 7004,
											"end": 7005,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6997,
											"end": 7012,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7035,
											"end": 7039,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 7032,
											"end": 7033,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7025,
											"end": 7040,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6857,
											"end": 7050,
											"name": "tag",
											"source": 5,
											"value": "431"
										},
										{
											"begin": 6857,
											"end": 7050,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7077,
											"end": 7143,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7066,
											"end": 7144,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7066,
											"end": 7144,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6800,
											"end": 7150,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7155,
											"end": 7686,
											"name": "tag",
											"source": 5,
											"value": "313"
										},
										{
											"begin": 7155,
											"end": 7686,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7398,
											"end": 7440,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7390,
											"end": 7396,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 7386,
											"end": 7441,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7384,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7368,
											"end": 7442,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7490,
											"end": 7532,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7482,
											"end": 7488,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7478,
											"end": 7533,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7473,
											"end": 7475,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7462,
											"end": 7471,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7458,
											"end": 7476,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7451,
											"end": 7534,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7570,
											"end": 7576,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7565,
											"end": 7567,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7554,
											"end": 7563,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7550,
											"end": 7568,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7543,
											"end": 7577,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7613,
											"end": 7616,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 7608,
											"end": 7610,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 7597,
											"end": 7606,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7586,
											"end": 7617,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7349,
											"end": 7353,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7634,
											"end": 7680,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "433"
										},
										{
											"begin": 7675,
											"end": 7678,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 7664,
											"end": 7673,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7660,
											"end": 7679,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7652,
											"end": 7658,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7634,
											"end": 7680,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "369"
										},
										{
											"begin": 7634,
											"end": 7680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7634,
											"end": 7680,
											"name": "tag",
											"source": 5,
											"value": "433"
										},
										{
											"begin": 7634,
											"end": 7680,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7626,
											"end": 7680,
											"name": "SWAP7",
											"source": 5
										},
										{
											"begin": 7155,
											"end": 7686,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7155,
											"end": 7686,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7691,
											"end": 7940,
											"name": "tag",
											"source": 5,
											"value": "316"
										},
										{
											"begin": 7691,
											"end": 7940,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7760,
											"end": 7766,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7813,
											"end": 7815,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7801,
											"end": 7810,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7792,
											"end": 7799,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7788,
											"end": 7811,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7784,
											"end": 7816,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 7781,
											"end": 7833,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7781,
											"end": 7833,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "435"
										},
										{
											"begin": 7781,
											"end": 7833,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7829,
											"end": 7830,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7826,
											"end": 7827,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7819,
											"end": 7831,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7781,
											"end": 7833,
											"name": "tag",
											"source": 5,
											"value": "435"
										},
										{
											"begin": 7781,
											"end": 7833,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7861,
											"end": 7870,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7855,
											"end": 7871,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7880,
											"end": 7910,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 7904,
											"end": 7909,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7880,
											"end": 7910,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "367"
										},
										{
											"begin": 7880,
											"end": 7910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)//mocks/ERC721ABurnableMock.sol",
								"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol",
								"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/IERC721A.sol",
								"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/extensions/ERC721ABurnable.sol",
								"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/extensions/IERC721ABurnable.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"exists(uint256)": "4f558e79",
							"getApproved(uint256)": "081812fc",
							"getOwnershipAt(uint256)": "f2523633",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"numberBurned(address)": "2478d639",
							"ownerOf(uint256)": "6352211e",
							"safeMint(address,uint256)": "a1448194",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"totalBurned()": "d89135cd",
							"totalMinted()": "a2309ff8",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getOwnershipAt\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"startTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"burned\",\"type\":\"bool\"},{\"internalType\":\"uint24\",\"name\":\"extraData\",\"type\":\"uint24\"}],\"internalType\":\"struct IERC721A.TokenOwnership\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"numberBurned\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"}],\"name\":\"safeMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalBurned\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"ConsecutiveTransfer(uint256,uint256,address,address)\":{\"details\":\"Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. See {ERC721A-_approve}. Requirements: - The caller must own the token or be an approved operator.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in `owner`'s account.\"},\"burn(uint256)\":{\"details\":\"Burns `tokenId`. See {ERC721A-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}.\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)//mocks/ERC721ABurnableMock.sol\":\"ERC721ABurnableMock\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":5000000},\"remappings\":[]},\"sources\":{\"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)//mocks/ERC721ABurnableMock.sol\":{\"keccak256\":\"0x851e9306d32effa1af6dd50901ad64df01423adc8d682c40179c05aa5531318f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2abec6dcbfa345cb3c4e53784e13191905b853e43078bee7c1d8d44f90a8b112\",\"dweb:/ipfs/QmPorLwd4ccFFfYipPfLmT65HoWMLAHHQrmgb3LtuZfmNs\"]},\"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":{\"keccak256\":\"0x8ab9d7aae81997da7770831ffb85073bbadf653956f89aa33ff1e12a70799de6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff612ba5a628c71ff31e06619af0d963078534732683491b33a95ba66050549f\",\"dweb:/ipfs/QmUW5WVe8rGrqmSDmVMq8L66kKcgQEepNXLdiA44hN2tWz\"]},\"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/IERC721A.sol\":{\"keccak256\":\"0xd57233c199fee856d2380f9428a8b801c1745a32a7152898bf1f457c3dceb440\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75fa266aa2b05953bd62a27c19b0a045f3b6eb0059ad961764df987f4a5a08d4\",\"dweb:/ipfs/QmYxbu6xpfdoyraQ1457zhk3d8sPbvLvSdXRANcJdDEWsF\"]},\"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/extensions/ERC721ABurnable.sol\":{\"keccak256\":\"0x6da1b2d752a3296e7bd2b811e4382c3031bf0328724c5fc3ef7f77ba29b406b6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f681ef8df4e8fa4cef4951beae5a3d5d74825833a8df6d113a577cc5bfae5b36\",\"dweb:/ipfs/QmVTPGJQTDyXysYgBBdPt1LnWPSEHFEsTDUPBQgAar9irf\"]},\"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/extensions/IERC721ABurnable.sol\":{\"keccak256\":\"0xc97afd693c249759d1237f6c0263933396b209ef7ec7f6607f623fe16613216c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://948f3514c1b7d0cff074d8628c7cc9c30a2804af3a79959a747163421735787d\",\"dweb:/ipfs/QmbfyqjtgQDj4aVBKcXd5CV8ZsmX9wYBLFFsJyj7FEUK7d\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 179,
								"contract": "Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)//mocks/ERC721ABurnableMock.sol:ERC721ABurnableMock",
								"label": "_currentIndex",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 181,
								"contract": "Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)//mocks/ERC721ABurnableMock.sol:ERC721ABurnableMock",
								"label": "_burnCounter",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 183,
								"contract": "Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)//mocks/ERC721ABurnableMock.sol:ERC721ABurnableMock",
								"label": "_name",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 185,
								"contract": "Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)//mocks/ERC721ABurnableMock.sol:ERC721ABurnableMock",
								"label": "_symbol",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 189,
								"contract": "Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)//mocks/ERC721ABurnableMock.sol:ERC721ABurnableMock",
								"label": "_packedOwnerships",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 193,
								"contract": "Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)//mocks/ERC721ABurnableMock.sol:ERC721ABurnableMock",
								"label": "_packedAddressData",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 198,
								"contract": "Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)//mocks/ERC721ABurnableMock.sol:ERC721ABurnableMock",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_struct(TokenApprovalRef)111_storage)"
							},
							{
								"astId": 204,
								"contract": "Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)//mocks/ERC721ABurnableMock.sol:ERC721ABurnableMock",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_struct(TokenApprovalRef)111_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct ERC721A.TokenApprovalRef)",
								"numberOfBytes": "32",
								"value": "t_struct(TokenApprovalRef)111_storage"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(TokenApprovalRef)111_storage": {
								"encoding": "inplace",
								"label": "struct ERC721A.TokenApprovalRef",
								"members": [
									{
										"astId": 110,
										"contract": "Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)//mocks/ERC721ABurnableMock.sol:ERC721ABurnableMock",
										"label": "value",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"MintERC2309QuantityExceedsLimit()": [
								{
									"notice": "The `quantity` minted with ERC2309 exceeds the safety limit."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"OwnershipNotInitializedForExtraData()": [
								{
									"notice": "The `extraData` cannot be set on an unintialized ownership slot."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol": {
				"ERC721A": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintERC2309QuantityExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnershipNotInitializedForExtraData",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "ConsecutiveTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the [ERC721](https://eips.ethereum.org/EIPS/eip-721) Non-Fungible Token Standard, including the Metadata extension. Optimized for lower gas during batch mints. Token IDs are minted in sequential order (e.g. 0, 1, 2, 3, ...) starting from `_startTokenId()`. Assumptions: - An owner cannot have more than 2**64 - 1 (max value of uint64) of supply. - The maximum token ID cannot exceed 2**256 - 1 (max value of uint256).",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"ConsecutiveTransfer(uint256,uint256,address,address)": {
								"details": "Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. See {ERC721A-_approve}. Requirements: - The caller must own the token or be an approved operator."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in `owner`'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}."
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"totalSupply()": {
								"details": "Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC721A",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":2189:44827  contract ERC721A is IERC721A {... */\n  mstore(0x40, 0x80)\n    /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":6240:6394  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":6306:6311  _name */\n  0x02\n    /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":6306:6319  _name = name_ */\n  tag_6\n    /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":6314:6319  name_ */\n  dup4\n    /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":6306:6311  _name */\n  dup3\n    /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":6306:6319  _name = name_ */\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":6329:6336  _symbol */\n  0x03\n    /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":6329:6346  _symbol = symbol_ */\n  tag_8\n    /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":6339:6346  symbol_ */\n  dup3\n    /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":6329:6336  _symbol */\n  dup3\n    /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":6329:6346  _symbol = symbol_ */\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n  pop\n    /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":6776:6783  uint256 */\n  0x00\n    /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":6356:6387  _currentIndex = _startTokenId() */\n  dup1\n  sstore\n  pop\n    /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":2189:44827  contract ERC721A is IERC721A {... */\n  jump(tag_19)\n    /* \"#utility.yul\":14:141   */\ntag_13:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:980   */\ntag_14:\n    /* \"#utility.yul\":200:205   */\n  0x00\n    /* \"#utility.yul\":253:256   */\n  dup3\n    /* \"#utility.yul\":246:250   */\n  0x1f\n    /* \"#utility.yul\":238:244   */\n  dup4\n    /* \"#utility.yul\":234:251   */\n  add\n    /* \"#utility.yul\":230:257   */\n  slt\n    /* \"#utility.yul\":220:275   */\n  tag_22\n  jumpi\n    /* \"#utility.yul\":271:272   */\n  0x00\n    /* \"#utility.yul\":268:269   */\n  dup1\n    /* \"#utility.yul\":261:273   */\n  revert\n    /* \"#utility.yul\":220:275   */\ntag_22:\n    /* \"#utility.yul\":298:311   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":323:353   */\n  dup2\n  gt\n    /* \"#utility.yul\":320:376   */\n  iszero\n  tag_24\n  jumpi\n    /* \"#utility.yul\":356:374   */\n  tag_24\n  tag_13\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":405:407   */\n  0x40\n    /* \"#utility.yul\":399:408   */\n  mload\n    /* \"#utility.yul\":497:499   */\n  0x1f\n    /* \"#utility.yul\":459:476   */\n  dup3\n  add\n  not(0x1f)\n    /* \"#utility.yul\":455:486   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":488:490   */\n  0x3f\n    /* \"#utility.yul\":451:491   */\n  add\n    /* \"#utility.yul\":447:501   */\n  and\n    /* \"#utility.yul\":435:502   */\n  dup2\n  add\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":517:551   */\n  dup2\n  gt\n    /* \"#utility.yul\":553:575   */\n  dup3\n  dup3\n  lt\n    /* \"#utility.yul\":514:576   */\n  or\n    /* \"#utility.yul\":511:599   */\n  iszero\n  tag_26\n  jumpi\n    /* \"#utility.yul\":579:597   */\n  tag_26\n  tag_13\n  jump\t// in\ntag_26:\n    /* \"#utility.yul\":615:617   */\n  0x40\n    /* \"#utility.yul\":608:630   */\n  mstore\n    /* \"#utility.yul\":639:661   */\n  dup2\n  dup2\n  mstore\n    /* \"#utility.yul\":680:699   */\n  dup4\n  dup3\n  add\n    /* \"#utility.yul\":701:705   */\n  0x20\n    /* \"#utility.yul\":676:706   */\n  add\n    /* \"#utility.yul\":673:712   */\n  dup6\n  lt\n    /* \"#utility.yul\":670:729   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":725:726   */\n  0x00\n    /* \"#utility.yul\":722:723   */\n  dup1\n    /* \"#utility.yul\":715:727   */\n  revert\n    /* \"#utility.yul\":670:729   */\ntag_27:\n    /* \"#utility.yul\":747:748   */\n  0x00\n    /* \"#utility.yul\":757:900   */\ntag_28:\n    /* \"#utility.yul\":771:777   */\n  dup3\n    /* \"#utility.yul\":768:769   */\n  dup2\n    /* \"#utility.yul\":765:778   */\n  lt\n    /* \"#utility.yul\":757:900   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":883:887   */\n  0x20\n    /* \"#utility.yul\":867:881   */\n  dup2\n  dup7\n  add\n    /* \"#utility.yul\":863:888   */\n  dup2\n  add\n    /* \"#utility.yul\":857:889   */\n  mload\n    /* \"#utility.yul\":834:848   */\n  dup4\n  dup4\n  add\n    /* \"#utility.yul\":830:855   */\n  dup3\n  add\n    /* \"#utility.yul\":823:890   */\n  mstore\n    /* \"#utility.yul\":786:798   */\n  add\n    /* \"#utility.yul\":757:900   */\n  jump(tag_28)\ntag_30:\n  pop\n    /* \"#utility.yul\":948:949   */\n  0x00\n    /* \"#utility.yul\":920:939   */\n  swap2\n  dup2\n  add\n    /* \"#utility.yul\":941:945   */\n  0x20\n    /* \"#utility.yul\":916:946   */\n  add\n    /* \"#utility.yul\":909:950   */\n  swap2\n  swap1\n  swap2\n  mstore\n    /* \"#utility.yul\":924:930   */\n  swap4\n    /* \"#utility.yul\":146:980   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":985:1542   */\ntag_3:\n    /* \"#utility.yul\":1084:1090   */\n  0x00\n    /* \"#utility.yul\":1092:1098   */\n  dup1\n    /* \"#utility.yul\":1145:1147   */\n  0x40\n    /* \"#utility.yul\":1133:1142   */\n  dup4\n    /* \"#utility.yul\":1124:1131   */\n  dup6\n    /* \"#utility.yul\":1120:1143   */\n  sub\n    /* \"#utility.yul\":1116:1148   */\n  slt\n    /* \"#utility.yul\":1113:1165   */\n  iszero\n  tag_32\n  jumpi\n    /* \"#utility.yul\":1161:1162   */\n  0x00\n    /* \"#utility.yul\":1158:1159   */\n  dup1\n    /* \"#utility.yul\":1151:1163   */\n  revert\n    /* \"#utility.yul\":1113:1165   */\ntag_32:\n    /* \"#utility.yul\":1188:1204   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1216:1246   */\n  dup2\n  gt\n    /* \"#utility.yul\":1213:1263   */\n  iszero\n  tag_33\n  jumpi\n    /* \"#utility.yul\":1259:1260   */\n  0x00\n    /* \"#utility.yul\":1256:1257   */\n  dup1\n    /* \"#utility.yul\":1249:1261   */\n  revert\n    /* \"#utility.yul\":1213:1263   */\ntag_33:\n    /* \"#utility.yul\":1282:1343   */\n  tag_34\n    /* \"#utility.yul\":1335:1342   */\n  dup6\n    /* \"#utility.yul\":1326:1332   */\n  dup3\n    /* \"#utility.yul\":1315:1324   */\n  dup7\n    /* \"#utility.yul\":1311:1333   */\n  add\n    /* \"#utility.yul\":1282:1343   */\n  tag_14\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":1389:1391   */\n  0x20\n    /* \"#utility.yul\":1374:1392   */\n  dup6\n  add\n    /* \"#utility.yul\":1368:1393   */\n  mload\n    /* \"#utility.yul\":1272:1343   */\n  swap1\n  swap4\n  pop\n    /* \"#utility.yul\":1368:1393   */\n  swap1\n  pop\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1405:1437   */\n  dup2\n  gt\n    /* \"#utility.yul\":1402:1454   */\n  iszero\n  tag_35\n  jumpi\n    /* \"#utility.yul\":1450:1451   */\n  0x00\n    /* \"#utility.yul\":1447:1448   */\n  dup1\n    /* \"#utility.yul\":1440:1452   */\n  revert\n    /* \"#utility.yul\":1402:1454   */\ntag_35:\n    /* \"#utility.yul\":1473:1536   */\n  tag_36\n    /* \"#utility.yul\":1528:1535   */\n  dup6\n    /* \"#utility.yul\":1517:1525   */\n  dup3\n    /* \"#utility.yul\":1506:1515   */\n  dup7\n    /* \"#utility.yul\":1502:1526   */\n  add\n    /* \"#utility.yul\":1473:1536   */\n  tag_14\n  jump\t// in\ntag_36:\n    /* \"#utility.yul\":1463:1536   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":985:1542   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1547:1927   */\ntag_15:\n    /* \"#utility.yul\":1626:1627   */\n  0x01\n    /* \"#utility.yul\":1622:1634   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1669:1681   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1690:1751   */\n  tag_38\n  jumpi\n    /* \"#utility.yul\":1744:1748   */\n  0x7f\n    /* \"#utility.yul\":1736:1742   */\n  dup3\n    /* \"#utility.yul\":1732:1749   */\n  and\n    /* \"#utility.yul\":1722:1749   */\n  swap2\n  pop\n    /* \"#utility.yul\":1690:1751   */\ntag_38:\n    /* \"#utility.yul\":1797:1799   */\n  0x20\n    /* \"#utility.yul\":1789:1795   */\n  dup3\n    /* \"#utility.yul\":1786:1800   */\n  lt\n    /* \"#utility.yul\":1766:1784   */\n  dup2\n    /* \"#utility.yul\":1763:1801   */\n  sub\n    /* \"#utility.yul\":1760:1921   */\n  tag_39\n  jumpi\n    /* \"#utility.yul\":1843:1853   */\n  0x4e487b71\n    /* \"#utility.yul\":1838:1841   */\n  0xe0\n    /* \"#utility.yul\":1834:1854   */\n  shl\n    /* \"#utility.yul\":1831:1832   */\n  0x00\n    /* \"#utility.yul\":1824:1855   */\n  mstore\n    /* \"#utility.yul\":1878:1882   */\n  0x22\n    /* \"#utility.yul\":1875:1876   */\n  0x04\n    /* \"#utility.yul\":1868:1883   */\n  mstore\n    /* \"#utility.yul\":1906:1910   */\n  0x24\n    /* \"#utility.yul\":1903:1904   */\n  0x00\n    /* \"#utility.yul\":1896:1911   */\n  revert\n    /* \"#utility.yul\":1760:1921   */\ntag_39:\n  pop\n    /* \"#utility.yul\":1547:1927   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2058:2576   */\ntag_17:\n    /* \"#utility.yul\":2160:2162   */\n  0x1f\n    /* \"#utility.yul\":2155:2158   */\n  dup3\n    /* \"#utility.yul\":2152:2163   */\n  gt\n    /* \"#utility.yul\":2149:2570   */\n  iszero\n  tag_42\n  jumpi\n    /* \"#utility.yul\":2196:2201   */\n  dup1\n    /* \"#utility.yul\":2193:2194   */\n  0x00\n    /* \"#utility.yul\":2186:2202   */\n  mstore\n    /* \"#utility.yul\":2240:2244   */\n  0x20\n    /* \"#utility.yul\":2237:2238   */\n  0x00\n    /* \"#utility.yul\":2227:2245   */\n  keccak256\n    /* \"#utility.yul\":2310:2312   */\n  0x1f\n    /* \"#utility.yul\":2298:2308   */\n  dup5\n    /* \"#utility.yul\":2294:2313   */\n  add\n    /* \"#utility.yul\":2291:2292   */\n  0x05\n    /* \"#utility.yul\":2287:2314   */\n  shr\n    /* \"#utility.yul\":2281:2285   */\n  dup2\n    /* \"#utility.yul\":2277:2315   */\n  add\n    /* \"#utility.yul\":2346:2350   */\n  0x20\n    /* \"#utility.yul\":2334:2344   */\n  dup6\n    /* \"#utility.yul\":2331:2351   */\n  lt\n    /* \"#utility.yul\":2328:2375   */\n  iszero\n  tag_43\n  jumpi\n  pop\n    /* \"#utility.yul\":2369:2373   */\n  dup1\n    /* \"#utility.yul\":2328:2375   */\ntag_43:\n    /* \"#utility.yul\":2424:2426   */\n  0x1f\n    /* \"#utility.yul\":2419:2422   */\n  dup5\n    /* \"#utility.yul\":2415:2427   */\n  add\n    /* \"#utility.yul\":2412:2413   */\n  0x05\n    /* \"#utility.yul\":2408:2428   */\n  shr\n    /* \"#utility.yul\":2402:2406   */\n  dup3\n    /* \"#utility.yul\":2398:2429   */\n  add\n    /* \"#utility.yul\":2388:2429   */\n  swap2\n  pop\n    /* \"#utility.yul\":2479:2560   */\ntag_44:\n    /* \"#utility.yul\":2497:2499   */\n  dup2\n    /* \"#utility.yul\":2490:2495   */\n  dup2\n    /* \"#utility.yul\":2487:2500   */\n  lt\n    /* \"#utility.yul\":2479:2560   */\n  iszero\n  tag_46\n  jumpi\n    /* \"#utility.yul\":2556:2557   */\n  0x00\n    /* \"#utility.yul\":2542:2558   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2523:2524   */\n  0x01\n    /* \"#utility.yul\":2512:2525   */\n  add\n    /* \"#utility.yul\":2479:2560   */\n  jump(tag_44)\ntag_46:\n    /* \"#utility.yul\":2483:2486   */\n  pop\n  pop\n    /* \"#utility.yul\":2149:2570   */\ntag_42:\n    /* \"#utility.yul\":2058:2576   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2752:4051   */\ntag_7:\n    /* \"#utility.yul\":2872:2882   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":2894:2924   */\n  dup2\n  gt\n    /* \"#utility.yul\":2891:2947   */\n  iszero\n  tag_50\n  jumpi\n    /* \"#utility.yul\":2927:2945   */\n  tag_50\n  tag_13\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":2956:3053   */\n  tag_51\n    /* \"#utility.yul\":3046:3052   */\n  dup2\n    /* \"#utility.yul\":3006:3044   */\n  tag_52\n    /* \"#utility.yul\":3038:3042   */\n  dup5\n    /* \"#utility.yul\":3032:3043   */\n  sload\n    /* \"#utility.yul\":3006:3044   */\n  tag_15\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":3000:3004   */\n  dup5\n    /* \"#utility.yul\":2956:3053   */\n  tag_17\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":3102:3106   */\n  0x20\n    /* \"#utility.yul\":3133:3135   */\n  0x1f\n    /* \"#utility.yul\":3122:3136   */\n  dup3\n  gt\n    /* \"#utility.yul\":3150:3151   */\n  0x01\n    /* \"#utility.yul\":3145:3794   */\n  dup2\n  eq\n  tag_54\n  jumpi\n    /* \"#utility.yul\":3838:3839   */\n  0x00\n    /* \"#utility.yul\":3855:3861   */\n  dup4\n    /* \"#utility.yul\":3852:3941   */\n  iszero\n  tag_55\n  jumpi\n  pop\n    /* \"#utility.yul\":3907:3926   */\n  dup5\n  dup3\n  add\n    /* \"#utility.yul\":3901:3927   */\n  mload\n    /* \"#utility.yul\":3852:3941   */\ntag_55:\n  not(0x00)\n    /* \"#utility.yul\":2709:2710   */\n  0x03\n    /* \"#utility.yul\":2705:2716   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":2701:2725   */\n  shr\n    /* \"#utility.yul\":2697:2726   */\n  not\n    /* \"#utility.yul\":2687:2727   */\n  and\n    /* \"#utility.yul\":2733:2734   */\n  0x01\n    /* \"#utility.yul\":2729:2740   */\n  dup5\n  swap1\n  shl\n    /* \"#utility.yul\":2684:2741   */\n  or\n    /* \"#utility.yul\":3954:4035   */\n  dup5\n  sstore\n    /* \"#utility.yul\":3115:4045   */\n  jump(tag_46)\n    /* \"#utility.yul\":3145:3794   */\ntag_54:\n    /* \"#utility.yul\":2005:2006   */\n  0x00\n    /* \"#utility.yul\":1998:2012   */\n  dup5\n  dup2\n  mstore\n    /* \"#utility.yul\":2042:2046   */\n  0x20\n    /* \"#utility.yul\":2029:2047   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":3181:3201   */\n  dup6\n  and\n  swap2\n    /* \"#utility.yul\":3299:3521   */\ntag_58:\n    /* \"#utility.yul\":3313:3320   */\n  dup3\n    /* \"#utility.yul\":3310:3311   */\n  dup2\n    /* \"#utility.yul\":3307:3321   */\n  lt\n    /* \"#utility.yul\":3299:3521   */\n  iszero\n  tag_60\n  jumpi\n    /* \"#utility.yul\":3395:3414   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":3389:3415   */\n  mload\n    /* \"#utility.yul\":3374:3416   */\n  dup3\n  sstore\n    /* \"#utility.yul\":3502:3506   */\n  0x20\n    /* \"#utility.yul\":3487:3507   */\n  swap5\n  dup6\n  add\n  swap5\n    /* \"#utility.yul\":3455:3456   */\n  0x01\n    /* \"#utility.yul\":3443:3457   */\n  swap1\n  swap3\n  add\n  swap2\n    /* \"#utility.yul\":3329:3341   */\n  add\n    /* \"#utility.yul\":3299:3521   */\n  jump(tag_58)\ntag_60:\n    /* \"#utility.yul\":3303:3306   */\n  pop\n    /* \"#utility.yul\":3549:3555   */\n  dup5\n    /* \"#utility.yul\":3540:3547   */\n  dup3\n    /* \"#utility.yul\":3537:3556   */\n  lt\n    /* \"#utility.yul\":3534:3735   */\n  iszero\n  tag_61\n  jumpi\n    /* \"#utility.yul\":3610:3629   */\n  dup7\n  dup5\n  add\n    /* \"#utility.yul\":3604:3630   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":3693:3694   */\n  0x03\n    /* \"#utility.yul\":3689:3703   */\n  dup8\n  swap1\n  shl\n    /* \"#utility.yul\":3705:3708   */\n  0xf8\n    /* \"#utility.yul\":3685:3709   */\n  and\n    /* \"#utility.yul\":3681:3718   */\n  shr\n    /* \"#utility.yul\":3677:3719   */\n  not\n    /* \"#utility.yul\":3662:3720   */\n  and\n    /* \"#utility.yul\":3647:3721   */\n  dup2\n  sstore\n    /* \"#utility.yul\":3534:3735   */\ntag_61:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3781:3782   */\n  0x01\n    /* \"#utility.yul\":3765:3779   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":3761:3783   */\n  add\n    /* \"#utility.yul\":3748:3784   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":2752:4051   */\n  jump\t// out\ntag_19:\n    /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":2189:44827  contract ERC721A is IERC721A {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":2189:44827  contract ERC721A is IERC721A {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6352211e\n      gt\n      tag_16\n      jumpi\n      dup1\n      0xa22cb465\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      dup1\n      0x6352211e\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      dup1\n      0x095ea7b3\n      gt\n      tag_18\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_8\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":10458:11088  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      pop\n      tag_20\n      tag_21\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      mload(0x40)\n        /* \"#utility.yul\":611:625   */\n      swap1\n      iszero\n        /* \"#utility.yul\":604:626   */\n      iszero\n        /* \"#utility.yul\":586:627   */\n      dup2\n      mstore\n        /* \"#utility.yul\":574:576   */\n      0x20\n        /* \"#utility.yul\":559:577   */\n      add\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":10458:11088  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":11342:11440  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      pop\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":18205:18428  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      pop\n      tag_32\n      tag_33\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n    tag_32:\n      mload(0x40)\n        /* \"#utility.yul\":1860:1902   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1848:1903   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1830:1904   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1818:1820   */\n      0x20\n        /* \"#utility.yul\":1803:1821   */\n      add\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":18205:18428  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n      tag_24\n        /* \"#utility.yul\":1684:1910   */\n      jump\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":17933:18055  function approve(address to, uint256 tokenId) public payable virtual override {... */\n    tag_5:\n      tag_38\n      tag_39\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n    tag_38:\n      stop\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":7188:7505  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_42\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":7458:7470  _burnCounter */\n      sload(0x01)\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":7249:7256  uint256 */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":7442:7455  _currentIndex */\n      sload\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":7442:7470  _currentIndex - _burnCounter */\n      sub\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":7188:7505  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_43:\n      mload(0x40)\n        /* \"#utility.yul\":2567:2592   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":2555:2557   */\n      0x20\n        /* \"#utility.yul\":2540:2558   */\n      add\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":7188:7505  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_24\n        /* \"#utility.yul\":2421:2598   */\n      jump\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":21840:25287  function transferFrom(... */\n    tag_7:\n      tag_38\n      tag_48\n      calldatasize\n      0x04\n      tag_49\n      jump\t// in\n    tag_48:\n      tag_50\n      jump\t// in\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":25378:25565  function safeTransferFrom(... */\n    tag_8:\n      tag_38\n      tag_52\n      calldatasize\n      0x04\n      tag_49\n      jump\t// in\n    tag_52:\n      tag_53\n      jump\t// in\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":12703:12853  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_54\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_54:\n      pop\n      tag_32\n      tag_56\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_56:\n      tag_57\n      jump\t// in\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":8339:8578  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_59\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_59:\n      pop\n      tag_43\n      tag_61\n      calldatasize\n      0x04\n      tag_62\n      jump\t// in\n    tag_61:\n      tag_63\n      jump\t// in\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":11511:11613  function symbol() public view virtual override returns (string memory) {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_65\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_65:\n      pop\n      tag_27\n      tag_67\n      jump\t// in\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":18755:18986  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_69\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_69:\n      pop\n      tag_38\n      tag_71\n      calldatasize\n      0x04\n      tag_72\n      jump\t// in\n    tag_71:\n      tag_73\n      jump\t// in\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":26146:26551  function safeTransferFrom(... */\n    tag_13:\n      tag_38\n      tag_75\n      calldatasize\n      0x04\n      tag_76\n      jump\t// in\n    tag_75:\n      tag_77\n      jump\t// in\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":11714:12036  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_78\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_78:\n      pop\n      tag_27\n      tag_80\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_80:\n      tag_81\n      jump\t// in\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":19136:19298  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_83\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_83:\n      pop\n      tag_20\n      tag_85\n      calldatasize\n      0x04\n      tag_86\n      jump\t// in\n    tag_85:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":19256:19281  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap2\n      dup3\n      and\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":19233:19237  bool */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":19256:19281  _operatorApprovals[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":19256:19274  _operatorApprovals */\n      0x07\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":19256:19281  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":19256:19291  _operatorApprovals[owner][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":19136:19298  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      jump\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":10458:11088  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_23:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":10543:10547  bool */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":10861:10886  interfaceId == 0x01ffc9a7 */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n      dup4\n      and\n      eq\n      dup1\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":10861:10962  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n      tag_90\n      jumpi\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":10937:10962  interfaceId == 0x80ac58cd */\n      0x80ac58cd00000000000000000000000000000000000000000000000000000000\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n      dup4\n      and\n      eq\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":10861:10962  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n    tag_90:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":10861:11038  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n      dup1\n      tag_91\n      jumpi\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":11013:11038  interfaceId == 0x5b5e139f */\n      0x5b5e139f00000000000000000000000000000000000000000000000000000000\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n      dup4\n      and\n      eq\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":10861:11038  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n    tag_91:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":10842:11038  return... */\n      swap3\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":10458:11088  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":11342:11440  function name() public view virtual override returns (string memory) {... */\n    tag_28:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":11396:11409  string memory */\n      0x60\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":11428:11433  _name */\n      0x02\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":11421:11433  return _name */\n      dup1\n      sload\n      tag_93\n      swap1\n      tag_94\n      jump\t// in\n    tag_93:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_95\n      swap1\n      tag_94\n      jump\t// in\n    tag_95:\n      dup1\n      iszero\n      tag_96\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_97\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_96)\n    tag_97:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_98:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_98\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_96:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":11342:11440  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":18205:18428  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_35:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":18281:18288  address */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":18305:18321  _exists(tokenId) */\n      tag_100\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":18313:18320  tokenId */\n      dup3\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":18305:18312  _exists */\n      tag_101\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":18305:18321  _exists(tokenId) */\n      jump\t// in\n    tag_100:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":18300:18373  if (!_exists(tokenId)) _revert(ApprovalQueryForNonexistentToken.selector) */\n      tag_103\n      jumpi\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":18323:18373  _revert(ApprovalQueryForNonexistentToken.selector) */\n      tag_103\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":18331:18372  ApprovalQueryForNonexistentToken.selector */\n      0xcf4700e400000000000000000000000000000000000000000000000000000000\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":18323:18330  _revert */\n      tag_104\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":18323:18373  _revert(ApprovalQueryForNonexistentToken.selector) */\n      jump\t// in\n    tag_103:\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":18391:18415  _tokenApprovals[tokenId] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":18391:18406  _tokenApprovals */\n      0x06\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":18391:18415  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":18391:18421  _tokenApprovals[tokenId].value */\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":18205:18428  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n      jump\t// out\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":17933:18055  function approve(address to, uint256 tokenId) public payable virtual override {... */\n    tag_41:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":18021:18048  _approve(to, tokenId, true) */\n      tag_106\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":18030:18032  to */\n      dup3\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":18034:18041  tokenId */\n      dup3\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":18043:18047  true */\n      0x01\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":18021:18029  _approve */\n      tag_107\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":18021:18048  _approve(to, tokenId, true) */\n      jump\t// in\n    tag_106:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":17933:18055  function approve(address to, uint256 tokenId) public payable virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":21840:25287  function transferFrom(... */\n    tag_50:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":21977:22004  uint256 prevOwnershipPacked */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":22007:22034  _packedOwnershipOf(tokenId) */\n      tag_112\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":22026:22033  tokenId */\n      dup3\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":22007:22025  _packedOwnershipOf */\n      tag_113\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":22007:22034  _packedOwnershipOf(tokenId) */\n      jump\t// in\n    tag_112:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":4079:4093  (1 << 160) - 1 */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":22159:22181  uint256(uint160(from)) */\n      swap5\n      dup6\n      and\n      swap5\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":21977:22034  uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId) */\n      swap1\n      swap2\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":22217:22262  address(uint160(prevOwnershipPacked)) != from */\n      dup2\n      and\n      dup5\n      eq\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":22213:22308  if (address(uint160(prevOwnershipPacked)) != from) _revert(TransferFromIncorrectOwner.selector) */\n      tag_115\n      jumpi\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":22264:22308  _revert(TransferFromIncorrectOwner.selector) */\n      tag_115\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":22272:22307  TransferFromIncorrectOwner.selector */\n      0xa114810000000000000000000000000000000000000000000000000000000000\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":22264:22271  _revert */\n      tag_104\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":22264:22308  _revert(TransferFromIncorrectOwner.selector) */\n      jump\t// in\n    tag_115:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":22320:22347  uint256 approvedAddressSlot */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":20973:20997  _tokenApprovals[tokenId] */\n      dup3\n      dup2\n      mstore\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":20973:20988  _tokenApprovals */\n      0x06\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":20973:20997  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":21197:21223  sload(approvedAddressSlot) */\n      dup1\n      sload\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":42781:42791  msg.sender */\n      caller\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":20610:20640  eq(msgSender, approvedAddress) */\n      dup1\n      dup3\n      eq\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":20318:20334  _BITMASK_ADDRESS */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":20307:20335  and(owner, _BITMASK_ADDRESS) */\n      dup9\n      and\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":20588:20608  eq(msgSender, owner) */\n      swap1\n      swap2\n      eq\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":20585:20641  or(eq(msgSender, owner), eq(msgSender, approvedAddress)) */\n      or\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":22503:22691  if (!_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()))... */\n      tag_126\n      jumpi\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":22595:22638  isApprovedForAll(from, _msgSenderERC721A()) */\n      tag_123\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":22612:22616  from */\n      dup7\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":42781:42791  msg.sender */\n      caller\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":19136:19298  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      tag_85\n      jump\t// in\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":22595:22638  isApprovedForAll(from, _msgSenderERC721A()) */\n    tag_123:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":22590:22691  if (!isApprovedForAll(from, _msgSenderERC721A())) _revert(TransferCallerNotOwnerNorApproved.selector) */\n      tag_126\n      jumpi\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":22640:22691  _revert(TransferCallerNotOwnerNorApproved.selector) */\n      tag_126\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":22648:22690  TransferCallerNotOwnerNorApproved.selector */\n      0x59c896be00000000000000000000000000000000000000000000000000000000\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":22640:22647  _revert */\n      tag_104\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":22640:22691  _revert(TransferCallerNotOwnerNorApproved.selector) */\n      jump\t// in\n    tag_126:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":22834:22849  approvedAddress */\n      dup1\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":22831:22988  if approvedAddress {... */\n      iszero\n      tag_129\n      jumpi\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":22972:22973  0 */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":22951:22970  approvedAddressSlot */\n      dup3\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":22944:22974  sstore(approvedAddressSlot, 0) */\n      sstore\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":22831:22988  if approvedAddress {... */\n    tag_129:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":23360:23384  _packedAddressData[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup7\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":23360:23378  _packedAddressData */\n      0x05\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":23360:23384  _packedAddressData[from] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":23358:23384  --_packedAddressData[from] */\n      dup1\n      sload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      add\n      swap1\n      sstore\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":23428:23450  _packedAddressData[to] */\n      swap2\n      dup8\n      and\n      dup1\n      dup3\n      mstore\n      swap2\n      swap1\n      keccak256\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":23426:23450  ++_packedAddressData[to] */\n      dup1\n      sload\n      0x01\n      add\n      swap1\n      sstore\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":17061:17072  timestamp() */\n      timestamp\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":17036:17059  _BITPOS_START_TIMESTAMP */\n      0xa0\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":17032:17073  shl(_BITPOS_START_TIMESTAMP, timestamp()) */\n      shl\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":17019:17082  or(owner, or(shl(_BITPOS_START_TIMESTAMP, timestamp()), flags)) */\n      or\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":3686:3694  1 << 225 */\n      0x0200000000000000000000000000000000000000000000000000000000\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":17019:17082  or(owner, or(shl(_BITPOS_START_TIMESTAMP, timestamp()), flags)) */\n      or\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":23714:23740  _packedOwnerships[tokenId] */\n      0x00\n      dup6\n      dup2\n      mstore\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":23714:23731  _packedOwnerships */\n      0x04\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":23714:23740  _packedOwnerships[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":23714:23886  _packedOwnerships[tokenId] = _packOwnershipData(... */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":3686:3694  1 << 225 */\n      0x0200000000000000000000000000000000000000000000000000000000\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":24003:24050  prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED */\n      dup5\n      and\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":24003:24055  prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0 */\n      swap1\n      sub\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":23999:24616  if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {... */\n      tag_134\n      jumpi\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":24107:24108  1 */\n      0x01\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":24097:24108  tokenId + 1 */\n      dup5\n      add\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":24075:24094  uint256 nextTokenId */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":24228:24258  _packedOwnerships[nextTokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":24228:24245  _packedOwnerships */\n      0x04\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":24228:24258  _packedOwnerships[nextTokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":24228:24263  _packedOwnerships[nextTokenId] == 0 */\n      swap1\n      sub\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":24224:24602  if (_packedOwnerships[nextTokenId] == 0) {... */\n      tag_136\n      jumpi\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":24364:24377  _currentIndex */\n      sload(0x00)\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":24349:24360  nextTokenId */\n      dup2\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":24349:24377  nextTokenId != _currentIndex */\n      eq\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":24345:24584  if (nextTokenId != _currentIndex) {... */\n      tag_136\n      jumpi\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":24509:24539  _packedOwnerships[nextTokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":24509:24526  _packedOwnerships */\n      0x04\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":24509:24539  _packedOwnerships[nextTokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":24509:24561  _packedOwnerships[nextTokenId] = prevOwnershipPacked */\n      dup5\n      swap1\n      sstore\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":24345:24584  if (nextTokenId != _currentIndex) {... */\n    tag_136:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":24057:24616  {... */\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":23999:24616  if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {... */\n    tag_134:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":4079:4093  (1 << 160) - 1 */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":24744:24764  uint256(uint160(to)) */\n      dup6\n      and\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":25115:25122  tokenId */\n      dup5\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":24744:24764  uint256(uint160(to)) */\n      dup2\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":25047:25051  from */\n      dup9\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":24990:25015  _TRANSFER_EVENT_SIGNATURE */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":24725:24741  uint256 toMasked */\n      0x00\n      dup1\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":24858:25150  log4(... */\n      log4\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":25173:25181  toMasked */\n      dup1\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":25185:25186  0 */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":25173:25186  toMasked == 0 */\n      sub\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":25169:25227  if (toMasked == 0) _revert(TransferToZeroAddress.selector) */\n      tag_138\n      jumpi\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":25188:25227  _revert(TransferToZeroAddress.selector) */\n      tag_138\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":25196:25226  TransferToZeroAddress.selector */\n      0xea553b3400000000000000000000000000000000000000000000000000000000\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":25188:25195  _revert */\n      tag_104\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":25188:25227  _revert(TransferToZeroAddress.selector) */\n      jump\t// in\n    tag_138:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":21967:25287  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":21840:25287  function transferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":25378:25565  function safeTransferFrom(... */\n    tag_53:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":25519:25558  safeTransferFrom(from, to, tokenId, '') */\n      tag_142\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":25536:25540  from */\n      dup4\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":25542:25544  to */\n      dup4\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":25546:25553  tokenId */\n      dup4\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":25519:25558  safeTransferFrom(from, to, tokenId, '') */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":25519:25535  safeTransferFrom */\n      tag_77\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":25519:25558  safeTransferFrom(from, to, tokenId, '') */\n      jump\t// in\n    tag_142:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":25378:25565  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":12703:12853  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_57:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":12775:12782  address */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":12817:12844  _packedOwnershipOf(tokenId) */\n      tag_91\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":12836:12843  tokenId */\n      dup3\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":12817:12835  _packedOwnershipOf */\n      tag_113\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":12817:12844  _packedOwnershipOf(tokenId) */\n      jump\t// in\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":8339:8578  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_63:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":8411:8418  uint256 */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":8434:8453  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup3\n      and\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":8430:8499  if (owner == address(0)) _revert(BalanceQueryForZeroAddress.selector) */\n      tag_147\n      jumpi\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":8455:8499  _revert(BalanceQueryForZeroAddress.selector) */\n      tag_147\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":8463:8498  BalanceQueryForZeroAddress.selector */\n      0x8f4eb60400000000000000000000000000000000000000000000000000000000\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":8455:8462  _revert */\n      tag_104\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":8455:8499  _revert(BalanceQueryForZeroAddress.selector) */\n      jump\t// in\n    tag_147:\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":8516:8541  _packedAddressData[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":8516:8534  _packedAddressData */\n      0x05\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":8516:8541  _packedAddressData[owner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":2654:2667  (1 << 64) - 1 */\n      0xffffffffffffffff\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":8516:8571  _packedAddressData[owner] & _BITMASK_ADDRESS_DATA_ENTRY */\n      and\n      swap1\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":8339:8578  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":11511:11613  function symbol() public view virtual override returns (string memory) {... */\n    tag_67:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":11567:11580  string memory */\n      0x60\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":11599:11606  _symbol */\n      0x03\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":11592:11606  return _symbol */\n      dup1\n      sload\n      tag_93\n      swap1\n      tag_94\n      jump\t// in\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":18755:18986  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_73:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":42781:42791  msg.sender */\n      caller\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":18849:18888  _operatorApprovals[_msgSenderERC721A()] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":18849:18867  _operatorApprovals */\n      0x07\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":18849:18888  _operatorApprovals[_msgSenderERC721A()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":18849:18898  _operatorApprovals[_msgSenderERC721A()][operator] */\n      dup8\n      and\n      dup1\n      dup6\n      mstore\n      swap1\n      dup4\n      mstore\n      swap3\n      dup2\n      swap1\n      keccak256\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":18849:18909  _operatorApprovals[_msgSenderERC721A()][operator] = approved */\n      dup1\n      sload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00\n      and\n      dup7\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":18924:18979  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      swap1\n      mload\n        /* \"#utility.yul\":586:627   */\n      swap1\n      dup2\n      mstore\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":18849:18898  _operatorApprovals[_msgSenderERC721A()][operator] */\n      swap2\n      swap3\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":42781:42791  msg.sender */\n      swap2\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":18924:18979  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap2\n        /* \"#utility.yul\":559:577   */\n      add\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":18924:18979  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":18755:18986  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":26146:26551  function safeTransferFrom(... */\n    tag_77:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":26315:26346  transferFrom(from, to, tokenId) */\n      tag_159\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":26328:26332  from */\n      dup5\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":26334:26336  to */\n      dup5\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":26338:26345  tokenId */\n      dup5\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":26315:26327  transferFrom */\n      tag_50\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":26315:26346  transferFrom(from, to, tokenId) */\n      jump\t// in\n    tag_159:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":26360:26374  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup4\n      and\n      extcodesize\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":26360:26379  to.code.length != 0 */\n      iszero\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":26356:26545  if (to.code.length != 0)... */\n      tag_164\n      jumpi\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":26398:26454  _checkContractOnERC721Received(from, to, tokenId, _data) */\n      tag_161\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":26429:26433  from */\n      dup5\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":26435:26437  to */\n      dup5\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":26439:26446  tokenId */\n      dup5\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":26448:26453  _data */\n      dup5\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":26398:26428  _checkContractOnERC721Received */\n      tag_162\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":26398:26454  _checkContractOnERC721Received(from, to, tokenId, _data) */\n      jump\t// in\n    tag_161:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":26393:26545  if (!_checkContractOnERC721Received(from, to, tokenId, _data)) {... */\n      tag_164\n      jumpi\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":26474:26530  _revert(TransferToNonERC721ReceiverImplementer.selector) */\n      tag_164\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":26482:26529  TransferToNonERC721ReceiverImplementer.selector */\n      0xd1a57ed600000000000000000000000000000000000000000000000000000000\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":26474:26481  _revert */\n      tag_104\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":26474:26530  _revert(TransferToNonERC721ReceiverImplementer.selector) */\n      jump\t// in\n    tag_164:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":26146:26551  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":11714:12036  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_81:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":11787:11800  string memory */\n      0x60\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":11817:11833  _exists(tokenId) */\n      tag_166\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":11825:11832  tokenId */\n      dup3\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":11817:11824  _exists */\n      tag_101\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":11817:11833  _exists(tokenId) */\n      jump\t// in\n    tag_166:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":11812:11880  if (!_exists(tokenId)) _revert(URIQueryForNonexistentToken.selector) */\n      tag_168\n      jumpi\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":11835:11880  _revert(URIQueryForNonexistentToken.selector) */\n      tag_168\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":11843:11879  URIQueryForNonexistentToken.selector */\n      0xa14c4b5000000000000000000000000000000000000000000000000000000000\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":11835:11842  _revert */\n      tag_104\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":11835:11880  _revert(URIQueryForNonexistentToken.selector) */\n      jump\t// in\n    tag_168:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":11891:11912  string memory baseURI */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":11915:11925  _baseURI() */\n      tag_169\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":12357:12366  return '' */\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup2\n      mstore\n      swap1\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":12281:12373  function _baseURI() internal view virtual returns (string memory) {... */\n      jump\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":11915:11925  _baseURI() */\n    tag_169:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":11891:11925  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":11948:11955  baseURI */\n      dup1\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":11942:11963  bytes(baseURI).length */\n      mload\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":11967:11968  0 */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":11942:11968  bytes(baseURI).length != 0 */\n      sub\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":11942:12029  bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '' */\n      tag_171\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_172)\n    tag_171:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":11995:12002  baseURI */\n      dup1\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":12004:12022  _toString(tokenId) */\n      tag_173\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":12014:12021  tokenId */\n      dup5\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":12004:12013  _toString */\n      tag_174\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":12004:12022  _toString(tokenId) */\n      jump\t// in\n    tag_173:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":11978:12023  abi.encodePacked(baseURI, _toString(tokenId)) */\n      add(0x20, mload(0x40))\n      tag_175\n      swap3\n      swap2\n      swap1\n      tag_176\n      jump\t// in\n    tag_175:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":11942:12029  bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '' */\n    tag_172:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":11935:12029  return bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '' */\n      swap4\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":11714:12036  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":19547:19907  function _exists(uint256 tokenId) internal view virtual returns (bool result) {... */\n    tag_101:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":19612:19623  bool result */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":19695:19708  _currentIndex */\n      dup1\n      sload\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":19685:19692  tokenId */\n      dup3\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":19685:19708  tokenId < _currentIndex */\n      lt\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":19681:19891  if (tokenId < _currentIndex) {... */\n      iszero\n      tag_181\n      jumpi\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":19728:19742  uint256 packed */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":19760:19820  while ((packed = _packedOwnerships[tokenId]) == 0) --tokenId */\n    tag_182:\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":19777:19803  _packedOwnerships[tokenId] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":19777:19794  _packedOwnerships */\n      0x04\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":19777:19803  _packedOwnerships[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      swap1\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":19767:19809  (packed = _packedOwnerships[tokenId]) == 0 */\n      dup2\n      swap1\n      sub\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":19760:19820  while ((packed = _packedOwnerships[tokenId]) == 0) --tokenId */\n      tag_183\n      jumpi\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":19811:19820  --tokenId */\n      tag_184\n      dup4\n      tag_185\n      jump\t// in\n    tag_184:\n      swap3\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":19760:19820  while ((packed = _packedOwnerships[tokenId]) == 0) --tokenId */\n      jump(tag_182)\n    tag_183:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":3412:3420  1 << 224 */\n      0x0100000000000000000000000000000000000000000000000000000000\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":19847:19871  packed & _BITMASK_BURNED */\n      and\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":19847:19876  packed & _BITMASK_BURNED == 0 */\n      iszero\n      swap1\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":19681:19891  if (tokenId < _currentIndex) {... */\n    tag_181:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":19547:19907  function _exists(uint256 tokenId) internal view virtual returns (bool result) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":44665:44825  function _revert(bytes4 errorSelector) internal pure {... */\n    tag_104:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":44764:44777  errorSelector */\n      dup1\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":44758:44762  0x00 */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":44751:44778  mstore(0x00, errorSelector) */\n      mstore\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":44804:44808  0x04 */\n      0x04\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":44798:44802  0x00 */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":44791:44809  revert(0x00, 0x04) */\n      revert\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":36313:36773  function _approve(... */\n    tag_107:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":36437:36450  address owner */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":36453:36469  ownerOf(tokenId) */\n      tag_188\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":36461:36468  tokenId */\n      dup4\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":36453:36460  ownerOf */\n      tag_57\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":36453:36469  ownerOf(tokenId) */\n      jump\t// in\n    tag_188:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":36437:36469  address owner = ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":36484:36497  approvalCheck */\n      dup2\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":36484:36529  approvalCheck && _msgSenderERC721A() != owner */\n      dup1\n      iszero\n      tag_189\n      jumpi\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":42781:42791  msg.sender */\n      caller\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":36501:36529  _msgSenderERC721A() != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup3\n      and\n      eq\n      iszero\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":36484:36529  approvalCheck && _msgSenderERC721A() != owner */\n    tag_189:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":36480:36678  if (approvalCheck && _msgSenderERC721A() != owner)... */\n      iszero\n      tag_195\n      jumpi\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":36548:36592  isApprovedForAll(owner, _msgSenderERC721A()) */\n      tag_192\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":36565:36570  owner */\n      dup2\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":42781:42791  msg.sender */\n      caller\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":19136:19298  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      tag_85\n      jump\t// in\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":36548:36592  isApprovedForAll(owner, _msgSenderERC721A()) */\n    tag_192:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":36543:36678  if (!isApprovedForAll(owner, _msgSenderERC721A())) {... */\n      tag_195\n      jumpi\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":36612:36663  _revert(ApprovalCallerNotOwnerNorApproved.selector) */\n      tag_195\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":36620:36662  ApprovalCallerNotOwnerNorApproved.selector */\n      0xcfb3b94200000000000000000000000000000000000000000000000000000000\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":36612:36619  _revert */\n      tag_104\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":36612:36663  _revert(ApprovalCallerNotOwnerNorApproved.selector) */\n      jump\t// in\n    tag_195:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":36688:36712  _tokenApprovals[tokenId] */\n      0x00\n      dup4\n      dup2\n      mstore\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":36688:36703  _tokenApprovals */\n      0x06\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":36688:36712  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":36688:36723  _tokenApprovals[tokenId].value = to */\n      dup1\n      sload\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup9\n      dup2\n      and\n      swap2\n      dup3\n      or\n      swap1\n      swap3\n      sstore\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":36738:36766  Approval(owner, to, tokenId) */\n      swap2\n      mload\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":36688:36712  _tokenApprovals[tokenId] */\n      dup7\n      swap4\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":36738:36766  Approval(owner, to, tokenId) */\n      swap2\n      dup6\n      and\n      swap2\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n      log4\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":36427:36773  {... */\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":36313:36773  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":14144:16122  function _packedOwnershipOf(uint256 tokenId) private view returns (uint256 packed) {... */\n    tag_113:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":14292:14318  _packedOwnerships[tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":14292:14309  _packedOwnerships */\n      0x04\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":14292:14318  _packedOwnerships[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      swap1\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":14416:14427  packed == 0 */\n      dup2\n      swap1\n      sub\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":14412:15682  if (packed == 0) {... */\n      tag_200\n      jumpi\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":14462:14475  _currentIndex */\n      sload(0x00)\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":14451:14458  tokenId */\n      dup3\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":14451:14475  tokenId >= _currentIndex */\n      lt\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":14447:14524  if (tokenId >= _currentIndex) _revert(OwnerQueryForNonexistentToken.selector) */\n      tag_202\n      jumpi\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":14477:14524  _revert(OwnerQueryForNonexistentToken.selector) */\n      tag_202\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":14485:14523  OwnerQueryForNonexistentToken.selector */\n      0xdf2d9b4200000000000000000000000000000000000000000000000000000000\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":14477:14484  _revert */\n      tag_104\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":14477:14524  _revert(OwnerQueryForNonexistentToken.selector) */\n      jump\t// in\n    tag_202:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":15071:15668  for (;;) {... */\n    tag_203:\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":15165:15174  --tokenId */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      add\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":15147:15175  _packedOwnerships[--tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":15147:15164  _packedOwnerships */\n      0x04\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":15147:15175  _packedOwnerships[--tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":15219:15244  if (packed == 0) continue */\n      dup1\n      iszero\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":15071:15668  for (;;) {... */\n      tag_203\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":15219:15244  if (packed == 0) continue */\n      jumpi\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":3412:3420  1 << 224 */\n      0x0100000000000000000000000000000000000000000000000000000000\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":15270:15276  packed */\n      dup2\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":15270:15294  packed & _BITMASK_BURNED */\n      and\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":15298:15299  0 */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":15270:15299  packed & _BITMASK_BURNED == 0 */\n      sub\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":15266:15314  if (packed & _BITMASK_BURNED == 0) return packed */\n      tag_207\n      jumpi\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":14144:16122  function _packedOwnershipOf(uint256 tokenId) private view returns (uint256 packed) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":15266:15314  if (packed & _BITMASK_BURNED == 0) return packed */\n    tag_207:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":15602:15649  _revert(OwnerQueryForNonexistentToken.selector) */\n      tag_208\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":15610:15648  OwnerQueryForNonexistentToken.selector */\n      0xdf2d9b4200000000000000000000000000000000000000000000000000000000\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":15602:15609  _revert */\n      tag_104\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":15602:15649  _revert(OwnerQueryForNonexistentToken.selector) */\n      jump\t// in\n    tag_208:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":15071:15668  for (;;) {... */\n      jump(tag_203)\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":14412:15682  if (packed == 0) {... */\n    tag_200:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":3412:3420  1 << 224 */\n      0x0100000000000000000000000000000000000000000000000000000000\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":16004:16010  packed */\n      dup2\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":16004:16028  packed & _BITMASK_BURNED */\n      and\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":16032:16033  0 */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":16004:16033  packed & _BITMASK_BURNED == 0 */\n      sub\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":16000:16048  if (packed & _BITMASK_BURNED == 0) return packed */\n      tag_209\n      jumpi\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":14144:16122  function _packedOwnershipOf(uint256 tokenId) private view returns (uint256 packed) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":16000:16048  if (packed & _BITMASK_BURNED == 0) return packed */\n    tag_209:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":16068:16115  _revert(OwnerQueryForNonexistentToken.selector) */\n      tag_181\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":16076:16114  OwnerQueryForNonexistentToken.selector */\n      0xdf2d9b4200000000000000000000000000000000000000000000000000000000\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":16068:16075  _revert */\n      tag_104\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":16068:16115  _revert(OwnerQueryForNonexistentToken.selector) */\n      jump\t// in\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":28577:29250  function _checkContractOnERC721Received(... */\n    tag_162:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":28755:28843  ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) */\n      mload(0x40)\n      0x150b7a0200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":28735:28739  bool */\n      0x00\n      swap1\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":28755:28800  ERC721A__IERC721Receiver(to).onERC721Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup6\n      and\n      swap1\n      0x150b7a02\n      swap1\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":28755:28843  ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) */\n      tag_222\n      swap1\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":42781:42791  msg.sender */\n      caller\n      swap1\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":28822:28826  from */\n      dup10\n      swap1\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":28828:28835  tokenId */\n      dup9\n      swap1\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":28837:28842  _data */\n      dup9\n      swap1\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":28755:28843  ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) */\n      0x04\n      add\n      tag_223\n      jump\t// in\n    tag_222:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_224\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_225\n      swap2\n      dup2\n      add\n      swap1\n      tag_226\n      jump\t// in\n    tag_225:\n      0x01\n    tag_224:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":28751:29244  try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (... */\n      tag_227\n      jumpi\n      returndatasize\n      dup1\n      dup1\n      iszero\n      tag_232\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_231)\n    tag_232:\n      0x60\n      swap2\n      pop\n    tag_231:\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":29033:29039  reason */\n      dup1\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":29033:29046  reason.length */\n      mload\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":29050:29051  0 */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":29033:29051  reason.length == 0 */\n      sub\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":29029:29142  if (reason.length == 0) {... */\n      tag_234\n      jumpi\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":29071:29127  _revert(TransferToNonERC721ReceiverImplementer.selector) */\n      tag_234\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":29079:29126  TransferToNonERC721ReceiverImplementer.selector */\n      0xd1a57ed600000000000000000000000000000000000000000000000000000000\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":29071:29078  _revert */\n      tag_104\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":29071:29127  _revert(TransferToNonERC721ReceiverImplementer.selector) */\n      jump\t// in\n    tag_234:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":29212:29218  reason */\n      dup1\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":29206:29219  mload(reason) */\n      mload\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":29197:29203  reason */\n      dup2\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":29193:29195  32 */\n      0x20\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":29189:29204  add(32, reason) */\n      add\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":29182:29220  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":28751:29244  try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (... */\n    tag_227:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":28911:28975  retval == ERC721A__IERC721Receiver(to).onERC721Received.selector */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n      and\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":28921:28975  ERC721A__IERC721Receiver(to).onERC721Received.selector */\n      0x150b7a0200000000000000000000000000000000000000000000000000000000\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":28911:28975  retval == ERC721A__IERC721Receiver(to).onERC721Received.selector */\n      eq\n      swap1\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":28577:29250  function _checkContractOnERC721Received(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":42895:44603  function _toString(uint256 value) internal pure virtual returns (string memory str) {... */\n    tag_174:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":42960:42977  string memory str */\n      0x60\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":43388:43392  0xa0 */\n      0xa0\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":43381:43385  0x40 */\n      0x40\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":43375:43386  mload(0x40) */\n      mload\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":43371:43393  add(mload(0x40), 0xa0) */\n      add\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":43478:43479  m */\n      dup1\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":43472:43476  0x40 */\n      0x40\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":43465:43480  mstore(0x40, m) */\n      mstore\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":43551:43555  0x20 */\n      0x20\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":43548:43549  m */\n      dup2\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":43544:43556  sub(m, 0x20) */\n      sub\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":43537:43556  str := sub(m, 0x20) */\n      swap2\n      pop\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":43631:43632  0 */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":43626:43629  str */\n      dup2\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":43619:43633  mstore(str, 0) */\n      mstore\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":43732:43735  str */\n      dup1\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":43966:43971  value */\n      dup3\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":43948:44367  for { let temp := value } 1 {} {... */\n    tag_238:\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":44013:44014  1 */\n      0x01\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":44008:44011  str */\n      dup4\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":44004:44015  sub(str, 1) */\n      sub\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":43997:44015  str := sub(str, 1) */\n      swap3\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":44181:44183  10 */\n      0x0a\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":44175:44179  temp */\n      dup2\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":44171:44184  mod(temp, 10) */\n      mod\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":44167:44169  48 */\n      0x30\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":44163:44185  add(48, mod(temp, 10)) */\n      add\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":44158:44161  str */\n      dup4\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":44150:44186  mstore8(str, add(48, mod(temp, 10))) */\n      mstore8\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":44273:44275  10 */\n      0x0a\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":44263:44276  div(temp, 10) */\n      swap1\n      div\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":44328:44353  if iszero(temp) { break } */\n      dup1\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":43948:44367  for { let temp := value } 1 {} {... */\n      tag_238\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":44328:44353  if iszero(temp) { break } */\n      jumpi\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":44395:44408  sub(end, str) */\n      dup2\n      swap1\n      sub\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":44508:44522  sub(str, 0x20) */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n      swap1\n      swap2\n      add\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":44568:44587  mstore(str, length) */\n      swap1\n      dup2\n      mstore\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":44508:44522  sub(str, 0x20) */\n      swap2\n        /* \"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":42895:44603  function _toString(uint256 value) internal pure virtual returns (string memory str) {... */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:191   */\n    tag_243:\n        /* \"#utility.yul\":99:165   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":92:97   */\n      dup2\n        /* \"#utility.yul\":88:166   */\n      and\n        /* \"#utility.yul\":81:86   */\n      dup2\n        /* \"#utility.yul\":78:167   */\n      eq\n        /* \"#utility.yul\":68:185   */\n      tag_250\n      jumpi\n        /* \"#utility.yul\":181:182   */\n      0x00\n        /* \"#utility.yul\":178:179   */\n      dup1\n        /* \"#utility.yul\":171:183   */\n      revert\n        /* \"#utility.yul\":68:185   */\n    tag_250:\n        /* \"#utility.yul\":14:191   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":196:441   */\n    tag_22:\n        /* \"#utility.yul\":254:260   */\n      0x00\n        /* \"#utility.yul\":307:309   */\n      0x20\n        /* \"#utility.yul\":295:304   */\n      dup3\n        /* \"#utility.yul\":286:293   */\n      dup5\n        /* \"#utility.yul\":282:305   */\n      sub\n        /* \"#utility.yul\":278:310   */\n      slt\n        /* \"#utility.yul\":275:327   */\n      iszero\n      tag_252\n      jumpi\n        /* \"#utility.yul\":323:324   */\n      0x00\n        /* \"#utility.yul\":320:321   */\n      dup1\n        /* \"#utility.yul\":313:325   */\n      revert\n        /* \"#utility.yul\":275:327   */\n    tag_252:\n        /* \"#utility.yul\":362:371   */\n      dup2\n        /* \"#utility.yul\":349:372   */\n      calldataload\n        /* \"#utility.yul\":381:411   */\n      tag_172\n        /* \"#utility.yul\":405:410   */\n      dup2\n        /* \"#utility.yul\":381:411   */\n      tag_243\n      jump\t// in\n        /* \"#utility.yul\":638:888   */\n    tag_244:\n        /* \"#utility.yul\":723:724   */\n      0x00\n        /* \"#utility.yul\":733:846   */\n    tag_256:\n        /* \"#utility.yul\":747:753   */\n      dup4\n        /* \"#utility.yul\":744:745   */\n      dup2\n        /* \"#utility.yul\":741:754   */\n      lt\n        /* \"#utility.yul\":733:846   */\n      iszero\n      tag_258\n      jumpi\n        /* \"#utility.yul\":823:834   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":817:835   */\n      mload\n        /* \"#utility.yul\":804:815   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":797:836   */\n      mstore\n        /* \"#utility.yul\":769:771   */\n      0x20\n        /* \"#utility.yul\":762:772   */\n      add\n        /* \"#utility.yul\":733:846   */\n      jump(tag_256)\n    tag_258:\n      pop\n      pop\n        /* \"#utility.yul\":880:881   */\n      0x00\n        /* \"#utility.yul\":862:878   */\n      swap2\n      add\n        /* \"#utility.yul\":855:882   */\n      mstore\n        /* \"#utility.yul\":638:888   */\n      jump\t// out\n        /* \"#utility.yul\":893:1223   */\n    tag_245:\n        /* \"#utility.yul\":935:938   */\n      0x00\n        /* \"#utility.yul\":973:978   */\n      dup2\n        /* \"#utility.yul\":967:979   */\n      mload\n        /* \"#utility.yul\":1000:1006   */\n      dup1\n        /* \"#utility.yul\":995:998   */\n      dup5\n        /* \"#utility.yul\":988:1007   */\n      mstore\n        /* \"#utility.yul\":1016:1092   */\n      tag_260\n        /* \"#utility.yul\":1085:1091   */\n      dup2\n        /* \"#utility.yul\":1078:1082   */\n      0x20\n        /* \"#utility.yul\":1073:1076   */\n      dup7\n        /* \"#utility.yul\":1069:1083   */\n      add\n        /* \"#utility.yul\":1062:1066   */\n      0x20\n        /* \"#utility.yul\":1055:1060   */\n      dup7\n        /* \"#utility.yul\":1051:1067   */\n      add\n        /* \"#utility.yul\":1016:1092   */\n      tag_244\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":1137:1139   */\n      0x1f\n        /* \"#utility.yul\":1125:1140   */\n      add\n        /* \"#utility.yul\":1142:1208   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n        /* \"#utility.yul\":1121:1209   */\n      and\n        /* \"#utility.yul\":1112:1210   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":1212:1216   */\n      0x20\n        /* \"#utility.yul\":1108:1217   */\n      add\n      swap3\n        /* \"#utility.yul\":893:1223   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1228:1448   */\n    tag_30:\n        /* \"#utility.yul\":1377:1379   */\n      0x20\n        /* \"#utility.yul\":1366:1375   */\n      dup2\n        /* \"#utility.yul\":1359:1380   */\n      mstore\n        /* \"#utility.yul\":1340:1344   */\n      0x00\n        /* \"#utility.yul\":1397:1442   */\n      tag_172\n        /* \"#utility.yul\":1438:1440   */\n      0x20\n        /* \"#utility.yul\":1427:1436   */\n      dup4\n        /* \"#utility.yul\":1423:1441   */\n      add\n        /* \"#utility.yul\":1415:1421   */\n      dup5\n        /* \"#utility.yul\":1397:1442   */\n      tag_245\n      jump\t// in\n        /* \"#utility.yul\":1453:1679   */\n    tag_34:\n        /* \"#utility.yul\":1512:1518   */\n      0x00\n        /* \"#utility.yul\":1565:1567   */\n      0x20\n        /* \"#utility.yul\":1553:1562   */\n      dup3\n        /* \"#utility.yul\":1544:1551   */\n      dup5\n        /* \"#utility.yul\":1540:1563   */\n      sub\n        /* \"#utility.yul\":1536:1568   */\n      slt\n        /* \"#utility.yul\":1533:1585   */\n      iszero\n      tag_264\n      jumpi\n        /* \"#utility.yul\":1581:1582   */\n      0x00\n        /* \"#utility.yul\":1578:1579   */\n      dup1\n        /* \"#utility.yul\":1571:1583   */\n      revert\n        /* \"#utility.yul\":1533:1585   */\n    tag_264:\n      pop\n        /* \"#utility.yul\":1626:1649   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1453:1679   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1915:2111   */\n    tag_246:\n        /* \"#utility.yul\":1983:2003   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":2043:2085   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2032:2086   */\n      dup2\n      and\n        /* \"#utility.yul\":2022:2087   */\n      dup2\n      eq\n        /* \"#utility.yul\":2012:2105   */\n      tag_181\n      jumpi\n        /* \"#utility.yul\":2101:2102   */\n      0x00\n        /* \"#utility.yul\":2098:2099   */\n      dup1\n        /* \"#utility.yul\":2091:2103   */\n      revert\n        /* \"#utility.yul\":2116:2416   */\n    tag_40:\n        /* \"#utility.yul\":2184:2190   */\n      0x00\n        /* \"#utility.yul\":2192:2198   */\n      dup1\n        /* \"#utility.yul\":2245:2247   */\n      0x40\n        /* \"#utility.yul\":2233:2242   */\n      dup4\n        /* \"#utility.yul\":2224:2231   */\n      dup6\n        /* \"#utility.yul\":2220:2243   */\n      sub\n        /* \"#utility.yul\":2216:2248   */\n      slt\n        /* \"#utility.yul\":2213:2265   */\n      iszero\n      tag_269\n      jumpi\n        /* \"#utility.yul\":2261:2262   */\n      0x00\n        /* \"#utility.yul\":2258:2259   */\n      dup1\n        /* \"#utility.yul\":2251:2263   */\n      revert\n        /* \"#utility.yul\":2213:2265   */\n    tag_269:\n        /* \"#utility.yul\":2284:2313   */\n      tag_270\n        /* \"#utility.yul\":2303:2312   */\n      dup4\n        /* \"#utility.yul\":2284:2313   */\n      tag_246\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":2274:2313   */\n      swap5\n        /* \"#utility.yul\":2382:2384   */\n      0x20\n        /* \"#utility.yul\":2367:2385   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":2354:2386   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2116:2416   */\n      jump\t// out\n        /* \"#utility.yul\":2603:2977   */\n    tag_49:\n        /* \"#utility.yul\":2680:2686   */\n      0x00\n        /* \"#utility.yul\":2688:2694   */\n      dup1\n        /* \"#utility.yul\":2696:2702   */\n      0x00\n        /* \"#utility.yul\":2749:2751   */\n      0x60\n        /* \"#utility.yul\":2737:2746   */\n      dup5\n        /* \"#utility.yul\":2728:2735   */\n      dup7\n        /* \"#utility.yul\":2724:2747   */\n      sub\n        /* \"#utility.yul\":2720:2752   */\n      slt\n        /* \"#utility.yul\":2717:2769   */\n      iszero\n      tag_273\n      jumpi\n        /* \"#utility.yul\":2765:2766   */\n      0x00\n        /* \"#utility.yul\":2762:2763   */\n      dup1\n        /* \"#utility.yul\":2755:2767   */\n      revert\n        /* \"#utility.yul\":2717:2769   */\n    tag_273:\n        /* \"#utility.yul\":2788:2817   */\n      tag_274\n        /* \"#utility.yul\":2807:2816   */\n      dup5\n        /* \"#utility.yul\":2788:2817   */\n      tag_246\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":2778:2817   */\n      swap3\n      pop\n        /* \"#utility.yul\":2836:2874   */\n      tag_275\n        /* \"#utility.yul\":2870:2872   */\n      0x20\n        /* \"#utility.yul\":2859:2868   */\n      dup6\n        /* \"#utility.yul\":2855:2873   */\n      add\n        /* \"#utility.yul\":2836:2874   */\n      tag_246\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":2603:2977   */\n      swap3\n      swap6\n        /* \"#utility.yul\":2826:2874   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2943:2945   */\n      0x40\n        /* \"#utility.yul\":2928:2946   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":2915:2947   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":2603:2977   */\n      jump\t// out\n        /* \"#utility.yul\":2982:3168   */\n    tag_62:\n        /* \"#utility.yul\":3041:3047   */\n      0x00\n        /* \"#utility.yul\":3094:3096   */\n      0x20\n        /* \"#utility.yul\":3082:3091   */\n      dup3\n        /* \"#utility.yul\":3073:3080   */\n      dup5\n        /* \"#utility.yul\":3069:3092   */\n      sub\n        /* \"#utility.yul\":3065:3097   */\n      slt\n        /* \"#utility.yul\":3062:3114   */\n      iszero\n      tag_277\n      jumpi\n        /* \"#utility.yul\":3110:3111   */\n      0x00\n        /* \"#utility.yul\":3107:3108   */\n      dup1\n        /* \"#utility.yul\":3100:3112   */\n      revert\n        /* \"#utility.yul\":3062:3114   */\n    tag_277:\n        /* \"#utility.yul\":3133:3162   */\n      tag_172\n        /* \"#utility.yul\":3152:3161   */\n      dup3\n        /* \"#utility.yul\":3133:3162   */\n      tag_246\n      jump\t// in\n        /* \"#utility.yul\":3173:3520   */\n    tag_72:\n        /* \"#utility.yul\":3238:3244   */\n      0x00\n        /* \"#utility.yul\":3246:3252   */\n      dup1\n        /* \"#utility.yul\":3299:3301   */\n      0x40\n        /* \"#utility.yul\":3287:3296   */\n      dup4\n        /* \"#utility.yul\":3278:3285   */\n      dup6\n        /* \"#utility.yul\":3274:3297   */\n      sub\n        /* \"#utility.yul\":3270:3302   */\n      slt\n        /* \"#utility.yul\":3267:3319   */\n      iszero\n      tag_280\n      jumpi\n        /* \"#utility.yul\":3315:3316   */\n      0x00\n        /* \"#utility.yul\":3312:3313   */\n      dup1\n        /* \"#utility.yul\":3305:3317   */\n      revert\n        /* \"#utility.yul\":3267:3319   */\n    tag_280:\n        /* \"#utility.yul\":3338:3367   */\n      tag_281\n        /* \"#utility.yul\":3357:3366   */\n      dup4\n        /* \"#utility.yul\":3338:3367   */\n      tag_246\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":3328:3367   */\n      swap2\n      pop\n        /* \"#utility.yul\":3417:3419   */\n      0x20\n        /* \"#utility.yul\":3406:3415   */\n      dup4\n        /* \"#utility.yul\":3402:3420   */\n      add\n        /* \"#utility.yul\":3389:3421   */\n      calldataload\n        /* \"#utility.yul\":3464:3469   */\n      dup1\n        /* \"#utility.yul\":3457:3470   */\n      iszero\n        /* \"#utility.yul\":3450:3471   */\n      iszero\n        /* \"#utility.yul\":3443:3448   */\n      dup2\n        /* \"#utility.yul\":3440:3472   */\n      eq\n        /* \"#utility.yul\":3430:3490   */\n      tag_282\n      jumpi\n        /* \"#utility.yul\":3486:3487   */\n      0x00\n        /* \"#utility.yul\":3483:3484   */\n      dup1\n        /* \"#utility.yul\":3476:3488   */\n      revert\n        /* \"#utility.yul\":3430:3490   */\n    tag_282:\n        /* \"#utility.yul\":3509:3514   */\n      dup1\n        /* \"#utility.yul\":3499:3514   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":3173:3520   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3525:3709   */\n    tag_247:\n        /* \"#utility.yul\":3577:3654   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3574:3575   */\n      0x00\n        /* \"#utility.yul\":3567:3655   */\n      mstore\n        /* \"#utility.yul\":3674:3678   */\n      0x41\n        /* \"#utility.yul\":3671:3672   */\n      0x04\n        /* \"#utility.yul\":3664:3679   */\n      mstore\n        /* \"#utility.yul\":3698:3702   */\n      0x24\n        /* \"#utility.yul\":3695:3696   */\n      0x00\n        /* \"#utility.yul\":3688:3703   */\n      revert\n        /* \"#utility.yul\":3714:5039   */\n    tag_76:\n        /* \"#utility.yul\":3809:3815   */\n      0x00\n        /* \"#utility.yul\":3817:3823   */\n      dup1\n        /* \"#utility.yul\":3825:3831   */\n      0x00\n        /* \"#utility.yul\":3833:3839   */\n      dup1\n        /* \"#utility.yul\":3886:3889   */\n      0x80\n        /* \"#utility.yul\":3874:3883   */\n      dup6\n        /* \"#utility.yul\":3865:3872   */\n      dup8\n        /* \"#utility.yul\":3861:3884   */\n      sub\n        /* \"#utility.yul\":3857:3890   */\n      slt\n        /* \"#utility.yul\":3854:3907   */\n      iszero\n      tag_285\n      jumpi\n        /* \"#utility.yul\":3903:3904   */\n      0x00\n        /* \"#utility.yul\":3900:3901   */\n      dup1\n        /* \"#utility.yul\":3893:3905   */\n      revert\n        /* \"#utility.yul\":3854:3907   */\n    tag_285:\n        /* \"#utility.yul\":3926:3955   */\n      tag_286\n        /* \"#utility.yul\":3945:3954   */\n      dup6\n        /* \"#utility.yul\":3926:3955   */\n      tag_246\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":3916:3955   */\n      swap4\n      pop\n        /* \"#utility.yul\":3974:4012   */\n      tag_287\n        /* \"#utility.yul\":4008:4010   */\n      0x20\n        /* \"#utility.yul\":3997:4006   */\n      dup7\n        /* \"#utility.yul\":3993:4011   */\n      add\n        /* \"#utility.yul\":3974:4012   */\n      tag_246\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":3964:4012   */\n      swap3\n      pop\n        /* \"#utility.yul\":4081:4083   */\n      0x40\n        /* \"#utility.yul\":4066:4084   */\n      dup6\n      add\n        /* \"#utility.yul\":4053:4085   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":4160:4162   */\n      0x60\n        /* \"#utility.yul\":4145:4163   */\n      dup6\n      add\n        /* \"#utility.yul\":4132:4164   */\n      calldataload\n        /* \"#utility.yul\":4187:4205   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4176:4206   */\n      dup2\n      gt\n        /* \"#utility.yul\":4173:4223   */\n      iszero\n      tag_288\n      jumpi\n        /* \"#utility.yul\":4219:4220   */\n      0x00\n        /* \"#utility.yul\":4216:4217   */\n      dup1\n        /* \"#utility.yul\":4209:4221   */\n      revert\n        /* \"#utility.yul\":4173:4223   */\n    tag_288:\n        /* \"#utility.yul\":4242:4264   */\n      dup6\n      add\n        /* \"#utility.yul\":4295:4299   */\n      0x1f\n        /* \"#utility.yul\":4287:4300   */\n      dup2\n      add\n        /* \"#utility.yul\":4283:4310   */\n      dup8\n      sgt\n        /* \"#utility.yul\":4273:4328   */\n      tag_289\n      jumpi\n        /* \"#utility.yul\":4324:4325   */\n      0x00\n        /* \"#utility.yul\":4321:4322   */\n      dup1\n        /* \"#utility.yul\":4314:4326   */\n      revert\n        /* \"#utility.yul\":4273:4328   */\n    tag_289:\n        /* \"#utility.yul\":4364:4366   */\n      dup1\n        /* \"#utility.yul\":4351:4367   */\n      calldataload\n        /* \"#utility.yul\":4390:4408   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4382:4388   */\n      dup2\n        /* \"#utility.yul\":4379:4409   */\n      gt\n        /* \"#utility.yul\":4376:4432   */\n      iszero\n      tag_291\n      jumpi\n        /* \"#utility.yul\":4412:4430   */\n      tag_291\n      tag_247\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":4461:4463   */\n      0x40\n        /* \"#utility.yul\":4455:4464   */\n      mload\n        /* \"#utility.yul\":4608:4674   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n        /* \"#utility.yul\":4603:4605   */\n      0x3f\n        /* \"#utility.yul\":4534:4600   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n        /* \"#utility.yul\":4527:4531   */\n      0x1f\n        /* \"#utility.yul\":4519:4525   */\n      dup6\n        /* \"#utility.yul\":4515:4532   */\n      add\n        /* \"#utility.yul\":4511:4601   */\n      and\n        /* \"#utility.yul\":4507:4606   */\n      add\n        /* \"#utility.yul\":4503:4675   */\n      and\n        /* \"#utility.yul\":4495:4501   */\n      dup2\n        /* \"#utility.yul\":4491:4676   */\n      add\n        /* \"#utility.yul\":4742:4748   */\n      dup2\n        /* \"#utility.yul\":4730:4740   */\n      dup2\n        /* \"#utility.yul\":4727:4749   */\n      lt\n        /* \"#utility.yul\":4706:4724   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4694:4704   */\n      dup3\n        /* \"#utility.yul\":4691:4725   */\n      gt\n        /* \"#utility.yul\":4688:4750   */\n      or\n        /* \"#utility.yul\":4685:4773   */\n      iszero\n      tag_293\n      jumpi\n        /* \"#utility.yul\":4753:4771   */\n      tag_293\n      tag_247\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":4789:4791   */\n      0x40\n        /* \"#utility.yul\":4782:4804   */\n      mstore\n        /* \"#utility.yul\":4813:4835   */\n      dup2\n      dup2\n      mstore\n        /* \"#utility.yul\":4854:4869   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":4871:4873   */\n      0x20\n        /* \"#utility.yul\":4850:4874   */\n      add\n        /* \"#utility.yul\":4847:4884   */\n      dup10\n      lt\n        /* \"#utility.yul\":4844:4901   */\n      iszero\n      tag_294\n      jumpi\n        /* \"#utility.yul\":4897:4898   */\n      0x00\n        /* \"#utility.yul\":4894:4895   */\n      dup1\n        /* \"#utility.yul\":4887:4899   */\n      revert\n        /* \"#utility.yul\":4844:4901   */\n    tag_294:\n        /* \"#utility.yul\":4953:4959   */\n      dup2\n        /* \"#utility.yul\":4948:4950   */\n      0x20\n        /* \"#utility.yul\":4944:4946   */\n      dup5\n        /* \"#utility.yul\":4940:4951   */\n      add\n        /* \"#utility.yul\":4935:4937   */\n      0x20\n        /* \"#utility.yul\":4927:4933   */\n      dup4\n        /* \"#utility.yul\":4923:4938   */\n      add\n        /* \"#utility.yul\":4910:4960   */\n      calldatacopy\n        /* \"#utility.yul\":5006:5007   */\n      0x00\n        /* \"#utility.yul\":5001:5003   */\n      0x20\n        /* \"#utility.yul\":4992:4998   */\n      dup4\n        /* \"#utility.yul\":4984:4990   */\n      dup4\n        /* \"#utility.yul\":4980:4999   */\n      add\n        /* \"#utility.yul\":4976:5004   */\n      add\n        /* \"#utility.yul\":4969:5008   */\n      mstore\n        /* \"#utility.yul\":5027:5033   */\n      dup1\n        /* \"#utility.yul\":5017:5033   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3714:5039   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5044:5304   */\n    tag_86:\n        /* \"#utility.yul\":5112:5118   */\n      0x00\n        /* \"#utility.yul\":5120:5126   */\n      dup1\n        /* \"#utility.yul\":5173:5175   */\n      0x40\n        /* \"#utility.yul\":5161:5170   */\n      dup4\n        /* \"#utility.yul\":5152:5159   */\n      dup6\n        /* \"#utility.yul\":5148:5171   */\n      sub\n        /* \"#utility.yul\":5144:5176   */\n      slt\n        /* \"#utility.yul\":5141:5193   */\n      iszero\n      tag_296\n      jumpi\n        /* \"#utility.yul\":5189:5190   */\n      0x00\n        /* \"#utility.yul\":5186:5187   */\n      dup1\n        /* \"#utility.yul\":5179:5191   */\n      revert\n        /* \"#utility.yul\":5141:5193   */\n    tag_296:\n        /* \"#utility.yul\":5212:5241   */\n      tag_297\n        /* \"#utility.yul\":5231:5240   */\n      dup4\n        /* \"#utility.yul\":5212:5241   */\n      tag_246\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":5202:5241   */\n      swap2\n      pop\n        /* \"#utility.yul\":5260:5298   */\n      tag_298\n        /* \"#utility.yul\":5294:5296   */\n      0x20\n        /* \"#utility.yul\":5283:5292   */\n      dup5\n        /* \"#utility.yul\":5279:5297   */\n      add\n        /* \"#utility.yul\":5260:5298   */\n      tag_246\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":5250:5298   */\n      swap1\n      pop\n        /* \"#utility.yul\":5044:5304   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5309:5746   */\n    tag_94:\n        /* \"#utility.yul\":5388:5389   */\n      0x01\n        /* \"#utility.yul\":5384:5396   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":5431:5443   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":5452:5513   */\n      tag_300\n      jumpi\n        /* \"#utility.yul\":5506:5510   */\n      0x7f\n        /* \"#utility.yul\":5498:5504   */\n      dup3\n        /* \"#utility.yul\":5494:5511   */\n      and\n        /* \"#utility.yul\":5484:5511   */\n      swap2\n      pop\n        /* \"#utility.yul\":5452:5513   */\n    tag_300:\n        /* \"#utility.yul\":5559:5561   */\n      0x20\n        /* \"#utility.yul\":5551:5557   */\n      dup3\n        /* \"#utility.yul\":5548:5562   */\n      lt\n        /* \"#utility.yul\":5528:5546   */\n      dup2\n        /* \"#utility.yul\":5525:5563   */\n      sub\n        /* \"#utility.yul\":5522:5740   */\n      tag_301\n      jumpi\n        /* \"#utility.yul\":5596:5673   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5593:5594   */\n      0x00\n        /* \"#utility.yul\":5586:5674   */\n      mstore\n        /* \"#utility.yul\":5697:5701   */\n      0x22\n        /* \"#utility.yul\":5694:5695   */\n      0x04\n        /* \"#utility.yul\":5687:5702   */\n      mstore\n        /* \"#utility.yul\":5725:5729   */\n      0x24\n        /* \"#utility.yul\":5722:5723   */\n      0x00\n        /* \"#utility.yul\":5715:5730   */\n      revert\n        /* \"#utility.yul\":5522:5740   */\n    tag_301:\n      pop\n        /* \"#utility.yul\":5309:5746   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5751:6247   */\n    tag_176:\n        /* \"#utility.yul\":5930:5933   */\n      0x00\n        /* \"#utility.yul\":5968:5974   */\n      dup4\n        /* \"#utility.yul\":5962:5975   */\n      mload\n        /* \"#utility.yul\":5984:6050   */\n      tag_303\n        /* \"#utility.yul\":6043:6049   */\n      dup2\n        /* \"#utility.yul\":6038:6041   */\n      dup5\n        /* \"#utility.yul\":6031:6035   */\n      0x20\n        /* \"#utility.yul\":6023:6029   */\n      dup9\n        /* \"#utility.yul\":6019:6036   */\n      add\n        /* \"#utility.yul\":5984:6050   */\n      tag_244\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":6113:6126   */\n      dup4\n      mload\n        /* \"#utility.yul\":6072:6088   */\n      swap1\n      dup4\n      add\n      swap1\n        /* \"#utility.yul\":6135:6205   */\n      tag_304\n        /* \"#utility.yul\":6113:6126   */\n      dup2\n        /* \"#utility.yul\":6072:6088   */\n      dup4\n        /* \"#utility.yul\":6182:6186   */\n      0x20\n        /* \"#utility.yul\":6170:6187   */\n      dup9\n      add\n        /* \"#utility.yul\":6135:6205   */\n      tag_244\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":6221:6241   */\n      add\n      swap5\n        /* \"#utility.yul\":5751:6247   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6252:6602   */\n    tag_185:\n        /* \"#utility.yul\":6291:6294   */\n      0x00\n        /* \"#utility.yul\":6319:6324   */\n      dup2\n        /* \"#utility.yul\":6309:6502   */\n      tag_306\n      jumpi\n        /* \"#utility.yul\":6358:6435   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6355:6356   */\n      0x00\n        /* \"#utility.yul\":6348:6436   */\n      mstore\n        /* \"#utility.yul\":6459:6463   */\n      0x11\n        /* \"#utility.yul\":6456:6457   */\n      0x04\n        /* \"#utility.yul\":6449:6464   */\n      mstore\n        /* \"#utility.yul\":6487:6491   */\n      0x24\n        /* \"#utility.yul\":6484:6485   */\n      0x00\n        /* \"#utility.yul\":6477:6492   */\n      revert\n        /* \"#utility.yul\":6309:6502   */\n    tag_306:\n      pop\n        /* \"#utility.yul\":6529:6595   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":6518:6596   */\n      add\n      swap1\n        /* \"#utility.yul\":6252:6602   */\n      jump\t// out\n        /* \"#utility.yul\":6607:7138   */\n    tag_223:\n        /* \"#utility.yul\":6850:6892   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":6842:6848   */\n      dup6\n        /* \"#utility.yul\":6838:6893   */\n      and\n        /* \"#utility.yul\":6827:6836   */\n      dup2\n        /* \"#utility.yul\":6820:6894   */\n      mstore\n        /* \"#utility.yul\":6942:6984   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":6934:6940   */\n      dup5\n        /* \"#utility.yul\":6930:6985   */\n      and\n        /* \"#utility.yul\":6925:6927   */\n      0x20\n        /* \"#utility.yul\":6914:6923   */\n      dup3\n        /* \"#utility.yul\":6910:6928   */\n      add\n        /* \"#utility.yul\":6903:6986   */\n      mstore\n        /* \"#utility.yul\":7022:7028   */\n      dup3\n        /* \"#utility.yul\":7017:7019   */\n      0x40\n        /* \"#utility.yul\":7006:7015   */\n      dup3\n        /* \"#utility.yul\":7002:7020   */\n      add\n        /* \"#utility.yul\":6995:7029   */\n      mstore\n        /* \"#utility.yul\":7065:7068   */\n      0x80\n        /* \"#utility.yul\":7060:7062   */\n      0x60\n        /* \"#utility.yul\":7049:7058   */\n      dup3\n        /* \"#utility.yul\":7045:7063   */\n      add\n        /* \"#utility.yul\":7038:7069   */\n      mstore\n        /* \"#utility.yul\":6801:6805   */\n      0x00\n        /* \"#utility.yul\":7086:7132   */\n      tag_308\n        /* \"#utility.yul\":7127:7130   */\n      0x80\n        /* \"#utility.yul\":7116:7125   */\n      dup4\n        /* \"#utility.yul\":7112:7131   */\n      add\n        /* \"#utility.yul\":7104:7110   */\n      dup5\n        /* \"#utility.yul\":7086:7132   */\n      tag_245\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":7078:7132   */\n      swap7\n        /* \"#utility.yul\":6607:7138   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7143:7392   */\n    tag_226:\n        /* \"#utility.yul\":7212:7218   */\n      0x00\n        /* \"#utility.yul\":7265:7267   */\n      0x20\n        /* \"#utility.yul\":7253:7262   */\n      dup3\n        /* \"#utility.yul\":7244:7251   */\n      dup5\n        /* \"#utility.yul\":7240:7263   */\n      sub\n        /* \"#utility.yul\":7236:7268   */\n      slt\n        /* \"#utility.yul\":7233:7285   */\n      iszero\n      tag_310\n      jumpi\n        /* \"#utility.yul\":7281:7282   */\n      0x00\n        /* \"#utility.yul\":7278:7279   */\n      dup1\n        /* \"#utility.yul\":7271:7283   */\n      revert\n        /* \"#utility.yul\":7233:7285   */\n    tag_310:\n        /* \"#utility.yul\":7313:7322   */\n      dup2\n        /* \"#utility.yul\":7307:7323   */\n      mload\n        /* \"#utility.yul\":7332:7362   */\n      tag_172\n        /* \"#utility.yul\":7356:7361   */\n      dup2\n        /* \"#utility.yul\":7332:7362   */\n      tag_243\n      jump\t// in\n\n    auxdata: 0xa2646970667358221220a0c7cbf30b6afe06e21c972cf59b7244d2a78b1e991767aaeeea184a3f934a4164736f6c634300081b0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_225": {
									"entryPoint": null,
									"id": 225,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_startTokenId_234": {
									"entryPoint": null,
									"id": 234,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 106,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 269,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 432,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 511,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 374,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 84,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:4053:5",
										"nodeType": "YulBlock",
										"src": "0:4053:5",
										"statements": [
											{
												"nativeSrc": "6:3:5",
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "46:95:5",
													"nodeType": "YulBlock",
													"src": "46:95:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "63:1:5",
																		"nodeType": "YulLiteral",
																		"src": "63:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "70:3:5",
																				"nodeType": "YulLiteral",
																				"src": "70:3:5",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "75:10:5",
																				"nodeType": "YulLiteral",
																				"src": "75:10:5",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "66:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:5"
																		},
																		"nativeSrc": "66:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "56:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:5"
																},
																"nativeSrc": "56:31:5",
																"nodeType": "YulFunctionCall",
																"src": "56:31:5"
															},
															"nativeSrc": "56:31:5",
															"nodeType": "YulExpressionStatement",
															"src": "56:31:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "103:1:5",
																		"nodeType": "YulLiteral",
																		"src": "103:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "106:4:5",
																		"nodeType": "YulLiteral",
																		"src": "106:4:5",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "96:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:5"
																},
																"nativeSrc": "96:15:5",
																"nodeType": "YulFunctionCall",
																"src": "96:15:5"
															},
															"nativeSrc": "96:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "96:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "127:1:5",
																		"nodeType": "YulLiteral",
																		"src": "127:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "130:4:5",
																		"nodeType": "YulLiteral",
																		"src": "130:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "120:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:5"
																},
																"nativeSrc": "120:15:5",
																"nodeType": "YulFunctionCall",
																"src": "120:15:5"
															},
															"nativeSrc": "120:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "120:15:5"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "14:127:5",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:5"
											},
											{
												"body": {
													"nativeSrc": "210:770:5",
													"nodeType": "YulBlock",
													"src": "210:770:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "259:16:5",
																"nodeType": "YulBlock",
																"src": "259:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "268:1:5",
																					"nodeType": "YulLiteral",
																					"src": "268:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "271:1:5",
																					"nodeType": "YulLiteral",
																					"src": "271:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "261:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "261:6:5"
																			},
																			"nativeSrc": "261:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "261:12:5"
																		},
																		"nativeSrc": "261:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "261:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "238:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "238:6:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "246:4:5",
																						"nodeType": "YulLiteral",
																						"src": "246:4:5",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "234:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:5"
																				},
																				"nativeSrc": "234:17:5",
																				"nodeType": "YulFunctionCall",
																				"src": "234:17:5"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "253:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "253:3:5"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "230:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "230:3:5"
																		},
																		"nativeSrc": "230:27:5",
																		"nodeType": "YulFunctionCall",
																		"src": "230:27:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "223:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:5"
																},
																"nativeSrc": "223:35:5",
																"nodeType": "YulFunctionCall",
																"src": "223:35:5"
															},
															"nativeSrc": "220:55:5",
															"nodeType": "YulIf",
															"src": "220:55:5"
														},
														{
															"nativeSrc": "284:27:5",
															"nodeType": "YulVariableDeclaration",
															"src": "284:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "304:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "304:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "298:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "298:5:5"
																},
																"nativeSrc": "298:13:5",
																"nodeType": "YulFunctionCall",
																"src": "298:13:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "288:6:5",
																	"nodeType": "YulTypedName",
																	"src": "288:6:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "354:22:5",
																"nodeType": "YulBlock",
																"src": "354:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "356:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "356:16:5"
																			},
																			"nativeSrc": "356:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "356:18:5"
																		},
																		"nativeSrc": "356:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "356:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "326:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "326:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "342:2:5",
																						"nodeType": "YulLiteral",
																						"src": "342:2:5",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "346:1:5",
																						"nodeType": "YulLiteral",
																						"src": "346:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "338:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "338:3:5"
																				},
																				"nativeSrc": "338:10:5",
																				"nodeType": "YulFunctionCall",
																				"src": "338:10:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "350:1:5",
																				"nodeType": "YulLiteral",
																				"src": "350:1:5",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "334:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "334:3:5"
																		},
																		"nativeSrc": "334:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "334:18:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "323:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "323:2:5"
																},
																"nativeSrc": "323:30:5",
																"nodeType": "YulFunctionCall",
																"src": "323:30:5"
															},
															"nativeSrc": "320:56:5",
															"nodeType": "YulIf",
															"src": "320:56:5"
														},
														{
															"nativeSrc": "385:23:5",
															"nodeType": "YulVariableDeclaration",
															"src": "385:23:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "405:2:5",
																		"nodeType": "YulLiteral",
																		"src": "405:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "399:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "399:5:5"
																},
																"nativeSrc": "399:9:5",
																"nodeType": "YulFunctionCall",
																"src": "399:9:5"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "389:6:5",
																	"nodeType": "YulTypedName",
																	"src": "389:6:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "417:85:5",
															"nodeType": "YulVariableDeclaration",
															"src": "417:85:5",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "439:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "439:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "length",
																										"nativeSrc": "463:6:5",
																										"nodeType": "YulIdentifier",
																										"src": "463:6:5"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "471:4:5",
																										"nodeType": "YulLiteral",
																										"src": "471:4:5",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "459:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "459:3:5"
																								},
																								"nativeSrc": "459:17:5",
																								"nodeType": "YulFunctionCall",
																								"src": "459:17:5"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "482:2:5",
																										"nodeType": "YulLiteral",
																										"src": "482:2:5",
																										"type": "",
																										"value": "31"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "478:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "478:3:5"
																								},
																								"nativeSrc": "478:7:5",
																								"nodeType": "YulFunctionCall",
																								"src": "478:7:5"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "455:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "455:3:5"
																						},
																						"nativeSrc": "455:31:5",
																						"nodeType": "YulFunctionCall",
																						"src": "455:31:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "488:2:5",
																						"nodeType": "YulLiteral",
																						"src": "488:2:5",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "451:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "451:3:5"
																				},
																				"nativeSrc": "451:40:5",
																				"nodeType": "YulFunctionCall",
																				"src": "451:40:5"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "497:2:5",
																						"nodeType": "YulLiteral",
																						"src": "497:2:5",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "493:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "493:3:5"
																				},
																				"nativeSrc": "493:7:5",
																				"nodeType": "YulFunctionCall",
																				"src": "493:7:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "447:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "447:3:5"
																		},
																		"nativeSrc": "447:54:5",
																		"nodeType": "YulFunctionCall",
																		"src": "447:54:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "435:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "435:3:5"
																},
																"nativeSrc": "435:67:5",
																"nodeType": "YulFunctionCall",
																"src": "435:67:5"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "421:10:5",
																	"nodeType": "YulTypedName",
																	"src": "421:10:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "577:22:5",
																"nodeType": "YulBlock",
																"src": "577:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "579:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "579:16:5"
																			},
																			"nativeSrc": "579:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "579:18:5"
																		},
																		"nativeSrc": "579:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "579:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "520:10:5",
																				"nodeType": "YulIdentifier",
																				"src": "520:10:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "540:2:5",
																								"nodeType": "YulLiteral",
																								"src": "540:2:5",
																								"type": "",
																								"value": "64"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "544:1:5",
																								"nodeType": "YulLiteral",
																								"src": "544:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "536:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "536:3:5"
																						},
																						"nativeSrc": "536:10:5",
																						"nodeType": "YulFunctionCall",
																						"src": "536:10:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "548:1:5",
																						"nodeType": "YulLiteral",
																						"src": "548:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "532:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "532:3:5"
																				},
																				"nativeSrc": "532:18:5",
																				"nodeType": "YulFunctionCall",
																				"src": "532:18:5"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "517:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "517:2:5"
																		},
																		"nativeSrc": "517:34:5",
																		"nodeType": "YulFunctionCall",
																		"src": "517:34:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "556:10:5",
																				"nodeType": "YulIdentifier",
																				"src": "556:10:5"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "568:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "568:6:5"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "553:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "553:2:5"
																		},
																		"nativeSrc": "553:22:5",
																		"nodeType": "YulFunctionCall",
																		"src": "553:22:5"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "514:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "514:2:5"
																},
																"nativeSrc": "514:62:5",
																"nodeType": "YulFunctionCall",
																"src": "514:62:5"
															},
															"nativeSrc": "511:88:5",
															"nodeType": "YulIf",
															"src": "511:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "615:2:5",
																		"nodeType": "YulLiteral",
																		"src": "615:2:5",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "619:10:5",
																		"nodeType": "YulIdentifier",
																		"src": "619:10:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "608:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "608:6:5"
																},
																"nativeSrc": "608:22:5",
																"nodeType": "YulFunctionCall",
																"src": "608:22:5"
															},
															"nativeSrc": "608:22:5",
															"nodeType": "YulExpressionStatement",
															"src": "608:22:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "646:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "646:6:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "654:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "654:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "639:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "639:6:5"
																},
																"nativeSrc": "639:22:5",
																"nodeType": "YulFunctionCall",
																"src": "639:22:5"
															},
															"nativeSrc": "639:22:5",
															"nodeType": "YulExpressionStatement",
															"src": "639:22:5"
														},
														{
															"body": {
																"nativeSrc": "713:16:5",
																"nodeType": "YulBlock",
																"src": "713:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "722:1:5",
																					"nodeType": "YulLiteral",
																					"src": "722:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "725:1:5",
																					"nodeType": "YulLiteral",
																					"src": "725:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "715:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "715:6:5"
																			},
																			"nativeSrc": "715:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "715:12:5"
																		},
																		"nativeSrc": "715:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "715:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "684:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "684:6:5"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "692:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "692:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "680:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "680:3:5"
																				},
																				"nativeSrc": "680:19:5",
																				"nodeType": "YulFunctionCall",
																				"src": "680:19:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "701:4:5",
																				"nodeType": "YulLiteral",
																				"src": "701:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "676:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "676:3:5"
																		},
																		"nativeSrc": "676:30:5",
																		"nodeType": "YulFunctionCall",
																		"src": "676:30:5"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "708:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "708:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "673:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "673:2:5"
																},
																"nativeSrc": "673:39:5",
																"nodeType": "YulFunctionCall",
																"src": "673:39:5"
															},
															"nativeSrc": "670:59:5",
															"nodeType": "YulIf",
															"src": "670:59:5"
														},
														{
															"nativeSrc": "738:10:5",
															"nodeType": "YulVariableDeclaration",
															"src": "738:10:5",
															"value": {
																"kind": "number",
																"nativeSrc": "747:1:5",
																"nodeType": "YulLiteral",
																"src": "747:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "742:1:5",
																	"nodeType": "YulTypedName",
																	"src": "742:1:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "809:91:5",
																"nodeType": "YulBlock",
																"src": "809:91:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nativeSrc": "838:6:5",
																									"nodeType": "YulIdentifier",
																									"src": "838:6:5"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "846:1:5",
																									"nodeType": "YulIdentifier",
																									"src": "846:1:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "834:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "834:3:5"
																							},
																							"nativeSrc": "834:14:5",
																							"nodeType": "YulFunctionCall",
																							"src": "834:14:5"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "850:4:5",
																							"nodeType": "YulLiteral",
																							"src": "850:4:5",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "830:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "830:3:5"
																					},
																					"nativeSrc": "830:25:5",
																					"nodeType": "YulFunctionCall",
																					"src": "830:25:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nativeSrc": "871:6:5",
																											"nodeType": "YulIdentifier",
																											"src": "871:6:5"
																										},
																										{
																											"name": "i",
																											"nativeSrc": "879:1:5",
																											"nodeType": "YulIdentifier",
																											"src": "879:1:5"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nativeSrc": "867:3:5",
																										"nodeType": "YulIdentifier",
																										"src": "867:3:5"
																									},
																									"nativeSrc": "867:14:5",
																									"nodeType": "YulFunctionCall",
																									"src": "867:14:5"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "883:4:5",
																									"nodeType": "YulLiteral",
																									"src": "883:4:5",
																									"type": "",
																									"value": "0x20"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "863:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "863:3:5"
																							},
																							"nativeSrc": "863:25:5",
																							"nodeType": "YulFunctionCall",
																							"src": "863:25:5"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "857:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "857:5:5"
																					},
																					"nativeSrc": "857:32:5",
																					"nodeType": "YulFunctionCall",
																					"src": "857:32:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "823:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "823:6:5"
																			},
																			"nativeSrc": "823:67:5",
																			"nodeType": "YulFunctionCall",
																			"src": "823:67:5"
																		},
																		"nativeSrc": "823:67:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "823:67:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "768:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "768:1:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "771:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "771:6:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "765:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "765:2:5"
																},
																"nativeSrc": "765:13:5",
																"nodeType": "YulFunctionCall",
																"src": "765:13:5"
															},
															"nativeSrc": "757:143:5",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "779:21:5",
																"nodeType": "YulBlock",
																"src": "779:21:5",
																"statements": [
																	{
																		"nativeSrc": "781:17:5",
																		"nodeType": "YulAssignment",
																		"src": "781:17:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "790:1:5",
																					"nodeType": "YulIdentifier",
																					"src": "790:1:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "793:4:5",
																					"nodeType": "YulLiteral",
																					"src": "793:4:5",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "786:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "786:3:5"
																			},
																			"nativeSrc": "786:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "786:12:5"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "781:1:5",
																				"nodeType": "YulIdentifier",
																				"src": "781:1:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "761:3:5",
																"nodeType": "YulBlock",
																"src": "761:3:5",
																"statements": []
															},
															"src": "757:143:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "924:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "924:6:5"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "932:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "932:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "920:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "920:3:5"
																				},
																				"nativeSrc": "920:19:5",
																				"nodeType": "YulFunctionCall",
																				"src": "920:19:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "941:4:5",
																				"nodeType": "YulLiteral",
																				"src": "941:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "916:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "916:3:5"
																		},
																		"nativeSrc": "916:30:5",
																		"nodeType": "YulFunctionCall",
																		"src": "916:30:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "948:1:5",
																		"nodeType": "YulLiteral",
																		"src": "948:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "909:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "909:6:5"
																},
																"nativeSrc": "909:41:5",
																"nodeType": "YulFunctionCall",
																"src": "909:41:5"
															},
															"nativeSrc": "909:41:5",
															"nodeType": "YulExpressionStatement",
															"src": "909:41:5"
														},
														{
															"nativeSrc": "959:15:5",
															"nodeType": "YulAssignment",
															"src": "959:15:5",
															"value": {
																"name": "memPtr",
																"nativeSrc": "968:6:5",
																"nodeType": "YulIdentifier",
																"src": "968:6:5"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "959:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "959:5:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nativeSrc": "146:834:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "184:6:5",
														"nodeType": "YulTypedName",
														"src": "184:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "192:3:5",
														"nodeType": "YulTypedName",
														"src": "192:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "200:5:5",
														"nodeType": "YulTypedName",
														"src": "200:5:5",
														"type": ""
													}
												],
												"src": "146:834:5"
											},
											{
												"body": {
													"nativeSrc": "1103:439:5",
													"nodeType": "YulBlock",
													"src": "1103:439:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1149:16:5",
																"nodeType": "YulBlock",
																"src": "1149:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1158:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1158:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1161:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1161:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1151:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1151:6:5"
																			},
																			"nativeSrc": "1151:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1151:12:5"
																		},
																		"nativeSrc": "1151:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1151:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1124:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1124:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1133:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1133:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1120:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1120:3:5"
																		},
																		"nativeSrc": "1120:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1120:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1145:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1145:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1116:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1116:3:5"
																},
																"nativeSrc": "1116:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1116:32:5"
															},
															"nativeSrc": "1113:52:5",
															"nodeType": "YulIf",
															"src": "1113:52:5"
														},
														{
															"nativeSrc": "1174:30:5",
															"nodeType": "YulVariableDeclaration",
															"src": "1174:30:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1194:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1194:9:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1188:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1188:5:5"
																},
																"nativeSrc": "1188:16:5",
																"nodeType": "YulFunctionCall",
																"src": "1188:16:5"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "1178:6:5",
																	"nodeType": "YulTypedName",
																	"src": "1178:6:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1247:16:5",
																"nodeType": "YulBlock",
																"src": "1247:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1256:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1256:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1259:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1259:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1249:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1249:6:5"
																			},
																			"nativeSrc": "1249:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1249:12:5"
																		},
																		"nativeSrc": "1249:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1249:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1219:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1219:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1235:2:5",
																						"nodeType": "YulLiteral",
																						"src": "1235:2:5",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1239:1:5",
																						"nodeType": "YulLiteral",
																						"src": "1239:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1231:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1231:3:5"
																				},
																				"nativeSrc": "1231:10:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1231:10:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1243:1:5",
																				"nodeType": "YulLiteral",
																				"src": "1243:1:5",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1227:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1227:3:5"
																		},
																		"nativeSrc": "1227:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1227:18:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1216:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "1216:2:5"
																},
																"nativeSrc": "1216:30:5",
																"nodeType": "YulFunctionCall",
																"src": "1216:30:5"
															},
															"nativeSrc": "1213:50:5",
															"nodeType": "YulIf",
															"src": "1213:50:5"
														},
														{
															"nativeSrc": "1272:71:5",
															"nodeType": "YulAssignment",
															"src": "1272:71:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1315:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1315:9:5"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "1326:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1326:6:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1311:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1311:3:5"
																		},
																		"nativeSrc": "1311:22:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1311:22:5"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1335:7:5",
																		"nodeType": "YulIdentifier",
																		"src": "1335:7:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nativeSrc": "1282:28:5",
																	"nodeType": "YulIdentifier",
																	"src": "1282:28:5"
																},
																"nativeSrc": "1282:61:5",
																"nodeType": "YulFunctionCall",
																"src": "1282:61:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1272:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1272:6:5"
																}
															]
														},
														{
															"nativeSrc": "1352:41:5",
															"nodeType": "YulVariableDeclaration",
															"src": "1352:41:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1378:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1378:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1389:2:5",
																				"nodeType": "YulLiteral",
																				"src": "1389:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1374:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1374:3:5"
																		},
																		"nativeSrc": "1374:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1374:18:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1368:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1368:5:5"
																},
																"nativeSrc": "1368:25:5",
																"nodeType": "YulFunctionCall",
																"src": "1368:25:5"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nativeSrc": "1356:8:5",
																	"nodeType": "YulTypedName",
																	"src": "1356:8:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1438:16:5",
																"nodeType": "YulBlock",
																"src": "1438:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1447:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1447:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1450:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1450:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1440:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1440:6:5"
																			},
																			"nativeSrc": "1440:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1440:12:5"
																		},
																		"nativeSrc": "1440:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1440:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nativeSrc": "1408:8:5",
																		"nodeType": "YulIdentifier",
																		"src": "1408:8:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1426:2:5",
																						"nodeType": "YulLiteral",
																						"src": "1426:2:5",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1430:1:5",
																						"nodeType": "YulLiteral",
																						"src": "1430:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1422:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1422:3:5"
																				},
																				"nativeSrc": "1422:10:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1422:10:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1434:1:5",
																				"nodeType": "YulLiteral",
																				"src": "1434:1:5",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1418:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1418:3:5"
																		},
																		"nativeSrc": "1418:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1418:18:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1405:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "1405:2:5"
																},
																"nativeSrc": "1405:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1405:32:5"
															},
															"nativeSrc": "1402:52:5",
															"nodeType": "YulIf",
															"src": "1402:52:5"
														},
														{
															"nativeSrc": "1463:73:5",
															"nodeType": "YulAssignment",
															"src": "1463:73:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1506:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1506:9:5"
																			},
																			{
																				"name": "offset_1",
																				"nativeSrc": "1517:8:5",
																				"nodeType": "YulIdentifier",
																				"src": "1517:8:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1502:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1502:3:5"
																		},
																		"nativeSrc": "1502:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1502:24:5"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1528:7:5",
																		"nodeType": "YulIdentifier",
																		"src": "1528:7:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nativeSrc": "1473:28:5",
																	"nodeType": "YulIdentifier",
																	"src": "1473:28:5"
																},
																"nativeSrc": "1473:63:5",
																"nodeType": "YulFunctionCall",
																"src": "1473:63:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1463:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1463:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nativeSrc": "985:557:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1061:9:5",
														"nodeType": "YulTypedName",
														"src": "1061:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1072:7:5",
														"nodeType": "YulTypedName",
														"src": "1072:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1084:6:5",
														"nodeType": "YulTypedName",
														"src": "1084:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1092:6:5",
														"nodeType": "YulTypedName",
														"src": "1092:6:5",
														"type": ""
													}
												],
												"src": "985:557:5"
											},
											{
												"body": {
													"nativeSrc": "1602:325:5",
													"nodeType": "YulBlock",
													"src": "1602:325:5",
													"statements": [
														{
															"nativeSrc": "1612:22:5",
															"nodeType": "YulAssignment",
															"src": "1612:22:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1626:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1626:1:5",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "1629:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "1629:4:5"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "1622:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1622:3:5"
																},
																"nativeSrc": "1622:12:5",
																"nodeType": "YulFunctionCall",
																"src": "1622:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1612:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1612:6:5"
																}
															]
														},
														{
															"nativeSrc": "1643:38:5",
															"nodeType": "YulVariableDeclaration",
															"src": "1643:38:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1673:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "1673:4:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1679:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1679:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1669:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1669:3:5"
																},
																"nativeSrc": "1669:12:5",
																"nodeType": "YulFunctionCall",
																"src": "1669:12:5"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "1647:18:5",
																	"nodeType": "YulTypedName",
																	"src": "1647:18:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1720:31:5",
																"nodeType": "YulBlock",
																"src": "1720:31:5",
																"statements": [
																	{
																		"nativeSrc": "1722:27:5",
																		"nodeType": "YulAssignment",
																		"src": "1722:27:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "1736:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "1736:6:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1744:4:5",
																					"nodeType": "YulLiteral",
																					"src": "1744:4:5",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "1732:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "1732:3:5"
																			},
																			"nativeSrc": "1732:17:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1732:17:5"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "1722:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1722:6:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1700:18:5",
																		"nodeType": "YulIdentifier",
																		"src": "1700:18:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1693:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1693:6:5"
																},
																"nativeSrc": "1693:26:5",
																"nodeType": "YulFunctionCall",
																"src": "1693:26:5"
															},
															"nativeSrc": "1690:61:5",
															"nodeType": "YulIf",
															"src": "1690:61:5"
														},
														{
															"body": {
																"nativeSrc": "1810:111:5",
																"nodeType": "YulBlock",
																"src": "1810:111:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1831:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1831:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1838:3:5",
																							"nodeType": "YulLiteral",
																							"src": "1838:3:5",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "1843:10:5",
																							"nodeType": "YulLiteral",
																							"src": "1843:10:5",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "1834:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "1834:3:5"
																					},
																					"nativeSrc": "1834:20:5",
																					"nodeType": "YulFunctionCall",
																					"src": "1834:20:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1824:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1824:6:5"
																			},
																			"nativeSrc": "1824:31:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1824:31:5"
																		},
																		"nativeSrc": "1824:31:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1824:31:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1875:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1875:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1878:4:5",
																					"nodeType": "YulLiteral",
																					"src": "1878:4:5",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1868:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1868:6:5"
																			},
																			"nativeSrc": "1868:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1868:15:5"
																		},
																		"nativeSrc": "1868:15:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1868:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1903:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1903:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1906:4:5",
																					"nodeType": "YulLiteral",
																					"src": "1906:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1896:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1896:6:5"
																			},
																			"nativeSrc": "1896:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1896:15:5"
																		},
																		"nativeSrc": "1896:15:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1896:15:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1766:18:5",
																		"nodeType": "YulIdentifier",
																		"src": "1766:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1789:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1789:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1797:2:5",
																				"nodeType": "YulLiteral",
																				"src": "1797:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1786:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "1786:2:5"
																		},
																		"nativeSrc": "1786:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1786:14:5"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "1763:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "1763:2:5"
																},
																"nativeSrc": "1763:38:5",
																"nodeType": "YulFunctionCall",
																"src": "1763:38:5"
															},
															"nativeSrc": "1760:161:5",
															"nodeType": "YulIf",
															"src": "1760:161:5"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1547:380:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1582:4:5",
														"nodeType": "YulTypedName",
														"src": "1582:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1591:6:5",
														"nodeType": "YulTypedName",
														"src": "1591:6:5",
														"type": ""
													}
												],
												"src": "1547:380:5"
											},
											{
												"body": {
													"nativeSrc": "1988:65:5",
													"nodeType": "YulBlock",
													"src": "1988:65:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2005:1:5",
																		"nodeType": "YulLiteral",
																		"src": "2005:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2008:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2008:3:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1998:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1998:6:5"
																},
																"nativeSrc": "1998:14:5",
																"nodeType": "YulFunctionCall",
																"src": "1998:14:5"
															},
															"nativeSrc": "1998:14:5",
															"nodeType": "YulExpressionStatement",
															"src": "1998:14:5"
														},
														{
															"nativeSrc": "2021:26:5",
															"nodeType": "YulAssignment",
															"src": "2021:26:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2039:1:5",
																		"nodeType": "YulLiteral",
																		"src": "2039:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2042:4:5",
																		"nodeType": "YulLiteral",
																		"src": "2042:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2029:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "2029:9:5"
																},
																"nativeSrc": "2029:18:5",
																"nodeType": "YulFunctionCall",
																"src": "2029:18:5"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2021:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "2021:4:5"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "1932:121:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "1971:3:5",
														"nodeType": "YulTypedName",
														"src": "1971:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "1979:4:5",
														"nodeType": "YulTypedName",
														"src": "1979:4:5",
														"type": ""
													}
												],
												"src": "1932:121:5"
											},
											{
												"body": {
													"nativeSrc": "2139:437:5",
													"nodeType": "YulBlock",
													"src": "2139:437:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2172:398:5",
																"nodeType": "YulBlock",
																"src": "2172:398:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2193:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2193:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "2196:5:5",
																					"nodeType": "YulIdentifier",
																					"src": "2196:5:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2186:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2186:6:5"
																			},
																			"nativeSrc": "2186:16:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2186:16:5"
																		},
																		"nativeSrc": "2186:16:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2186:16:5"
																	},
																	{
																		"nativeSrc": "2215:30:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2215:30:5",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2237:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2237:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2240:4:5",
																					"nodeType": "YulLiteral",
																					"src": "2240:4:5",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "2227:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2227:9:5"
																			},
																			"nativeSrc": "2227:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2227:18:5"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "2219:4:5",
																				"nodeType": "YulTypedName",
																				"src": "2219:4:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2258:57:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2258:57:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "2281:4:5",
																					"nodeType": "YulIdentifier",
																					"src": "2281:4:5"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2291:1:5",
																							"nodeType": "YulLiteral",
																							"src": "2291:1:5",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "2298:10:5",
																									"nodeType": "YulIdentifier",
																									"src": "2298:10:5"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2310:2:5",
																									"nodeType": "YulLiteral",
																									"src": "2310:2:5",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2294:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "2294:3:5"
																							},
																							"nativeSrc": "2294:19:5",
																							"nodeType": "YulFunctionCall",
																							"src": "2294:19:5"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "2287:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "2287:3:5"
																					},
																					"nativeSrc": "2287:27:5",
																					"nodeType": "YulFunctionCall",
																					"src": "2287:27:5"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2277:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "2277:3:5"
																			},
																			"nativeSrc": "2277:38:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2277:38:5"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2262:11:5",
																				"nodeType": "YulTypedName",
																				"src": "2262:11:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "2352:23:5",
																			"nodeType": "YulBlock",
																			"src": "2352:23:5",
																			"statements": [
																				{
																					"nativeSrc": "2354:19:5",
																					"nodeType": "YulAssignment",
																					"src": "2354:19:5",
																					"value": {
																						"name": "data",
																						"nativeSrc": "2369:4:5",
																						"nodeType": "YulIdentifier",
																						"src": "2369:4:5"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "2354:11:5",
																							"nodeType": "YulIdentifier",
																							"src": "2354:11:5"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "2334:10:5",
																					"nodeType": "YulIdentifier",
																					"src": "2334:10:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2346:4:5",
																					"nodeType": "YulLiteral",
																					"src": "2346:4:5",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "2331:2:5",
																				"nodeType": "YulIdentifier",
																				"src": "2331:2:5"
																			},
																			"nativeSrc": "2331:20:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2331:20:5"
																		},
																		"nativeSrc": "2328:47:5",
																		"nodeType": "YulIf",
																		"src": "2328:47:5"
																	},
																	{
																		"nativeSrc": "2388:41:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2388:41:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "2402:4:5",
																					"nodeType": "YulIdentifier",
																					"src": "2402:4:5"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2412:1:5",
																							"nodeType": "YulLiteral",
																							"src": "2412:1:5",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "2419:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "2419:3:5"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2424:2:5",
																									"nodeType": "YulLiteral",
																									"src": "2424:2:5",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2415:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "2415:3:5"
																							},
																							"nativeSrc": "2415:12:5",
																							"nodeType": "YulFunctionCall",
																							"src": "2415:12:5"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "2408:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "2408:3:5"
																					},
																					"nativeSrc": "2408:20:5",
																					"nodeType": "YulFunctionCall",
																					"src": "2408:20:5"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2398:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "2398:3:5"
																			},
																			"nativeSrc": "2398:31:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2398:31:5"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "2392:2:5",
																				"nodeType": "YulTypedName",
																				"src": "2392:2:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2442:24:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2442:24:5",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "2455:11:5",
																			"nodeType": "YulIdentifier",
																			"src": "2455:11:5"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "2446:5:5",
																				"nodeType": "YulTypedName",
																				"src": "2446:5:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "2540:20:5",
																			"nodeType": "YulBlock",
																			"src": "2540:20:5",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "2549:5:5",
																								"nodeType": "YulIdentifier",
																								"src": "2549:5:5"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2556:1:5",
																								"nodeType": "YulLiteral",
																								"src": "2556:1:5",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "2542:6:5",
																							"nodeType": "YulIdentifier",
																							"src": "2542:6:5"
																						},
																						"nativeSrc": "2542:16:5",
																						"nodeType": "YulFunctionCall",
																						"src": "2542:16:5"
																					},
																					"nativeSrc": "2542:16:5",
																					"nodeType": "YulExpressionStatement",
																					"src": "2542:16:5"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2490:5:5",
																					"nodeType": "YulIdentifier",
																					"src": "2490:5:5"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "2497:2:5",
																					"nodeType": "YulIdentifier",
																					"src": "2497:2:5"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "2487:2:5",
																				"nodeType": "YulIdentifier",
																				"src": "2487:2:5"
																			},
																			"nativeSrc": "2487:13:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2487:13:5"
																		},
																		"nativeSrc": "2479:81:5",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "2501:26:5",
																			"nodeType": "YulBlock",
																			"src": "2501:26:5",
																			"statements": [
																				{
																					"nativeSrc": "2503:22:5",
																					"nodeType": "YulAssignment",
																					"src": "2503:22:5",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "2516:5:5",
																								"nodeType": "YulIdentifier",
																								"src": "2516:5:5"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2523:1:5",
																								"nodeType": "YulLiteral",
																								"src": "2523:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "2512:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "2512:3:5"
																						},
																						"nativeSrc": "2512:13:5",
																						"nodeType": "YulFunctionCall",
																						"src": "2512:13:5"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "2503:5:5",
																							"nodeType": "YulIdentifier",
																							"src": "2503:5:5"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "2483:3:5",
																			"nodeType": "YulBlock",
																			"src": "2483:3:5",
																			"statements": []
																		},
																		"src": "2479:81:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2155:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2155:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2160:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2160:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2152:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "2152:2:5"
																},
																"nativeSrc": "2152:11:5",
																"nodeType": "YulFunctionCall",
																"src": "2152:11:5"
															},
															"nativeSrc": "2149:421:5",
															"nodeType": "YulIf",
															"src": "2149:421:5"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "2058:518:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2111:5:5",
														"nodeType": "YulTypedName",
														"src": "2111:5:5",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2118:3:5",
														"nodeType": "YulTypedName",
														"src": "2118:3:5",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2123:10:5",
														"nodeType": "YulTypedName",
														"src": "2123:10:5",
														"type": ""
													}
												],
												"src": "2058:518:5"
											},
											{
												"body": {
													"nativeSrc": "2666:81:5",
													"nodeType": "YulBlock",
													"src": "2666:81:5",
													"statements": [
														{
															"nativeSrc": "2676:65:5",
															"nodeType": "YulAssignment",
															"src": "2676:65:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "2691:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "2691:4:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2709:1:5",
																										"nodeType": "YulLiteral",
																										"src": "2709:1:5",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "2712:3:5",
																										"nodeType": "YulIdentifier",
																										"src": "2712:3:5"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "2705:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "2705:3:5"
																								},
																								"nativeSrc": "2705:11:5",
																								"nodeType": "YulFunctionCall",
																								"src": "2705:11:5"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2722:1:5",
																										"nodeType": "YulLiteral",
																										"src": "2722:1:5",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "2718:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "2718:3:5"
																								},
																								"nativeSrc": "2718:6:5",
																								"nodeType": "YulFunctionCall",
																								"src": "2718:6:5"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "2701:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "2701:3:5"
																						},
																						"nativeSrc": "2701:24:5",
																						"nodeType": "YulFunctionCall",
																						"src": "2701:24:5"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "2697:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "2697:3:5"
																				},
																				"nativeSrc": "2697:29:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2697:29:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2687:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2687:3:5"
																		},
																		"nativeSrc": "2687:40:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2687:40:5"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2733:1:5",
																				"nodeType": "YulLiteral",
																				"src": "2733:1:5",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "2736:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "2736:3:5"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "2729:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2729:3:5"
																		},
																		"nativeSrc": "2729:11:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2729:11:5"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2684:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "2684:2:5"
																},
																"nativeSrc": "2684:57:5",
																"nodeType": "YulFunctionCall",
																"src": "2684:57:5"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "2676:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "2676:4:5"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "2581:166:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2643:4:5",
														"nodeType": "YulTypedName",
														"src": "2643:4:5",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2649:3:5",
														"nodeType": "YulTypedName",
														"src": "2649:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "2657:4:5",
														"nodeType": "YulTypedName",
														"src": "2657:4:5",
														"type": ""
													}
												],
												"src": "2581:166:5"
											},
											{
												"body": {
													"nativeSrc": "2848:1203:5",
													"nodeType": "YulBlock",
													"src": "2848:1203:5",
													"statements": [
														{
															"nativeSrc": "2858:24:5",
															"nodeType": "YulVariableDeclaration",
															"src": "2858:24:5",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2878:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2878:3:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2872:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "2872:5:5"
																},
																"nativeSrc": "2872:10:5",
																"nodeType": "YulFunctionCall",
																"src": "2872:10:5"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "2862:6:5",
																	"nodeType": "YulTypedName",
																	"src": "2862:6:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2925:22:5",
																"nodeType": "YulBlock",
																"src": "2925:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2927:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "2927:16:5"
																			},
																			"nativeSrc": "2927:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2927:18:5"
																		},
																		"nativeSrc": "2927:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2927:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "2897:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2897:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2913:2:5",
																						"nodeType": "YulLiteral",
																						"src": "2913:2:5",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2917:1:5",
																						"nodeType": "YulLiteral",
																						"src": "2917:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "2909:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "2909:3:5"
																				},
																				"nativeSrc": "2909:10:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2909:10:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2921:1:5",
																				"nodeType": "YulLiteral",
																				"src": "2921:1:5",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2905:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2905:3:5"
																		},
																		"nativeSrc": "2905:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2905:18:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2894:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "2894:2:5"
																},
																"nativeSrc": "2894:30:5",
																"nodeType": "YulFunctionCall",
																"src": "2894:30:5"
															},
															"nativeSrc": "2891:56:5",
															"nodeType": "YulIf",
															"src": "2891:56:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3000:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "3000:4:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3038:4:5",
																						"nodeType": "YulIdentifier",
																						"src": "3038:4:5"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3032:5:5",
																					"nodeType": "YulIdentifier",
																					"src": "3032:5:5"
																				},
																				"nativeSrc": "3032:11:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3032:11:5"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "3006:25:5",
																			"nodeType": "YulIdentifier",
																			"src": "3006:25:5"
																		},
																		"nativeSrc": "3006:38:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3006:38:5"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "3046:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3046:6:5"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "2956:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "2956:43:5"
																},
																"nativeSrc": "2956:97:5",
																"nodeType": "YulFunctionCall",
																"src": "2956:97:5"
															},
															"nativeSrc": "2956:97:5",
															"nodeType": "YulExpressionStatement",
															"src": "2956:97:5"
														},
														{
															"nativeSrc": "3062:18:5",
															"nodeType": "YulVariableDeclaration",
															"src": "3062:18:5",
															"value": {
																"kind": "number",
																"nativeSrc": "3079:1:5",
																"nodeType": "YulLiteral",
																"src": "3079:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "3066:9:5",
																	"nodeType": "YulTypedName",
																	"src": "3066:9:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3089:17:5",
															"nodeType": "YulAssignment",
															"src": "3089:17:5",
															"value": {
																"kind": "number",
																"nativeSrc": "3102:4:5",
																"nodeType": "YulLiteral",
																"src": "3102:4:5",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "3089:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "3089:9:5"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "3152:642:5",
																		"nodeType": "YulBlock",
																		"src": "3152:642:5",
																		"statements": [
																			{
																				"nativeSrc": "3166:35:5",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3166:35:5",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "3185:6:5",
																							"nodeType": "YulIdentifier",
																							"src": "3185:6:5"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "3197:2:5",
																									"nodeType": "YulLiteral",
																									"src": "3197:2:5",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "3193:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "3193:3:5"
																							},
																							"nativeSrc": "3193:7:5",
																							"nodeType": "YulFunctionCall",
																							"src": "3193:7:5"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "3181:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "3181:3:5"
																					},
																					"nativeSrc": "3181:20:5",
																					"nodeType": "YulFunctionCall",
																					"src": "3181:20:5"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "3170:7:5",
																						"nodeType": "YulTypedName",
																						"src": "3170:7:5",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "3214:49:5",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3214:49:5",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3258:4:5",
																							"nodeType": "YulIdentifier",
																							"src": "3258:4:5"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "3228:29:5",
																						"nodeType": "YulIdentifier",
																						"src": "3228:29:5"
																					},
																					"nativeSrc": "3228:35:5",
																					"nodeType": "YulFunctionCall",
																					"src": "3228:35:5"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "3218:6:5",
																						"nodeType": "YulTypedName",
																						"src": "3218:6:5",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "3276:10:5",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3276:10:5",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3285:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3285:1:5",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "3280:1:5",
																						"nodeType": "YulTypedName",
																						"src": "3280:1:5",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "3356:165:5",
																					"nodeType": "YulBlock",
																					"src": "3356:165:5",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3381:6:5",
																										"nodeType": "YulIdentifier",
																										"src": "3381:6:5"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "3399:3:5",
																														"nodeType": "YulIdentifier",
																														"src": "3399:3:5"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "3404:9:5",
																														"nodeType": "YulIdentifier",
																														"src": "3404:9:5"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "3395:3:5",
																													"nodeType": "YulIdentifier",
																													"src": "3395:3:5"
																												},
																												"nativeSrc": "3395:19:5",
																												"nodeType": "YulFunctionCall",
																												"src": "3395:19:5"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "3389:5:5",
																											"nodeType": "YulIdentifier",
																											"src": "3389:5:5"
																										},
																										"nativeSrc": "3389:26:5",
																										"nodeType": "YulFunctionCall",
																										"src": "3389:26:5"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "3374:6:5",
																									"nodeType": "YulIdentifier",
																									"src": "3374:6:5"
																								},
																								"nativeSrc": "3374:42:5",
																								"nodeType": "YulFunctionCall",
																								"src": "3374:42:5"
																							},
																							"nativeSrc": "3374:42:5",
																							"nodeType": "YulExpressionStatement",
																							"src": "3374:42:5"
																						},
																						{
																							"nativeSrc": "3433:24:5",
																							"nodeType": "YulAssignment",
																							"src": "3433:24:5",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3447:6:5",
																										"nodeType": "YulIdentifier",
																										"src": "3447:6:5"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3455:1:5",
																										"nodeType": "YulLiteral",
																										"src": "3455:1:5",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3443:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "3443:3:5"
																								},
																								"nativeSrc": "3443:14:5",
																								"nodeType": "YulFunctionCall",
																								"src": "3443:14:5"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "3433:6:5",
																									"nodeType": "YulIdentifier",
																									"src": "3433:6:5"
																								}
																							]
																						},
																						{
																							"nativeSrc": "3474:33:5",
																							"nodeType": "YulAssignment",
																							"src": "3474:33:5",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "3491:9:5",
																										"nodeType": "YulIdentifier",
																										"src": "3491:9:5"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3502:4:5",
																										"nodeType": "YulLiteral",
																										"src": "3502:4:5",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3487:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "3487:3:5"
																								},
																								"nativeSrc": "3487:20:5",
																								"nodeType": "YulFunctionCall",
																								"src": "3487:20:5"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "3474:9:5",
																									"nodeType": "YulIdentifier",
																									"src": "3474:9:5"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "3310:1:5",
																							"nodeType": "YulIdentifier",
																							"src": "3310:1:5"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "3313:7:5",
																							"nodeType": "YulIdentifier",
																							"src": "3313:7:5"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "3307:2:5",
																						"nodeType": "YulIdentifier",
																						"src": "3307:2:5"
																					},
																					"nativeSrc": "3307:14:5",
																					"nodeType": "YulFunctionCall",
																					"src": "3307:14:5"
																				},
																				"nativeSrc": "3299:222:5",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "3322:21:5",
																					"nodeType": "YulBlock",
																					"src": "3322:21:5",
																					"statements": [
																						{
																							"nativeSrc": "3324:17:5",
																							"nodeType": "YulAssignment",
																							"src": "3324:17:5",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "3333:1:5",
																										"nodeType": "YulIdentifier",
																										"src": "3333:1:5"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3336:4:5",
																										"nodeType": "YulLiteral",
																										"src": "3336:4:5",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3329:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "3329:3:5"
																								},
																								"nativeSrc": "3329:12:5",
																								"nodeType": "YulFunctionCall",
																								"src": "3329:12:5"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "3324:1:5",
																									"nodeType": "YulIdentifier",
																									"src": "3324:1:5"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "3303:3:5",
																					"nodeType": "YulBlock",
																					"src": "3303:3:5",
																					"statements": []
																				},
																				"src": "3299:222:5"
																			},
																			{
																				"body": {
																					"nativeSrc": "3569:166:5",
																					"nodeType": "YulBlock",
																					"src": "3569:166:5",
																					"statements": [
																						{
																							"nativeSrc": "3587:43:5",
																							"nodeType": "YulVariableDeclaration",
																							"src": "3587:43:5",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "3614:3:5",
																												"nodeType": "YulIdentifier",
																												"src": "3614:3:5"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "3619:9:5",
																												"nodeType": "YulIdentifier",
																												"src": "3619:9:5"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "3610:3:5",
																											"nodeType": "YulIdentifier",
																											"src": "3610:3:5"
																										},
																										"nativeSrc": "3610:19:5",
																										"nodeType": "YulFunctionCall",
																										"src": "3610:19:5"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "3604:5:5",
																									"nodeType": "YulIdentifier",
																									"src": "3604:5:5"
																								},
																								"nativeSrc": "3604:26:5",
																								"nodeType": "YulFunctionCall",
																								"src": "3604:26:5"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "3591:9:5",
																									"nodeType": "YulTypedName",
																									"src": "3591:9:5",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3654:6:5",
																										"nodeType": "YulIdentifier",
																										"src": "3654:6:5"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "3666:9:5",
																												"nodeType": "YulIdentifier",
																												"src": "3666:9:5"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "3693:1:5",
																																				"nodeType": "YulLiteral",
																																				"src": "3693:1:5",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "3696:6:5",
																																				"nodeType": "YulIdentifier",
																																				"src": "3696:6:5"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "3689:3:5",
																																			"nodeType": "YulIdentifier",
																																			"src": "3689:3:5"
																																		},
																																		"nativeSrc": "3689:14:5",
																																		"nodeType": "YulFunctionCall",
																																		"src": "3689:14:5"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "3705:3:5",
																																		"nodeType": "YulLiteral",
																																		"src": "3705:3:5",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "3685:3:5",
																																	"nodeType": "YulIdentifier",
																																	"src": "3685:3:5"
																																},
																																"nativeSrc": "3685:24:5",
																																"nodeType": "YulFunctionCall",
																																"src": "3685:24:5"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "3715:1:5",
																																		"nodeType": "YulLiteral",
																																		"src": "3715:1:5",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "3711:3:5",
																																	"nodeType": "YulIdentifier",
																																	"src": "3711:3:5"
																																},
																																"nativeSrc": "3711:6:5",
																																"nodeType": "YulFunctionCall",
																																"src": "3711:6:5"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "3681:3:5",
																															"nodeType": "YulIdentifier",
																															"src": "3681:3:5"
																														},
																														"nativeSrc": "3681:37:5",
																														"nodeType": "YulFunctionCall",
																														"src": "3681:37:5"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "3677:3:5",
																													"nodeType": "YulIdentifier",
																													"src": "3677:3:5"
																												},
																												"nativeSrc": "3677:42:5",
																												"nodeType": "YulFunctionCall",
																												"src": "3677:42:5"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "3662:3:5",
																											"nodeType": "YulIdentifier",
																											"src": "3662:3:5"
																										},
																										"nativeSrc": "3662:58:5",
																										"nodeType": "YulFunctionCall",
																										"src": "3662:58:5"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "3647:6:5",
																									"nodeType": "YulIdentifier",
																									"src": "3647:6:5"
																								},
																								"nativeSrc": "3647:74:5",
																								"nodeType": "YulFunctionCall",
																								"src": "3647:74:5"
																							},
																							"nativeSrc": "3647:74:5",
																							"nodeType": "YulExpressionStatement",
																							"src": "3647:74:5"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "3540:7:5",
																							"nodeType": "YulIdentifier",
																							"src": "3540:7:5"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "3549:6:5",
																							"nodeType": "YulIdentifier",
																							"src": "3549:6:5"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "3537:2:5",
																						"nodeType": "YulIdentifier",
																						"src": "3537:2:5"
																					},
																					"nativeSrc": "3537:19:5",
																					"nodeType": "YulFunctionCall",
																					"src": "3537:19:5"
																				},
																				"nativeSrc": "3534:201:5",
																				"nodeType": "YulIf",
																				"src": "3534:201:5"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3755:4:5",
																							"nodeType": "YulIdentifier",
																							"src": "3755:4:5"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "3769:1:5",
																											"nodeType": "YulLiteral",
																											"src": "3769:1:5",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "3772:6:5",
																											"nodeType": "YulIdentifier",
																											"src": "3772:6:5"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "3765:3:5",
																										"nodeType": "YulIdentifier",
																										"src": "3765:3:5"
																									},
																									"nativeSrc": "3765:14:5",
																									"nodeType": "YulFunctionCall",
																									"src": "3765:14:5"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "3781:1:5",
																									"nodeType": "YulLiteral",
																									"src": "3781:1:5",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "3761:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "3761:3:5"
																							},
																							"nativeSrc": "3761:22:5",
																							"nodeType": "YulFunctionCall",
																							"src": "3761:22:5"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "3748:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "3748:6:5"
																					},
																					"nativeSrc": "3748:36:5",
																					"nodeType": "YulFunctionCall",
																					"src": "3748:36:5"
																				},
																				"nativeSrc": "3748:36:5",
																				"nodeType": "YulExpressionStatement",
																				"src": "3748:36:5"
																			}
																		]
																	},
																	"nativeSrc": "3145:649:5",
																	"nodeType": "YulCase",
																	"src": "3145:649:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3150:1:5",
																		"nodeType": "YulLiteral",
																		"src": "3150:1:5",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "3811:234:5",
																		"nodeType": "YulBlock",
																		"src": "3811:234:5",
																		"statements": [
																			{
																				"nativeSrc": "3825:14:5",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3825:14:5",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3838:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3838:1:5",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "3829:5:5",
																						"nodeType": "YulTypedName",
																						"src": "3829:5:5",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "3874:67:5",
																					"nodeType": "YulBlock",
																					"src": "3874:67:5",
																					"statements": [
																						{
																							"nativeSrc": "3892:35:5",
																							"nodeType": "YulAssignment",
																							"src": "3892:35:5",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "3911:3:5",
																												"nodeType": "YulIdentifier",
																												"src": "3911:3:5"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "3916:9:5",
																												"nodeType": "YulIdentifier",
																												"src": "3916:9:5"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "3907:3:5",
																											"nodeType": "YulIdentifier",
																											"src": "3907:3:5"
																										},
																										"nativeSrc": "3907:19:5",
																										"nodeType": "YulFunctionCall",
																										"src": "3907:19:5"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "3901:5:5",
																									"nodeType": "YulIdentifier",
																									"src": "3901:5:5"
																								},
																								"nativeSrc": "3901:26:5",
																								"nodeType": "YulFunctionCall",
																								"src": "3901:26:5"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "3892:5:5",
																									"nodeType": "YulIdentifier",
																									"src": "3892:5:5"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "3855:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "3855:6:5"
																				},
																				"nativeSrc": "3852:89:5",
																				"nodeType": "YulIf",
																				"src": "3852:89:5"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3961:4:5",
																							"nodeType": "YulIdentifier",
																							"src": "3961:4:5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "4020:5:5",
																									"nodeType": "YulIdentifier",
																									"src": "4020:5:5"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "4027:6:5",
																									"nodeType": "YulIdentifier",
																									"src": "4027:6:5"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "3967:52:5",
																								"nodeType": "YulIdentifier",
																								"src": "3967:52:5"
																							},
																							"nativeSrc": "3967:67:5",
																							"nodeType": "YulFunctionCall",
																							"src": "3967:67:5"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "3954:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "3954:6:5"
																					},
																					"nativeSrc": "3954:81:5",
																					"nodeType": "YulFunctionCall",
																					"src": "3954:81:5"
																				},
																				"nativeSrc": "3954:81:5",
																				"nodeType": "YulExpressionStatement",
																				"src": "3954:81:5"
																			}
																		]
																	},
																	"nativeSrc": "3803:242:5",
																	"nodeType": "YulCase",
																	"src": "3803:242:5",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "3125:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3125:6:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3133:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3133:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3122:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "3122:2:5"
																},
																"nativeSrc": "3122:14:5",
																"nodeType": "YulFunctionCall",
																"src": "3122:14:5"
															},
															"nativeSrc": "3115:930:5",
															"nodeType": "YulSwitch",
															"src": "3115:930:5"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "2752:1299:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2833:4:5",
														"nodeType": "YulTypedName",
														"src": "2833:4:5",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "2839:3:5",
														"nodeType": "YulTypedName",
														"src": "2839:3:5",
														"type": ""
													}
												],
												"src": "2752:1299:5"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := mload(offset)\n        if gt(length, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 0x1f), not(31)), 63), not(31)))\n        if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, length)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            mstore(add(add(memPtr, i), 0x20), mload(add(add(offset, i), 0x20)))\n        }\n        mstore(add(add(memPtr, length), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        if gt(offset, sub(shl(64, 1), 1)) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, sub(shl(64, 1), 1)) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060405161154738038061154783398101604081905261002f9161010d565b600261003b83826101ff565b50600361004882826101ff565b505060008055506102bd565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261007b57600080fd5b81516001600160401b0381111561009457610094610054565b604051601f8201601f19908116603f011681016001600160401b03811182821017156100c2576100c2610054565b6040528181528382016020018510156100da57600080fd5b60005b828110156100f9576020818601810151838301820152016100dd565b506000918101602001919091529392505050565b6000806040838503121561012057600080fd5b82516001600160401b0381111561013657600080fd5b6101428582860161006a565b602085015190935090506001600160401b0381111561016057600080fd5b61016c8582860161006a565b9150509250929050565b600181811c9082168061018a57607f821691505b6020821081036101aa57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156101fa57806000526020600020601f840160051c810160208510156101d75750805b601f840160051c820191505b818110156101f757600081556001016101e3565b50505b505050565b81516001600160401b0381111561021857610218610054565b61022c816102268454610176565b846101b0565b6020601f82116001811461026057600083156102485750848201515b600019600385901b1c1916600184901b1784556101f7565b600084815260208120601f198516915b828110156102905787850151825560209485019460019092019101610270565b50848210156102ae5786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b61127b806102cc6000396000f3fe6080604052600436106100dd5760003560e01c80636352211e1161007f578063a22cb46511610059578063a22cb46514610231578063b88d4fde14610251578063c87b56dd14610264578063e985e9c51461028457600080fd5b80636352211e146101dc57806370a08231146101fc57806395d89b411461021c57600080fd5b8063095ea7b3116100bb578063095ea7b31461017e57806318160ddd1461019357806323b872dd146101b657806342842e0e146101c957600080fd5b806301ffc9a7146100e257806306fdde0314610117578063081812fc14610139575b600080fd5b3480156100ee57600080fd5b506101026100fd366004610dd3565b6102da565b60405190151581526020015b60405180910390f35b34801561012357600080fd5b5061012c6103bf565b60405161010e9190610e5e565b34801561014557600080fd5b50610159610154366004610e71565b610451565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161010e565b61019161018c366004610eae565b6104b2565b005b34801561019f57600080fd5b50600154600054035b60405190815260200161010e565b6101916101c4366004610ed8565b6104c2565b6101916101d7366004610ed8565b6106f7565b3480156101e857600080fd5b506101596101f7366004610e71565b610717565b34801561020857600080fd5b506101a8610217366004610f15565b610722565b34801561022857600080fd5b5061012c61079b565b34801561023d57600080fd5b5061019161024c366004610f30565b6107aa565b61019161025f366004610f9b565b610841565b34801561027057600080fd5b5061012c61027f366004610e71565b6108a8565b34801561029057600080fd5b5061010261029f3660046110bc565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260076020908152604080832093909416825291909152205460ff1690565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316148061036d57507f80ac58cd000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b806103b957507f5b5e139f000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b6060600280546103ce906110ef565b80601f01602080910402602001604051908101604052809291908181526020018280546103fa906110ef565b80156104475780601f1061041c57610100808354040283529160200191610447565b820191906000526020600020905b81548152906001019060200180831161042a57829003601f168201915b5050505050905090565b600061045c82610949565b610489576104897fcf4700e4000000000000000000000000000000000000000000000000000000006109a7565b5060009081526006602052604090205473ffffffffffffffffffffffffffffffffffffffff1690565b6104be828260016109b1565b5050565b60006104cd82610a9f565b73ffffffffffffffffffffffffffffffffffffffff948516949091508116841461051a5761051a7fa1148100000000000000000000000000000000000000000000000000000000006109a7565b600082815260066020526040902080543380821473ffffffffffffffffffffffffffffffffffffffff88169091141761058457610557863361029f565b610584576105847f59c896be000000000000000000000000000000000000000000000000000000006109a7565b801561058f57600082555b73ffffffffffffffffffffffffffffffffffffffff86811660009081526005602052604080822080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff019055918716808252919020805460010190554260a01b177c0200000000000000000000000000000000000000000000000000000000176000858152600460205260408120919091557c02000000000000000000000000000000000000000000000000000000008416900361067e5760018401600081815260046020526040812054900361067c57600054811461067c5760008181526004602052604090208490555b505b73ffffffffffffffffffffffffffffffffffffffff85168481887fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a4806000036106ee576106ee7fea553b34000000000000000000000000000000000000000000000000000000006109a7565b50505050505050565b61071283838360405180602001604052806000815250610841565b505050565b60006103b982610a9f565b600073ffffffffffffffffffffffffffffffffffffffff8216610768576107687f8f4eb604000000000000000000000000000000000000000000000000000000006109a7565b5073ffffffffffffffffffffffffffffffffffffffff1660009081526005602052604090205467ffffffffffffffff1690565b6060600380546103ce906110ef565b33600081815260076020908152604080832073ffffffffffffffffffffffffffffffffffffffff87168085529083529281902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b61084c8484846104c2565b73ffffffffffffffffffffffffffffffffffffffff83163b156108a25761087584848484610bd0565b6108a2576108a27fd1a57ed6000000000000000000000000000000000000000000000000000000006109a7565b50505050565b60606108b382610949565b6108e0576108e07fa14c4b50000000000000000000000000000000000000000000000000000000006109a7565b60006108f760408051602081019091526000815290565b905080516000036109175760405180602001604052806000815250610942565b8061092184610d40565b604051602001610932929190611142565b6040516020818303038152906040525b9392505050565b600080548210156109a25760005b506000828152600460205260408120549081900361097f5761097883611171565b9250610957565b7c0100000000000000000000000000000000000000000000000000000000161590505b919050565b8060005260046000fd5b60006109bc83610717565b90508180156109e157503373ffffffffffffffffffffffffffffffffffffffff821614155b15610a1d576109f0813361029f565b610a1d57610a1d7fcfb3b942000000000000000000000000000000000000000000000000000000006109a7565b60008381526006602052604080822080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff88811691821790925591518693918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a450505050565b60008181526004602052604081205490819003610b7b576000548210610ae857610ae87fdf2d9b42000000000000000000000000000000000000000000000000000000006109a7565b5b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016000818152600460205260409020548015610ae9577c01000000000000000000000000000000000000000000000000000000008116600003610b4d57919050565b610b767fdf2d9b42000000000000000000000000000000000000000000000000000000006109a7565b610ae9565b7c01000000000000000000000000000000000000000000000000000000008116600003610ba757919050565b6109a27fdf2d9b42000000000000000000000000000000000000000000000000000000006109a7565b6040517f150b7a0200000000000000000000000000000000000000000000000000000000815260009073ffffffffffffffffffffffffffffffffffffffff85169063150b7a0290610c2b9033908990889088906004016111cd565b6020604051808303816000875af1925050508015610c84575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201909252610c8191810190611228565b60015b610cf2573d808015610cb2576040519150601f19603f3d011682016040523d82523d6000602084013e610cb7565b606091505b508051600003610cea57610cea7fd1a57ed6000000000000000000000000000000000000000000000000000000006109a7565b805181602001fd5b7fffffffff00000000000000000000000000000000000000000000000000000000167f150b7a0200000000000000000000000000000000000000000000000000000000149050949350505050565b606060a06040510180604052602081039150506000815280825b600183039250600a81066030018353600a900480610d5a57508190037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0909101908152919050565b7fffffffff0000000000000000000000000000000000000000000000000000000081168114610dd057600080fd5b50565b600060208284031215610de557600080fd5b813561094281610da2565b60005b83811015610e0b578181015183820152602001610df3565b50506000910152565b60008151808452610e2c816020860160208601610df0565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020815260006109426020830184610e14565b600060208284031215610e8357600080fd5b5035919050565b803573ffffffffffffffffffffffffffffffffffffffff811681146109a257600080fd5b60008060408385031215610ec157600080fd5b610eca83610e8a565b946020939093013593505050565b600080600060608486031215610eed57600080fd5b610ef684610e8a565b9250610f0460208501610e8a565b929592945050506040919091013590565b600060208284031215610f2757600080fd5b61094282610e8a565b60008060408385031215610f4357600080fd5b610f4c83610e8a565b915060208301358015158114610f6157600080fd5b809150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60008060008060808587031215610fb157600080fd5b610fba85610e8a565b9350610fc860208601610e8a565b925060408501359150606085013567ffffffffffffffff811115610feb57600080fd5b8501601f81018713610ffc57600080fd5b803567ffffffffffffffff81111561101657611016610f6c565b6040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0603f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8501160116810181811067ffffffffffffffff8211171561108257611082610f6c565b60405281815282820160200189101561109a57600080fd5b8160208401602083013760006020838301015280935050505092959194509250565b600080604083850312156110cf57600080fd5b6110d883610e8a565b91506110e660208401610e8a565b90509250929050565b600181811c9082168061110357607f821691505b60208210810361113c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b60008351611154818460208801610df0565b835190830190611168818360208801610df0565b01949350505050565b6000816111a7577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190565b73ffffffffffffffffffffffffffffffffffffffff8516815273ffffffffffffffffffffffffffffffffffffffff8416602082015282604082015260806060820152600061121e6080830184610e14565b9695505050505050565b60006020828403121561123a57600080fd5b815161094281610da256fea2646970667358221220a0c7cbf30b6afe06e21c972cf59b7244d2a78b1e991767aaeeea184a3f934a4164736f6c634300081b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1547 CODESIZE SUB DUP1 PUSH2 0x1547 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x10D JUMP JUMPDEST PUSH1 0x2 PUSH2 0x3B DUP4 DUP3 PUSH2 0x1FF JUMP JUMPDEST POP PUSH1 0x3 PUSH2 0x48 DUP3 DUP3 PUSH2 0x1FF JUMP JUMPDEST POP POP PUSH1 0x0 DUP1 SSTORE POP PUSH2 0x2BD JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x7B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x94 JUMPI PUSH2 0x94 PUSH2 0x54 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xC2 JUMPI PUSH2 0xC2 PUSH2 0x54 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP4 DUP3 ADD PUSH1 0x20 ADD DUP6 LT ISZERO PUSH2 0xDA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xF9 JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP4 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xDD JUMP JUMPDEST POP PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x120 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x136 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x142 DUP6 DUP3 DUP7 ADD PUSH2 0x6A JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MLOAD SWAP1 SWAP4 POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x160 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16C DUP6 DUP3 DUP7 ADD PUSH2 0x6A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x18A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1AA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1FA JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1D7 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1F7 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1E3 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x218 JUMPI PUSH2 0x218 PUSH2 0x54 JUMP JUMPDEST PUSH2 0x22C DUP2 PUSH2 0x226 DUP5 SLOAD PUSH2 0x176 JUMP JUMPDEST DUP5 PUSH2 0x1B0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x260 JUMPI PUSH1 0x0 DUP4 ISZERO PUSH2 0x248 JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x1F7 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x290 JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x270 JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x2AE JUMPI DUP7 DUP5 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x127B DUP1 PUSH2 0x2CC PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xDD JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x7F JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x231 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x284 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1DC JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x21C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xBB JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x17E JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1B6 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xE2 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x139 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x102 PUSH2 0xFD CALLDATASIZE PUSH1 0x4 PUSH2 0xDD3 JUMP JUMPDEST PUSH2 0x2DA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x123 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12C PUSH2 0x3BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10E SWAP2 SWAP1 PUSH2 0xE5E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x145 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x159 PUSH2 0x154 CALLDATASIZE PUSH1 0x4 PUSH2 0xE71 JUMP JUMPDEST PUSH2 0x451 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10E JUMP JUMPDEST PUSH2 0x191 PUSH2 0x18C CALLDATASIZE PUSH1 0x4 PUSH2 0xEAE JUMP JUMPDEST PUSH2 0x4B2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD SUB JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10E JUMP JUMPDEST PUSH2 0x191 PUSH2 0x1C4 CALLDATASIZE PUSH1 0x4 PUSH2 0xED8 JUMP JUMPDEST PUSH2 0x4C2 JUMP JUMPDEST PUSH2 0x191 PUSH2 0x1D7 CALLDATASIZE PUSH1 0x4 PUSH2 0xED8 JUMP JUMPDEST PUSH2 0x6F7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x159 PUSH2 0x1F7 CALLDATASIZE PUSH1 0x4 PUSH2 0xE71 JUMP JUMPDEST PUSH2 0x717 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x208 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A8 PUSH2 0x217 CALLDATASIZE PUSH1 0x4 PUSH2 0xF15 JUMP JUMPDEST PUSH2 0x722 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x228 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12C PUSH2 0x79B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x191 PUSH2 0x24C CALLDATASIZE PUSH1 0x4 PUSH2 0xF30 JUMP JUMPDEST PUSH2 0x7AA JUMP JUMPDEST PUSH2 0x191 PUSH2 0x25F CALLDATASIZE PUSH1 0x4 PUSH2 0xF9B JUMP JUMPDEST PUSH2 0x841 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x270 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12C PUSH2 0x27F CALLDATASIZE PUSH1 0x4 PUSH2 0xE71 JUMP JUMPDEST PUSH2 0x8A8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x290 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x102 PUSH2 0x29F CALLDATASIZE PUSH1 0x4 PUSH2 0x10BC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND EQ DUP1 PUSH2 0x36D JUMPI POP PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND EQ JUMPDEST DUP1 PUSH2 0x3B9 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x3CE SWAP1 PUSH2 0x10EF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3FA SWAP1 PUSH2 0x10EF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x447 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x41C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x447 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x42A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x45C DUP3 PUSH2 0x949 JUMP JUMPDEST PUSH2 0x489 JUMPI PUSH2 0x489 PUSH32 0xCF4700E400000000000000000000000000000000000000000000000000000000 PUSH2 0x9A7 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0x4BE DUP3 DUP3 PUSH1 0x1 PUSH2 0x9B1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4CD DUP3 PUSH2 0xA9F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP5 DUP6 AND SWAP5 SWAP1 SWAP2 POP DUP2 AND DUP5 EQ PUSH2 0x51A JUMPI PUSH2 0x51A PUSH32 0xA114810000000000000000000000000000000000000000000000000000000000 PUSH2 0x9A7 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD CALLER DUP1 DUP3 EQ PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 AND SWAP1 SWAP2 EQ OR PUSH2 0x584 JUMPI PUSH2 0x557 DUP7 CALLER PUSH2 0x29F JUMP JUMPDEST PUSH2 0x584 JUMPI PUSH2 0x584 PUSH32 0x59C896BE00000000000000000000000000000000000000000000000000000000 PUSH2 0x9A7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x58F JUMPI PUSH1 0x0 DUP3 SSTORE JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD SWAP1 SSTORE SWAP2 DUP8 AND DUP1 DUP3 MSTORE SWAP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE TIMESTAMP PUSH1 0xA0 SHL OR PUSH29 0x200000000000000000000000000000000000000000000000000000000 OR PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH29 0x200000000000000000000000000000000000000000000000000000000 DUP5 AND SWAP1 SUB PUSH2 0x67E JUMPI PUSH1 0x1 DUP5 ADD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x67C JUMPI PUSH1 0x0 SLOAD DUP2 EQ PUSH2 0x67C JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE JUMPDEST POP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND DUP5 DUP2 DUP9 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x0 DUP1 LOG4 DUP1 PUSH1 0x0 SUB PUSH2 0x6EE JUMPI PUSH2 0x6EE PUSH32 0xEA553B3400000000000000000000000000000000000000000000000000000000 PUSH2 0x9A7 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x712 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x841 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B9 DUP3 PUSH2 0xA9F JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x768 JUMPI PUSH2 0x768 PUSH32 0x8F4EB60400000000000000000000000000000000000000000000000000000000 PUSH2 0x9A7 JUMP JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x3CE SWAP1 PUSH2 0x10EF JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x84C DUP5 DUP5 DUP5 PUSH2 0x4C2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND EXTCODESIZE ISZERO PUSH2 0x8A2 JUMPI PUSH2 0x875 DUP5 DUP5 DUP5 DUP5 PUSH2 0xBD0 JUMP JUMPDEST PUSH2 0x8A2 JUMPI PUSH2 0x8A2 PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 PUSH2 0x9A7 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x8B3 DUP3 PUSH2 0x949 JUMP JUMPDEST PUSH2 0x8E0 JUMPI PUSH2 0x8E0 PUSH32 0xA14C4B5000000000000000000000000000000000000000000000000000000000 PUSH2 0x9A7 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8F7 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x917 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x942 JUMP JUMPDEST DUP1 PUSH2 0x921 DUP5 PUSH2 0xD40 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x932 SWAP3 SWAP2 SWAP1 PUSH2 0x1142 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x9A2 JUMPI PUSH1 0x0 JUMPDEST POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 DUP2 SWAP1 SUB PUSH2 0x97F JUMPI PUSH2 0x978 DUP4 PUSH2 0x1171 JUMP JUMPDEST SWAP3 POP PUSH2 0x957 JUMP JUMPDEST PUSH29 0x100000000000000000000000000000000000000000000000000000000 AND ISZERO SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x9BC DUP4 PUSH2 0x717 JUMP JUMPDEST SWAP1 POP DUP2 DUP1 ISZERO PUSH2 0x9E1 JUMPI POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND EQ ISZERO JUMPDEST ISZERO PUSH2 0xA1D JUMPI PUSH2 0x9F0 DUP2 CALLER PUSH2 0x29F JUMP JUMPDEST PUSH2 0xA1D JUMPI PUSH2 0xA1D PUSH32 0xCFB3B94200000000000000000000000000000000000000000000000000000000 PUSH2 0x9A7 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP7 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 LOG4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 DUP2 SWAP1 SUB PUSH2 0xB7B JUMPI PUSH1 0x0 SLOAD DUP3 LT PUSH2 0xAE8 JUMPI PUSH2 0xAE8 PUSH32 0xDF2D9B4200000000000000000000000000000000000000000000000000000000 PUSH2 0x9A7 JUMP JUMPDEST JUMPDEST POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0xAE9 JUMPI PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP2 AND PUSH1 0x0 SUB PUSH2 0xB4D JUMPI SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB76 PUSH32 0xDF2D9B4200000000000000000000000000000000000000000000000000000000 PUSH2 0x9A7 JUMP JUMPDEST PUSH2 0xAE9 JUMP JUMPDEST PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP2 AND PUSH1 0x0 SUB PUSH2 0xBA7 JUMPI SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9A2 PUSH32 0xDF2D9B4200000000000000000000000000000000000000000000000000000000 PUSH2 0x9A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x150B7A0200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xC2B SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x11CD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xC84 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xC81 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1228 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xCF2 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xCB2 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xCB7 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0xCEA JUMPI PUSH2 0xCEA PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 PUSH2 0x9A7 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH32 0x150B7A0200000000000000000000000000000000000000000000000000000000 EQ SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xA0 PUSH1 0x40 MLOAD ADD DUP1 PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 SUB SWAP2 POP POP PUSH1 0x0 DUP2 MSTORE DUP1 DUP3 JUMPDEST PUSH1 0x1 DUP4 SUB SWAP3 POP PUSH1 0xA DUP2 MOD PUSH1 0x30 ADD DUP4 MSTORE8 PUSH1 0xA SWAP1 DIV DUP1 PUSH2 0xD5A JUMPI POP DUP2 SWAP1 SUB PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP1 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP2 EQ PUSH2 0xDD0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x942 DUP2 PUSH2 0xDA2 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xE0B JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xDF3 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xE2C DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xDF0 JUMP JUMPDEST PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x942 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xE14 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE83 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x9A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xECA DUP4 PUSH2 0xE8A JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xEED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEF6 DUP5 PUSH2 0xE8A JUMP JUMPDEST SWAP3 POP PUSH2 0xF04 PUSH1 0x20 DUP6 ADD PUSH2 0xE8A JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF27 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x942 DUP3 PUSH2 0xE8A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF43 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF4C DUP4 PUSH2 0xE8A JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xF61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xFB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFBA DUP6 PUSH2 0xE8A JUMP JUMPDEST SWAP4 POP PUSH2 0xFC8 PUSH1 0x20 DUP7 ADD PUSH2 0xE8A JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xFEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0xFFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1016 JUMPI PUSH2 0x1016 PUSH2 0xF6C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x3F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP6 ADD AND ADD AND DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1082 JUMPI PUSH2 0x1082 PUSH2 0xF6C JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP3 DUP3 ADD PUSH1 0x20 ADD DUP10 LT ISZERO PUSH2 0x109A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP4 DUP4 ADD ADD MSTORE DUP1 SWAP4 POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x10CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10D8 DUP4 PUSH2 0xE8A JUMP JUMPDEST SWAP2 POP PUSH2 0x10E6 PUSH1 0x20 DUP5 ADD PUSH2 0xE8A JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1103 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x113C JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x1154 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0xDF0 JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x1168 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0xDF0 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x11A7 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x121E PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0xE14 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x123A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x942 DUP2 PUSH2 0xDA2 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG0 0xC7 0xCB RETURN SIGNEXTEND PUSH11 0xFE06E21C972CF59B7244D2 0xA7 DUP12 0x1E SWAP10 OR PUSH8 0xAAEEEA184A3F934A COINBASE PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ",
							"sourceMap": "2189:42638:1:-:0;;;6240:154;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6306:5;:13;6314:5;6306;:13;:::i;:::-;-1:-1:-1;6329:7:1;:17;6339:7;6329;:17;:::i;:::-;-1:-1:-1;;6776:7:1;6356:31;;-1:-1:-1;2189:42638:1;;14:127:5;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:834;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;298:13;;-1:-1:-1;;;;;323:30:5;;320:56;;;356:18;;:::i;:::-;405:2;399:9;497:2;459:17;;-1:-1:-1;;455:31:5;;;488:2;451:40;447:54;435:67;;-1:-1:-1;;;;;517:34:5;;553:22;;;514:62;511:88;;;579:18;;:::i;:::-;615:2;608:22;639;;;680:19;;;701:4;676:30;673:39;-1:-1:-1;670:59:5;;;725:1;722;715:12;670:59;747:1;757:143;771:6;768:1;765:13;757:143;;;883:4;867:14;;;863:25;;857:32;834:14;;;830:25;;823:67;786:12;757:143;;;-1:-1:-1;948:1:5;920:19;;;941:4;916:30;909:41;;;;924:6;146:834;-1:-1:-1;;;146:834:5:o;985:557::-;1084:6;1092;1145:2;1133:9;1124:7;1120:23;1116:32;1113:52;;;1161:1;1158;1151:12;1113:52;1188:16;;-1:-1:-1;;;;;1216:30:5;;1213:50;;;1259:1;1256;1249:12;1213:50;1282:61;1335:7;1326:6;1315:9;1311:22;1282:61;:::i;:::-;1389:2;1374:18;;1368:25;1272:71;;-1:-1:-1;1368:25:5;-1:-1:-1;;;;;;1405:32:5;;1402:52;;;1450:1;1447;1440:12;1402:52;1473:63;1528:7;1517:8;1506:9;1502:24;1473:63;:::i;:::-;1463:73;;;985:557;;;;;:::o;1547:380::-;1626:1;1622:12;;;;1669;;;1690:61;;1744:4;1736:6;1732:17;1722:27;;1690:61;1797:2;1789:6;1786:14;1766:18;1763:38;1760:161;;1843:10;1838:3;1834:20;1831:1;1824:31;1878:4;1875:1;1868:15;1906:4;1903:1;1896:15;1760:161;;1547:380;;;:::o;2058:518::-;2160:2;2155:3;2152:11;2149:421;;;2196:5;2193:1;2186:16;2240:4;2237:1;2227:18;2310:2;2298:10;2294:19;2291:1;2287:27;2281:4;2277:38;2346:4;2334:10;2331:20;2328:47;;;-1:-1:-1;2369:4:5;2328:47;2424:2;2419:3;2415:12;2412:1;2408:20;2402:4;2398:31;2388:41;;2479:81;2497:2;2490:5;2487:13;2479:81;;;2556:1;2542:16;;2523:1;2512:13;2479:81;;;2483:3;;2149:421;2058:518;;;:::o;2752:1299::-;2872:10;;-1:-1:-1;;;;;2894:30:5;;2891:56;;;2927:18;;:::i;:::-;2956:97;3046:6;3006:38;3038:4;3032:11;3006:38;:::i;:::-;3000:4;2956:97;:::i;:::-;3102:4;3133:2;3122:14;;3150:1;3145:649;;;;3838:1;3855:6;3852:89;;;-1:-1:-1;3907:19:5;;;3901:26;3852:89;-1:-1:-1;;2709:1:5;2705:11;;;2701:24;2697:29;2687:40;2733:1;2729:11;;;2684:57;3954:81;;3115:930;;3145:649;2005:1;1998:14;;;2042:4;2029:18;;-1:-1:-1;;3181:20:5;;;3299:222;3313:7;3310:1;3307:14;3299:222;;;3395:19;;;3389:26;3374:42;;3502:4;3487:20;;;;3455:1;3443:14;;;;3329:12;3299:222;;;3303:3;3549:6;3540:7;3537:19;3534:201;;;3610:19;;;3604:26;-1:-1:-1;;3693:1:5;3689:14;;;3705:3;3685:24;3681:37;3677:42;3662:58;3647:74;;3534:201;-1:-1:-1;;;;3781:1:5;3765:14;;;3761:22;3748:36;;-1:-1:-1;2752:1299:5:o;:::-;2189:42638:1;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfers_1156": {
									"entryPoint": null,
									"id": 1156,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_approve_1597": {
									"entryPoint": 2481,
									"id": 1597,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_baseURI_496": {
									"entryPoint": null,
									"id": 496,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_beforeTokenTransfers_1143": {
									"entryPoint": null,
									"id": 1143,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkContractOnERC721Received_1212": {
									"entryPoint": 3024,
									"id": 1212,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@_exists_865": {
									"entryPoint": 2377,
									"id": 865,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_extraData_1822": {
									"entryPoint": null,
									"id": 1822,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_getApprovedSlotAndAddress_898": {
									"entryPoint": null,
									"id": 898,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@_isSenderApprovedOrOwner_879": {
									"entryPoint": null,
									"id": 879,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_msgSenderERC721A_1865": {
									"entryPoint": null,
									"id": 1865,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nextExtraData_1855": {
									"entryPoint": null,
									"id": 1855,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_packOwnershipData_727": {
									"entryPoint": null,
									"id": 727,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_packedOwnershipOf_661": {
									"entryPoint": 2719,
									"id": 661,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_revert_1883": {
									"entryPoint": 2471,
									"id": 1883,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_startTokenId_234": {
									"entryPoint": null,
									"id": 234,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_toString_1875": {
									"entryPoint": 3392,
									"id": 1875,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@approve_753": {
									"entryPoint": 1202,
									"id": 753,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_309": {
									"entryPoint": 1826,
									"id": 309,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_778": {
									"entryPoint": 1105,
									"id": 778,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_822": {
									"entryPoint": null,
									"id": 822,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_432": {
									"entryPoint": 959,
									"id": 432,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_516": {
									"entryPoint": 1815,
									"id": 516,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeTransferFrom_1090": {
									"entryPoint": 1783,
									"id": 1090,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_1130": {
									"entryPoint": 2113,
									"id": 1130,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_804": {
									"entryPoint": 1962,
									"id": 804,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_422": {
									"entryPoint": 730,
									"id": 422,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_442": {
									"entryPoint": 1947,
									"id": 442,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@tokenURI_487": {
									"entryPoint": 2216,
									"id": 487,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalSupply_259": {
									"entryPoint": null,
									"id": 259,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_1071": {
									"entryPoint": 1218,
									"id": 1071,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 3722,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3861,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4284,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3800,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 3995,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 3888,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3758,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 3539,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 4648,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3697,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 3604,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 4418,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 4557,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3678,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 3568,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"decrement_t_uint256": {
									"entryPoint": 4465,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 4335,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 3948,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_bytes4": {
									"entryPoint": 3490,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:7394:5",
										"nodeType": "YulBlock",
										"src": "0:7394:5",
										"statements": [
											{
												"nativeSrc": "6:3:5",
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "58:133:5",
													"nodeType": "YulBlock",
													"src": "58:133:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "169:16:5",
																"nodeType": "YulBlock",
																"src": "169:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "178:1:5",
																					"nodeType": "YulLiteral",
																					"src": "178:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "181:1:5",
																					"nodeType": "YulLiteral",
																					"src": "181:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "171:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "171:6:5"
																			},
																			"nativeSrc": "171:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "171:12:5"
																		},
																		"nativeSrc": "171:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "171:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "81:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "81:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "92:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "92:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "99:66:5",
																						"nodeType": "YulLiteral",
																						"src": "99:66:5",
																						"type": "",
																						"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "88:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "88:3:5"
																				},
																				"nativeSrc": "88:78:5",
																				"nodeType": "YulFunctionCall",
																				"src": "88:78:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "78:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "78:2:5"
																		},
																		"nativeSrc": "78:89:5",
																		"nodeType": "YulFunctionCall",
																		"src": "78:89:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "71:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "71:6:5"
																},
																"nativeSrc": "71:97:5",
																"nodeType": "YulFunctionCall",
																"src": "71:97:5"
															},
															"nativeSrc": "68:117:5",
															"nodeType": "YulIf",
															"src": "68:117:5"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nativeSrc": "14:177:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "47:5:5",
														"nodeType": "YulTypedName",
														"src": "47:5:5",
														"type": ""
													}
												],
												"src": "14:177:5"
											},
											{
												"body": {
													"nativeSrc": "265:176:5",
													"nodeType": "YulBlock",
													"src": "265:176:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "311:16:5",
																"nodeType": "YulBlock",
																"src": "311:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "320:1:5",
																					"nodeType": "YulLiteral",
																					"src": "320:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "323:1:5",
																					"nodeType": "YulLiteral",
																					"src": "323:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "313:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "313:6:5"
																			},
																			"nativeSrc": "313:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "313:12:5"
																		},
																		"nativeSrc": "313:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "313:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "286:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "286:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "295:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "295:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "282:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "282:3:5"
																		},
																		"nativeSrc": "282:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "282:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "307:2:5",
																		"nodeType": "YulLiteral",
																		"src": "307:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "278:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "278:3:5"
																},
																"nativeSrc": "278:32:5",
																"nodeType": "YulFunctionCall",
																"src": "278:32:5"
															},
															"nativeSrc": "275:52:5",
															"nodeType": "YulIf",
															"src": "275:52:5"
														},
														{
															"nativeSrc": "336:36:5",
															"nodeType": "YulVariableDeclaration",
															"src": "336:36:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "362:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "362:9:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "349:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "349:12:5"
																},
																"nativeSrc": "349:23:5",
																"nodeType": "YulFunctionCall",
																"src": "349:23:5"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "340:5:5",
																	"nodeType": "YulTypedName",
																	"src": "340:5:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "405:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "405:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nativeSrc": "381:23:5",
																	"nodeType": "YulIdentifier",
																	"src": "381:23:5"
																},
																"nativeSrc": "381:30:5",
																"nodeType": "YulFunctionCall",
																"src": "381:30:5"
															},
															"nativeSrc": "381:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "381:30:5"
														},
														{
															"nativeSrc": "420:15:5",
															"nodeType": "YulAssignment",
															"src": "420:15:5",
															"value": {
																"name": "value",
																"nativeSrc": "430:5:5",
																"nodeType": "YulIdentifier",
																"src": "430:5:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "420:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "420:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "196:245:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "231:9:5",
														"nodeType": "YulTypedName",
														"src": "231:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "242:7:5",
														"nodeType": "YulTypedName",
														"src": "242:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "254:6:5",
														"nodeType": "YulTypedName",
														"src": "254:6:5",
														"type": ""
													}
												],
												"src": "196:245:5"
											},
											{
												"body": {
													"nativeSrc": "541:92:5",
													"nodeType": "YulBlock",
													"src": "541:92:5",
													"statements": [
														{
															"nativeSrc": "551:26:5",
															"nodeType": "YulAssignment",
															"src": "551:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "563:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "563:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "574:2:5",
																		"nodeType": "YulLiteral",
																		"src": "574:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "559:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "559:3:5"
																},
																"nativeSrc": "559:18:5",
																"nodeType": "YulFunctionCall",
																"src": "559:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "551:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "551:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "593:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "593:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "618:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "618:6:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "611:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "611:6:5"
																				},
																				"nativeSrc": "611:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "611:14:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "604:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "604:6:5"
																		},
																		"nativeSrc": "604:22:5",
																		"nodeType": "YulFunctionCall",
																		"src": "604:22:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "586:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "586:6:5"
																},
																"nativeSrc": "586:41:5",
																"nodeType": "YulFunctionCall",
																"src": "586:41:5"
															},
															"nativeSrc": "586:41:5",
															"nodeType": "YulExpressionStatement",
															"src": "586:41:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "446:187:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "510:9:5",
														"nodeType": "YulTypedName",
														"src": "510:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "521:6:5",
														"nodeType": "YulTypedName",
														"src": "521:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "532:4:5",
														"nodeType": "YulTypedName",
														"src": "532:4:5",
														"type": ""
													}
												],
												"src": "446:187:5"
											},
											{
												"body": {
													"nativeSrc": "704:184:5",
													"nodeType": "YulBlock",
													"src": "704:184:5",
													"statements": [
														{
															"nativeSrc": "714:10:5",
															"nodeType": "YulVariableDeclaration",
															"src": "714:10:5",
															"value": {
																"kind": "number",
																"nativeSrc": "723:1:5",
																"nodeType": "YulLiteral",
																"src": "723:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "718:1:5",
																	"nodeType": "YulTypedName",
																	"src": "718:1:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "783:63:5",
																"nodeType": "YulBlock",
																"src": "783:63:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "808:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "808:3:5"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "813:1:5",
																							"nodeType": "YulIdentifier",
																							"src": "813:1:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "804:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "804:3:5"
																					},
																					"nativeSrc": "804:11:5",
																					"nodeType": "YulFunctionCall",
																					"src": "804:11:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "827:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "827:3:5"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "832:1:5",
																									"nodeType": "YulIdentifier",
																									"src": "832:1:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "823:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "823:3:5"
																							},
																							"nativeSrc": "823:11:5",
																							"nodeType": "YulFunctionCall",
																							"src": "823:11:5"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "817:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "817:5:5"
																					},
																					"nativeSrc": "817:18:5",
																					"nodeType": "YulFunctionCall",
																					"src": "817:18:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "797:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "797:6:5"
																			},
																			"nativeSrc": "797:39:5",
																			"nodeType": "YulFunctionCall",
																			"src": "797:39:5"
																		},
																		"nativeSrc": "797:39:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "797:39:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "744:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "744:1:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "747:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "747:6:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "741:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "741:2:5"
																},
																"nativeSrc": "741:13:5",
																"nodeType": "YulFunctionCall",
																"src": "741:13:5"
															},
															"nativeSrc": "733:113:5",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "755:19:5",
																"nodeType": "YulBlock",
																"src": "755:19:5",
																"statements": [
																	{
																		"nativeSrc": "757:15:5",
																		"nodeType": "YulAssignment",
																		"src": "757:15:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "766:1:5",
																					"nodeType": "YulIdentifier",
																					"src": "766:1:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "769:2:5",
																					"nodeType": "YulLiteral",
																					"src": "769:2:5",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "762:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "762:3:5"
																			},
																			"nativeSrc": "762:10:5",
																			"nodeType": "YulFunctionCall",
																			"src": "762:10:5"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "757:1:5",
																				"nodeType": "YulIdentifier",
																				"src": "757:1:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "737:3:5",
																"nodeType": "YulBlock",
																"src": "737:3:5",
																"statements": []
															},
															"src": "733:113:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "866:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "866:3:5"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "871:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "871:6:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "862:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "862:3:5"
																		},
																		"nativeSrc": "862:16:5",
																		"nodeType": "YulFunctionCall",
																		"src": "862:16:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "880:1:5",
																		"nodeType": "YulLiteral",
																		"src": "880:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "855:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "855:6:5"
																},
																"nativeSrc": "855:27:5",
																"nodeType": "YulFunctionCall",
																"src": "855:27:5"
															},
															"nativeSrc": "855:27:5",
															"nodeType": "YulExpressionStatement",
															"src": "855:27:5"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "638:250:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "682:3:5",
														"nodeType": "YulTypedName",
														"src": "682:3:5",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "687:3:5",
														"nodeType": "YulTypedName",
														"src": "687:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "692:6:5",
														"nodeType": "YulTypedName",
														"src": "692:6:5",
														"type": ""
													}
												],
												"src": "638:250:5"
											},
											{
												"body": {
													"nativeSrc": "943:280:5",
													"nodeType": "YulBlock",
													"src": "943:280:5",
													"statements": [
														{
															"nativeSrc": "953:26:5",
															"nodeType": "YulVariableDeclaration",
															"src": "953:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "973:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "973:5:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "967:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "967:5:5"
																},
																"nativeSrc": "967:12:5",
																"nodeType": "YulFunctionCall",
																"src": "967:12:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "957:6:5",
																	"nodeType": "YulTypedName",
																	"src": "957:6:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "995:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "995:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1000:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1000:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "988:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "988:6:5"
																},
																"nativeSrc": "988:19:5",
																"nodeType": "YulFunctionCall",
																"src": "988:19:5"
															},
															"nativeSrc": "988:19:5",
															"nodeType": "YulExpressionStatement",
															"src": "988:19:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1055:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "1055:5:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1062:4:5",
																				"nodeType": "YulLiteral",
																				"src": "1062:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1051:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1051:3:5"
																		},
																		"nativeSrc": "1051:16:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1051:16:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "1073:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "1073:3:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1078:4:5",
																				"nodeType": "YulLiteral",
																				"src": "1078:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1069:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1069:3:5"
																		},
																		"nativeSrc": "1069:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1069:14:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1085:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1085:6:5"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "1016:34:5",
																	"nodeType": "YulIdentifier",
																	"src": "1016:34:5"
																},
																"nativeSrc": "1016:76:5",
																"nodeType": "YulFunctionCall",
																"src": "1016:76:5"
															},
															"nativeSrc": "1016:76:5",
															"nodeType": "YulExpressionStatement",
															"src": "1016:76:5"
														},
														{
															"nativeSrc": "1101:116:5",
															"nodeType": "YulAssignment",
															"src": "1101:116:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "1116:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "1116:3:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "1129:6:5",
																								"nodeType": "YulIdentifier",
																								"src": "1129:6:5"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1137:2:5",
																								"nodeType": "YulLiteral",
																								"src": "1137:2:5",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "1125:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "1125:3:5"
																						},
																						"nativeSrc": "1125:15:5",
																						"nodeType": "YulFunctionCall",
																						"src": "1125:15:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1142:66:5",
																						"nodeType": "YulLiteral",
																						"src": "1142:66:5",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "1121:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:5"
																				},
																				"nativeSrc": "1121:88:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1121:88:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1112:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1112:3:5"
																		},
																		"nativeSrc": "1112:98:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1112:98:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1212:4:5",
																		"nodeType": "YulLiteral",
																		"src": "1212:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1108:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1108:3:5"
																},
																"nativeSrc": "1108:109:5",
																"nodeType": "YulFunctionCall",
																"src": "1108:109:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1101:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1101:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nativeSrc": "893:330:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "920:5:5",
														"nodeType": "YulTypedName",
														"src": "920:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "927:3:5",
														"nodeType": "YulTypedName",
														"src": "927:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "935:3:5",
														"nodeType": "YulTypedName",
														"src": "935:3:5",
														"type": ""
													}
												],
												"src": "893:330:5"
											},
											{
												"body": {
													"nativeSrc": "1349:99:5",
													"nodeType": "YulBlock",
													"src": "1349:99:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1366:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1366:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1377:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1377:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1359:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1359:6:5"
																},
																"nativeSrc": "1359:21:5",
																"nodeType": "YulFunctionCall",
																"src": "1359:21:5"
															},
															"nativeSrc": "1359:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "1359:21:5"
														},
														{
															"nativeSrc": "1389:53:5",
															"nodeType": "YulAssignment",
															"src": "1389:53:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1415:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1415:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1427:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1427:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1438:2:5",
																				"nodeType": "YulLiteral",
																				"src": "1438:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1423:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1423:3:5"
																		},
																		"nativeSrc": "1423:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1423:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "1397:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "1397:17:5"
																},
																"nativeSrc": "1397:45:5",
																"nodeType": "YulFunctionCall",
																"src": "1397:45:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1389:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1389:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1228:220:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1318:9:5",
														"nodeType": "YulTypedName",
														"src": "1318:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1329:6:5",
														"nodeType": "YulTypedName",
														"src": "1329:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1340:4:5",
														"nodeType": "YulTypedName",
														"src": "1340:4:5",
														"type": ""
													}
												],
												"src": "1228:220:5"
											},
											{
												"body": {
													"nativeSrc": "1523:156:5",
													"nodeType": "YulBlock",
													"src": "1523:156:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1569:16:5",
																"nodeType": "YulBlock",
																"src": "1569:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1578:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1578:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1581:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1581:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1571:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1571:6:5"
																			},
																			"nativeSrc": "1571:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1571:12:5"
																		},
																		"nativeSrc": "1571:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1571:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1544:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1544:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1553:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1553:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1540:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1540:3:5"
																		},
																		"nativeSrc": "1540:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1540:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1565:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1565:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1536:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1536:3:5"
																},
																"nativeSrc": "1536:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1536:32:5"
															},
															"nativeSrc": "1533:52:5",
															"nodeType": "YulIf",
															"src": "1533:52:5"
														},
														{
															"nativeSrc": "1594:14:5",
															"nodeType": "YulVariableDeclaration",
															"src": "1594:14:5",
															"value": {
																"kind": "number",
																"nativeSrc": "1607:1:5",
																"nodeType": "YulLiteral",
																"src": "1607:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1598:5:5",
																	"nodeType": "YulTypedName",
																	"src": "1598:5:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1617:32:5",
															"nodeType": "YulAssignment",
															"src": "1617:32:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1639:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1639:9:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1626:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "1626:12:5"
																},
																"nativeSrc": "1626:23:5",
																"nodeType": "YulFunctionCall",
																"src": "1626:23:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1617:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1617:5:5"
																}
															]
														},
														{
															"nativeSrc": "1658:15:5",
															"nodeType": "YulAssignment",
															"src": "1658:15:5",
															"value": {
																"name": "value",
																"nativeSrc": "1668:5:5",
																"nodeType": "YulIdentifier",
																"src": "1668:5:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1658:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1658:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1453:226:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1489:9:5",
														"nodeType": "YulTypedName",
														"src": "1489:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1500:7:5",
														"nodeType": "YulTypedName",
														"src": "1500:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1512:6:5",
														"nodeType": "YulTypedName",
														"src": "1512:6:5",
														"type": ""
													}
												],
												"src": "1453:226:5"
											},
											{
												"body": {
													"nativeSrc": "1785:125:5",
													"nodeType": "YulBlock",
													"src": "1785:125:5",
													"statements": [
														{
															"nativeSrc": "1795:26:5",
															"nodeType": "YulAssignment",
															"src": "1795:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1807:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1807:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1818:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1818:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1803:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1803:3:5"
																},
																"nativeSrc": "1803:18:5",
																"nodeType": "YulFunctionCall",
																"src": "1803:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1795:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1795:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1837:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1837:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1852:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1852:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1860:42:5",
																				"nodeType": "YulLiteral",
																				"src": "1860:42:5",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1848:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1848:3:5"
																		},
																		"nativeSrc": "1848:55:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1848:55:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1830:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1830:6:5"
																},
																"nativeSrc": "1830:74:5",
																"nodeType": "YulFunctionCall",
																"src": "1830:74:5"
															},
															"nativeSrc": "1830:74:5",
															"nodeType": "YulExpressionStatement",
															"src": "1830:74:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1684:226:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1754:9:5",
														"nodeType": "YulTypedName",
														"src": "1754:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1765:6:5",
														"nodeType": "YulTypedName",
														"src": "1765:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1776:4:5",
														"nodeType": "YulTypedName",
														"src": "1776:4:5",
														"type": ""
													}
												],
												"src": "1684:226:5"
											},
											{
												"body": {
													"nativeSrc": "1964:147:5",
													"nodeType": "YulBlock",
													"src": "1964:147:5",
													"statements": [
														{
															"nativeSrc": "1974:29:5",
															"nodeType": "YulAssignment",
															"src": "1974:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1996:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1996:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1983:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "1983:12:5"
																},
																"nativeSrc": "1983:20:5",
																"nodeType": "YulFunctionCall",
																"src": "1983:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1974:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1974:5:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2089:16:5",
																"nodeType": "YulBlock",
																"src": "2089:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2098:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2098:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2101:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2101:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2091:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2091:6:5"
																			},
																			"nativeSrc": "2091:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2091:12:5"
																		},
																		"nativeSrc": "2091:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2091:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2025:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "2025:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2036:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "2036:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2043:42:5",
																						"nodeType": "YulLiteral",
																						"src": "2043:42:5",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "2032:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "2032:3:5"
																				},
																				"nativeSrc": "2032:54:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2032:54:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2022:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "2022:2:5"
																		},
																		"nativeSrc": "2022:65:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2022:65:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2015:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2015:6:5"
																},
																"nativeSrc": "2015:73:5",
																"nodeType": "YulFunctionCall",
																"src": "2015:73:5"
															},
															"nativeSrc": "2012:93:5",
															"nodeType": "YulIf",
															"src": "2012:93:5"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "1915:196:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1943:6:5",
														"nodeType": "YulTypedName",
														"src": "1943:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1954:5:5",
														"nodeType": "YulTypedName",
														"src": "1954:5:5",
														"type": ""
													}
												],
												"src": "1915:196:5"
											},
											{
												"body": {
													"nativeSrc": "2203:213:5",
													"nodeType": "YulBlock",
													"src": "2203:213:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2249:16:5",
																"nodeType": "YulBlock",
																"src": "2249:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2258:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2258:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2261:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2261:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2251:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2251:6:5"
																			},
																			"nativeSrc": "2251:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2251:12:5"
																		},
																		"nativeSrc": "2251:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2251:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2224:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2224:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2233:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2233:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2220:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2220:3:5"
																		},
																		"nativeSrc": "2220:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2220:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2245:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2245:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2216:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2216:3:5"
																},
																"nativeSrc": "2216:32:5",
																"nodeType": "YulFunctionCall",
																"src": "2216:32:5"
															},
															"nativeSrc": "2213:52:5",
															"nodeType": "YulIf",
															"src": "2213:52:5"
														},
														{
															"nativeSrc": "2274:39:5",
															"nodeType": "YulAssignment",
															"src": "2274:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2303:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2303:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2284:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "2284:18:5"
																},
																"nativeSrc": "2284:29:5",
																"nodeType": "YulFunctionCall",
																"src": "2284:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2274:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2274:6:5"
																}
															]
														},
														{
															"nativeSrc": "2322:14:5",
															"nodeType": "YulVariableDeclaration",
															"src": "2322:14:5",
															"value": {
																"kind": "number",
																"nativeSrc": "2335:1:5",
																"nodeType": "YulLiteral",
																"src": "2335:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2326:5:5",
																	"nodeType": "YulTypedName",
																	"src": "2326:5:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2345:41:5",
															"nodeType": "YulAssignment",
															"src": "2345:41:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2371:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2371:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2382:2:5",
																				"nodeType": "YulLiteral",
																				"src": "2382:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2367:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2367:3:5"
																		},
																		"nativeSrc": "2367:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2367:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2354:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "2354:12:5"
																},
																"nativeSrc": "2354:32:5",
																"nodeType": "YulFunctionCall",
																"src": "2354:32:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2345:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "2345:5:5"
																}
															]
														},
														{
															"nativeSrc": "2395:15:5",
															"nodeType": "YulAssignment",
															"src": "2395:15:5",
															"value": {
																"name": "value",
																"nativeSrc": "2405:5:5",
																"nodeType": "YulIdentifier",
																"src": "2405:5:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2395:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2395:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2116:300:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2161:9:5",
														"nodeType": "YulTypedName",
														"src": "2161:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2172:7:5",
														"nodeType": "YulTypedName",
														"src": "2172:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2184:6:5",
														"nodeType": "YulTypedName",
														"src": "2184:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2192:6:5",
														"nodeType": "YulTypedName",
														"src": "2192:6:5",
														"type": ""
													}
												],
												"src": "2116:300:5"
											},
											{
												"body": {
													"nativeSrc": "2522:76:5",
													"nodeType": "YulBlock",
													"src": "2522:76:5",
													"statements": [
														{
															"nativeSrc": "2532:26:5",
															"nodeType": "YulAssignment",
															"src": "2532:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2544:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2544:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2555:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2555:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2540:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2540:3:5"
																},
																"nativeSrc": "2540:18:5",
																"nodeType": "YulFunctionCall",
																"src": "2540:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2532:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "2532:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2574:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2574:9:5"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "2585:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2585:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2567:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2567:6:5"
																},
																"nativeSrc": "2567:25:5",
																"nodeType": "YulFunctionCall",
																"src": "2567:25:5"
															},
															"nativeSrc": "2567:25:5",
															"nodeType": "YulExpressionStatement",
															"src": "2567:25:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "2421:177:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2491:9:5",
														"nodeType": "YulTypedName",
														"src": "2491:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2502:6:5",
														"nodeType": "YulTypedName",
														"src": "2502:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2513:4:5",
														"nodeType": "YulTypedName",
														"src": "2513:4:5",
														"type": ""
													}
												],
												"src": "2421:177:5"
											},
											{
												"body": {
													"nativeSrc": "2707:270:5",
													"nodeType": "YulBlock",
													"src": "2707:270:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2753:16:5",
																"nodeType": "YulBlock",
																"src": "2753:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2762:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2762:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2765:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2765:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2755:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2755:6:5"
																			},
																			"nativeSrc": "2755:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2755:12:5"
																		},
																		"nativeSrc": "2755:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2755:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2728:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2728:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2737:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2737:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2724:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2724:3:5"
																		},
																		"nativeSrc": "2724:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2724:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2749:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2749:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2720:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2720:3:5"
																},
																"nativeSrc": "2720:32:5",
																"nodeType": "YulFunctionCall",
																"src": "2720:32:5"
															},
															"nativeSrc": "2717:52:5",
															"nodeType": "YulIf",
															"src": "2717:52:5"
														},
														{
															"nativeSrc": "2778:39:5",
															"nodeType": "YulAssignment",
															"src": "2778:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2807:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2807:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2788:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "2788:18:5"
																},
																"nativeSrc": "2788:29:5",
																"nodeType": "YulFunctionCall",
																"src": "2788:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2778:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2778:6:5"
																}
															]
														},
														{
															"nativeSrc": "2826:48:5",
															"nodeType": "YulAssignment",
															"src": "2826:48:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2859:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2859:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2870:2:5",
																				"nodeType": "YulLiteral",
																				"src": "2870:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2855:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2855:3:5"
																		},
																		"nativeSrc": "2855:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2855:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2836:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "2836:18:5"
																},
																"nativeSrc": "2836:38:5",
																"nodeType": "YulFunctionCall",
																"src": "2836:38:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2826:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2826:6:5"
																}
															]
														},
														{
															"nativeSrc": "2883:14:5",
															"nodeType": "YulVariableDeclaration",
															"src": "2883:14:5",
															"value": {
																"kind": "number",
																"nativeSrc": "2896:1:5",
																"nodeType": "YulLiteral",
																"src": "2896:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2887:5:5",
																	"nodeType": "YulTypedName",
																	"src": "2887:5:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2906:41:5",
															"nodeType": "YulAssignment",
															"src": "2906:41:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2932:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2932:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2943:2:5",
																				"nodeType": "YulLiteral",
																				"src": "2943:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2928:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2928:3:5"
																		},
																		"nativeSrc": "2928:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2928:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2915:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "2915:12:5"
																},
																"nativeSrc": "2915:32:5",
																"nodeType": "YulFunctionCall",
																"src": "2915:32:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2906:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "2906:5:5"
																}
															]
														},
														{
															"nativeSrc": "2956:15:5",
															"nodeType": "YulAssignment",
															"src": "2956:15:5",
															"value": {
																"name": "value",
																"nativeSrc": "2966:5:5",
																"nodeType": "YulIdentifier",
																"src": "2966:5:5"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "2956:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2956:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "2603:374:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2657:9:5",
														"nodeType": "YulTypedName",
														"src": "2657:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2668:7:5",
														"nodeType": "YulTypedName",
														"src": "2668:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2680:6:5",
														"nodeType": "YulTypedName",
														"src": "2680:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2688:6:5",
														"nodeType": "YulTypedName",
														"src": "2688:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2696:6:5",
														"nodeType": "YulTypedName",
														"src": "2696:6:5",
														"type": ""
													}
												],
												"src": "2603:374:5"
											},
											{
												"body": {
													"nativeSrc": "3052:116:5",
													"nodeType": "YulBlock",
													"src": "3052:116:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "3098:16:5",
																"nodeType": "YulBlock",
																"src": "3098:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3107:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3107:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3110:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3110:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3100:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "3100:6:5"
																			},
																			"nativeSrc": "3100:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3100:12:5"
																		},
																		"nativeSrc": "3100:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "3100:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3073:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "3073:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3082:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3082:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3069:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3069:3:5"
																		},
																		"nativeSrc": "3069:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3069:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3094:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3094:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3065:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3065:3:5"
																},
																"nativeSrc": "3065:32:5",
																"nodeType": "YulFunctionCall",
																"src": "3065:32:5"
															},
															"nativeSrc": "3062:52:5",
															"nodeType": "YulIf",
															"src": "3062:52:5"
														},
														{
															"nativeSrc": "3123:39:5",
															"nodeType": "YulAssignment",
															"src": "3123:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3152:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3152:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3133:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "3133:18:5"
																},
																"nativeSrc": "3133:29:5",
																"nodeType": "YulFunctionCall",
																"src": "3133:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3123:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3123:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2982:186:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3018:9:5",
														"nodeType": "YulTypedName",
														"src": "3018:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3029:7:5",
														"nodeType": "YulTypedName",
														"src": "3029:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3041:6:5",
														"nodeType": "YulTypedName",
														"src": "3041:6:5",
														"type": ""
													}
												],
												"src": "2982:186:5"
											},
											{
												"body": {
													"nativeSrc": "3257:263:5",
													"nodeType": "YulBlock",
													"src": "3257:263:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "3303:16:5",
																"nodeType": "YulBlock",
																"src": "3303:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3312:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3312:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3315:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3315:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3305:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "3305:6:5"
																			},
																			"nativeSrc": "3305:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3305:12:5"
																		},
																		"nativeSrc": "3305:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "3305:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3278:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "3278:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3287:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3287:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3274:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3274:3:5"
																		},
																		"nativeSrc": "3274:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3274:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3299:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3299:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3270:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3270:3:5"
																},
																"nativeSrc": "3270:32:5",
																"nodeType": "YulFunctionCall",
																"src": "3270:32:5"
															},
															"nativeSrc": "3267:52:5",
															"nodeType": "YulIf",
															"src": "3267:52:5"
														},
														{
															"nativeSrc": "3328:39:5",
															"nodeType": "YulAssignment",
															"src": "3328:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3357:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3357:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3338:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "3338:18:5"
																},
																"nativeSrc": "3338:29:5",
																"nodeType": "YulFunctionCall",
																"src": "3338:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3328:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3328:6:5"
																}
															]
														},
														{
															"nativeSrc": "3376:45:5",
															"nodeType": "YulVariableDeclaration",
															"src": "3376:45:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3406:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3406:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3417:2:5",
																				"nodeType": "YulLiteral",
																				"src": "3417:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3402:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3402:3:5"
																		},
																		"nativeSrc": "3402:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3402:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3389:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "3389:12:5"
																},
																"nativeSrc": "3389:32:5",
																"nodeType": "YulFunctionCall",
																"src": "3389:32:5"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "3380:5:5",
																	"nodeType": "YulTypedName",
																	"src": "3380:5:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3474:16:5",
																"nodeType": "YulBlock",
																"src": "3474:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3483:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3483:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3486:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3486:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3476:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "3476:6:5"
																			},
																			"nativeSrc": "3476:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3476:12:5"
																		},
																		"nativeSrc": "3476:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "3476:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3443:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "3443:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "3464:5:5",
																								"nodeType": "YulIdentifier",
																								"src": "3464:5:5"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "3457:6:5",
																							"nodeType": "YulIdentifier",
																							"src": "3457:6:5"
																						},
																						"nativeSrc": "3457:13:5",
																						"nodeType": "YulFunctionCall",
																						"src": "3457:13:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "3450:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "3450:6:5"
																				},
																				"nativeSrc": "3450:21:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3450:21:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3440:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "3440:2:5"
																		},
																		"nativeSrc": "3440:32:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3440:32:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3433:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3433:6:5"
																},
																"nativeSrc": "3433:40:5",
																"nodeType": "YulFunctionCall",
																"src": "3433:40:5"
															},
															"nativeSrc": "3430:60:5",
															"nodeType": "YulIf",
															"src": "3430:60:5"
														},
														{
															"nativeSrc": "3499:15:5",
															"nodeType": "YulAssignment",
															"src": "3499:15:5",
															"value": {
																"name": "value",
																"nativeSrc": "3509:5:5",
																"nodeType": "YulIdentifier",
																"src": "3509:5:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3499:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3499:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "3173:347:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3215:9:5",
														"nodeType": "YulTypedName",
														"src": "3215:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3226:7:5",
														"nodeType": "YulTypedName",
														"src": "3226:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3238:6:5",
														"nodeType": "YulTypedName",
														"src": "3238:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3246:6:5",
														"nodeType": "YulTypedName",
														"src": "3246:6:5",
														"type": ""
													}
												],
												"src": "3173:347:5"
											},
											{
												"body": {
													"nativeSrc": "3557:152:5",
													"nodeType": "YulBlock",
													"src": "3557:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3574:1:5",
																		"nodeType": "YulLiteral",
																		"src": "3574:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3577:77:5",
																		"nodeType": "YulLiteral",
																		"src": "3577:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3567:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3567:6:5"
																},
																"nativeSrc": "3567:88:5",
																"nodeType": "YulFunctionCall",
																"src": "3567:88:5"
															},
															"nativeSrc": "3567:88:5",
															"nodeType": "YulExpressionStatement",
															"src": "3567:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3671:1:5",
																		"nodeType": "YulLiteral",
																		"src": "3671:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3674:4:5",
																		"nodeType": "YulLiteral",
																		"src": "3674:4:5",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3664:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3664:6:5"
																},
																"nativeSrc": "3664:15:5",
																"nodeType": "YulFunctionCall",
																"src": "3664:15:5"
															},
															"nativeSrc": "3664:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "3664:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3695:1:5",
																		"nodeType": "YulLiteral",
																		"src": "3695:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3698:4:5",
																		"nodeType": "YulLiteral",
																		"src": "3698:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3688:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3688:6:5"
																},
																"nativeSrc": "3688:15:5",
																"nodeType": "YulFunctionCall",
																"src": "3688:15:5"
															},
															"nativeSrc": "3688:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "3688:15:5"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "3525:184:5",
												"nodeType": "YulFunctionDefinition",
												"src": "3525:184:5"
											},
											{
												"body": {
													"nativeSrc": "3844:1195:5",
													"nodeType": "YulBlock",
													"src": "3844:1195:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "3891:16:5",
																"nodeType": "YulBlock",
																"src": "3891:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3900:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3900:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3903:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3903:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3893:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "3893:6:5"
																			},
																			"nativeSrc": "3893:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3893:12:5"
																		},
																		"nativeSrc": "3893:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "3893:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3865:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "3865:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3874:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3874:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3861:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3861:3:5"
																		},
																		"nativeSrc": "3861:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3861:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3886:3:5",
																		"nodeType": "YulLiteral",
																		"src": "3886:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3857:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3857:3:5"
																},
																"nativeSrc": "3857:33:5",
																"nodeType": "YulFunctionCall",
																"src": "3857:33:5"
															},
															"nativeSrc": "3854:53:5",
															"nodeType": "YulIf",
															"src": "3854:53:5"
														},
														{
															"nativeSrc": "3916:39:5",
															"nodeType": "YulAssignment",
															"src": "3916:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3945:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3945:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3926:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "3926:18:5"
																},
																"nativeSrc": "3926:29:5",
																"nodeType": "YulFunctionCall",
																"src": "3926:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3916:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3916:6:5"
																}
															]
														},
														{
															"nativeSrc": "3964:48:5",
															"nodeType": "YulAssignment",
															"src": "3964:48:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3997:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3997:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4008:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4008:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3993:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3993:3:5"
																		},
																		"nativeSrc": "3993:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3993:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3974:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "3974:18:5"
																},
																"nativeSrc": "3974:38:5",
																"nodeType": "YulFunctionCall",
																"src": "3974:38:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3964:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3964:6:5"
																}
															]
														},
														{
															"nativeSrc": "4021:14:5",
															"nodeType": "YulVariableDeclaration",
															"src": "4021:14:5",
															"value": {
																"kind": "number",
																"nativeSrc": "4034:1:5",
																"nodeType": "YulLiteral",
																"src": "4034:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "4025:5:5",
																	"nodeType": "YulTypedName",
																	"src": "4025:5:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4044:41:5",
															"nodeType": "YulAssignment",
															"src": "4044:41:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4070:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4070:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4081:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4081:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4066:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4066:3:5"
																		},
																		"nativeSrc": "4066:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4066:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4053:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "4053:12:5"
																},
																"nativeSrc": "4053:32:5",
																"nodeType": "YulFunctionCall",
																"src": "4053:32:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4044:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "4044:5:5"
																}
															]
														},
														{
															"nativeSrc": "4094:15:5",
															"nodeType": "YulAssignment",
															"src": "4094:15:5",
															"value": {
																"name": "value",
																"nativeSrc": "4104:5:5",
																"nodeType": "YulIdentifier",
																"src": "4104:5:5"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "4094:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4094:6:5"
																}
															]
														},
														{
															"nativeSrc": "4118:46:5",
															"nodeType": "YulVariableDeclaration",
															"src": "4118:46:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4149:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4149:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4160:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4160:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4145:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4145:3:5"
																		},
																		"nativeSrc": "4145:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4145:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4132:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "4132:12:5"
																},
																"nativeSrc": "4132:32:5",
																"nodeType": "YulFunctionCall",
																"src": "4132:32:5"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "4122:6:5",
																	"nodeType": "YulTypedName",
																	"src": "4122:6:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4207:16:5",
																"nodeType": "YulBlock",
																"src": "4207:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4216:1:5",
																					"nodeType": "YulLiteral",
																					"src": "4216:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4219:1:5",
																					"nodeType": "YulLiteral",
																					"src": "4219:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4209:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "4209:6:5"
																			},
																			"nativeSrc": "4209:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "4209:12:5"
																		},
																		"nativeSrc": "4209:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "4209:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4179:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "4179:6:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4187:18:5",
																		"nodeType": "YulLiteral",
																		"src": "4187:18:5",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4176:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "4176:2:5"
																},
																"nativeSrc": "4176:30:5",
																"nodeType": "YulFunctionCall",
																"src": "4176:30:5"
															},
															"nativeSrc": "4173:50:5",
															"nodeType": "YulIf",
															"src": "4173:50:5"
														},
														{
															"nativeSrc": "4232:32:5",
															"nodeType": "YulVariableDeclaration",
															"src": "4232:32:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4246:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4246:9:5"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "4257:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "4257:6:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4242:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4242:3:5"
																},
																"nativeSrc": "4242:22:5",
																"nodeType": "YulFunctionCall",
																"src": "4242:22:5"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "4236:2:5",
																	"nodeType": "YulTypedName",
																	"src": "4236:2:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4312:16:5",
																"nodeType": "YulBlock",
																"src": "4312:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4321:1:5",
																					"nodeType": "YulLiteral",
																					"src": "4321:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4324:1:5",
																					"nodeType": "YulLiteral",
																					"src": "4324:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4314:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "4314:6:5"
																			},
																			"nativeSrc": "4314:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "4314:12:5"
																		},
																		"nativeSrc": "4314:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "4314:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "4291:2:5",
																						"nodeType": "YulIdentifier",
																						"src": "4291:2:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4295:4:5",
																						"nodeType": "YulLiteral",
																						"src": "4295:4:5",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4287:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4287:3:5"
																				},
																				"nativeSrc": "4287:13:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4287:13:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4302:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "4302:7:5"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "4283:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4283:3:5"
																		},
																		"nativeSrc": "4283:27:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4283:27:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4276:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4276:6:5"
																},
																"nativeSrc": "4276:35:5",
																"nodeType": "YulFunctionCall",
																"src": "4276:35:5"
															},
															"nativeSrc": "4273:55:5",
															"nodeType": "YulIf",
															"src": "4273:55:5"
														},
														{
															"nativeSrc": "4337:30:5",
															"nodeType": "YulVariableDeclaration",
															"src": "4337:30:5",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "4364:2:5",
																		"nodeType": "YulIdentifier",
																		"src": "4364:2:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4351:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "4351:12:5"
																},
																"nativeSrc": "4351:16:5",
																"nodeType": "YulFunctionCall",
																"src": "4351:16:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "4341:6:5",
																	"nodeType": "YulTypedName",
																	"src": "4341:6:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4410:22:5",
																"nodeType": "YulBlock",
																"src": "4410:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4412:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "4412:16:5"
																			},
																			"nativeSrc": "4412:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "4412:18:5"
																		},
																		"nativeSrc": "4412:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "4412:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "4382:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "4382:6:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4390:18:5",
																		"nodeType": "YulLiteral",
																		"src": "4390:18:5",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4379:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "4379:2:5"
																},
																"nativeSrc": "4379:30:5",
																"nodeType": "YulFunctionCall",
																"src": "4379:30:5"
															},
															"nativeSrc": "4376:56:5",
															"nodeType": "YulIf",
															"src": "4376:56:5"
														},
														{
															"nativeSrc": "4441:23:5",
															"nodeType": "YulVariableDeclaration",
															"src": "4441:23:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4461:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4461:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4455:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "4455:5:5"
																},
																"nativeSrc": "4455:9:5",
																"nodeType": "YulFunctionCall",
																"src": "4455:9:5"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "4445:6:5",
																	"nodeType": "YulTypedName",
																	"src": "4445:6:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4473:203:5",
															"nodeType": "YulVariableDeclaration",
															"src": "4473:203:5",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "4495:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "4495:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "length",
																										"nativeSrc": "4519:6:5",
																										"nodeType": "YulIdentifier",
																										"src": "4519:6:5"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4527:4:5",
																										"nodeType": "YulLiteral",
																										"src": "4527:4:5",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4515:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "4515:3:5"
																								},
																								"nativeSrc": "4515:17:5",
																								"nodeType": "YulFunctionCall",
																								"src": "4515:17:5"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4534:66:5",
																								"nodeType": "YulLiteral",
																								"src": "4534:66:5",
																								"type": "",
																								"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "4511:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "4511:3:5"
																						},
																						"nativeSrc": "4511:90:5",
																						"nodeType": "YulFunctionCall",
																						"src": "4511:90:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4603:2:5",
																						"nodeType": "YulLiteral",
																						"src": "4603:2:5",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4507:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4507:3:5"
																				},
																				"nativeSrc": "4507:99:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4507:99:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4608:66:5",
																				"nodeType": "YulLiteral",
																				"src": "4608:66:5",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4503:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4503:3:5"
																		},
																		"nativeSrc": "4503:172:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4503:172:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4491:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4491:3:5"
																},
																"nativeSrc": "4491:185:5",
																"nodeType": "YulFunctionCall",
																"src": "4491:185:5"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "4477:10:5",
																	"nodeType": "YulTypedName",
																	"src": "4477:10:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4751:22:5",
																"nodeType": "YulBlock",
																"src": "4751:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4753:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "4753:16:5"
																			},
																			"nativeSrc": "4753:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "4753:18:5"
																		},
																		"nativeSrc": "4753:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "4753:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "4694:10:5",
																				"nodeType": "YulIdentifier",
																				"src": "4694:10:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4706:18:5",
																				"nodeType": "YulLiteral",
																				"src": "4706:18:5",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "4691:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "4691:2:5"
																		},
																		"nativeSrc": "4691:34:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4691:34:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "4730:10:5",
																				"nodeType": "YulIdentifier",
																				"src": "4730:10:5"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "4742:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "4742:6:5"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4727:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "4727:2:5"
																		},
																		"nativeSrc": "4727:22:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4727:22:5"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4688:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "4688:2:5"
																},
																"nativeSrc": "4688:62:5",
																"nodeType": "YulFunctionCall",
																"src": "4688:62:5"
															},
															"nativeSrc": "4685:88:5",
															"nodeType": "YulIf",
															"src": "4685:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4789:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4789:2:5",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "4793:10:5",
																		"nodeType": "YulIdentifier",
																		"src": "4793:10:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4782:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4782:6:5"
																},
																"nativeSrc": "4782:22:5",
																"nodeType": "YulFunctionCall",
																"src": "4782:22:5"
															},
															"nativeSrc": "4782:22:5",
															"nodeType": "YulExpressionStatement",
															"src": "4782:22:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "4820:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "4820:6:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4828:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "4828:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4813:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4813:6:5"
																},
																"nativeSrc": "4813:22:5",
																"nodeType": "YulFunctionCall",
																"src": "4813:22:5"
															},
															"nativeSrc": "4813:22:5",
															"nodeType": "YulExpressionStatement",
															"src": "4813:22:5"
														},
														{
															"body": {
																"nativeSrc": "4885:16:5",
																"nodeType": "YulBlock",
																"src": "4885:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4894:1:5",
																					"nodeType": "YulLiteral",
																					"src": "4894:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4897:1:5",
																					"nodeType": "YulLiteral",
																					"src": "4897:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4887:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "4887:6:5"
																			},
																			"nativeSrc": "4887:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "4887:12:5"
																		},
																		"nativeSrc": "4887:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "4887:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "4858:2:5",
																						"nodeType": "YulIdentifier",
																						"src": "4858:2:5"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "4862:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "4862:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4854:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4854:3:5"
																				},
																				"nativeSrc": "4854:15:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4854:15:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4871:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4871:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4850:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4850:3:5"
																		},
																		"nativeSrc": "4850:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4850:24:5"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "4876:7:5",
																		"nodeType": "YulIdentifier",
																		"src": "4876:7:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4847:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "4847:2:5"
																},
																"nativeSrc": "4847:37:5",
																"nodeType": "YulFunctionCall",
																"src": "4847:37:5"
															},
															"nativeSrc": "4844:57:5",
															"nodeType": "YulIf",
															"src": "4844:57:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4927:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "4927:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4935:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4935:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4923:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4923:3:5"
																		},
																		"nativeSrc": "4923:15:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4923:15:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "4944:2:5",
																				"nodeType": "YulIdentifier",
																				"src": "4944:2:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4948:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4948:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4940:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4940:3:5"
																		},
																		"nativeSrc": "4940:11:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4940:11:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4953:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "4953:6:5"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "4910:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "4910:12:5"
																},
																"nativeSrc": "4910:50:5",
																"nodeType": "YulFunctionCall",
																"src": "4910:50:5"
															},
															"nativeSrc": "4910:50:5",
															"nodeType": "YulExpressionStatement",
															"src": "4910:50:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "4984:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "4984:6:5"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "4992:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "4992:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4980:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4980:3:5"
																				},
																				"nativeSrc": "4980:19:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4980:19:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5001:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5001:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4976:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4976:3:5"
																		},
																		"nativeSrc": "4976:28:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4976:28:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5006:1:5",
																		"nodeType": "YulLiteral",
																		"src": "5006:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4969:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4969:6:5"
																},
																"nativeSrc": "4969:39:5",
																"nodeType": "YulFunctionCall",
																"src": "4969:39:5"
															},
															"nativeSrc": "4969:39:5",
															"nodeType": "YulExpressionStatement",
															"src": "4969:39:5"
														},
														{
															"nativeSrc": "5017:16:5",
															"nodeType": "YulAssignment",
															"src": "5017:16:5",
															"value": {
																"name": "memPtr",
																"nativeSrc": "5027:6:5",
																"nodeType": "YulIdentifier",
																"src": "5027:6:5"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "5017:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5017:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nativeSrc": "3714:1325:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3786:9:5",
														"nodeType": "YulTypedName",
														"src": "3786:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3797:7:5",
														"nodeType": "YulTypedName",
														"src": "3797:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3809:6:5",
														"nodeType": "YulTypedName",
														"src": "3809:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3817:6:5",
														"nodeType": "YulTypedName",
														"src": "3817:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3825:6:5",
														"nodeType": "YulTypedName",
														"src": "3825:6:5",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "3833:6:5",
														"nodeType": "YulTypedName",
														"src": "3833:6:5",
														"type": ""
													}
												],
												"src": "3714:1325:5"
											},
											{
												"body": {
													"nativeSrc": "5131:173:5",
													"nodeType": "YulBlock",
													"src": "5131:173:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "5177:16:5",
																"nodeType": "YulBlock",
																"src": "5177:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5186:1:5",
																					"nodeType": "YulLiteral",
																					"src": "5186:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5189:1:5",
																					"nodeType": "YulLiteral",
																					"src": "5189:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5179:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "5179:6:5"
																			},
																			"nativeSrc": "5179:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "5179:12:5"
																		},
																		"nativeSrc": "5179:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "5179:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5152:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "5152:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5161:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5161:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5148:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5148:3:5"
																		},
																		"nativeSrc": "5148:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5148:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5173:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5173:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5144:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5144:3:5"
																},
																"nativeSrc": "5144:32:5",
																"nodeType": "YulFunctionCall",
																"src": "5144:32:5"
															},
															"nativeSrc": "5141:52:5",
															"nodeType": "YulIf",
															"src": "5141:52:5"
														},
														{
															"nativeSrc": "5202:39:5",
															"nodeType": "YulAssignment",
															"src": "5202:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5231:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "5231:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "5212:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "5212:18:5"
																},
																"nativeSrc": "5212:29:5",
																"nodeType": "YulFunctionCall",
																"src": "5212:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "5202:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5202:6:5"
																}
															]
														},
														{
															"nativeSrc": "5250:48:5",
															"nodeType": "YulAssignment",
															"src": "5250:48:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5283:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5283:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5294:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5294:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5279:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5279:3:5"
																		},
																		"nativeSrc": "5279:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5279:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "5260:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "5260:18:5"
																},
																"nativeSrc": "5260:38:5",
																"nodeType": "YulFunctionCall",
																"src": "5260:38:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "5250:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5250:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "5044:260:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5089:9:5",
														"nodeType": "YulTypedName",
														"src": "5089:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5100:7:5",
														"nodeType": "YulTypedName",
														"src": "5100:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5112:6:5",
														"nodeType": "YulTypedName",
														"src": "5112:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5120:6:5",
														"nodeType": "YulTypedName",
														"src": "5120:6:5",
														"type": ""
													}
												],
												"src": "5044:260:5"
											},
											{
												"body": {
													"nativeSrc": "5364:382:5",
													"nodeType": "YulBlock",
													"src": "5364:382:5",
													"statements": [
														{
															"nativeSrc": "5374:22:5",
															"nodeType": "YulAssignment",
															"src": "5374:22:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5388:1:5",
																		"nodeType": "YulLiteral",
																		"src": "5388:1:5",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "5391:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "5391:4:5"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "5384:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5384:3:5"
																},
																"nativeSrc": "5384:12:5",
																"nodeType": "YulFunctionCall",
																"src": "5384:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "5374:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5374:6:5"
																}
															]
														},
														{
															"nativeSrc": "5405:38:5",
															"nodeType": "YulVariableDeclaration",
															"src": "5405:38:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5435:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "5435:4:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5441:1:5",
																		"nodeType": "YulLiteral",
																		"src": "5441:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5431:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5431:3:5"
																},
																"nativeSrc": "5431:12:5",
																"nodeType": "YulFunctionCall",
																"src": "5431:12:5"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "5409:18:5",
																	"nodeType": "YulTypedName",
																	"src": "5409:18:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5482:31:5",
																"nodeType": "YulBlock",
																"src": "5482:31:5",
																"statements": [
																	{
																		"nativeSrc": "5484:27:5",
																		"nodeType": "YulAssignment",
																		"src": "5484:27:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "5498:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "5498:6:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5506:4:5",
																					"nodeType": "YulLiteral",
																					"src": "5506:4:5",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "5494:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "5494:3:5"
																			},
																			"nativeSrc": "5494:17:5",
																			"nodeType": "YulFunctionCall",
																			"src": "5494:17:5"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "5484:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "5484:6:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "5462:18:5",
																		"nodeType": "YulIdentifier",
																		"src": "5462:18:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5455:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5455:6:5"
																},
																"nativeSrc": "5455:26:5",
																"nodeType": "YulFunctionCall",
																"src": "5455:26:5"
															},
															"nativeSrc": "5452:61:5",
															"nodeType": "YulIf",
															"src": "5452:61:5"
														},
														{
															"body": {
																"nativeSrc": "5572:168:5",
																"nodeType": "YulBlock",
																"src": "5572:168:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5593:1:5",
																					"nodeType": "YulLiteral",
																					"src": "5593:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5596:77:5",
																					"nodeType": "YulLiteral",
																					"src": "5596:77:5",
																					"type": "",
																					"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5586:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "5586:6:5"
																			},
																			"nativeSrc": "5586:88:5",
																			"nodeType": "YulFunctionCall",
																			"src": "5586:88:5"
																		},
																		"nativeSrc": "5586:88:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "5586:88:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5694:1:5",
																					"nodeType": "YulLiteral",
																					"src": "5694:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5697:4:5",
																					"nodeType": "YulLiteral",
																					"src": "5697:4:5",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5687:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "5687:6:5"
																			},
																			"nativeSrc": "5687:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "5687:15:5"
																		},
																		"nativeSrc": "5687:15:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "5687:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5722:1:5",
																					"nodeType": "YulLiteral",
																					"src": "5722:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5725:4:5",
																					"nodeType": "YulLiteral",
																					"src": "5725:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5715:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "5715:6:5"
																			},
																			"nativeSrc": "5715:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "5715:15:5"
																		},
																		"nativeSrc": "5715:15:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "5715:15:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "5528:18:5",
																		"nodeType": "YulIdentifier",
																		"src": "5528:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "5551:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "5551:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5559:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5559:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "5548:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "5548:2:5"
																		},
																		"nativeSrc": "5548:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5548:14:5"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "5525:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "5525:2:5"
																},
																"nativeSrc": "5525:38:5",
																"nodeType": "YulFunctionCall",
																"src": "5525:38:5"
															},
															"nativeSrc": "5522:218:5",
															"nodeType": "YulIf",
															"src": "5522:218:5"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "5309:437:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "5344:4:5",
														"nodeType": "YulTypedName",
														"src": "5344:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "5353:6:5",
														"nodeType": "YulTypedName",
														"src": "5353:6:5",
														"type": ""
													}
												],
												"src": "5309:437:5"
											},
											{
												"body": {
													"nativeSrc": "5938:309:5",
													"nodeType": "YulBlock",
													"src": "5938:309:5",
													"statements": [
														{
															"nativeSrc": "5948:27:5",
															"nodeType": "YulVariableDeclaration",
															"src": "5948:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5968:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "5968:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5962:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "5962:5:5"
																},
																"nativeSrc": "5962:13:5",
																"nodeType": "YulFunctionCall",
																"src": "5962:13:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "5952:6:5",
																	"nodeType": "YulTypedName",
																	"src": "5952:6:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "6023:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "6023:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6031:4:5",
																				"nodeType": "YulLiteral",
																				"src": "6031:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6019:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6019:3:5"
																		},
																		"nativeSrc": "6019:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6019:17:5"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "6038:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "6038:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6043:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "6043:6:5"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "5984:34:5",
																	"nodeType": "YulIdentifier",
																	"src": "5984:34:5"
																},
																"nativeSrc": "5984:66:5",
																"nodeType": "YulFunctionCall",
																"src": "5984:66:5"
															},
															"nativeSrc": "5984:66:5",
															"nodeType": "YulExpressionStatement",
															"src": "5984:66:5"
														},
														{
															"nativeSrc": "6059:29:5",
															"nodeType": "YulVariableDeclaration",
															"src": "6059:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6076:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "6076:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6081:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "6081:6:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6072:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6072:3:5"
																},
																"nativeSrc": "6072:16:5",
																"nodeType": "YulFunctionCall",
																"src": "6072:16:5"
															},
															"variables": [
																{
																	"name": "end_1",
																	"nativeSrc": "6063:5:5",
																	"nodeType": "YulTypedName",
																	"src": "6063:5:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6097:29:5",
															"nodeType": "YulVariableDeclaration",
															"src": "6097:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6119:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "6119:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6113:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "6113:5:5"
																},
																"nativeSrc": "6113:13:5",
																"nodeType": "YulFunctionCall",
																"src": "6113:13:5"
															},
															"variables": [
																{
																	"name": "length_1",
																	"nativeSrc": "6101:8:5",
																	"nodeType": "YulTypedName",
																	"src": "6101:8:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "6174:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "6174:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6182:4:5",
																				"nodeType": "YulLiteral",
																				"src": "6182:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6170:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6170:3:5"
																		},
																		"nativeSrc": "6170:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6170:17:5"
																	},
																	{
																		"name": "end_1",
																		"nativeSrc": "6189:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "6189:5:5"
																	},
																	{
																		"name": "length_1",
																		"nativeSrc": "6196:8:5",
																		"nodeType": "YulIdentifier",
																		"src": "6196:8:5"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "6135:34:5",
																	"nodeType": "YulIdentifier",
																	"src": "6135:34:5"
																},
																"nativeSrc": "6135:70:5",
																"nodeType": "YulFunctionCall",
																"src": "6135:70:5"
															},
															"nativeSrc": "6135:70:5",
															"nodeType": "YulExpressionStatement",
															"src": "6135:70:5"
														},
														{
															"nativeSrc": "6214:27:5",
															"nodeType": "YulAssignment",
															"src": "6214:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "end_1",
																		"nativeSrc": "6225:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "6225:5:5"
																	},
																	{
																		"name": "length_1",
																		"nativeSrc": "6232:8:5",
																		"nodeType": "YulIdentifier",
																		"src": "6232:8:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6221:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6221:3:5"
																},
																"nativeSrc": "6221:20:5",
																"nodeType": "YulFunctionCall",
																"src": "6221:20:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6214:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6214:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "5751:496:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5906:3:5",
														"nodeType": "YulTypedName",
														"src": "5906:3:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5911:6:5",
														"nodeType": "YulTypedName",
														"src": "5911:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5919:6:5",
														"nodeType": "YulTypedName",
														"src": "5919:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5930:3:5",
														"nodeType": "YulTypedName",
														"src": "5930:3:5",
														"type": ""
													}
												],
												"src": "5751:496:5"
											},
											{
												"body": {
													"nativeSrc": "6299:303:5",
													"nodeType": "YulBlock",
													"src": "6299:303:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "6334:168:5",
																"nodeType": "YulBlock",
																"src": "6334:168:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6355:1:5",
																					"nodeType": "YulLiteral",
																					"src": "6355:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6358:77:5",
																					"nodeType": "YulLiteral",
																					"src": "6358:77:5",
																					"type": "",
																					"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6348:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "6348:6:5"
																			},
																			"nativeSrc": "6348:88:5",
																			"nodeType": "YulFunctionCall",
																			"src": "6348:88:5"
																		},
																		"nativeSrc": "6348:88:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "6348:88:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6456:1:5",
																					"nodeType": "YulLiteral",
																					"src": "6456:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6459:4:5",
																					"nodeType": "YulLiteral",
																					"src": "6459:4:5",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6449:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "6449:6:5"
																			},
																			"nativeSrc": "6449:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "6449:15:5"
																		},
																		"nativeSrc": "6449:15:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "6449:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6484:1:5",
																					"nodeType": "YulLiteral",
																					"src": "6484:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6487:4:5",
																					"nodeType": "YulLiteral",
																					"src": "6487:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6477:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "6477:6:5"
																			},
																			"nativeSrc": "6477:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "6477:15:5"
																		},
																		"nativeSrc": "6477:15:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "6477:15:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6319:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "6319:5:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6312:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6312:6:5"
																},
																"nativeSrc": "6312:13:5",
																"nodeType": "YulFunctionCall",
																"src": "6312:13:5"
															},
															"nativeSrc": "6309:193:5",
															"nodeType": "YulIf",
															"src": "6309:193:5"
														},
														{
															"nativeSrc": "6511:85:5",
															"nodeType": "YulAssignment",
															"src": "6511:85:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6522:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "6522:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6529:66:5",
																		"nodeType": "YulLiteral",
																		"src": "6529:66:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6518:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6518:3:5"
																},
																"nativeSrc": "6518:78:5",
																"nodeType": "YulFunctionCall",
																"src": "6518:78:5"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6511:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6511:3:5"
																}
															]
														}
													]
												},
												"name": "decrement_t_uint256",
												"nativeSrc": "6252:350:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6281:5:5",
														"nodeType": "YulTypedName",
														"src": "6281:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6291:3:5",
														"nodeType": "YulTypedName",
														"src": "6291:3:5",
														"type": ""
													}
												],
												"src": "6252:350:5"
											},
											{
												"body": {
													"nativeSrc": "6810:328:5",
													"nodeType": "YulBlock",
													"src": "6810:328:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6827:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "6827:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "6842:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "6842:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6850:42:5",
																				"nodeType": "YulLiteral",
																				"src": "6850:42:5",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6838:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6838:3:5"
																		},
																		"nativeSrc": "6838:55:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6838:55:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6820:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6820:6:5"
																},
																"nativeSrc": "6820:74:5",
																"nodeType": "YulFunctionCall",
																"src": "6820:74:5"
															},
															"nativeSrc": "6820:74:5",
															"nodeType": "YulExpressionStatement",
															"src": "6820:74:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6914:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "6914:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6925:2:5",
																				"nodeType": "YulLiteral",
																				"src": "6925:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6910:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6910:3:5"
																		},
																		"nativeSrc": "6910:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6910:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "6934:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "6934:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6942:42:5",
																				"nodeType": "YulLiteral",
																				"src": "6942:42:5",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6930:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6930:3:5"
																		},
																		"nativeSrc": "6930:55:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6930:55:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6903:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6903:6:5"
																},
																"nativeSrc": "6903:83:5",
																"nodeType": "YulFunctionCall",
																"src": "6903:83:5"
															},
															"nativeSrc": "6903:83:5",
															"nodeType": "YulExpressionStatement",
															"src": "6903:83:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7006:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "7006:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7017:2:5",
																				"nodeType": "YulLiteral",
																				"src": "7017:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7002:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "7002:3:5"
																		},
																		"nativeSrc": "7002:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7002:18:5"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "7022:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "7022:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6995:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6995:6:5"
																},
																"nativeSrc": "6995:34:5",
																"nodeType": "YulFunctionCall",
																"src": "6995:34:5"
															},
															"nativeSrc": "6995:34:5",
															"nodeType": "YulExpressionStatement",
															"src": "6995:34:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7049:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "7049:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7060:2:5",
																				"nodeType": "YulLiteral",
																				"src": "7060:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7045:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "7045:3:5"
																		},
																		"nativeSrc": "7045:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7045:18:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7065:3:5",
																		"nodeType": "YulLiteral",
																		"src": "7065:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7038:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "7038:6:5"
																},
																"nativeSrc": "7038:31:5",
																"nodeType": "YulFunctionCall",
																"src": "7038:31:5"
															},
															"nativeSrc": "7038:31:5",
															"nodeType": "YulExpressionStatement",
															"src": "7038:31:5"
														},
														{
															"nativeSrc": "7078:54:5",
															"nodeType": "YulAssignment",
															"src": "7078:54:5",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "7104:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "7104:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7116:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "7116:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7127:3:5",
																				"nodeType": "YulLiteral",
																				"src": "7127:3:5",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7112:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "7112:3:5"
																		},
																		"nativeSrc": "7112:19:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7112:19:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "7086:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "7086:17:5"
																},
																"nativeSrc": "7086:46:5",
																"nodeType": "YulFunctionCall",
																"src": "7086:46:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7078:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "7078:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "6607:531:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6755:9:5",
														"nodeType": "YulTypedName",
														"src": "6755:9:5",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "6766:6:5",
														"nodeType": "YulTypedName",
														"src": "6766:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6774:6:5",
														"nodeType": "YulTypedName",
														"src": "6774:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6782:6:5",
														"nodeType": "YulTypedName",
														"src": "6782:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6790:6:5",
														"nodeType": "YulTypedName",
														"src": "6790:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6801:4:5",
														"nodeType": "YulTypedName",
														"src": "6801:4:5",
														"type": ""
													}
												],
												"src": "6607:531:5"
											},
											{
												"body": {
													"nativeSrc": "7223:169:5",
													"nodeType": "YulBlock",
													"src": "7223:169:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "7269:16:5",
																"nodeType": "YulBlock",
																"src": "7269:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7278:1:5",
																					"nodeType": "YulLiteral",
																					"src": "7278:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7281:1:5",
																					"nodeType": "YulLiteral",
																					"src": "7281:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7271:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "7271:6:5"
																			},
																			"nativeSrc": "7271:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "7271:12:5"
																		},
																		"nativeSrc": "7271:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "7271:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7244:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "7244:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7253:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "7253:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7240:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "7240:3:5"
																		},
																		"nativeSrc": "7240:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7240:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7265:2:5",
																		"nodeType": "YulLiteral",
																		"src": "7265:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7236:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7236:3:5"
																},
																"nativeSrc": "7236:32:5",
																"nodeType": "YulFunctionCall",
																"src": "7236:32:5"
															},
															"nativeSrc": "7233:52:5",
															"nodeType": "YulIf",
															"src": "7233:52:5"
														},
														{
															"nativeSrc": "7294:29:5",
															"nodeType": "YulVariableDeclaration",
															"src": "7294:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7313:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "7313:9:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7307:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "7307:5:5"
																},
																"nativeSrc": "7307:16:5",
																"nodeType": "YulFunctionCall",
																"src": "7307:16:5"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "7298:5:5",
																	"nodeType": "YulTypedName",
																	"src": "7298:5:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7356:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "7356:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nativeSrc": "7332:23:5",
																	"nodeType": "YulIdentifier",
																	"src": "7332:23:5"
																},
																"nativeSrc": "7332:30:5",
																"nodeType": "YulFunctionCall",
																"src": "7332:30:5"
															},
															"nativeSrc": "7332:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "7332:30:5"
														},
														{
															"nativeSrc": "7371:15:5",
															"nodeType": "YulAssignment",
															"src": "7371:15:5",
															"value": {
																"name": "value",
																"nativeSrc": "7381:5:5",
																"nodeType": "YulIdentifier",
																"src": "7381:5:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "7371:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "7371:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nativeSrc": "7143:249:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7189:9:5",
														"nodeType": "YulTypedName",
														"src": "7189:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7200:7:5",
														"nodeType": "YulTypedName",
														"src": "7200:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7212:6:5",
														"nodeType": "YulTypedName",
														"src": "7212:6:5",
														"type": ""
													}
												],
												"src": "7143:249:5"
											}
										]
									},
									"contents": "{\n    { }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_1)\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 0x1f), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0), 63), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, length)\n        if gt(add(add(_1, length), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_1, 32), length)\n        mstore(add(add(memPtr, length), 32), 0)\n        value3 := memPtr\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        let length_1 := mload(value1)\n        copy_memory_to_memory_with_cleanup(add(value1, 0x20), end_1, length_1)\n        end := add(end_1, length_1)\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value)\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        ret := add(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_string(value3, add(headStart, 128))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xDD JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x7F JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x231 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x284 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1DC JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x21C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xBB JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x17E JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1B6 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xE2 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x139 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x102 PUSH2 0xFD CALLDATASIZE PUSH1 0x4 PUSH2 0xDD3 JUMP JUMPDEST PUSH2 0x2DA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x123 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12C PUSH2 0x3BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10E SWAP2 SWAP1 PUSH2 0xE5E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x145 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x159 PUSH2 0x154 CALLDATASIZE PUSH1 0x4 PUSH2 0xE71 JUMP JUMPDEST PUSH2 0x451 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10E JUMP JUMPDEST PUSH2 0x191 PUSH2 0x18C CALLDATASIZE PUSH1 0x4 PUSH2 0xEAE JUMP JUMPDEST PUSH2 0x4B2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD SUB JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10E JUMP JUMPDEST PUSH2 0x191 PUSH2 0x1C4 CALLDATASIZE PUSH1 0x4 PUSH2 0xED8 JUMP JUMPDEST PUSH2 0x4C2 JUMP JUMPDEST PUSH2 0x191 PUSH2 0x1D7 CALLDATASIZE PUSH1 0x4 PUSH2 0xED8 JUMP JUMPDEST PUSH2 0x6F7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x159 PUSH2 0x1F7 CALLDATASIZE PUSH1 0x4 PUSH2 0xE71 JUMP JUMPDEST PUSH2 0x717 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x208 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A8 PUSH2 0x217 CALLDATASIZE PUSH1 0x4 PUSH2 0xF15 JUMP JUMPDEST PUSH2 0x722 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x228 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12C PUSH2 0x79B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x191 PUSH2 0x24C CALLDATASIZE PUSH1 0x4 PUSH2 0xF30 JUMP JUMPDEST PUSH2 0x7AA JUMP JUMPDEST PUSH2 0x191 PUSH2 0x25F CALLDATASIZE PUSH1 0x4 PUSH2 0xF9B JUMP JUMPDEST PUSH2 0x841 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x270 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12C PUSH2 0x27F CALLDATASIZE PUSH1 0x4 PUSH2 0xE71 JUMP JUMPDEST PUSH2 0x8A8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x290 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x102 PUSH2 0x29F CALLDATASIZE PUSH1 0x4 PUSH2 0x10BC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND EQ DUP1 PUSH2 0x36D JUMPI POP PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND EQ JUMPDEST DUP1 PUSH2 0x3B9 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x3CE SWAP1 PUSH2 0x10EF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3FA SWAP1 PUSH2 0x10EF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x447 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x41C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x447 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x42A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x45C DUP3 PUSH2 0x949 JUMP JUMPDEST PUSH2 0x489 JUMPI PUSH2 0x489 PUSH32 0xCF4700E400000000000000000000000000000000000000000000000000000000 PUSH2 0x9A7 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0x4BE DUP3 DUP3 PUSH1 0x1 PUSH2 0x9B1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4CD DUP3 PUSH2 0xA9F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP5 DUP6 AND SWAP5 SWAP1 SWAP2 POP DUP2 AND DUP5 EQ PUSH2 0x51A JUMPI PUSH2 0x51A PUSH32 0xA114810000000000000000000000000000000000000000000000000000000000 PUSH2 0x9A7 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD CALLER DUP1 DUP3 EQ PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 AND SWAP1 SWAP2 EQ OR PUSH2 0x584 JUMPI PUSH2 0x557 DUP7 CALLER PUSH2 0x29F JUMP JUMPDEST PUSH2 0x584 JUMPI PUSH2 0x584 PUSH32 0x59C896BE00000000000000000000000000000000000000000000000000000000 PUSH2 0x9A7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x58F JUMPI PUSH1 0x0 DUP3 SSTORE JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD SWAP1 SSTORE SWAP2 DUP8 AND DUP1 DUP3 MSTORE SWAP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE TIMESTAMP PUSH1 0xA0 SHL OR PUSH29 0x200000000000000000000000000000000000000000000000000000000 OR PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH29 0x200000000000000000000000000000000000000000000000000000000 DUP5 AND SWAP1 SUB PUSH2 0x67E JUMPI PUSH1 0x1 DUP5 ADD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x67C JUMPI PUSH1 0x0 SLOAD DUP2 EQ PUSH2 0x67C JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE JUMPDEST POP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND DUP5 DUP2 DUP9 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x0 DUP1 LOG4 DUP1 PUSH1 0x0 SUB PUSH2 0x6EE JUMPI PUSH2 0x6EE PUSH32 0xEA553B3400000000000000000000000000000000000000000000000000000000 PUSH2 0x9A7 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x712 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x841 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B9 DUP3 PUSH2 0xA9F JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x768 JUMPI PUSH2 0x768 PUSH32 0x8F4EB60400000000000000000000000000000000000000000000000000000000 PUSH2 0x9A7 JUMP JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x3CE SWAP1 PUSH2 0x10EF JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x84C DUP5 DUP5 DUP5 PUSH2 0x4C2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND EXTCODESIZE ISZERO PUSH2 0x8A2 JUMPI PUSH2 0x875 DUP5 DUP5 DUP5 DUP5 PUSH2 0xBD0 JUMP JUMPDEST PUSH2 0x8A2 JUMPI PUSH2 0x8A2 PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 PUSH2 0x9A7 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x8B3 DUP3 PUSH2 0x949 JUMP JUMPDEST PUSH2 0x8E0 JUMPI PUSH2 0x8E0 PUSH32 0xA14C4B5000000000000000000000000000000000000000000000000000000000 PUSH2 0x9A7 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8F7 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x917 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x942 JUMP JUMPDEST DUP1 PUSH2 0x921 DUP5 PUSH2 0xD40 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x932 SWAP3 SWAP2 SWAP1 PUSH2 0x1142 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x9A2 JUMPI PUSH1 0x0 JUMPDEST POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 DUP2 SWAP1 SUB PUSH2 0x97F JUMPI PUSH2 0x978 DUP4 PUSH2 0x1171 JUMP JUMPDEST SWAP3 POP PUSH2 0x957 JUMP JUMPDEST PUSH29 0x100000000000000000000000000000000000000000000000000000000 AND ISZERO SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x9BC DUP4 PUSH2 0x717 JUMP JUMPDEST SWAP1 POP DUP2 DUP1 ISZERO PUSH2 0x9E1 JUMPI POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND EQ ISZERO JUMPDEST ISZERO PUSH2 0xA1D JUMPI PUSH2 0x9F0 DUP2 CALLER PUSH2 0x29F JUMP JUMPDEST PUSH2 0xA1D JUMPI PUSH2 0xA1D PUSH32 0xCFB3B94200000000000000000000000000000000000000000000000000000000 PUSH2 0x9A7 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP7 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 LOG4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 DUP2 SWAP1 SUB PUSH2 0xB7B JUMPI PUSH1 0x0 SLOAD DUP3 LT PUSH2 0xAE8 JUMPI PUSH2 0xAE8 PUSH32 0xDF2D9B4200000000000000000000000000000000000000000000000000000000 PUSH2 0x9A7 JUMP JUMPDEST JUMPDEST POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0xAE9 JUMPI PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP2 AND PUSH1 0x0 SUB PUSH2 0xB4D JUMPI SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB76 PUSH32 0xDF2D9B4200000000000000000000000000000000000000000000000000000000 PUSH2 0x9A7 JUMP JUMPDEST PUSH2 0xAE9 JUMP JUMPDEST PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP2 AND PUSH1 0x0 SUB PUSH2 0xBA7 JUMPI SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9A2 PUSH32 0xDF2D9B4200000000000000000000000000000000000000000000000000000000 PUSH2 0x9A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x150B7A0200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xC2B SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x11CD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xC84 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xC81 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1228 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xCF2 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xCB2 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xCB7 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0xCEA JUMPI PUSH2 0xCEA PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 PUSH2 0x9A7 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH32 0x150B7A0200000000000000000000000000000000000000000000000000000000 EQ SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xA0 PUSH1 0x40 MLOAD ADD DUP1 PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 SUB SWAP2 POP POP PUSH1 0x0 DUP2 MSTORE DUP1 DUP3 JUMPDEST PUSH1 0x1 DUP4 SUB SWAP3 POP PUSH1 0xA DUP2 MOD PUSH1 0x30 ADD DUP4 MSTORE8 PUSH1 0xA SWAP1 DIV DUP1 PUSH2 0xD5A JUMPI POP DUP2 SWAP1 SUB PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP1 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP2 EQ PUSH2 0xDD0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x942 DUP2 PUSH2 0xDA2 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xE0B JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xDF3 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xE2C DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xDF0 JUMP JUMPDEST PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x942 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xE14 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE83 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x9A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xECA DUP4 PUSH2 0xE8A JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xEED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEF6 DUP5 PUSH2 0xE8A JUMP JUMPDEST SWAP3 POP PUSH2 0xF04 PUSH1 0x20 DUP6 ADD PUSH2 0xE8A JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF27 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x942 DUP3 PUSH2 0xE8A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF43 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF4C DUP4 PUSH2 0xE8A JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xF61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xFB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFBA DUP6 PUSH2 0xE8A JUMP JUMPDEST SWAP4 POP PUSH2 0xFC8 PUSH1 0x20 DUP7 ADD PUSH2 0xE8A JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xFEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0xFFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1016 JUMPI PUSH2 0x1016 PUSH2 0xF6C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x3F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP6 ADD AND ADD AND DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1082 JUMPI PUSH2 0x1082 PUSH2 0xF6C JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP3 DUP3 ADD PUSH1 0x20 ADD DUP10 LT ISZERO PUSH2 0x109A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP4 DUP4 ADD ADD MSTORE DUP1 SWAP4 POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x10CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10D8 DUP4 PUSH2 0xE8A JUMP JUMPDEST SWAP2 POP PUSH2 0x10E6 PUSH1 0x20 DUP5 ADD PUSH2 0xE8A JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1103 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x113C JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x1154 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0xDF0 JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x1168 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0xDF0 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x11A7 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x121E PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0xE14 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x123A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x942 DUP2 PUSH2 0xDA2 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG0 0xC7 0xCB RETURN SIGNEXTEND PUSH11 0xFE06E21C972CF59B7244D2 0xA7 DUP12 0x1E SWAP10 OR PUSH8 0xAAEEEA184A3F934A COINBASE PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ",
							"sourceMap": "2189:42638:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10458:630;;;;;;;;;;-1:-1:-1;10458:630:1;;;;;:::i;:::-;;:::i;:::-;;;611:14:5;;604:22;586:41;;574:2;559:18;10458:630:1;;;;;;;;11342:98;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;18205:223::-;;;;;;;;;;-1:-1:-1;18205:223:1;;;;;:::i;:::-;;:::i;:::-;;;1860:42:5;1848:55;;;1830:74;;1818:2;1803:18;18205:223:1;1684:226:5;17933:122:1;;;;;;:::i;:::-;;:::i;:::-;;7188:317;;;;;;;;;;-1:-1:-1;7458:12:1;;7249:7;7442:13;:28;7188:317;;;2567:25:5;;;2555:2;2540:18;7188:317:1;2421:177:5;21840:3447:1;;;;;;:::i;:::-;;:::i;25378:187::-;;;;;;:::i;:::-;;:::i;12703:150::-;;;;;;;;;;-1:-1:-1;12703:150:1;;;;;:::i;:::-;;:::i;8339:239::-;;;;;;;;;;-1:-1:-1;8339:239:1;;;;;:::i;:::-;;:::i;11511:102::-;;;;;;;;;;;;;:::i;18755:231::-;;;;;;;;;;-1:-1:-1;18755:231:1;;;;;:::i;:::-;;:::i;26146:405::-;;;;;;:::i;:::-;;:::i;11714:322::-;;;;;;;;;;-1:-1:-1;11714:322:1;;;;;:::i;:::-;;:::i;19136:162::-;;;;;;;;;;-1:-1:-1;19136:162:1;;;;;:::i;:::-;19256:25;;;;19233:4;19256:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;19136:162;10458:630;10543:4;10861:25;;;;;;:101;;-1:-1:-1;10937:25:1;;;;;10861:101;:177;;;-1:-1:-1;11013:25:1;;;;;10861:177;10842:196;10458:630;-1:-1:-1;;10458:630:1:o;11342:98::-;11396:13;11428:5;11421:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11342:98;:::o;18205:223::-;18281:7;18305:16;18313:7;18305;:16::i;:::-;18300:73;;18323:50;18331:41;18323:7;:50::i;:::-;-1:-1:-1;18391:24:1;;;;:15;:24;;;;;:30;;;;18205:223::o;17933:122::-;18021:27;18030:2;18034:7;18043:4;18021:8;:27::i;:::-;17933:122;;:::o;21840:3447::-;21977:27;22007;22026:7;22007:18;:27::i;:::-;4079:14;22159:22;;;;21977:57;;-1:-1:-1;22217:45:1;;;;22213:95;;22264:44;22272:35;22264:7;:44::i;:::-;22320:27;20973:24;;;:15;:24;;;;;21197:26;;42781:10;20610:30;;;20318:16;20307:28;;20588:20;;;20585:56;22503:188;;22595:43;22612:4;42781:10;19136:162;:::i;22595:43::-;22590:101;;22640:51;22648:42;22640:7;:51::i;:::-;22834:15;22831:157;;;22972:1;22951:19;22944:30;22831:157;23360:24;;;;;;;;:18;:24;;;;;;23358:26;;;;;;23428:22;;;;;;;;;23426:24;;-1:-1:-1;23426:24:1;;;17061:11;17036:23;17032:41;17019:63;3686:8;17019:63;23714:26;;;;:17;:26;;;;;:172;;;;3686:8;24003:47;;:52;;23999:617;;24107:1;24097:11;;24075:19;24228:30;;;:17;:30;;;;;;:35;;24224:378;;24364:13;;24349:11;:28;24345:239;;24509:30;;;;:17;:30;;;;;:52;;;24345:239;24057:559;23999:617;4079:14;24744:20;;25115:7;24744:20;25047:4;24990:25;24725:16;;24858:292;25173:8;25185:1;25173:13;25169:58;;25188:39;25196:30;25188:7;:39::i;:::-;21967:3320;;;;21840:3447;;;:::o;25378:187::-;25519:39;25536:4;25542:2;25546:7;25519:39;;;;;;;;;;;;:16;:39::i;:::-;25378:187;;;:::o;12703:150::-;12775:7;12817:27;12836:7;12817:18;:27::i;8339:239::-;8411:7;8434:19;;;8430:69;;8455:44;8463:35;8455:7;:44::i;:::-;-1:-1:-1;8516:25:1;;;;;;:18;:25;;;;;;2654:13;8516:55;;8339:239::o;11511:102::-;11567:13;11599:7;11592:14;;;;;:::i;18755:231::-;42781:10;18849:39;;;;:18;:39;;;;;;;;;:49;;;;;;;;;;;;:60;;;;;;;;;;;;;18924:55;;586:41:5;;;18849:49:1;;42781:10;18924:55;;559:18:5;18924:55:1;;;;;;;18755:231;;:::o;26146:405::-;26315:31;26328:4;26334:2;26338:7;26315:12;:31::i;:::-;26360:14;;;;:19;26356:189;;26398:56;26429:4;26435:2;26439:7;26448:5;26398:30;:56::i;:::-;26393:152;;26474:56;26482:47;26474:7;:56::i;:::-;26146:405;;;;:::o;11714:322::-;11787:13;11817:16;11825:7;11817;:16::i;:::-;11812:68;;11835:45;11843:36;11835:7;:45::i;:::-;11891:21;11915:10;12357:9;;;;;;;;;-1:-1:-1;12357:9:1;;;12281:92;11915:10;11891:34;;11948:7;11942:21;11967:1;11942:26;:87;;;;;;;;;;;;;;;;;11995:7;12004:18;12014:7;12004:9;:18::i;:::-;11978:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;11942:87;11935:94;11714:322;-1:-1:-1;;;11714:322:1:o;19547:360::-;19612:11;19695:13;;19685:7;:23;19681:210;;;19728:14;19760:60;-1:-1:-1;19777:26:1;;;;:17;:26;;;;;;;19767:42;;;19760:60;;19811:9;;;:::i;:::-;;;19760:60;;;3412:8;19847:24;:29;;-1:-1:-1;19681:210:1;19547:360;;;:::o;44665:160::-;44764:13;44758:4;44751:27;44804:4;44798;44791:18;36313:460;36437:13;36453:16;36461:7;36453;:16::i;:::-;36437:32;;36484:13;:45;;;;-1:-1:-1;42781:10:1;36501:28;;;;;36484:45;36480:198;;;36548:44;36565:5;42781:10;19136:162;:::i;36548:44::-;36543:135;;36612:51;36620:42;36612:7;:51::i;:::-;36688:24;;;;:15;:24;;;;;;:35;;;;;;;;;;;;;;36738:28;;36688:24;;36738:28;;;;;;;36427:346;36313:460;;;:::o;14144:1978::-;14292:26;;;;:17;:26;;;;;;;14416:11;;;14412:1270;;14462:13;;14451:7;:24;14447:77;;14477:47;14485:38;14477:7;:47::i;:::-;15071:597;-1:-1:-1;15165:9:1;;15147:28;;;;:17;:28;;;;;;15219:25;;15071:597;15219:25;3412:8;15270:6;:24;15298:1;15270:29;15266:48;;14144:1978;;;:::o;15266:48::-;15602:47;15610:38;15602:7;:47::i;:::-;15071:597;;14412:1270;3412:8;16004:6;:24;16032:1;16004:29;16000:48;;14144:1978;;;:::o;16000:48::-;16068:47;16076:38;16068:7;:47::i;28577:673::-;28755:88;;;;;28735:4;;28755:45;;;;;;:88;;42781:10;;28822:4;;28828:7;;28837:5;;28755:88;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;28755:88:1;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;28751:493;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;29033:6;:13;29050:1;29033:18;29029:113;;29071:56;29079:47;29071:7;:56::i;:::-;29212:6;29206:13;29197:6;29193:2;29189:15;29182:38;28751:493;28911:64;;28921:54;28911:64;;-1:-1:-1;28577:673:1;;;;;;:::o;42895:1708::-;42960:17;43388:4;43381;43375:11;43371:22;43478:1;43472:4;43465:15;43551:4;43548:1;43544:12;43537:19;;;43631:1;43626:3;43619:14;43732:3;43966:5;43948:419;44013:1;44008:3;44004:11;43997:18;;44181:2;44175:4;44171:13;44167:2;44163:22;44158:3;44150:36;44273:2;44263:13;;44328:25;43948:419;44328:25;-1:-1:-1;44395:13:1;;;44508:14;;;;44568:19;;;44508:14;42895:1708;-1:-1:-1;42895:1708:1:o;14:177:5:-;99:66;92:5;88:78;81:5;78:89;68:117;;181:1;178;171:12;68:117;14:177;:::o;196:245::-;254:6;307:2;295:9;286:7;282:23;278:32;275:52;;;323:1;320;313:12;275:52;362:9;349:23;381:30;405:5;381:30;:::i;638:250::-;723:1;733:113;747:6;744:1;741:13;733:113;;;823:11;;;817:18;804:11;;;797:39;769:2;762:10;733:113;;;-1:-1:-1;;880:1:5;862:16;;855:27;638:250::o;893:330::-;935:3;973:5;967:12;1000:6;995:3;988:19;1016:76;1085:6;1078:4;1073:3;1069:14;1062:4;1055:5;1051:16;1016:76;:::i;:::-;1137:2;1125:15;1142:66;1121:88;1112:98;;;;1212:4;1108:109;;893:330;-1:-1:-1;;893:330:5:o;1228:220::-;1377:2;1366:9;1359:21;1340:4;1397:45;1438:2;1427:9;1423:18;1415:6;1397:45;:::i;1453:226::-;1512:6;1565:2;1553:9;1544:7;1540:23;1536:32;1533:52;;;1581:1;1578;1571:12;1533:52;-1:-1:-1;1626:23:5;;1453:226;-1:-1:-1;1453:226:5:o;1915:196::-;1983:20;;2043:42;2032:54;;2022:65;;2012:93;;2101:1;2098;2091:12;2116:300;2184:6;2192;2245:2;2233:9;2224:7;2220:23;2216:32;2213:52;;;2261:1;2258;2251:12;2213:52;2284:29;2303:9;2284:29;:::i;:::-;2274:39;2382:2;2367:18;;;;2354:32;;-1:-1:-1;;;2116:300:5:o;2603:374::-;2680:6;2688;2696;2749:2;2737:9;2728:7;2724:23;2720:32;2717:52;;;2765:1;2762;2755:12;2717:52;2788:29;2807:9;2788:29;:::i;:::-;2778:39;;2836:38;2870:2;2859:9;2855:18;2836:38;:::i;:::-;2603:374;;2826:48;;-1:-1:-1;;;2943:2:5;2928:18;;;;2915:32;;2603:374::o;2982:186::-;3041:6;3094:2;3082:9;3073:7;3069:23;3065:32;3062:52;;;3110:1;3107;3100:12;3062:52;3133:29;3152:9;3133:29;:::i;3173:347::-;3238:6;3246;3299:2;3287:9;3278:7;3274:23;3270:32;3267:52;;;3315:1;3312;3305:12;3267:52;3338:29;3357:9;3338:29;:::i;:::-;3328:39;;3417:2;3406:9;3402:18;3389:32;3464:5;3457:13;3450:21;3443:5;3440:32;3430:60;;3486:1;3483;3476:12;3430:60;3509:5;3499:15;;;3173:347;;;;;:::o;3525:184::-;3577:77;3574:1;3567:88;3674:4;3671:1;3664:15;3698:4;3695:1;3688:15;3714:1325;3809:6;3817;3825;3833;3886:3;3874:9;3865:7;3861:23;3857:33;3854:53;;;3903:1;3900;3893:12;3854:53;3926:29;3945:9;3926:29;:::i;:::-;3916:39;;3974:38;4008:2;3997:9;3993:18;3974:38;:::i;:::-;3964:48;-1:-1:-1;4081:2:5;4066:18;;4053:32;;-1:-1:-1;4160:2:5;4145:18;;4132:32;4187:18;4176:30;;4173:50;;;4219:1;4216;4209:12;4173:50;4242:22;;4295:4;4287:13;;4283:27;-1:-1:-1;4273:55:5;;4324:1;4321;4314:12;4273:55;4364:2;4351:16;4390:18;4382:6;4379:30;4376:56;;;4412:18;;:::i;:::-;4461:2;4455:9;4608:66;4603:2;4534:66;4527:4;4519:6;4515:17;4511:90;4507:99;4503:172;4495:6;4491:185;4742:6;4730:10;4727:22;4706:18;4694:10;4691:34;4688:62;4685:88;;;4753:18;;:::i;:::-;4789:2;4782:22;4813;;;4854:15;;;4871:2;4850:24;4847:37;-1:-1:-1;4844:57:5;;;4897:1;4894;4887:12;4844:57;4953:6;4948:2;4944;4940:11;4935:2;4927:6;4923:15;4910:50;5006:1;5001:2;4992:6;4984;4980:19;4976:28;4969:39;5027:6;5017:16;;;;;3714:1325;;;;;;;:::o;5044:260::-;5112:6;5120;5173:2;5161:9;5152:7;5148:23;5144:32;5141:52;;;5189:1;5186;5179:12;5141:52;5212:29;5231:9;5212:29;:::i;:::-;5202:39;;5260:38;5294:2;5283:9;5279:18;5260:38;:::i;:::-;5250:48;;5044:260;;;;;:::o;5309:437::-;5388:1;5384:12;;;;5431;;;5452:61;;5506:4;5498:6;5494:17;5484:27;;5452:61;5559:2;5551:6;5548:14;5528:18;5525:38;5522:218;;5596:77;5593:1;5586:88;5697:4;5694:1;5687:15;5725:4;5722:1;5715:15;5522:218;;5309:437;;;:::o;5751:496::-;5930:3;5968:6;5962:13;5984:66;6043:6;6038:3;6031:4;6023:6;6019:17;5984:66;:::i;:::-;6113:13;;6072:16;;;;6135:70;6113:13;6072:16;6182:4;6170:17;;6135:70;:::i;:::-;6221:20;;5751:496;-1:-1:-1;;;;5751:496:5:o;6252:350::-;6291:3;6319:5;6309:193;;6358:77;6355:1;6348:88;6459:4;6456:1;6449:15;6487:4;6484:1;6477:15;6309:193;-1:-1:-1;6529:66:5;6518:78;;6252:350::o;6607:531::-;6850:42;6842:6;6838:55;6827:9;6820:74;6942:42;6934:6;6930:55;6925:2;6914:9;6910:18;6903:83;7022:6;7017:2;7006:9;7002:18;6995:34;7065:3;7060:2;7049:9;7045:18;7038:31;6801:4;7086:46;7127:3;7116:9;7112:19;7104:6;7086:46;:::i;:::-;7078:54;6607:531;-1:-1:-1;;;;;;6607:531:5:o;7143:249::-;7212:6;7265:2;7253:9;7244:7;7240:23;7236:32;7233:52;;;7281:1;7278;7271:12;7233:52;7313:9;7307:16;7332:30;7356:5;7332:30;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "946200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "1304",
								"getApproved(uint256)": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"name()": "infinite",
								"ownerOf(uint256)": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "23180",
								"supportsInterface(bytes4)": "456",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"totalSupply()": "1832",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfers(address,address,uint256,uint256)": "infinite",
								"_approve(address,uint256)": "infinite",
								"_approve(address,uint256,bool)": "infinite",
								"_baseURI()": "infinite",
								"_beforeTokenTransfers(address,address,uint256,uint256)": "infinite",
								"_burn(uint256)": "infinite",
								"_burn(uint256,bool)": "infinite",
								"_checkContractOnERC721Received(address,address,uint256,bytes memory)": "infinite",
								"_exists(uint256)": "infinite",
								"_extraData(address,address,uint24)": "infinite",
								"_getApprovedSlotAndAddress(uint256)": "infinite",
								"_getAux(address)": "infinite",
								"_initializeOwnershipAt(uint256)": "infinite",
								"_isSenderApprovedOrOwner(address,address,address)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_mintERC2309(address,uint256)": "infinite",
								"_msgSenderERC721A()": "infinite",
								"_nextExtraData(address,address,uint256)": "infinite",
								"_nextInitializedFlag(uint256)": "infinite",
								"_nextTokenId()": "infinite",
								"_numberBurned(address)": "infinite",
								"_numberMinted(address)": "infinite",
								"_ownershipAt(uint256)": "infinite",
								"_ownershipIsInitialized(uint256)": "infinite",
								"_ownershipOf(uint256)": "infinite",
								"_packOwnershipData(address,uint256)": "infinite",
								"_packedOwnershipOf(uint256)": "infinite",
								"_revert(bytes4)": "19",
								"_safeMint(address,uint256)": "infinite",
								"_safeMint(address,uint256,bytes memory)": "infinite",
								"_setAux(address,uint64)": "infinite",
								"_setExtraDataAt(uint256,uint24)": "infinite",
								"_startTokenId()": "infinite",
								"_toString(uint256)": "infinite",
								"_totalBurned()": "infinite",
								"_totalMinted()": "infinite",
								"_unpackedOwnership(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 2189,
									"end": 44827,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 2189,
									"end": 44827,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2189,
									"end": 44827,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6240,
									"end": 6394,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 6240,
									"end": 6394,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6240,
									"end": 6394,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 6240,
									"end": 6394,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 6240,
									"end": 6394,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6240,
									"end": 6394,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6240,
									"end": 6394,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6240,
									"end": 6394,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 6240,
									"end": 6394,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 6240,
									"end": 6394,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6240,
									"end": 6394,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6240,
									"end": 6394,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6240,
									"end": 6394,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 6240,
									"end": 6394,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 6240,
									"end": 6394,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 6240,
									"end": 6394,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 6240,
									"end": 6394,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6240,
									"end": 6394,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 6240,
									"end": 6394,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6240,
									"end": 6394,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 6240,
									"end": 6394,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6240,
									"end": 6394,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6240,
									"end": 6394,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6240,
									"end": 6394,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6240,
									"end": 6394,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6240,
									"end": 6394,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6240,
									"end": 6394,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 6240,
									"end": 6394,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6240,
									"end": 6394,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 6240,
									"end": 6394,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6240,
									"end": 6394,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 6240,
									"end": 6394,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6306,
									"end": 6311,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 6306,
									"end": 6319,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 6314,
									"end": 6319,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6306,
									"end": 6311,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6306,
									"end": 6319,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 6306,
									"end": 6319,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6306,
									"end": 6319,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 6306,
									"end": 6319,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6329,
									"end": 6336,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 6329,
									"end": 6346,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 6339,
									"end": 6346,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6329,
									"end": 6336,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6329,
									"end": 6346,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 6329,
									"end": 6346,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6329,
									"end": 6346,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 6329,
									"end": 6346,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6776,
									"end": 6783,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6356,
									"end": 6387,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6356,
									"end": 6387,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2189,
									"end": 44827,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 2189,
									"end": 44827,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 5,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 146,
									"end": 980,
									"name": "tag",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 146,
									"end": 980,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 200,
									"end": 205,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 256,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 246,
									"end": 250,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 238,
									"end": 244,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 234,
									"end": 251,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 230,
									"end": 257,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 220,
									"end": 275,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 271,
									"end": 272,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 269,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 261,
									"end": 273,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 220,
									"end": 275,
									"name": "tag",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 298,
									"end": 311,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 298,
									"end": 311,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 323,
									"end": 353,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 323,
									"end": 353,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 320,
									"end": 376,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 320,
									"end": 376,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 320,
									"end": 376,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 356,
									"end": 374,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 356,
									"end": 374,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 356,
									"end": 374,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 356,
									"end": 374,
									"name": "tag",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 356,
									"end": 374,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 405,
									"end": 407,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 399,
									"end": 408,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 497,
									"end": 499,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 459,
									"end": 476,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 459,
									"end": 476,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 455,
									"end": 486,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 455,
									"end": 486,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 455,
									"end": 486,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 488,
									"end": 490,
									"name": "PUSH",
									"source": 5,
									"value": "3F"
								},
								{
									"begin": 451,
									"end": 491,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 447,
									"end": 501,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 435,
									"end": 502,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 435,
									"end": 502,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 517,
									"end": 551,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 517,
									"end": 551,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 553,
									"end": 575,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 553,
									"end": 575,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 553,
									"end": 575,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 514,
									"end": 576,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 511,
									"end": 599,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 511,
									"end": 599,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "26"
								},
								{
									"begin": 511,
									"end": 599,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 579,
									"end": 597,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "26"
								},
								{
									"begin": 579,
									"end": 597,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 579,
									"end": 597,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 579,
									"end": 597,
									"name": "tag",
									"source": 5,
									"value": "26"
								},
								{
									"begin": 579,
									"end": 597,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 615,
									"end": 617,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 608,
									"end": 630,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 639,
									"end": 661,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 639,
									"end": 661,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 639,
									"end": 661,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 680,
									"end": 699,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 680,
									"end": 699,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 680,
									"end": 699,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 701,
									"end": 705,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 676,
									"end": 706,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 673,
									"end": 712,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 670,
									"end": 729,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 670,
									"end": 729,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "27"
								},
								{
									"begin": 670,
									"end": 729,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 725,
									"end": 726,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 722,
									"end": 723,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 715,
									"end": 727,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 670,
									"end": 729,
									"name": "tag",
									"source": 5,
									"value": "27"
								},
								{
									"begin": 670,
									"end": 729,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 747,
									"end": 748,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 757,
									"end": 900,
									"name": "tag",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 757,
									"end": 900,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 771,
									"end": 777,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 768,
									"end": 769,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 765,
									"end": 778,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 757,
									"end": 900,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 757,
									"end": 900,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 757,
									"end": 900,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 883,
									"end": 887,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 867,
									"end": 881,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 867,
									"end": 881,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 867,
									"end": 881,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 863,
									"end": 888,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 863,
									"end": 888,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 857,
									"end": 889,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 834,
									"end": 848,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 834,
									"end": 848,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 834,
									"end": 848,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 830,
									"end": 855,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 830,
									"end": 855,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 823,
									"end": 890,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 786,
									"end": 798,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 757,
									"end": 900,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 757,
									"end": 900,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 757,
									"end": 900,
									"name": "tag",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 757,
									"end": 900,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 948,
									"end": 949,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 920,
									"end": 939,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 920,
									"end": 939,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 920,
									"end": 939,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 941,
									"end": 945,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 916,
									"end": 946,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 909,
									"end": 950,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 909,
									"end": 950,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 909,
									"end": 950,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 909,
									"end": 950,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 924,
									"end": 930,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 146,
									"end": 980,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 146,
									"end": 980,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 985,
									"end": 1542,
									"name": "tag",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 985,
									"end": 1542,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1084,
									"end": 1090,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1092,
									"end": 1098,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1145,
									"end": 1147,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1133,
									"end": 1142,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1124,
									"end": 1131,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1120,
									"end": 1143,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 1116,
									"end": 1148,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 1113,
									"end": 1165,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1113,
									"end": 1165,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 1113,
									"end": 1165,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1161,
									"end": 1162,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1158,
									"end": 1159,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1151,
									"end": 1163,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1113,
									"end": 1165,
									"name": "tag",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 1113,
									"end": 1165,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1188,
									"end": 1204,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1188,
									"end": 1204,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1216,
									"end": 1246,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1216,
									"end": 1246,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 1213,
									"end": 1263,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1213,
									"end": 1263,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "33"
								},
								{
									"begin": 1213,
									"end": 1263,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1259,
									"end": 1260,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1256,
									"end": 1257,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1249,
									"end": 1261,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1213,
									"end": 1263,
									"name": "tag",
									"source": 5,
									"value": "33"
								},
								{
									"begin": 1213,
									"end": 1263,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1282,
									"end": 1343,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "34"
								},
								{
									"begin": 1335,
									"end": 1342,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1326,
									"end": 1332,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1315,
									"end": 1324,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 1311,
									"end": 1333,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1282,
									"end": 1343,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 1282,
									"end": 1343,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1282,
									"end": 1343,
									"name": "tag",
									"source": 5,
									"value": "34"
								},
								{
									"begin": 1282,
									"end": 1343,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1389,
									"end": 1391,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1374,
									"end": 1392,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1374,
									"end": 1392,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1368,
									"end": 1393,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1272,
									"end": 1343,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1272,
									"end": 1343,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1368,
									"end": 1393,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1405,
									"end": 1437,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1405,
									"end": 1437,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 1402,
									"end": 1454,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1402,
									"end": 1454,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "35"
								},
								{
									"begin": 1402,
									"end": 1454,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1450,
									"end": 1451,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1447,
									"end": 1448,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1440,
									"end": 1452,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1402,
									"end": 1454,
									"name": "tag",
									"source": 5,
									"value": "35"
								},
								{
									"begin": 1402,
									"end": 1454,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1473,
									"end": 1536,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 1528,
									"end": 1535,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1517,
									"end": 1525,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1506,
									"end": 1515,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 1502,
									"end": 1526,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1473,
									"end": 1536,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 1473,
									"end": 1536,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1473,
									"end": 1536,
									"name": "tag",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 1473,
									"end": 1536,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1463,
									"end": 1536,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1463,
									"end": 1536,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1463,
									"end": 1536,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 985,
									"end": 1542,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 985,
									"end": 1542,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 985,
									"end": 1542,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 985,
									"end": 1542,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 985,
									"end": 1542,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 985,
									"end": 1542,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1547,
									"end": 1927,
									"name": "tag",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 1547,
									"end": 1927,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1626,
									"end": 1627,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1622,
									"end": 1634,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1622,
									"end": 1634,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1622,
									"end": 1634,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 1622,
									"end": 1634,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1669,
									"end": 1681,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1669,
									"end": 1681,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1669,
									"end": 1681,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1690,
									"end": 1751,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "38"
								},
								{
									"begin": 1690,
									"end": 1751,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1744,
									"end": 1748,
									"name": "PUSH",
									"source": 5,
									"value": "7F"
								},
								{
									"begin": 1736,
									"end": 1742,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1732,
									"end": 1749,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1722,
									"end": 1749,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1722,
									"end": 1749,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1690,
									"end": 1751,
									"name": "tag",
									"source": 5,
									"value": "38"
								},
								{
									"begin": 1690,
									"end": 1751,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1797,
									"end": 1799,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1789,
									"end": 1795,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1786,
									"end": 1800,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 1766,
									"end": 1784,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1763,
									"end": 1801,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 1760,
									"end": 1921,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 1760,
									"end": 1921,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1843,
									"end": 1853,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B71"
								},
								{
									"begin": 1838,
									"end": 1841,
									"name": "PUSH",
									"source": 5,
									"value": "E0"
								},
								{
									"begin": 1834,
									"end": 1854,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 1831,
									"end": 1832,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1824,
									"end": 1855,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1878,
									"end": 1882,
									"name": "PUSH",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 1875,
									"end": 1876,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 1868,
									"end": 1883,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1906,
									"end": 1910,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 1903,
									"end": 1904,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1896,
									"end": 1911,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1760,
									"end": 1921,
									"name": "tag",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 1760,
									"end": 1921,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1760,
									"end": 1921,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1547,
									"end": 1927,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1547,
									"end": 1927,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1547,
									"end": 1927,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1547,
									"end": 1927,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2058,
									"end": 2576,
									"name": "tag",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 2058,
									"end": 2576,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2160,
									"end": 2162,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 2155,
									"end": 2158,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2152,
									"end": 2163,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 2149,
									"end": 2570,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2149,
									"end": 2570,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "42"
								},
								{
									"begin": 2149,
									"end": 2570,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2196,
									"end": 2201,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2193,
									"end": 2194,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2186,
									"end": 2202,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2240,
									"end": 2244,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2237,
									"end": 2238,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2227,
									"end": 2245,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 2310,
									"end": 2312,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 2298,
									"end": 2308,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2294,
									"end": 2313,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2291,
									"end": 2292,
									"name": "PUSH",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 2287,
									"end": 2314,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 2281,
									"end": 2285,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2277,
									"end": 2315,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2346,
									"end": 2350,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2334,
									"end": 2344,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 2331,
									"end": 2351,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 2328,
									"end": 2375,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2328,
									"end": 2375,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "43"
								},
								{
									"begin": 2328,
									"end": 2375,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2369,
									"end": 2373,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2328,
									"end": 2375,
									"name": "tag",
									"source": 5,
									"value": "43"
								},
								{
									"begin": 2328,
									"end": 2375,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2424,
									"end": 2426,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 2419,
									"end": 2422,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2415,
									"end": 2427,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2412,
									"end": 2413,
									"name": "PUSH",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 2408,
									"end": 2428,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 2402,
									"end": 2406,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2398,
									"end": 2429,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2388,
									"end": 2429,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2388,
									"end": 2429,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2479,
									"end": 2560,
									"name": "tag",
									"source": 5,
									"value": "44"
								},
								{
									"begin": 2479,
									"end": 2560,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2497,
									"end": 2499,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2490,
									"end": 2495,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2487,
									"end": 2500,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 2479,
									"end": 2560,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2479,
									"end": 2560,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "46"
								},
								{
									"begin": 2479,
									"end": 2560,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2556,
									"end": 2557,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2542,
									"end": 2558,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2542,
									"end": 2558,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 2523,
									"end": 2524,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 2512,
									"end": 2525,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2479,
									"end": 2560,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "44"
								},
								{
									"begin": 2479,
									"end": 2560,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2479,
									"end": 2560,
									"name": "tag",
									"source": 5,
									"value": "46"
								},
								{
									"begin": 2479,
									"end": 2560,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2483,
									"end": 2486,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2483,
									"end": 2486,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2149,
									"end": 2570,
									"name": "tag",
									"source": 5,
									"value": "42"
								},
								{
									"begin": 2149,
									"end": 2570,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2058,
									"end": 2576,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2058,
									"end": 2576,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2058,
									"end": 2576,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2058,
									"end": 2576,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2752,
									"end": 4051,
									"name": "tag",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 2752,
									"end": 4051,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2872,
									"end": 2882,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2872,
									"end": 2882,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2894,
									"end": 2924,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2894,
									"end": 2924,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 2891,
									"end": 2947,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2891,
									"end": 2947,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "50"
								},
								{
									"begin": 2891,
									"end": 2947,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2927,
									"end": 2945,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "50"
								},
								{
									"begin": 2927,
									"end": 2945,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 2927,
									"end": 2945,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2927,
									"end": 2945,
									"name": "tag",
									"source": 5,
									"value": "50"
								},
								{
									"begin": 2927,
									"end": 2945,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2956,
									"end": 3053,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "51"
								},
								{
									"begin": 3046,
									"end": 3052,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3006,
									"end": 3044,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "52"
								},
								{
									"begin": 3038,
									"end": 3042,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 3032,
									"end": 3043,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 3006,
									"end": 3044,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 3006,
									"end": 3044,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3006,
									"end": 3044,
									"name": "tag",
									"source": 5,
									"value": "52"
								},
								{
									"begin": 3006,
									"end": 3044,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3000,
									"end": 3004,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2956,
									"end": 3053,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 2956,
									"end": 3053,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2956,
									"end": 3053,
									"name": "tag",
									"source": 5,
									"value": "51"
								},
								{
									"begin": 2956,
									"end": 3053,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3102,
									"end": 3106,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 3133,
									"end": 3135,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 3122,
									"end": 3136,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3122,
									"end": 3136,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 3150,
									"end": 3151,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 3145,
									"end": 3794,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3145,
									"end": 3794,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 3145,
									"end": 3794,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "54"
								},
								{
									"begin": 3145,
									"end": 3794,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 3838,
									"end": 3839,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3855,
									"end": 3861,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 3852,
									"end": 3941,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 3852,
									"end": 3941,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "55"
								},
								{
									"begin": 3852,
									"end": 3941,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3907,
									"end": 3926,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 3907,
									"end": 3926,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3907,
									"end": 3926,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3901,
									"end": 3927,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 3852,
									"end": 3941,
									"name": "tag",
									"source": 5,
									"value": "55"
								},
								{
									"begin": 3852,
									"end": 3941,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2709,
									"end": 2710,
									"name": "PUSH",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 2705,
									"end": 2716,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 2705,
									"end": 2716,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2705,
									"end": 2716,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 2701,
									"end": 2725,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 2697,
									"end": 2726,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 2687,
									"end": 2727,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 2733,
									"end": 2734,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 2729,
									"end": 2740,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2729,
									"end": 2740,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2729,
									"end": 2740,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 2684,
									"end": 2741,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 3954,
									"end": 4035,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 3954,
									"end": 4035,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 3115,
									"end": 4045,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "46"
								},
								{
									"begin": 3115,
									"end": 4045,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3145,
									"end": 3794,
									"name": "tag",
									"source": 5,
									"value": "54"
								},
								{
									"begin": 3145,
									"end": 3794,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2005,
									"end": 2006,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1998,
									"end": 2012,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1998,
									"end": 2012,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1998,
									"end": 2012,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2042,
									"end": 2046,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2029,
									"end": 2047,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2029,
									"end": 2047,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3181,
									"end": 3201,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 3181,
									"end": 3201,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 3181,
									"end": 3201,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 3299,
									"end": 3521,
									"name": "tag",
									"source": 5,
									"value": "58"
								},
								{
									"begin": 3299,
									"end": 3521,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3313,
									"end": 3320,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3310,
									"end": 3311,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3307,
									"end": 3321,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 3299,
									"end": 3521,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 3299,
									"end": 3521,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "60"
								},
								{
									"begin": 3299,
									"end": 3521,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 3395,
									"end": 3414,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 3395,
									"end": 3414,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 3395,
									"end": 3414,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3389,
									"end": 3415,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 3374,
									"end": 3416,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3374,
									"end": 3416,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 3502,
									"end": 3506,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 3487,
									"end": 3507,
									"name": "SWAP5",
									"source": 5
								},
								{
									"begin": 3487,
									"end": 3507,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 3487,
									"end": 3507,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3487,
									"end": 3507,
									"name": "SWAP5",
									"source": 5
								},
								{
									"begin": 3455,
									"end": 3456,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 3443,
									"end": 3457,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3443,
									"end": 3457,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 3443,
									"end": 3457,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3443,
									"end": 3457,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 3329,
									"end": 3341,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3299,
									"end": 3521,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "58"
								},
								{
									"begin": 3299,
									"end": 3521,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3299,
									"end": 3521,
									"name": "tag",
									"source": 5,
									"value": "60"
								},
								{
									"begin": 3299,
									"end": 3521,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3303,
									"end": 3306,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3549,
									"end": 3555,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 3540,
									"end": 3547,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3537,
									"end": 3556,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 3534,
									"end": 3735,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 3534,
									"end": 3735,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "61"
								},
								{
									"begin": 3534,
									"end": 3735,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 3610,
									"end": 3629,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 3610,
									"end": 3629,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 3610,
									"end": 3629,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3604,
									"end": 3630,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3693,
									"end": 3694,
									"name": "PUSH",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 3689,
									"end": 3703,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 3689,
									"end": 3703,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3689,
									"end": 3703,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 3705,
									"end": 3708,
									"name": "PUSH",
									"source": 5,
									"value": "F8"
								},
								{
									"begin": 3685,
									"end": 3709,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 3681,
									"end": 3718,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 3677,
									"end": 3719,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 3662,
									"end": 3720,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 3647,
									"end": 3721,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3647,
									"end": 3721,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 3534,
									"end": 3735,
									"name": "tag",
									"source": 5,
									"value": "61"
								},
								{
									"begin": 3534,
									"end": 3735,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3781,
									"end": 3782,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 3765,
									"end": 3779,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3765,
									"end": 3779,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3765,
									"end": 3779,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 3761,
									"end": 3783,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3748,
									"end": 3784,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3748,
									"end": 3784,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2752,
									"end": 4051,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2752,
									"end": 4051,
									"name": "tag",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 2752,
									"end": 4051,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2189,
									"end": 44827,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2189,
									"end": 44827,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2189,
									"end": 44827,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2189,
									"end": 44827,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2189,
									"end": 44827,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 2189,
									"end": 44827,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2189,
									"end": 44827,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a0c7cbf30b6afe06e21c972cf59b7244d2a78b1e991767aaeeea184a3f934a4164736f6c634300081b0033",
									".code": [
										{
											"begin": 2189,
											"end": 44827,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "PUSH",
											"source": 1,
											"value": "6352211E"
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "PUSH",
											"source": 1,
											"value": "A22CB465"
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "PUSH",
											"source": 1,
											"value": "A22CB465"
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "PUSH",
											"source": 1,
											"value": "B88D4FDE"
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "PUSH",
											"source": 1,
											"value": "C87B56DD"
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "PUSH",
											"source": 1,
											"value": "E985E9C5"
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "PUSH",
											"source": 1,
											"value": "6352211E"
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "PUSH",
											"source": 1,
											"value": "95D89B41"
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "PUSH",
											"source": 1,
											"value": "95EA7B3"
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "PUSH",
											"source": 1,
											"value": "95EA7B3"
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "PUSH",
											"source": 1,
											"value": "18160DDD"
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "PUSH",
											"source": 1,
											"value": "23B872DD"
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "PUSH",
											"source": 1,
											"value": "42842E0E"
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "PUSH",
											"source": 1,
											"value": "1FFC9A7"
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "PUSH",
											"source": 1,
											"value": "6FDDE03"
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "PUSH",
											"source": 1,
											"value": "81812FC"
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2189,
											"end": 44827,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10458,
											"end": 11088,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 10458,
											"end": 11088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10458,
											"end": 11088,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 10458,
											"end": 11088,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10458,
											"end": 11088,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10458,
											"end": 11088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 10458,
											"end": 11088,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10458,
											"end": 11088,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10458,
											"end": 11088,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10458,
											"end": 11088,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10458,
											"end": 11088,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 10458,
											"end": 11088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10458,
											"end": 11088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10458,
											"end": 11088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 10458,
											"end": 11088,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 10458,
											"end": 11088,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10458,
											"end": 11088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 10458,
											"end": 11088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10458,
											"end": 11088,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 10458,
											"end": 11088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10458,
											"end": 11088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 10458,
											"end": 11088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10458,
											"end": 11088,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10458,
											"end": 11088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10458,
											"end": 11088,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10458,
											"end": 11088,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 611,
											"end": 625,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 611,
											"end": 625,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 604,
											"end": 626,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 586,
											"end": 627,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 586,
											"end": 627,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 574,
											"end": 576,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 559,
											"end": 577,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10458,
											"end": 11088,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 10458,
											"end": 11088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10458,
											"end": 11088,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10458,
											"end": 11088,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10458,
											"end": 11088,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10458,
											"end": 11088,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10458,
											"end": 11088,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10458,
											"end": 11088,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10458,
											"end": 11088,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 11342,
											"end": 11440,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 11342,
											"end": 11440,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11342,
											"end": 11440,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 11342,
											"end": 11440,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11342,
											"end": 11440,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11342,
											"end": 11440,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 11342,
											"end": 11440,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11342,
											"end": 11440,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11342,
											"end": 11440,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11342,
											"end": 11440,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 11342,
											"end": 11440,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 11342,
											"end": 11440,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11342,
											"end": 11440,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11342,
											"end": 11440,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 11342,
											"end": 11440,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 11342,
											"end": 11440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11342,
											"end": 11440,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 11342,
											"end": 11440,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11342,
											"end": 11440,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11342,
											"end": 11440,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11342,
											"end": 11440,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 11342,
											"end": 11440,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11342,
											"end": 11440,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11342,
											"end": 11440,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 11342,
											"end": 11440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18205,
											"end": 18428,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 18205,
											"end": 18428,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18205,
											"end": 18428,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 18205,
											"end": 18428,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18205,
											"end": 18428,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 18205,
											"end": 18428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 18205,
											"end": 18428,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18205,
											"end": 18428,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18205,
											"end": 18428,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18205,
											"end": 18428,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 18205,
											"end": 18428,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 18205,
											"end": 18428,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18205,
											"end": 18428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 18205,
											"end": 18428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 18205,
											"end": 18428,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 18205,
											"end": 18428,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 18205,
											"end": 18428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 18205,
											"end": 18428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18205,
											"end": 18428,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 18205,
											"end": 18428,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18205,
											"end": 18428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 18205,
											"end": 18428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18205,
											"end": 18428,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 18205,
											"end": 18428,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18205,
											"end": 18428,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 18205,
											"end": 18428,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1860,
											"end": 1902,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1848,
											"end": 1903,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1848,
											"end": 1903,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1848,
											"end": 1903,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1904,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1904,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1820,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1803,
											"end": 1821,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 18205,
											"end": 18428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1684,
											"end": 1910,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 17933,
											"end": 18055,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 17933,
											"end": 18055,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17933,
											"end": 18055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 17933,
											"end": 18055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 17933,
											"end": 18055,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 17933,
											"end": 18055,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 17933,
											"end": 18055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17933,
											"end": 18055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17933,
											"end": 18055,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 17933,
											"end": 18055,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17933,
											"end": 18055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 17933,
											"end": 18055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17933,
											"end": 18055,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 17933,
											"end": 18055,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17933,
											"end": 18055,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 7188,
											"end": 7505,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 7188,
											"end": 7505,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7188,
											"end": 7505,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 7188,
											"end": 7505,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7188,
											"end": 7505,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7188,
											"end": 7505,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 7188,
											"end": 7505,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7188,
											"end": 7505,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7188,
											"end": 7505,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7188,
											"end": 7505,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7188,
											"end": 7505,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 7188,
											"end": 7505,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7458,
											"end": 7470,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 7458,
											"end": 7470,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7249,
											"end": 7256,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7442,
											"end": 7455,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7442,
											"end": 7470,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7188,
											"end": 7505,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 7188,
											"end": 7505,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7188,
											"end": 7505,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7188,
											"end": 7505,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2592,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2567,
											"end": 2592,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2567,
											"end": 2592,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2555,
											"end": 2557,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2540,
											"end": 2558,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7188,
											"end": 7505,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2421,
											"end": 2598,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 21840,
											"end": 25287,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 21840,
											"end": 25287,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21840,
											"end": 25287,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 21840,
											"end": 25287,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 21840,
											"end": 25287,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 21840,
											"end": 25287,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 21840,
											"end": 25287,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 21840,
											"end": 25287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21840,
											"end": 25287,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 21840,
											"end": 25287,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21840,
											"end": 25287,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 21840,
											"end": 25287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 25378,
											"end": 25565,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 25378,
											"end": 25565,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25378,
											"end": 25565,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 25378,
											"end": 25565,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 25378,
											"end": 25565,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 25378,
											"end": 25565,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 25378,
											"end": 25565,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 25378,
											"end": 25565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 25378,
											"end": 25565,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 25378,
											"end": 25565,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25378,
											"end": 25565,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 25378,
											"end": 25565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12703,
											"end": 12853,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 12703,
											"end": 12853,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12703,
											"end": 12853,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 12703,
											"end": 12853,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12703,
											"end": 12853,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12703,
											"end": 12853,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 12703,
											"end": 12853,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12703,
											"end": 12853,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12703,
											"end": 12853,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12703,
											"end": 12853,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 12703,
											"end": 12853,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 12703,
											"end": 12853,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12703,
											"end": 12853,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 12703,
											"end": 12853,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 12703,
											"end": 12853,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 12703,
											"end": 12853,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 12703,
											"end": 12853,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 12703,
											"end": 12853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12703,
											"end": 12853,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 12703,
											"end": 12853,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12703,
											"end": 12853,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 12703,
											"end": 12853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8339,
											"end": 8578,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 8339,
											"end": 8578,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8339,
											"end": 8578,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 8339,
											"end": 8578,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8339,
											"end": 8578,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8339,
											"end": 8578,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 8339,
											"end": 8578,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8339,
											"end": 8578,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8339,
											"end": 8578,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8339,
											"end": 8578,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8339,
											"end": 8578,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 8339,
											"end": 8578,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8339,
											"end": 8578,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 8339,
											"end": 8578,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 8339,
											"end": 8578,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 8339,
											"end": 8578,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8339,
											"end": 8578,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 8339,
											"end": 8578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8339,
											"end": 8578,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 8339,
											"end": 8578,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8339,
											"end": 8578,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 8339,
											"end": 8578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11511,
											"end": 11613,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 11511,
											"end": 11613,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11511,
											"end": 11613,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 11511,
											"end": 11613,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11511,
											"end": 11613,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11511,
											"end": 11613,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 11511,
											"end": 11613,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11511,
											"end": 11613,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11511,
											"end": 11613,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11511,
											"end": 11613,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 11511,
											"end": 11613,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 11511,
											"end": 11613,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11511,
											"end": 11613,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11511,
											"end": 11613,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 11511,
											"end": 11613,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 11511,
											"end": 11613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18755,
											"end": 18986,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 18755,
											"end": 18986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18755,
											"end": 18986,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 18755,
											"end": 18986,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18755,
											"end": 18986,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 18755,
											"end": 18986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 18755,
											"end": 18986,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18755,
											"end": 18986,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18755,
											"end": 18986,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18755,
											"end": 18986,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 18755,
											"end": 18986,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 18755,
											"end": 18986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18755,
											"end": 18986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 18755,
											"end": 18986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 18755,
											"end": 18986,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 18755,
											"end": 18986,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 18755,
											"end": 18986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 18755,
											"end": 18986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18755,
											"end": 18986,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 18755,
											"end": 18986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18755,
											"end": 18986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 18755,
											"end": 18986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26146,
											"end": 26551,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 26146,
											"end": 26551,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26146,
											"end": 26551,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 26146,
											"end": 26551,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 26146,
											"end": 26551,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 26146,
											"end": 26551,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 26146,
											"end": 26551,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 26146,
											"end": 26551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26146,
											"end": 26551,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 26146,
											"end": 26551,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26146,
											"end": 26551,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 26146,
											"end": 26551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11714,
											"end": 12036,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 11714,
											"end": 12036,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11714,
											"end": 12036,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 11714,
											"end": 12036,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11714,
											"end": 12036,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11714,
											"end": 12036,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 11714,
											"end": 12036,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11714,
											"end": 12036,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11714,
											"end": 12036,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11714,
											"end": 12036,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 11714,
											"end": 12036,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 11714,
											"end": 12036,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11714,
											"end": 12036,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 11714,
											"end": 12036,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 11714,
											"end": 12036,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 11714,
											"end": 12036,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11714,
											"end": 12036,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 11714,
											"end": 12036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11714,
											"end": 12036,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 11714,
											"end": 12036,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11714,
											"end": 12036,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 11714,
											"end": 12036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19136,
											"end": 19298,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 19136,
											"end": 19298,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19136,
											"end": 19298,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 19136,
											"end": 19298,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19136,
											"end": 19298,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 19136,
											"end": 19298,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 19136,
											"end": 19298,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 19136,
											"end": 19298,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19136,
											"end": 19298,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19136,
											"end": 19298,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 19136,
											"end": 19298,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 19136,
											"end": 19298,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19136,
											"end": 19298,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19136,
											"end": 19298,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 19136,
											"end": 19298,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 19136,
											"end": 19298,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 19136,
											"end": 19298,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 19136,
											"end": 19298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19136,
											"end": 19298,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 19136,
											"end": 19298,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19256,
											"end": 19281,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19256,
											"end": 19281,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19256,
											"end": 19281,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19256,
											"end": 19281,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 19233,
											"end": 19237,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19256,
											"end": 19281,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19256,
											"end": 19281,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19256,
											"end": 19281,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19256,
											"end": 19274,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 19256,
											"end": 19281,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19256,
											"end": 19281,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19256,
											"end": 19281,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19256,
											"end": 19281,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19256,
											"end": 19281,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 19256,
											"end": 19281,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19256,
											"end": 19281,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 19256,
											"end": 19281,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 19256,
											"end": 19291,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 19256,
											"end": 19291,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19256,
											"end": 19291,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 19256,
											"end": 19291,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 19256,
											"end": 19291,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19256,
											"end": 19291,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19256,
											"end": 19291,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19256,
											"end": 19291,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19256,
											"end": 19291,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19256,
											"end": 19291,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19256,
											"end": 19291,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 19256,
											"end": 19291,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 19256,
											"end": 19291,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 19256,
											"end": 19291,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 19256,
											"end": 19291,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19136,
											"end": 19298,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10458,
											"end": 11088,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 10458,
											"end": 11088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10543,
											"end": 10547,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10861,
											"end": 10886,
											"name": "PUSH",
											"source": 1,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10861,
											"end": 10886,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10861,
											"end": 10886,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10861,
											"end": 10886,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10861,
											"end": 10886,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 10861,
											"end": 10886,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10861,
											"end": 10962,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 10861,
											"end": 10962,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10937,
											"end": 10962,
											"name": "PUSH",
											"source": 1,
											"value": "80AC58CD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10937,
											"end": 10962,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10937,
											"end": 10962,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10937,
											"end": 10962,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10937,
											"end": 10962,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 10861,
											"end": 10962,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 10861,
											"end": 10962,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10861,
											"end": 11038,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10861,
											"end": 11038,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 10861,
											"end": 11038,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11013,
											"end": 11038,
											"name": "PUSH",
											"source": 1,
											"value": "5B5E139F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11013,
											"end": 11038,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11013,
											"end": 11038,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11013,
											"end": 11038,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11013,
											"end": 11038,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 10861,
											"end": 11038,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 10861,
											"end": 11038,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10842,
											"end": 11038,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10458,
											"end": 11088,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10458,
											"end": 11088,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11342,
											"end": 11440,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 11342,
											"end": 11440,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11396,
											"end": 11409,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 11428,
											"end": 11433,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 11421,
											"end": 11433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 11421,
											"end": 11433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11342,
											"end": 11440,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11342,
											"end": 11440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18205,
											"end": 18428,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 18205,
											"end": 18428,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18281,
											"end": 18288,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18305,
											"end": 18321,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 18313,
											"end": 18320,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18305,
											"end": 18312,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 18305,
											"end": 18321,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18305,
											"end": 18321,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 18305,
											"end": 18321,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18300,
											"end": 18373,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 18300,
											"end": 18373,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18323,
											"end": 18373,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 18331,
											"end": 18372,
											"name": "PUSH",
											"source": 1,
											"value": "CF4700E400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18323,
											"end": 18330,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 18323,
											"end": 18373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18323,
											"end": 18373,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 18323,
											"end": 18373,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18391,
											"end": 18415,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18391,
											"end": 18415,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18391,
											"end": 18415,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18391,
											"end": 18415,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18391,
											"end": 18406,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 18391,
											"end": 18415,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18391,
											"end": 18415,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18391,
											"end": 18415,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 18391,
											"end": 18415,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18391,
											"end": 18415,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 18391,
											"end": 18421,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 18391,
											"end": 18421,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18391,
											"end": 18421,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18391,
											"end": 18421,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18205,
											"end": 18428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17933,
											"end": 18055,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 17933,
											"end": 18055,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18021,
											"end": 18048,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 18030,
											"end": 18032,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18034,
											"end": 18041,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18043,
											"end": 18047,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 18021,
											"end": 18029,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 18021,
											"end": 18048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18021,
											"end": 18048,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 18021,
											"end": 18048,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17933,
											"end": 18055,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17933,
											"end": 18055,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17933,
											"end": 18055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21840,
											"end": 25287,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 21840,
											"end": 25287,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21977,
											"end": 22004,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22007,
											"end": 22034,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 22026,
											"end": 22033,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22007,
											"end": 22025,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 22007,
											"end": 22034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22007,
											"end": 22034,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 22007,
											"end": 22034,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4079,
											"end": 4093,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22159,
											"end": 22181,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 22159,
											"end": 22181,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 22159,
											"end": 22181,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 22159,
											"end": 22181,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 21977,
											"end": 22034,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21977,
											"end": 22034,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 22217,
											"end": 22262,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22217,
											"end": 22262,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 22217,
											"end": 22262,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 22217,
											"end": 22262,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 22213,
											"end": 22308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 22213,
											"end": 22308,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 22264,
											"end": 22308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 22272,
											"end": 22307,
											"name": "PUSH",
											"source": 1,
											"value": "A114810000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22264,
											"end": 22271,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 22264,
											"end": 22308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22264,
											"end": 22308,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 22264,
											"end": 22308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22320,
											"end": 22347,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20973,
											"end": 20997,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20973,
											"end": 20997,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20973,
											"end": 20997,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20973,
											"end": 20988,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 20973,
											"end": 20997,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 20973,
											"end": 20997,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20973,
											"end": 20997,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 20973,
											"end": 20997,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20973,
											"end": 20997,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 21197,
											"end": 21223,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 21197,
											"end": 21223,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 42781,
											"end": 42791,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 20610,
											"end": 20640,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 20610,
											"end": 20640,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20610,
											"end": 20640,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 20318,
											"end": 20334,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20307,
											"end": 20335,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 20307,
											"end": 20335,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 20588,
											"end": 20608,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20588,
											"end": 20608,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20588,
											"end": 20608,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 20585,
											"end": 20641,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 22503,
											"end": 22691,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 22503,
											"end": 22691,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 22595,
											"end": 22638,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 22612,
											"end": 22616,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 42781,
											"end": 42791,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 19136,
											"end": 19298,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 19136,
											"end": 19298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22595,
											"end": 22638,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 22595,
											"end": 22638,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22590,
											"end": 22691,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 22590,
											"end": 22691,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 22640,
											"end": 22691,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 22648,
											"end": 22690,
											"name": "PUSH",
											"source": 1,
											"value": "59C896BE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22640,
											"end": 22647,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 22640,
											"end": 22691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22640,
											"end": 22691,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 22640,
											"end": 22691,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22834,
											"end": 22849,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 22831,
											"end": 22988,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 22831,
											"end": 22988,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 22831,
											"end": 22988,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 22972,
											"end": 22973,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22951,
											"end": 22970,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22944,
											"end": 22974,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 22831,
											"end": 22988,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 22831,
											"end": 22988,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23360,
											"end": 23384,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23360,
											"end": 23384,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 23360,
											"end": 23384,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23360,
											"end": 23384,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 23360,
											"end": 23384,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23360,
											"end": 23384,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23360,
											"end": 23384,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23360,
											"end": 23384,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23360,
											"end": 23378,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 23360,
											"end": 23384,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23360,
											"end": 23384,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23360,
											"end": 23384,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 23360,
											"end": 23384,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 23360,
											"end": 23384,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23360,
											"end": 23384,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 23358,
											"end": 23384,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 23358,
											"end": 23384,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 23358,
											"end": 23384,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23358,
											"end": 23384,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23358,
											"end": 23384,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23358,
											"end": 23384,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 23428,
											"end": 23450,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23428,
											"end": 23450,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 23428,
											"end": 23450,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 23428,
											"end": 23450,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 23428,
											"end": 23450,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23428,
											"end": 23450,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23428,
											"end": 23450,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23428,
											"end": 23450,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23428,
											"end": 23450,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 23426,
											"end": 23450,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 23426,
											"end": 23450,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 23426,
											"end": 23450,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23426,
											"end": 23450,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23426,
											"end": 23450,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 17061,
											"end": 17072,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 17036,
											"end": 17059,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 17032,
											"end": 17073,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 17019,
											"end": 17082,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3694,
											"name": "PUSH",
											"source": 1,
											"value": "200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17019,
											"end": 17082,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 23714,
											"end": 23740,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23714,
											"end": 23740,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 23714,
											"end": 23740,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23714,
											"end": 23740,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23714,
											"end": 23731,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 23714,
											"end": 23740,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23714,
											"end": 23740,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23714,
											"end": 23740,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 23714,
											"end": 23740,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23714,
											"end": 23740,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 23714,
											"end": 23886,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23714,
											"end": 23886,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23714,
											"end": 23886,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23714,
											"end": 23886,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3694,
											"name": "PUSH",
											"source": 1,
											"value": "200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 24003,
											"end": 24050,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 24003,
											"end": 24050,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 24003,
											"end": 24055,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24003,
											"end": 24055,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 23999,
											"end": 24616,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 23999,
											"end": 24616,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 24107,
											"end": 24108,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 24097,
											"end": 24108,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 24097,
											"end": 24108,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24075,
											"end": 24094,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24228,
											"end": 24258,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24228,
											"end": 24258,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24228,
											"end": 24258,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24228,
											"end": 24245,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 24228,
											"end": 24258,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24228,
											"end": 24258,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24228,
											"end": 24258,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 24228,
											"end": 24258,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24228,
											"end": 24258,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 24228,
											"end": 24258,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 24228,
											"end": 24263,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24228,
											"end": 24263,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 24224,
											"end": 24602,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 24224,
											"end": 24602,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 24364,
											"end": 24377,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24364,
											"end": 24377,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 24349,
											"end": 24360,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24349,
											"end": 24377,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 24345,
											"end": 24584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 24345,
											"end": 24584,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 24509,
											"end": 24539,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24509,
											"end": 24539,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24509,
											"end": 24539,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24509,
											"end": 24539,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24509,
											"end": 24526,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 24509,
											"end": 24539,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24509,
											"end": 24539,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24509,
											"end": 24539,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 24509,
											"end": 24539,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24509,
											"end": 24539,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 24509,
											"end": 24561,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 24509,
											"end": 24561,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24509,
											"end": 24561,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 24345,
											"end": 24584,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 24345,
											"end": 24584,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24057,
											"end": 24616,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23999,
											"end": 24616,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 23999,
											"end": 24616,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4079,
											"end": 4093,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24744,
											"end": 24764,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 24744,
											"end": 24764,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 25115,
											"end": 25122,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 24744,
											"end": 24764,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 25047,
											"end": 25051,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 24990,
											"end": 25015,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 24725,
											"end": 24741,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24725,
											"end": 24741,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 24858,
											"end": 25150,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 25173,
											"end": 25181,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 25185,
											"end": 25186,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25173,
											"end": 25186,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 25169,
											"end": 25227,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 25169,
											"end": 25227,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 25188,
											"end": 25227,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 25196,
											"end": 25226,
											"name": "PUSH",
											"source": 1,
											"value": "EA553B3400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 25188,
											"end": 25195,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 25188,
											"end": 25227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 25188,
											"end": 25227,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 25188,
											"end": 25227,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21967,
											"end": 25287,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21967,
											"end": 25287,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21967,
											"end": 25287,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21967,
											"end": 25287,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21840,
											"end": 25287,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21840,
											"end": 25287,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21840,
											"end": 25287,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21840,
											"end": 25287,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 25378,
											"end": 25565,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 25378,
											"end": 25565,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25519,
											"end": 25558,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 25536,
											"end": 25540,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 25542,
											"end": 25544,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 25546,
											"end": 25553,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 25519,
											"end": 25558,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 25519,
											"end": 25558,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 25519,
											"end": 25558,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 25519,
											"end": 25558,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 25519,
											"end": 25558,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25519,
											"end": 25558,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 25519,
											"end": 25558,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 25519,
											"end": 25558,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 25519,
											"end": 25558,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25519,
											"end": 25558,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 25519,
											"end": 25558,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 25519,
											"end": 25558,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25519,
											"end": 25535,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 25519,
											"end": 25558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 25519,
											"end": 25558,
											"name": "tag",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 25519,
											"end": 25558,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25378,
											"end": 25565,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25378,
											"end": 25565,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25378,
											"end": 25565,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25378,
											"end": 25565,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12703,
											"end": 12853,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 12703,
											"end": 12853,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12775,
											"end": 12782,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12817,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 12836,
											"end": 12843,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12817,
											"end": 12835,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 12817,
											"end": 12844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8339,
											"end": 8578,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 8339,
											"end": 8578,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8411,
											"end": 8418,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8434,
											"end": 8453,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8434,
											"end": 8453,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8434,
											"end": 8453,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8430,
											"end": 8499,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 8430,
											"end": 8499,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8455,
											"end": 8499,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 8463,
											"end": 8498,
											"name": "PUSH",
											"source": 1,
											"value": "8F4EB60400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8455,
											"end": 8462,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 8455,
											"end": 8499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8455,
											"end": 8499,
											"name": "tag",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 8455,
											"end": 8499,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8516,
											"end": 8541,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8516,
											"end": 8541,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8516,
											"end": 8541,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8516,
											"end": 8541,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8516,
											"end": 8541,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8516,
											"end": 8541,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8516,
											"end": 8534,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 8516,
											"end": 8541,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8516,
											"end": 8541,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8516,
											"end": 8541,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8516,
											"end": 8541,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8516,
											"end": 8541,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8516,
											"end": 8541,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2654,
											"end": 2667,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8516,
											"end": 8571,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8516,
											"end": 8571,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8339,
											"end": 8578,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11511,
											"end": 11613,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 11511,
											"end": 11613,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11567,
											"end": 11580,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 11599,
											"end": 11606,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 11592,
											"end": 11606,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11592,
											"end": 11606,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 11592,
											"end": 11606,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 11592,
											"end": 11606,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11592,
											"end": 11606,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 11592,
											"end": 11606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18755,
											"end": 18986,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 18755,
											"end": 18986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 42781,
											"end": 42791,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 18849,
											"end": 18888,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18849,
											"end": 18888,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18849,
											"end": 18888,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18849,
											"end": 18888,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18849,
											"end": 18867,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 18849,
											"end": 18888,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18849,
											"end": 18888,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18849,
											"end": 18888,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18849,
											"end": 18888,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18849,
											"end": 18888,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 18849,
											"end": 18888,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18849,
											"end": 18888,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 18849,
											"end": 18888,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 18849,
											"end": 18888,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18849,
											"end": 18898,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 18849,
											"end": 18898,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18849,
											"end": 18898,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18849,
											"end": 18898,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 18849,
											"end": 18898,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18849,
											"end": 18898,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18849,
											"end": 18898,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 18849,
											"end": 18898,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18849,
											"end": 18898,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 18849,
											"end": 18898,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18849,
											"end": 18898,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18849,
											"end": 18898,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 18849,
											"end": 18909,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18849,
											"end": 18909,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 18849,
											"end": 18909,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00"
										},
										{
											"begin": 18849,
											"end": 18909,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18849,
											"end": 18909,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 18849,
											"end": 18909,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 18849,
											"end": 18909,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 18849,
											"end": 18909,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18849,
											"end": 18909,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18849,
											"end": 18909,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 18849,
											"end": 18909,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18849,
											"end": 18909,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18849,
											"end": 18909,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 18924,
											"end": 18979,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18924,
											"end": 18979,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 586,
											"end": 627,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 586,
											"end": 627,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 586,
											"end": 627,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 18849,
											"end": 18898,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18849,
											"end": 18898,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 42781,
											"end": 42791,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18924,
											"end": 18979,
											"name": "PUSH",
											"source": 1,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 18924,
											"end": 18979,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 559,
											"end": 577,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 18924,
											"end": 18979,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 18924,
											"end": 18979,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 18924,
											"end": 18979,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18924,
											"end": 18979,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18924,
											"end": 18979,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 18924,
											"end": 18979,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18924,
											"end": 18979,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 18755,
											"end": 18986,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18755,
											"end": 18986,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18755,
											"end": 18986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26146,
											"end": 26551,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 26146,
											"end": 26551,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26315,
											"end": 26346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 26328,
											"end": 26332,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 26334,
											"end": 26336,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 26338,
											"end": 26345,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 26315,
											"end": 26327,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 26315,
											"end": 26346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26315,
											"end": 26346,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 26315,
											"end": 26346,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26360,
											"end": 26374,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26360,
											"end": 26374,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 26360,
											"end": 26374,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 26360,
											"end": 26374,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 26360,
											"end": 26379,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 26356,
											"end": 26545,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 26356,
											"end": 26545,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 26398,
											"end": 26454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 26429,
											"end": 26433,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 26435,
											"end": 26437,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 26439,
											"end": 26446,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 26448,
											"end": 26453,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 26398,
											"end": 26428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 26398,
											"end": 26454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26398,
											"end": 26454,
											"name": "tag",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 26398,
											"end": 26454,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26393,
											"end": 26545,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 26393,
											"end": 26545,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 26474,
											"end": 26530,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 26482,
											"end": 26529,
											"name": "PUSH",
											"source": 1,
											"value": "D1A57ED600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 26474,
											"end": 26481,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 26474,
											"end": 26530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26474,
											"end": 26530,
											"name": "tag",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 26474,
											"end": 26530,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26146,
											"end": 26551,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26146,
											"end": 26551,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26146,
											"end": 26551,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26146,
											"end": 26551,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26146,
											"end": 26551,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11714,
											"end": 12036,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 11714,
											"end": 12036,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11787,
											"end": 11800,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 11817,
											"end": 11833,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 11825,
											"end": 11832,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11817,
											"end": 11824,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 11817,
											"end": 11833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11817,
											"end": 11833,
											"name": "tag",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 11817,
											"end": 11833,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11812,
											"end": 11880,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 11812,
											"end": 11880,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11835,
											"end": 11880,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 11843,
											"end": 11879,
											"name": "PUSH",
											"source": 1,
											"value": "A14C4B5000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11835,
											"end": 11842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 11835,
											"end": 11880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11835,
											"end": 11880,
											"name": "tag",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 11835,
											"end": 11880,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11891,
											"end": 11912,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11915,
											"end": 11925,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 12357,
											"end": 12366,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12357,
											"end": 12366,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12357,
											"end": 12366,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12357,
											"end": 12366,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12357,
											"end": 12366,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12357,
											"end": 12366,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12357,
											"end": 12366,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12357,
											"end": 12366,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12357,
											"end": 12366,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 12357,
											"end": 12366,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12357,
											"end": 12366,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12357,
											"end": 12366,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12281,
											"end": 12373,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11915,
											"end": 11925,
											"name": "tag",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 11915,
											"end": 11925,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11891,
											"end": 11925,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11891,
											"end": 11925,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11948,
											"end": 11955,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11942,
											"end": 11963,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11967,
											"end": 11968,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11942,
											"end": 11968,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11942,
											"end": 12029,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 11942,
											"end": 12029,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11942,
											"end": 12029,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11942,
											"end": 12029,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11942,
											"end": 12029,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11942,
											"end": 12029,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11942,
											"end": 12029,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11942,
											"end": 12029,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11942,
											"end": 12029,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11942,
											"end": 12029,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11942,
											"end": 12029,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11942,
											"end": 12029,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11942,
											"end": 12029,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11942,
											"end": 12029,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11942,
											"end": 12029,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 11942,
											"end": 12029,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11942,
											"end": 12029,
											"name": "tag",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 11942,
											"end": 12029,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11995,
											"end": 12002,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12004,
											"end": 12022,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 12014,
											"end": 12021,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12004,
											"end": 12013,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 12004,
											"end": 12022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12004,
											"end": 12022,
											"name": "tag",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 12004,
											"end": 12022,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11978,
											"end": 12023,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11978,
											"end": 12023,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11978,
											"end": 12023,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11978,
											"end": 12023,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11978,
											"end": 12023,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 11978,
											"end": 12023,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11978,
											"end": 12023,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11978,
											"end": 12023,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11978,
											"end": 12023,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 11978,
											"end": 12023,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11978,
											"end": 12023,
											"name": "tag",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 11978,
											"end": 12023,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11978,
											"end": 12023,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11978,
											"end": 12023,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11978,
											"end": 12023,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11978,
											"end": 12023,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11978,
											"end": 12023,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11978,
											"end": 12023,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11978,
											"end": 12023,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11978,
											"end": 12023,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11978,
											"end": 12023,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11978,
											"end": 12023,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11978,
											"end": 12023,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11978,
											"end": 12023,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11942,
											"end": 12029,
											"name": "tag",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 11942,
											"end": 12029,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11935,
											"end": 12029,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 11714,
											"end": 12036,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11714,
											"end": 12036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19547,
											"end": 19907,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 19547,
											"end": 19907,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19612,
											"end": 19623,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19695,
											"end": 19708,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19695,
											"end": 19708,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 19685,
											"end": 19692,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19685,
											"end": 19708,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 19681,
											"end": 19891,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 19681,
											"end": 19891,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 19681,
											"end": 19891,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 19728,
											"end": 19742,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19760,
											"end": 19820,
											"name": "tag",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 19760,
											"end": 19820,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19777,
											"end": 19803,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19777,
											"end": 19803,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19777,
											"end": 19803,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19777,
											"end": 19803,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19777,
											"end": 19794,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 19777,
											"end": 19803,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19777,
											"end": 19803,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19777,
											"end": 19803,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 19777,
											"end": 19803,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19777,
											"end": 19803,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 19777,
											"end": 19803,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 19777,
											"end": 19803,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19767,
											"end": 19809,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19767,
											"end": 19809,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19767,
											"end": 19809,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 19760,
											"end": 19820,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 19760,
											"end": 19820,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 19811,
											"end": 19820,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 19811,
											"end": 19820,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 19811,
											"end": 19820,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 19811,
											"end": 19820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19811,
											"end": 19820,
											"name": "tag",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 19811,
											"end": 19820,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19811,
											"end": 19820,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 19811,
											"end": 19820,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19760,
											"end": 19820,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 19760,
											"end": 19820,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19760,
											"end": 19820,
											"name": "tag",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 19760,
											"end": 19820,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3412,
											"end": 3420,
											"name": "PUSH",
											"source": 1,
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19847,
											"end": 19871,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 19847,
											"end": 19876,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 19847,
											"end": 19876,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19681,
											"end": 19891,
											"name": "tag",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 19681,
											"end": 19891,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19547,
											"end": 19907,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19547,
											"end": 19907,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19547,
											"end": 19907,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19547,
											"end": 19907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 44665,
											"end": 44825,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 44665,
											"end": 44825,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 44764,
											"end": 44777,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 44758,
											"end": 44762,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 44751,
											"end": 44778,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 44804,
											"end": 44808,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 44798,
											"end": 44802,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 44791,
											"end": 44809,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 36313,
											"end": 36773,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 36313,
											"end": 36773,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 36437,
											"end": 36450,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 36453,
											"end": 36469,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 36461,
											"end": 36468,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 36453,
											"end": 36460,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 36453,
											"end": 36469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 36453,
											"end": 36469,
											"name": "tag",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 36453,
											"end": 36469,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 36437,
											"end": 36469,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 36437,
											"end": 36469,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 36484,
											"end": 36497,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 36484,
											"end": 36529,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 36484,
											"end": 36529,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 36484,
											"end": 36529,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 36484,
											"end": 36529,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 42781,
											"end": 42791,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 36501,
											"end": 36529,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36501,
											"end": 36529,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 36501,
											"end": 36529,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 36501,
											"end": 36529,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 36501,
											"end": 36529,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 36484,
											"end": 36529,
											"name": "tag",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 36484,
											"end": 36529,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 36480,
											"end": 36678,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 36480,
											"end": 36678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 36480,
											"end": 36678,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 36548,
											"end": 36592,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 36565,
											"end": 36570,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 42781,
											"end": 42791,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 19136,
											"end": 19298,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 19136,
											"end": 19298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 36548,
											"end": 36592,
											"name": "tag",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 36548,
											"end": 36592,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 36543,
											"end": 36678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 36543,
											"end": 36678,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 36612,
											"end": 36663,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 36620,
											"end": 36662,
											"name": "PUSH",
											"source": 1,
											"value": "CFB3B94200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 36612,
											"end": 36619,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 36612,
											"end": 36663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 36612,
											"end": 36663,
											"name": "tag",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 36612,
											"end": 36663,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 36688,
											"end": 36712,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 36688,
											"end": 36712,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 36688,
											"end": 36712,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 36688,
											"end": 36712,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 36688,
											"end": 36703,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 36688,
											"end": 36712,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 36688,
											"end": 36712,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 36688,
											"end": 36712,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 36688,
											"end": 36712,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 36688,
											"end": 36712,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 36688,
											"end": 36712,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 36688,
											"end": 36723,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 36688,
											"end": 36723,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 36688,
											"end": 36723,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 36688,
											"end": 36723,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 36688,
											"end": 36723,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36688,
											"end": 36723,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 36688,
											"end": 36723,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 36688,
											"end": 36723,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 36688,
											"end": 36723,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 36688,
											"end": 36723,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 36688,
											"end": 36723,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 36688,
											"end": 36723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 36688,
											"end": 36723,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 36688,
											"end": 36723,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 36738,
											"end": 36766,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 36738,
											"end": 36766,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 36688,
											"end": 36712,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 36688,
											"end": 36712,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 36738,
											"end": 36766,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 36738,
											"end": 36766,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 36738,
											"end": 36766,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 36738,
											"end": 36766,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 36738,
											"end": 36766,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 36738,
											"end": 36766,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 36738,
											"end": 36766,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 36427,
											"end": 36773,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 36313,
											"end": 36773,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 36313,
											"end": 36773,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 36313,
											"end": 36773,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 36313,
											"end": 36773,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14144,
											"end": 16122,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 14144,
											"end": 16122,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14292,
											"end": 14318,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14292,
											"end": 14318,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14292,
											"end": 14318,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14292,
											"end": 14318,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14292,
											"end": 14309,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 14292,
											"end": 14318,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14292,
											"end": 14318,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14292,
											"end": 14318,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14292,
											"end": 14318,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14292,
											"end": 14318,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 14292,
											"end": 14318,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 14292,
											"end": 14318,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14416,
											"end": 14427,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14416,
											"end": 14427,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14416,
											"end": 14427,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14412,
											"end": 15682,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 14412,
											"end": 15682,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14462,
											"end": 14475,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14462,
											"end": 14475,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 14451,
											"end": 14458,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14451,
											"end": 14475,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 14447,
											"end": 14524,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 14447,
											"end": 14524,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14477,
											"end": 14524,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 14485,
											"end": 14523,
											"name": "PUSH",
											"source": 1,
											"value": "DF2D9B4200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14477,
											"end": 14484,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 14477,
											"end": 14524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14477,
											"end": 14524,
											"name": "tag",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 14477,
											"end": 14524,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15071,
											"end": 15668,
											"name": "tag",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 15071,
											"end": 15668,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15165,
											"end": 15174,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15165,
											"end": 15174,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15147,
											"end": 15175,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15147,
											"end": 15175,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15147,
											"end": 15175,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15147,
											"end": 15175,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15147,
											"end": 15164,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 15147,
											"end": 15175,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15147,
											"end": 15175,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15147,
											"end": 15175,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15147,
											"end": 15175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15147,
											"end": 15175,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 15147,
											"end": 15175,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 15219,
											"end": 15244,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15219,
											"end": 15244,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15071,
											"end": 15668,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 15219,
											"end": 15244,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3412,
											"end": 3420,
											"name": "PUSH",
											"source": 1,
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15270,
											"end": 15276,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15270,
											"end": 15294,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15298,
											"end": 15299,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15270,
											"end": 15299,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15266,
											"end": 15314,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 15266,
											"end": 15314,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14144,
											"end": 16122,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14144,
											"end": 16122,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14144,
											"end": 16122,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14144,
											"end": 16122,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15266,
											"end": 15314,
											"name": "tag",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 15266,
											"end": 15314,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15602,
											"end": 15649,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 15610,
											"end": 15648,
											"name": "PUSH",
											"source": 1,
											"value": "DF2D9B4200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15602,
											"end": 15609,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 15602,
											"end": 15649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15602,
											"end": 15649,
											"name": "tag",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 15602,
											"end": 15649,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15071,
											"end": 15668,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 15071,
											"end": 15668,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14412,
											"end": 15682,
											"name": "tag",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 14412,
											"end": 15682,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3412,
											"end": 3420,
											"name": "PUSH",
											"source": 1,
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16004,
											"end": 16010,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16004,
											"end": 16028,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16032,
											"end": 16033,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16004,
											"end": 16033,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16000,
											"end": 16048,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 16000,
											"end": 16048,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14144,
											"end": 16122,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14144,
											"end": 16122,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14144,
											"end": 16122,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14144,
											"end": 16122,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16000,
											"end": 16048,
											"name": "tag",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 16000,
											"end": 16048,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16068,
											"end": 16115,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 16076,
											"end": 16114,
											"name": "PUSH",
											"source": 1,
											"value": "DF2D9B4200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16068,
											"end": 16075,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 16068,
											"end": 16115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 28577,
											"end": 29250,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 28577,
											"end": 29250,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28755,
											"end": 28843,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 28755,
											"end": 28843,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 28755,
											"end": 28843,
											"name": "PUSH",
											"source": 1,
											"value": "150B7A0200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 28755,
											"end": 28843,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28755,
											"end": 28843,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 28735,
											"end": 28739,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28735,
											"end": 28739,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28755,
											"end": 28800,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28755,
											"end": 28800,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 28755,
											"end": 28800,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 28755,
											"end": 28800,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28755,
											"end": 28800,
											"name": "PUSH",
											"source": 1,
											"value": "150B7A02"
										},
										{
											"begin": 28755,
											"end": 28800,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28755,
											"end": 28843,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 28755,
											"end": 28843,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 42781,
											"end": 42791,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 42781,
											"end": 42791,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28822,
											"end": 28826,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 28822,
											"end": 28826,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28828,
											"end": 28835,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 28828,
											"end": 28835,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28837,
											"end": 28842,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 28837,
											"end": 28842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28755,
											"end": 28843,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 28755,
											"end": 28843,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28755,
											"end": 28843,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 28755,
											"end": 28843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 28755,
											"end": 28843,
											"name": "tag",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 28755,
											"end": 28843,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28755,
											"end": 28843,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 28755,
											"end": 28843,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 28755,
											"end": 28843,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 28755,
											"end": 28843,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28755,
											"end": 28843,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 28755,
											"end": 28843,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 28755,
											"end": 28843,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28755,
											"end": 28843,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28755,
											"end": 28843,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 28755,
											"end": 28843,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 28755,
											"end": 28843,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 28755,
											"end": 28843,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 28755,
											"end": 28843,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28755,
											"end": 28843,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28755,
											"end": 28843,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28755,
											"end": 28843,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28755,
											"end": 28843,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 28755,
											"end": 28843,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 28755,
											"end": 28843,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28755,
											"end": 28843,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 28755,
											"end": 28843,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28755,
											"end": 28843,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 28755,
											"end": 28843,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 28755,
											"end": 28843,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 28755,
											"end": 28843,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28755,
											"end": 28843,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28755,
											"end": 28843,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28755,
											"end": 28843,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 28755,
											"end": 28843,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 28755,
											"end": 28843,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 28755,
											"end": 28843,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28755,
											"end": 28843,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28755,
											"end": 28843,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 28755,
											"end": 28843,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 28755,
											"end": 28843,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 28755,
											"end": 28843,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 28755,
											"end": 28843,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28755,
											"end": 28843,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28755,
											"end": 28843,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28755,
											"end": 28843,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 28755,
											"end": 28843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 28755,
											"end": 28843,
											"name": "tag",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 28755,
											"end": 28843,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28755,
											"end": 28843,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 28755,
											"end": 28843,
											"name": "tag",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 28755,
											"end": 28843,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28751,
											"end": 29244,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 28751,
											"end": 29244,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 28751,
											"end": 29244,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 28751,
											"end": 29244,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28751,
											"end": 29244,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28751,
											"end": 29244,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 28751,
											"end": 29244,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 28751,
											"end": 29244,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 28751,
											"end": 29244,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 28751,
											"end": 29244,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 28751,
											"end": 29244,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 28751,
											"end": 29244,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28751,
											"end": 29244,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 28751,
											"end": 29244,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 28751,
											"end": 29244,
											"name": "PUSH",
											"source": 1,
											"value": "3F"
										},
										{
											"begin": 28751,
											"end": 29244,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 28751,
											"end": 29244,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28751,
											"end": 29244,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 28751,
											"end": 29244,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 28751,
											"end": 29244,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28751,
											"end": 29244,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 28751,
											"end": 29244,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 28751,
											"end": 29244,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 28751,
											"end": 29244,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 28751,
											"end": 29244,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 28751,
											"end": 29244,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 28751,
											"end": 29244,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28751,
											"end": 29244,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 28751,
											"end": 29244,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 28751,
											"end": 29244,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28751,
											"end": 29244,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 28751,
											"end": 29244,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 28751,
											"end": 29244,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 28751,
											"end": 29244,
											"name": "tag",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 28751,
											"end": 29244,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28751,
											"end": 29244,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 28751,
											"end": 29244,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 28751,
											"end": 29244,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28751,
											"end": 29244,
											"name": "tag",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 28751,
											"end": 29244,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28751,
											"end": 29244,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29033,
											"end": 29039,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 29033,
											"end": 29046,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 29050,
											"end": 29051,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 29033,
											"end": 29051,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 29029,
											"end": 29142,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 29029,
											"end": 29142,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 29071,
											"end": 29127,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 29079,
											"end": 29126,
											"name": "PUSH",
											"source": 1,
											"value": "D1A57ED600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 29071,
											"end": 29078,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 29071,
											"end": 29127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 29071,
											"end": 29127,
											"name": "tag",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 29071,
											"end": 29127,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 29212,
											"end": 29218,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 29206,
											"end": 29219,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 29197,
											"end": 29203,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 29193,
											"end": 29195,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 29189,
											"end": 29204,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29182,
											"end": 29220,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 28751,
											"end": 29244,
											"name": "tag",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 28751,
											"end": 29244,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28911,
											"end": 28975,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 28911,
											"end": 28975,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 28921,
											"end": 28975,
											"name": "PUSH",
											"source": 1,
											"value": "150B7A0200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 28911,
											"end": 28975,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 28911,
											"end": 28975,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28577,
											"end": 29250,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 28577,
											"end": 29250,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 28577,
											"end": 29250,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28577,
											"end": 29250,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28577,
											"end": 29250,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28577,
											"end": 29250,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28577,
											"end": 29250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 42895,
											"end": 44603,
											"name": "tag",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 42895,
											"end": 44603,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 42960,
											"end": 42977,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 43388,
											"end": 43392,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 43381,
											"end": 43385,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 43375,
											"end": 43386,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 43371,
											"end": 43393,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 43478,
											"end": 43479,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 43472,
											"end": 43476,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 43465,
											"end": 43480,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 43551,
											"end": 43555,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 43548,
											"end": 43549,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 43544,
											"end": 43556,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 43537,
											"end": 43556,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 43537,
											"end": 43556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 43537,
											"end": 43556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 43631,
											"end": 43632,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 43626,
											"end": 43629,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 43619,
											"end": 43633,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 43732,
											"end": 43735,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 43966,
											"end": 43971,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 43948,
											"end": 44367,
											"name": "tag",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 43948,
											"end": 44367,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 44013,
											"end": 44014,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 44008,
											"end": 44011,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 44004,
											"end": 44015,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 43997,
											"end": 44015,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 43997,
											"end": 44015,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 44181,
											"end": 44183,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 44175,
											"end": 44179,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 44171,
											"end": 44184,
											"name": "MOD",
											"source": 1
										},
										{
											"begin": 44167,
											"end": 44169,
											"name": "PUSH",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 44163,
											"end": 44185,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 44158,
											"end": 44161,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 44150,
											"end": 44186,
											"name": "MSTORE8",
											"source": 1
										},
										{
											"begin": 44273,
											"end": 44275,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 44263,
											"end": 44276,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 44263,
											"end": 44276,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 44328,
											"end": 44353,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 43948,
											"end": 44367,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 44328,
											"end": 44353,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 44395,
											"end": 44408,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 44395,
											"end": 44408,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 44395,
											"end": 44408,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 44508,
											"end": 44522,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 44508,
											"end": 44522,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 44508,
											"end": 44522,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 44508,
											"end": 44522,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 44568,
											"end": 44587,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 44568,
											"end": 44587,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 44568,
											"end": 44587,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 44508,
											"end": 44522,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 42895,
											"end": 44603,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 42895,
											"end": 44603,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 191,
											"name": "tag",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 99,
											"end": 165,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 92,
											"end": 97,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 88,
											"end": 166,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 81,
											"end": 86,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 78,
											"end": 167,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 68,
											"end": 185,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 68,
											"end": 185,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 181,
											"end": 182,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 178,
											"end": 179,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 171,
											"end": 183,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 68,
											"end": 185,
											"name": "tag",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 68,
											"end": 185,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14,
											"end": 191,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14,
											"end": 191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 196,
											"end": 441,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 196,
											"end": 441,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 254,
											"end": 260,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 307,
											"end": 309,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 295,
											"end": 304,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 286,
											"end": 293,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 282,
											"end": 305,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 278,
											"end": 310,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 275,
											"end": 327,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 275,
											"end": 327,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 275,
											"end": 327,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 323,
											"end": 324,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 320,
											"end": 321,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 313,
											"end": 325,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 275,
											"end": 327,
											"name": "tag",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 275,
											"end": 327,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 362,
											"end": 371,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 349,
											"end": 372,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 381,
											"end": 411,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 405,
											"end": 410,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 381,
											"end": 411,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 381,
											"end": 411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 638,
											"end": 888,
											"name": "tag",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 638,
											"end": 888,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 723,
											"end": 724,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 733,
											"end": 846,
											"name": "tag",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 733,
											"end": 846,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 747,
											"end": 753,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 744,
											"end": 745,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 741,
											"end": 754,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 733,
											"end": 846,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 733,
											"end": 846,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 733,
											"end": 846,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 823,
											"end": 834,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 823,
											"end": 834,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 823,
											"end": 834,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 804,
											"end": 815,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 804,
											"end": 815,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 804,
											"end": 815,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 797,
											"end": 836,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 769,
											"end": 771,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 762,
											"end": 772,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 733,
											"end": 846,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 733,
											"end": 846,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 733,
											"end": 846,
											"name": "tag",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 733,
											"end": 846,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 880,
											"end": 881,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 862,
											"end": 878,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 862,
											"end": 878,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 855,
											"end": 882,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 638,
											"end": 888,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 893,
											"end": 1223,
											"name": "tag",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 893,
											"end": 1223,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 935,
											"end": 938,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 973,
											"end": 978,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 967,
											"end": 979,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1000,
											"end": 1006,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 995,
											"end": 998,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 988,
											"end": 1007,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1016,
											"end": 1092,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 1085,
											"end": 1091,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1078,
											"end": 1082,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1073,
											"end": 1076,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1069,
											"end": 1083,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1062,
											"end": 1066,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1055,
											"end": 1060,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1051,
											"end": 1067,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1016,
											"end": 1092,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 1016,
											"end": 1092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1016,
											"end": 1092,
											"name": "tag",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 1016,
											"end": 1092,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1137,
											"end": 1139,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1125,
											"end": 1140,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1142,
											"end": 1208,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 1121,
											"end": 1209,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1112,
											"end": 1210,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1112,
											"end": 1210,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1112,
											"end": 1210,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1112,
											"end": 1210,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1212,
											"end": 1216,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1108,
											"end": 1217,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1108,
											"end": 1217,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 893,
											"end": 1223,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 893,
											"end": 1223,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1228,
											"end": 1448,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 1228,
											"end": 1448,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1377,
											"end": 1379,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1366,
											"end": 1375,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1359,
											"end": 1380,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1340,
											"end": 1344,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1397,
											"end": 1442,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 1438,
											"end": 1440,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1427,
											"end": 1436,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1423,
											"end": 1441,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1415,
											"end": 1421,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1397,
											"end": 1442,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 1397,
											"end": 1442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1453,
											"end": 1679,
											"name": "tag",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 1453,
											"end": 1679,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1512,
											"end": 1518,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1565,
											"end": 1567,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1553,
											"end": 1562,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1544,
											"end": 1551,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1540,
											"end": 1563,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1536,
											"end": 1568,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1533,
											"end": 1585,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1533,
											"end": 1585,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "264"
										},
										{
											"begin": 1533,
											"end": 1585,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1581,
											"end": 1582,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1578,
											"end": 1579,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1571,
											"end": 1583,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1533,
											"end": 1585,
											"name": "tag",
											"source": 5,
											"value": "264"
										},
										{
											"begin": 1533,
											"end": 1585,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1626,
											"end": 1649,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1626,
											"end": 1649,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1453,
											"end": 1679,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1453,
											"end": 1679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1915,
											"end": 2111,
											"name": "tag",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 1915,
											"end": 2111,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1983,
											"end": 2003,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1983,
											"end": 2003,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 2043,
											"end": 2085,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2032,
											"end": 2086,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2032,
											"end": 2086,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2022,
											"end": 2087,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2022,
											"end": 2087,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2012,
											"end": 2105,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 2012,
											"end": 2105,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2101,
											"end": 2102,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2098,
											"end": 2099,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2116,
											"end": 2416,
											"name": "tag",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2116,
											"end": 2416,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2184,
											"end": 2190,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2192,
											"end": 2198,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2245,
											"end": 2247,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2233,
											"end": 2242,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2224,
											"end": 2231,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2220,
											"end": 2243,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2216,
											"end": 2248,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2213,
											"end": 2265,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2213,
											"end": 2265,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "269"
										},
										{
											"begin": 2213,
											"end": 2265,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2261,
											"end": 2262,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2258,
											"end": 2259,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2251,
											"end": 2263,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2213,
											"end": 2265,
											"name": "tag",
											"source": 5,
											"value": "269"
										},
										{
											"begin": 2213,
											"end": 2265,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2284,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "270"
										},
										{
											"begin": 2303,
											"end": 2312,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2284,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 2284,
											"end": 2313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2284,
											"end": 2313,
											"name": "tag",
											"source": 5,
											"value": "270"
										},
										{
											"begin": 2284,
											"end": 2313,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 2382,
											"end": 2384,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2367,
											"end": 2385,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2367,
											"end": 2385,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2367,
											"end": 2385,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2367,
											"end": 2385,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2354,
											"end": 2386,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 2354,
											"end": 2386,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2116,
											"end": 2416,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2603,
											"end": 2977,
											"name": "tag",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 2603,
											"end": 2977,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2680,
											"end": 2686,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2688,
											"end": 2694,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2696,
											"end": 2702,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2749,
											"end": 2751,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2737,
											"end": 2746,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2728,
											"end": 2735,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2724,
											"end": 2747,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2720,
											"end": 2752,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2717,
											"end": 2769,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2717,
											"end": 2769,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "273"
										},
										{
											"begin": 2717,
											"end": 2769,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2765,
											"end": 2766,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2762,
											"end": 2763,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2755,
											"end": 2767,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2717,
											"end": 2769,
											"name": "tag",
											"source": 5,
											"value": "273"
										},
										{
											"begin": 2717,
											"end": 2769,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2788,
											"end": 2817,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "274"
										},
										{
											"begin": 2807,
											"end": 2816,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2788,
											"end": 2817,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 2788,
											"end": 2817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2788,
											"end": 2817,
											"name": "tag",
											"source": 5,
											"value": "274"
										},
										{
											"begin": 2788,
											"end": 2817,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2778,
											"end": 2817,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2778,
											"end": 2817,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2836,
											"end": 2874,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "275"
										},
										{
											"begin": 2870,
											"end": 2872,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2859,
											"end": 2868,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2855,
											"end": 2873,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2836,
											"end": 2874,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 2836,
											"end": 2874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2836,
											"end": 2874,
											"name": "tag",
											"source": 5,
											"value": "275"
										},
										{
											"begin": 2836,
											"end": 2874,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2603,
											"end": 2977,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2603,
											"end": 2977,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 2826,
											"end": 2874,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2826,
											"end": 2874,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2943,
											"end": 2945,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2928,
											"end": 2946,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2928,
											"end": 2946,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2928,
											"end": 2946,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2928,
											"end": 2946,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2915,
											"end": 2947,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 2915,
											"end": 2947,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2603,
											"end": 2977,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2982,
											"end": 3168,
											"name": "tag",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 2982,
											"end": 3168,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3041,
											"end": 3047,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3094,
											"end": 3096,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3082,
											"end": 3091,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3073,
											"end": 3080,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3069,
											"end": 3092,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3065,
											"end": 3097,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 3062,
											"end": 3114,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3062,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "277"
										},
										{
											"begin": 3062,
											"end": 3114,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3110,
											"end": 3111,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3107,
											"end": 3108,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3062,
											"end": 3114,
											"name": "tag",
											"source": 5,
											"value": "277"
										},
										{
											"begin": 3062,
											"end": 3114,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3133,
											"end": 3162,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 3152,
											"end": 3161,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3133,
											"end": 3162,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 3133,
											"end": 3162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3173,
											"end": 3520,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 3173,
											"end": 3520,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3238,
											"end": 3244,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3246,
											"end": 3252,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3299,
											"end": 3301,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3287,
											"end": 3296,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3278,
											"end": 3285,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3274,
											"end": 3297,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3270,
											"end": 3302,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 3267,
											"end": 3319,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3267,
											"end": 3319,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "280"
										},
										{
											"begin": 3267,
											"end": 3319,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3316,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3313,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3305,
											"end": 3317,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3267,
											"end": 3319,
											"name": "tag",
											"source": 5,
											"value": "280"
										},
										{
											"begin": 3267,
											"end": 3319,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3338,
											"end": 3367,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "281"
										},
										{
											"begin": 3357,
											"end": 3366,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3338,
											"end": 3367,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 3338,
											"end": 3367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3338,
											"end": 3367,
											"name": "tag",
											"source": 5,
											"value": "281"
										},
										{
											"begin": 3338,
											"end": 3367,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3328,
											"end": 3367,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3328,
											"end": 3367,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3417,
											"end": 3419,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3406,
											"end": 3415,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3402,
											"end": 3420,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3389,
											"end": 3421,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 3464,
											"end": 3469,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3457,
											"end": 3470,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3450,
											"end": 3471,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3443,
											"end": 3448,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3440,
											"end": 3472,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 3430,
											"end": 3490,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "282"
										},
										{
											"begin": 3430,
											"end": 3490,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3486,
											"end": 3487,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3483,
											"end": 3484,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3476,
											"end": 3488,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3430,
											"end": 3490,
											"name": "tag",
											"source": 5,
											"value": "282"
										},
										{
											"begin": 3430,
											"end": 3490,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3509,
											"end": 3514,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3499,
											"end": 3514,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3499,
											"end": 3514,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3499,
											"end": 3514,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3173,
											"end": 3520,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3173,
											"end": 3520,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3173,
											"end": 3520,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3173,
											"end": 3520,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3173,
											"end": 3520,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3173,
											"end": 3520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3525,
											"end": 3709,
											"name": "tag",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 3525,
											"end": 3709,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3577,
											"end": 3654,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3574,
											"end": 3575,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3567,
											"end": 3655,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3674,
											"end": 3678,
											"name": "PUSH",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 3671,
											"end": 3672,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3664,
											"end": 3679,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3698,
											"end": 3702,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3695,
											"end": 3696,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3688,
											"end": 3703,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3714,
											"end": 5039,
											"name": "tag",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 3714,
											"end": 5039,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3809,
											"end": 3815,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3817,
											"end": 3823,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3825,
											"end": 3831,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3833,
											"end": 3839,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3886,
											"end": 3889,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 3874,
											"end": 3883,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3865,
											"end": 3872,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 3861,
											"end": 3884,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3857,
											"end": 3890,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 3854,
											"end": 3907,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3854,
											"end": 3907,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "285"
										},
										{
											"begin": 3854,
											"end": 3907,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3903,
											"end": 3904,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3900,
											"end": 3901,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3893,
											"end": 3905,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3854,
											"end": 3907,
											"name": "tag",
											"source": 5,
											"value": "285"
										},
										{
											"begin": 3854,
											"end": 3907,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3926,
											"end": 3955,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "286"
										},
										{
											"begin": 3945,
											"end": 3954,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3926,
											"end": 3955,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 3926,
											"end": 3955,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3926,
											"end": 3955,
											"name": "tag",
											"source": 5,
											"value": "286"
										},
										{
											"begin": 3926,
											"end": 3955,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3916,
											"end": 3955,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3916,
											"end": 3955,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3974,
											"end": 4012,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "287"
										},
										{
											"begin": 4008,
											"end": 4010,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3997,
											"end": 4006,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3993,
											"end": 4011,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3974,
											"end": 4012,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 3974,
											"end": 4012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3974,
											"end": 4012,
											"name": "tag",
											"source": 5,
											"value": "287"
										},
										{
											"begin": 3974,
											"end": 4012,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3964,
											"end": 4012,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4081,
											"end": 4083,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4066,
											"end": 4084,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4066,
											"end": 4084,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4053,
											"end": 4085,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 4053,
											"end": 4085,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4160,
											"end": 4162,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 4145,
											"end": 4163,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4145,
											"end": 4163,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4132,
											"end": 4164,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 4187,
											"end": 4205,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4176,
											"end": 4206,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4176,
											"end": 4206,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 4173,
											"end": 4223,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4173,
											"end": 4223,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "288"
										},
										{
											"begin": 4173,
											"end": 4223,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4219,
											"end": 4220,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4216,
											"end": 4217,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4209,
											"end": 4221,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4173,
											"end": 4223,
											"name": "tag",
											"source": 5,
											"value": "288"
										},
										{
											"begin": 4173,
											"end": 4223,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4242,
											"end": 4264,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4242,
											"end": 4264,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4295,
											"end": 4299,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 4287,
											"end": 4300,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4287,
											"end": 4300,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4283,
											"end": 4310,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 4273,
											"end": 4328,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "289"
										},
										{
											"begin": 4273,
											"end": 4328,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4324,
											"end": 4325,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4321,
											"end": 4322,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4314,
											"end": 4326,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4273,
											"end": 4328,
											"name": "tag",
											"source": 5,
											"value": "289"
										},
										{
											"begin": 4273,
											"end": 4328,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4364,
											"end": 4366,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4351,
											"end": 4367,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 4390,
											"end": 4408,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4382,
											"end": 4388,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4379,
											"end": 4409,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 4376,
											"end": 4432,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4376,
											"end": 4432,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "291"
										},
										{
											"begin": 4376,
											"end": 4432,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4412,
											"end": 4430,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "291"
										},
										{
											"begin": 4412,
											"end": 4430,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 4412,
											"end": 4430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4412,
											"end": 4430,
											"name": "tag",
											"source": 5,
											"value": "291"
										},
										{
											"begin": 4412,
											"end": 4430,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4461,
											"end": 4463,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4455,
											"end": 4464,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4608,
											"end": 4674,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 4603,
											"end": 4605,
											"name": "PUSH",
											"source": 5,
											"value": "3F"
										},
										{
											"begin": 4534,
											"end": 4600,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 4527,
											"end": 4531,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 4519,
											"end": 4525,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4515,
											"end": 4532,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4511,
											"end": 4601,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4507,
											"end": 4606,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4503,
											"end": 4675,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4495,
											"end": 4501,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4491,
											"end": 4676,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4742,
											"end": 4748,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4730,
											"end": 4740,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4727,
											"end": 4749,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 4706,
											"end": 4724,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4694,
											"end": 4704,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4691,
											"end": 4725,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 4688,
											"end": 4750,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 4685,
											"end": 4773,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4685,
											"end": 4773,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "293"
										},
										{
											"begin": 4685,
											"end": 4773,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4753,
											"end": 4771,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "293"
										},
										{
											"begin": 4753,
											"end": 4771,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 4753,
											"end": 4771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4753,
											"end": 4771,
											"name": "tag",
											"source": 5,
											"value": "293"
										},
										{
											"begin": 4753,
											"end": 4771,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4789,
											"end": 4791,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4782,
											"end": 4804,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4813,
											"end": 4835,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4813,
											"end": 4835,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4813,
											"end": 4835,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4854,
											"end": 4869,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4854,
											"end": 4869,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4854,
											"end": 4869,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4871,
											"end": 4873,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4850,
											"end": 4874,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4847,
											"end": 4884,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4844,
											"end": 4901,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4844,
											"end": 4901,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "294"
										},
										{
											"begin": 4844,
											"end": 4901,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4897,
											"end": 4898,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4894,
											"end": 4895,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4887,
											"end": 4899,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4844,
											"end": 4901,
											"name": "tag",
											"source": 5,
											"value": "294"
										},
										{
											"begin": 4844,
											"end": 4901,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4953,
											"end": 4959,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4948,
											"end": 4950,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4944,
											"end": 4946,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4940,
											"end": 4951,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4935,
											"end": 4937,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4927,
											"end": 4933,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4923,
											"end": 4938,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4910,
											"end": 4960,
											"name": "CALLDATACOPY",
											"source": 5
										},
										{
											"begin": 5006,
											"end": 5007,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5001,
											"end": 5003,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4992,
											"end": 4998,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4984,
											"end": 4990,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4980,
											"end": 4999,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4976,
											"end": 5004,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4969,
											"end": 5008,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5027,
											"end": 5033,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5017,
											"end": 5033,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 5017,
											"end": 5033,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5017,
											"end": 5033,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5017,
											"end": 5033,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5017,
											"end": 5033,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3714,
											"end": 5039,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3714,
											"end": 5039,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 3714,
											"end": 5039,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3714,
											"end": 5039,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 3714,
											"end": 5039,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3714,
											"end": 5039,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3714,
											"end": 5039,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3714,
											"end": 5039,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5044,
											"end": 5304,
											"name": "tag",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 5044,
											"end": 5304,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5112,
											"end": 5118,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5120,
											"end": 5126,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5173,
											"end": 5175,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5161,
											"end": 5170,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5152,
											"end": 5159,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5148,
											"end": 5171,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5144,
											"end": 5176,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 5141,
											"end": 5193,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5141,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "296"
										},
										{
											"begin": 5141,
											"end": 5193,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5189,
											"end": 5190,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5186,
											"end": 5187,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5179,
											"end": 5191,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5141,
											"end": 5193,
											"name": "tag",
											"source": 5,
											"value": "296"
										},
										{
											"begin": 5141,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5212,
											"end": 5241,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "297"
										},
										{
											"begin": 5231,
											"end": 5240,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5212,
											"end": 5241,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 5212,
											"end": 5241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5212,
											"end": 5241,
											"name": "tag",
											"source": 5,
											"value": "297"
										},
										{
											"begin": 5212,
											"end": 5241,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5202,
											"end": 5241,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5202,
											"end": 5241,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5260,
											"end": 5298,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "298"
										},
										{
											"begin": 5294,
											"end": 5296,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5283,
											"end": 5292,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5279,
											"end": 5297,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5260,
											"end": 5298,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 5260,
											"end": 5298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5260,
											"end": 5298,
											"name": "tag",
											"source": 5,
											"value": "298"
										},
										{
											"begin": 5260,
											"end": 5298,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5250,
											"end": 5298,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5250,
											"end": 5298,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5044,
											"end": 5304,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5044,
											"end": 5304,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5044,
											"end": 5304,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5044,
											"end": 5304,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5044,
											"end": 5304,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5044,
											"end": 5304,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5309,
											"end": 5746,
											"name": "tag",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 5309,
											"end": 5746,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5388,
											"end": 5389,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 5384,
											"end": 5396,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5384,
											"end": 5396,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5384,
											"end": 5396,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 5384,
											"end": 5396,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5431,
											"end": 5443,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5431,
											"end": 5443,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5431,
											"end": 5443,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5452,
											"end": 5513,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "300"
										},
										{
											"begin": 5452,
											"end": 5513,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5506,
											"end": 5510,
											"name": "PUSH",
											"source": 5,
											"value": "7F"
										},
										{
											"begin": 5498,
											"end": 5504,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5494,
											"end": 5511,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5484,
											"end": 5511,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5484,
											"end": 5511,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5452,
											"end": 5513,
											"name": "tag",
											"source": 5,
											"value": "300"
										},
										{
											"begin": 5452,
											"end": 5513,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5559,
											"end": 5561,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5551,
											"end": 5557,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5548,
											"end": 5562,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 5528,
											"end": 5546,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5525,
											"end": 5563,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5522,
											"end": 5740,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "301"
										},
										{
											"begin": 5522,
											"end": 5740,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5596,
											"end": 5673,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5593,
											"end": 5594,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5586,
											"end": 5674,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5697,
											"end": 5701,
											"name": "PUSH",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 5694,
											"end": 5695,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5687,
											"end": 5702,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5725,
											"end": 5729,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 5722,
											"end": 5723,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5715,
											"end": 5730,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5522,
											"end": 5740,
											"name": "tag",
											"source": 5,
											"value": "301"
										},
										{
											"begin": 5522,
											"end": 5740,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5522,
											"end": 5740,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5309,
											"end": 5746,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5309,
											"end": 5746,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5309,
											"end": 5746,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5309,
											"end": 5746,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5751,
											"end": 6247,
											"name": "tag",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 5751,
											"end": 6247,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5930,
											"end": 5933,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5968,
											"end": 5974,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5962,
											"end": 5975,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5984,
											"end": 6050,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "303"
										},
										{
											"begin": 6043,
											"end": 6049,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6038,
											"end": 6041,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6031,
											"end": 6035,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6023,
											"end": 6029,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 6019,
											"end": 6036,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5984,
											"end": 6050,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 5984,
											"end": 6050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5984,
											"end": 6050,
											"name": "tag",
											"source": 5,
											"value": "303"
										},
										{
											"begin": 5984,
											"end": 6050,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6113,
											"end": 6126,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6113,
											"end": 6126,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6072,
											"end": 6088,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6072,
											"end": 6088,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6072,
											"end": 6088,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6072,
											"end": 6088,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6135,
											"end": 6205,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "304"
										},
										{
											"begin": 6113,
											"end": 6126,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6072,
											"end": 6088,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6182,
											"end": 6186,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6170,
											"end": 6187,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 6170,
											"end": 6187,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6135,
											"end": 6205,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 6135,
											"end": 6205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6135,
											"end": 6205,
											"name": "tag",
											"source": 5,
											"value": "304"
										},
										{
											"begin": 6135,
											"end": 6205,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6221,
											"end": 6241,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6221,
											"end": 6241,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 5751,
											"end": 6247,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5751,
											"end": 6247,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6252,
											"end": 6602,
											"name": "tag",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 6252,
											"end": 6602,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6291,
											"end": 6294,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6319,
											"end": 6324,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6309,
											"end": 6502,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "306"
										},
										{
											"begin": 6309,
											"end": 6502,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6358,
											"end": 6435,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6355,
											"end": 6356,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6348,
											"end": 6436,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6459,
											"end": 6463,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 6456,
											"end": 6457,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6449,
											"end": 6464,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6487,
											"end": 6491,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 6484,
											"end": 6485,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6477,
											"end": 6492,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6309,
											"end": 6502,
											"name": "tag",
											"source": 5,
											"value": "306"
										},
										{
											"begin": 6309,
											"end": 6502,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6529,
											"end": 6595,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6518,
											"end": 6596,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6518,
											"end": 6596,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6252,
											"end": 6602,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6607,
											"end": 7138,
											"name": "tag",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 6607,
											"end": 7138,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6850,
											"end": 6892,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6842,
											"end": 6848,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6838,
											"end": 6893,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6827,
											"end": 6836,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6820,
											"end": 6894,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6942,
											"end": 6984,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6934,
											"end": 6940,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6930,
											"end": 6985,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6925,
											"end": 6927,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6914,
											"end": 6923,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6910,
											"end": 6928,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6903,
											"end": 6986,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7022,
											"end": 7028,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7017,
											"end": 7019,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7006,
											"end": 7015,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7002,
											"end": 7020,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6995,
											"end": 7029,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7065,
											"end": 7068,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 7060,
											"end": 7062,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 7049,
											"end": 7058,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7045,
											"end": 7063,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7038,
											"end": 7069,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6801,
											"end": 6805,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7086,
											"end": 7132,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "308"
										},
										{
											"begin": 7127,
											"end": 7130,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 7116,
											"end": 7125,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7112,
											"end": 7131,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7104,
											"end": 7110,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7086,
											"end": 7132,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 7086,
											"end": 7132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7086,
											"end": 7132,
											"name": "tag",
											"source": 5,
											"value": "308"
										},
										{
											"begin": 7086,
											"end": 7132,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7078,
											"end": 7132,
											"name": "SWAP7",
											"source": 5
										},
										{
											"begin": 6607,
											"end": 7138,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6607,
											"end": 7138,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7143,
											"end": 7392,
											"name": "tag",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 7143,
											"end": 7392,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7212,
											"end": 7218,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7265,
											"end": 7267,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7253,
											"end": 7262,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7244,
											"end": 7251,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7240,
											"end": 7263,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7236,
											"end": 7268,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 7233,
											"end": 7285,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7233,
											"end": 7285,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "310"
										},
										{
											"begin": 7233,
											"end": 7285,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7281,
											"end": 7282,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7278,
											"end": 7279,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7271,
											"end": 7283,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7233,
											"end": 7285,
											"name": "tag",
											"source": 5,
											"value": "310"
										},
										{
											"begin": 7233,
											"end": 7285,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7313,
											"end": 7322,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7307,
											"end": 7323,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7332,
											"end": 7362,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 7356,
											"end": 7361,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7332,
											"end": 7362,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 7332,
											"end": 7362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)//mocks/ERC721ABurnableMock.sol",
								"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol",
								"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/IERC721A.sol",
								"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/extensions/ERC721ABurnable.sol",
								"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/extensions/IERC721ABurnable.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the [ERC721](https://eips.ethereum.org/EIPS/eip-721) Non-Fungible Token Standard, including the Metadata extension. Optimized for lower gas during batch mints. Token IDs are minted in sequential order (e.g. 0, 1, 2, 3, ...) starting from `_startTokenId()`. Assumptions: - An owner cannot have more than 2**64 - 1 (max value of uint64) of supply. - The maximum token ID cannot exceed 2**256 - 1 (max value of uint256).\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"ConsecutiveTransfer(uint256,uint256,address,address)\":{\"details\":\"Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. See {ERC721A-_approve}. Requirements: - The caller must own the token or be an approved operator.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in `owner`'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}.\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC721A\",\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":\"ERC721A\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":5000000},\"remappings\":[]},\"sources\":{\"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":{\"keccak256\":\"0x8ab9d7aae81997da7770831ffb85073bbadf653956f89aa33ff1e12a70799de6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff612ba5a628c71ff31e06619af0d963078534732683491b33a95ba66050549f\",\"dweb:/ipfs/QmUW5WVe8rGrqmSDmVMq8L66kKcgQEepNXLdiA44hN2tWz\"]},\"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/IERC721A.sol\":{\"keccak256\":\"0xd57233c199fee856d2380f9428a8b801c1745a32a7152898bf1f457c3dceb440\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75fa266aa2b05953bd62a27c19b0a045f3b6eb0059ad961764df987f4a5a08d4\",\"dweb:/ipfs/QmYxbu6xpfdoyraQ1457zhk3d8sPbvLvSdXRANcJdDEWsF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 179,
								"contract": "Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol:ERC721A",
								"label": "_currentIndex",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 181,
								"contract": "Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol:ERC721A",
								"label": "_burnCounter",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 183,
								"contract": "Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol:ERC721A",
								"label": "_name",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 185,
								"contract": "Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol:ERC721A",
								"label": "_symbol",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 189,
								"contract": "Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol:ERC721A",
								"label": "_packedOwnerships",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 193,
								"contract": "Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol:ERC721A",
								"label": "_packedAddressData",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 198,
								"contract": "Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol:ERC721A",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_struct(TokenApprovalRef)111_storage)"
							},
							{
								"astId": 204,
								"contract": "Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol:ERC721A",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_struct(TokenApprovalRef)111_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct ERC721A.TokenApprovalRef)",
								"numberOfBytes": "32",
								"value": "t_struct(TokenApprovalRef)111_storage"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(TokenApprovalRef)111_storage": {
								"encoding": "inplace",
								"label": "struct ERC721A.TokenApprovalRef",
								"members": [
									{
										"astId": 110,
										"contract": "Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol:ERC721A",
										"label": "value",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"MintERC2309QuantityExceedsLimit()": [
								{
									"notice": "The `quantity` minted with ERC2309 exceeds the safety limit."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"OwnershipNotInitializedForExtraData()": [
								{
									"notice": "The `extraData` cannot be set on an unintialized ownership slot."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC721A__IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of ERC721 token receiver.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of ERC721 token receiver.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":\"ERC721A__IERC721Receiver\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":5000000},\"remappings\":[]},\"sources\":{\"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":{\"keccak256\":\"0x8ab9d7aae81997da7770831ffb85073bbadf653956f89aa33ff1e12a70799de6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff612ba5a628c71ff31e06619af0d963078534732683491b33a95ba66050549f\",\"dweb:/ipfs/QmUW5WVe8rGrqmSDmVMq8L66kKcgQEepNXLdiA44hN2tWz\"]},\"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/IERC721A.sol\":{\"keccak256\":\"0xd57233c199fee856d2380f9428a8b801c1745a32a7152898bf1f457c3dceb440\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75fa266aa2b05953bd62a27c19b0a045f3b6eb0059ad961764df987f4a5a08d4\",\"dweb:/ipfs/QmYxbu6xpfdoyraQ1457zhk3d8sPbvLvSdXRANcJdDEWsF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/IERC721A.sol": {
				"IERC721A": {
					"abi": [
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintERC2309QuantityExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnershipNotInitializedForExtraData",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "ConsecutiveTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of ERC721A.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"ConsecutiveTransfer(uint256,uint256,address,address)": {
								"details": "Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in `owner`'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}."
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"totalSupply()": {
								"details": "Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of ERC721A.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"ConsecutiveTransfer(uint256,uint256,address,address)\":{\"details\":\"Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in `owner`'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}.\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/IERC721A.sol\":\"IERC721A\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":5000000},\"remappings\":[]},\"sources\":{\"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/IERC721A.sol\":{\"keccak256\":\"0xd57233c199fee856d2380f9428a8b801c1745a32a7152898bf1f457c3dceb440\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75fa266aa2b05953bd62a27c19b0a045f3b6eb0059ad961764df987f4a5a08d4\",\"dweb:/ipfs/QmYxbu6xpfdoyraQ1457zhk3d8sPbvLvSdXRANcJdDEWsF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"MintERC2309QuantityExceedsLimit()": [
								{
									"notice": "The `quantity` minted with ERC2309 exceeds the safety limit."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"OwnershipNotInitializedForExtraData()": [
								{
									"notice": "The `extraData` cannot be set on an unintialized ownership slot."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/extensions/ERC721ABurnable.sol": {
				"ERC721ABurnable": {
					"abi": [
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintERC2309QuantityExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnershipNotInitializedForExtraData",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "ConsecutiveTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC721A token that can be irreversibly burned (destroyed).",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"ConsecutiveTransfer(uint256,uint256,address,address)": {
								"details": "Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. See {ERC721A-_approve}. Requirements: - The caller must own the token or be an approved operator."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in `owner`'s account."
							},
							"burn(uint256)": {
								"details": "Burns `tokenId`. See {ERC721A-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}."
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"totalSupply()": {
								"details": "Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC721ABurnable.",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC721A token that can be irreversibly burned (destroyed).\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"ConsecutiveTransfer(uint256,uint256,address,address)\":{\"details\":\"Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. See {ERC721A-_approve}. Requirements: - The caller must own the token or be an approved operator.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in `owner`'s account.\"},\"burn(uint256)\":{\"details\":\"Burns `tokenId`. See {ERC721A-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}.\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC721ABurnable.\",\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/extensions/ERC721ABurnable.sol\":\"ERC721ABurnable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":5000000},\"remappings\":[]},\"sources\":{\"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol\":{\"keccak256\":\"0x8ab9d7aae81997da7770831ffb85073bbadf653956f89aa33ff1e12a70799de6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff612ba5a628c71ff31e06619af0d963078534732683491b33a95ba66050549f\",\"dweb:/ipfs/QmUW5WVe8rGrqmSDmVMq8L66kKcgQEepNXLdiA44hN2tWz\"]},\"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/IERC721A.sol\":{\"keccak256\":\"0xd57233c199fee856d2380f9428a8b801c1745a32a7152898bf1f457c3dceb440\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75fa266aa2b05953bd62a27c19b0a045f3b6eb0059ad961764df987f4a5a08d4\",\"dweb:/ipfs/QmYxbu6xpfdoyraQ1457zhk3d8sPbvLvSdXRANcJdDEWsF\"]},\"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/extensions/ERC721ABurnable.sol\":{\"keccak256\":\"0x6da1b2d752a3296e7bd2b811e4382c3031bf0328724c5fc3ef7f77ba29b406b6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f681ef8df4e8fa4cef4951beae5a3d5d74825833a8df6d113a577cc5bfae5b36\",\"dweb:/ipfs/QmVTPGJQTDyXysYgBBdPt1LnWPSEHFEsTDUPBQgAar9irf\"]},\"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/extensions/IERC721ABurnable.sol\":{\"keccak256\":\"0xc97afd693c249759d1237f6c0263933396b209ef7ec7f6607f623fe16613216c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://948f3514c1b7d0cff074d8628c7cc9c30a2804af3a79959a747163421735787d\",\"dweb:/ipfs/QmbfyqjtgQDj4aVBKcXd5CV8ZsmX9wYBLFFsJyj7FEUK7d\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 179,
								"contract": "Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/extensions/ERC721ABurnable.sol:ERC721ABurnable",
								"label": "_currentIndex",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 181,
								"contract": "Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/extensions/ERC721ABurnable.sol:ERC721ABurnable",
								"label": "_burnCounter",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 183,
								"contract": "Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/extensions/ERC721ABurnable.sol:ERC721ABurnable",
								"label": "_name",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 185,
								"contract": "Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/extensions/ERC721ABurnable.sol:ERC721ABurnable",
								"label": "_symbol",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 189,
								"contract": "Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/extensions/ERC721ABurnable.sol:ERC721ABurnable",
								"label": "_packedOwnerships",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 193,
								"contract": "Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/extensions/ERC721ABurnable.sol:ERC721ABurnable",
								"label": "_packedAddressData",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 198,
								"contract": "Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/extensions/ERC721ABurnable.sol:ERC721ABurnable",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_struct(TokenApprovalRef)111_storage)"
							},
							{
								"astId": 204,
								"contract": "Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/extensions/ERC721ABurnable.sol:ERC721ABurnable",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_struct(TokenApprovalRef)111_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct ERC721A.TokenApprovalRef)",
								"numberOfBytes": "32",
								"value": "t_struct(TokenApprovalRef)111_storage"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(TokenApprovalRef)111_storage": {
								"encoding": "inplace",
								"label": "struct ERC721A.TokenApprovalRef",
								"members": [
									{
										"astId": 110,
										"contract": "Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/extensions/ERC721ABurnable.sol:ERC721ABurnable",
										"label": "value",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"MintERC2309QuantityExceedsLimit()": [
								{
									"notice": "The `quantity` minted with ERC2309 exceeds the safety limit."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"OwnershipNotInitializedForExtraData()": [
								{
									"notice": "The `extraData` cannot be set on an unintialized ownership slot."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/extensions/IERC721ABurnable.sol": {
				"IERC721ABurnable": {
					"abi": [
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintERC2309QuantityExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnershipNotInitializedForExtraData",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "ConsecutiveTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of ERC721ABurnable.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"ConsecutiveTransfer(uint256,uint256,address,address)": {
								"details": "Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in `owner`'s account."
							},
							"burn(uint256)": {
								"details": "Burns `tokenId`. See {ERC721A-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}."
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"totalSupply()": {
								"details": "Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of ERC721ABurnable.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"ConsecutiveTransfer(uint256,uint256,address,address)\":{\"details\":\"Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in `owner`'s account.\"},\"burn(uint256)\":{\"details\":\"Burns `tokenId`. See {ERC721A-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}.\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/extensions/IERC721ABurnable.sol\":\"IERC721ABurnable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":5000000},\"remappings\":[]},\"sources\":{\"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/IERC721A.sol\":{\"keccak256\":\"0xd57233c199fee856d2380f9428a8b801c1745a32a7152898bf1f457c3dceb440\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75fa266aa2b05953bd62a27c19b0a045f3b6eb0059ad961764df987f4a5a08d4\",\"dweb:/ipfs/QmYxbu6xpfdoyraQ1457zhk3d8sPbvLvSdXRANcJdDEWsF\"]},\"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/extensions/IERC721ABurnable.sol\":{\"keccak256\":\"0xc97afd693c249759d1237f6c0263933396b209ef7ec7f6607f623fe16613216c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://948f3514c1b7d0cff074d8628c7cc9c30a2804af3a79959a747163421735787d\",\"dweb:/ipfs/QmbfyqjtgQDj4aVBKcXd5CV8ZsmX9wYBLFFsJyj7FEUK7d\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"MintERC2309QuantityExceedsLimit()": [
								{
									"notice": "The `quantity` minted with ERC2309 exceeds the safety limit."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"OwnershipNotInitializedForExtraData()": [
								{
									"notice": "The `extraData` cannot be set on an unintialized ownership slot."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)//mocks/ERC721ABurnableMock.sol": {
				"ast": {
					"absolutePath": "Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)//mocks/ERC721ABurnableMock.sol",
					"exportedSymbols": {
						"ERC721A": [
							1884
						],
						"ERC721ABurnable": [
							2113
						],
						"ERC721ABurnableMock": [
							87
						],
						"ERC721A__IERC721Receiver": [
							105
						],
						"IERC721A": [
							2090
						],
						"IERC721ABurnable": [
							2126
						]
					},
					"id": 88,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "1379:23:0"
						},
						{
							"absolutePath": "Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/extensions/ERC721ABurnable.sol",
							"file": "../extensions/ERC721ABurnable.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 88,
							"sourceUnit": 2114,
							"src": "1404:43:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3,
										"name": "ERC721A",
										"nameLocations": [
											"1481:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1884,
										"src": "1481:7:0"
									},
									"id": 4,
									"nodeType": "InheritanceSpecifier",
									"src": "1481:7:0"
								},
								{
									"baseName": {
										"id": 5,
										"name": "ERC721ABurnable",
										"nameLocations": [
											"1490:15:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2113,
										"src": "1490:15:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "1490:15:0"
								}
							],
							"canonicalName": "ERC721ABurnableMock",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 87,
							"linearizedBaseContracts": [
								87,
								2113,
								2126,
								1884,
								2090
							],
							"name": "ERC721ABurnableMock",
							"nameLocation": "1458:19:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 17,
										"nodeType": "Block",
										"src": "1592:2:0",
										"statements": []
									},
									"id": 18,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 13,
													"name": "name_",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1576:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 14,
													"name": "symbol_",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 10,
													"src": "1583:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 15,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 12,
												"name": "ERC721A",
												"nameLocations": [
													"1568:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1884,
												"src": "1568:7:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1568:23:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1538:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "1524:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 7,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1524:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1559:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "1545:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 9,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1545:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1523:44:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1592:0:0"
									},
									"scope": 87,
									"src": "1512:82:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 29,
										"nodeType": "Block",
										"src": "1660:40:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 26,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 20,
															"src": "1685:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 25,
														"name": "_exists",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 865,
														"src": "1677:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (uint256) view returns (bool)"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1677:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 24,
												"id": 28,
												"nodeType": "Return",
												"src": "1670:23:0"
											}
										]
									},
									"functionSelector": "4f558e79",
									"id": 30,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "exists",
									"nameLocation": "1609:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1624:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1616:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 19,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1616:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1615:17:0"
									},
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1654:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 22,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1654:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1653:6:0"
									},
									"scope": 87,
									"src": "1600:100:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 42,
										"nodeType": "Block",
										"src": "1761:40:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 38,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "1781:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 39,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 34,
															"src": "1785:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 37,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1517,
															1532
														],
														"referencedDeclaration": 1532,
														"src": "1771:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 40,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1771:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 41,
												"nodeType": "ExpressionStatement",
												"src": "1771:23:0"
											}
										]
									},
									"functionSelector": "a1448194",
									"id": 43,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeMint",
									"nameLocation": "1715:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1732:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "1724:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 31,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1724:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "1744:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "1736:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 33,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1736:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1723:30:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1761:0:0"
									},
									"scope": 87,
									"src": "1706:95:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 55,
										"nodeType": "Block",
										"src": "1890:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 52,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 45,
															"src": "1920:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 51,
														"name": "_ownershipAt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 548,
														"src": "1907:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_struct$_TokenOwnership_$1935_memory_ptr_$",
															"typeString": "function (uint256) view returns (struct IERC721A.TokenOwnership memory)"
														}
													},
													"id": 53,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1907:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$1935_memory_ptr",
														"typeString": "struct IERC721A.TokenOwnership memory"
													}
												},
												"functionReturnParameters": 50,
												"id": 54,
												"nodeType": "Return",
												"src": "1900:26:0"
											}
										]
									},
									"functionSelector": "f2523633",
									"id": 56,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getOwnershipAt",
									"nameLocation": "1816:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "1839:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 56,
												"src": "1831:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 44,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1831:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1830:15:0"
									},
									"returnParameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 56,
												"src": "1867:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenOwnership_$1935_memory_ptr",
													"typeString": "struct IERC721A.TokenOwnership"
												},
												"typeName": {
													"id": 48,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 47,
														"name": "TokenOwnership",
														"nameLocations": [
															"1867:14:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1935,
														"src": "1867:14:0"
													},
													"referencedDeclaration": 1935,
													"src": "1867:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$1935_storage_ptr",
														"typeString": "struct IERC721A.TokenOwnership"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1866:23:0"
									},
									"scope": 87,
									"src": "1807:126:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 64,
										"nodeType": "Block",
										"src": "1992:38:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 61,
														"name": "_totalMinted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 272,
														"src": "2009:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 62,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2009:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 60,
												"id": 63,
												"nodeType": "Return",
												"src": "2002:21:0"
											}
										]
									},
									"functionSelector": "a2309ff8",
									"id": 65,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalMinted",
									"nameLocation": "1948:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1959:2:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 65,
												"src": "1983:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1983:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1982:9:0"
									},
									"scope": 87,
									"src": "1939:91:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 73,
										"nodeType": "Block",
										"src": "2089:38:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 70,
														"name": "_totalBurned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 281,
														"src": "2106:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 71,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2106:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 69,
												"id": 72,
												"nodeType": "Return",
												"src": "2099:21:0"
											}
										]
									},
									"functionSelector": "d89135cd",
									"id": 74,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalBurned",
									"nameLocation": "2045:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2056:2:0"
									},
									"returnParameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 68,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "2080:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 67,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2080:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2079:9:0"
									},
									"scope": 87,
									"src": "2036:91:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 85,
										"nodeType": "Block",
										"src": "2200:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 82,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 76,
															"src": "2231:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 81,
														"name": "_numberBurned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 345,
														"src": "2217:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 83,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2217:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 80,
												"id": 84,
												"nodeType": "Return",
												"src": "2210:27:0"
											}
										]
									},
									"functionSelector": "2478d639",
									"id": 86,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "numberBurned",
									"nameLocation": "2142:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2163:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 86,
												"src": "2155:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 75,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2155:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2154:15:0"
									},
									"returnParameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 86,
												"src": "2191:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 78,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2191:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2190:9:0"
									},
									"scope": 87,
									"src": "2133:111:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 88,
							"src": "1449:797:0",
							"usedErrors": [
								1890,
								1893,
								1896,
								1899,
								1902,
								1905,
								1908,
								1911,
								1914,
								1917,
								1920,
								1923,
								1926
							],
							"usedEvents": [
								1958,
								1967,
								1976,
								2089
							]
						}
					],
					"src": "1379:868:0"
				},
				"id": 0
			},
			"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol": {
				"ast": {
					"absolutePath": "Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol",
					"exportedSymbols": {
						"ERC721A": [
							1884
						],
						"ERC721A__IERC721Receiver": [
							105
						],
						"IERC721A": [
							2090
						]
					},
					"id": 1885,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 89,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "1378:23:1"
						},
						{
							"absolutePath": "Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/IERC721A.sol",
							"file": "./IERC721A.sol",
							"id": 90,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1885,
							"sourceUnit": 2091,
							"src": "1403:24:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ERC721A__IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 91,
								"nodeType": "StructuredDocumentation",
								"src": "1429:51:1",
								"text": " @dev Interface of ERC721 token receiver."
							},
							"fullyImplemented": false,
							"id": 105,
							"linearizedBaseContracts": [
								105
							],
							"name": "ERC721A__IERC721Receiver",
							"nameLocation": "1491:24:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "150b7a02",
									"id": 104,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "1531:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1565:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1557:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1591:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1583:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 94,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1613:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1605:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1605:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1645:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1630:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 98,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1630:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:108:1"
									},
									"returnParameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 102,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1674:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 101,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1674:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1673:8:1"
									},
									"scope": 105,
									"src": "1522:160:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1885,
							"src": "1481:203:1",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 107,
										"name": "IERC721A",
										"nameLocations": [
											"2209:8:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2090,
										"src": "2209:8:1"
									},
									"id": 108,
									"nodeType": "InheritanceSpecifier",
									"src": "2209:8:1"
								}
							],
							"canonicalName": "ERC721A",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 106,
								"nodeType": "StructuredDocumentation",
								"src": "1686:502:1",
								"text": " @title ERC721A\n @dev Implementation of the [ERC721](https://eips.ethereum.org/EIPS/eip-721)\n Non-Fungible Token Standard, including the Metadata extension.\n Optimized for lower gas during batch mints.\n Token IDs are minted in sequential order (e.g. 0, 1, 2, 3, ...)\n starting from `_startTokenId()`.\n Assumptions:\n - An owner cannot have more than 2**64 - 1 (max value of uint64) of supply.\n - The maximum token ID cannot exceed 2**256 - 1 (max value of uint256)."
							},
							"fullyImplemented": true,
							"id": 1884,
							"linearizedBaseContracts": [
								1884,
								2090
							],
							"name": "ERC721A",
							"nameLocation": "2198:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ERC721A.TokenApprovalRef",
									"id": 111,
									"members": [
										{
											"constant": false,
											"id": 110,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "2351:5:1",
											"nodeType": "VariableDeclaration",
											"scope": 111,
											"src": "2343:13:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 109,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2343:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TokenApprovalRef",
									"nameLocation": "2316:16:1",
									"nodeType": "StructDefinition",
									"scope": 1884,
									"src": "2309:54:1",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 119,
									"mutability": "constant",
									"name": "_BITMASK_ADDRESS_DATA_ENTRY",
									"nameLocation": "2624:27:1",
									"nodeType": "VariableDeclaration",
									"scope": 1884,
									"src": "2599:68:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 112,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2599:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_18446744073709551615_by_1",
											"typeString": "int_const 18446744073709551615"
										},
										"id": 118,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_18446744073709551616_by_1",
														"typeString": "int_const 18446744073709551616"
													},
													"id": 115,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 113,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2655:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "3634",
														"id": 114,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2660:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_64_by_1",
															"typeString": "int_const 64"
														},
														"value": "64"
													},
													"src": "2655:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18446744073709551616_by_1",
														"typeString": "int_const 18446744073709551616"
													}
												}
											],
											"id": 116,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "2654:9:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_18446744073709551616_by_1",
												"typeString": "int_const 18446744073709551616"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 117,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2666:1:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "2654:13:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18446744073709551615_by_1",
											"typeString": "int_const 18446744073709551615"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 122,
									"mutability": "constant",
									"name": "_BITPOS_NUMBER_MINTED",
									"nameLocation": "2765:21:1",
									"nodeType": "VariableDeclaration",
									"scope": 1884,
									"src": "2740:51:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 120,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2740:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3634",
										"id": 121,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2789:2:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_64_by_1",
											"typeString": "int_const 64"
										},
										"value": "64"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 125,
									"mutability": "constant",
									"name": "_BITPOS_NUMBER_BURNED",
									"nameLocation": "2889:21:1",
									"nodeType": "VariableDeclaration",
									"scope": 1884,
									"src": "2864:52:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 123,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2864:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313238",
										"id": 124,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2913:3:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_128_by_1",
											"typeString": "int_const 128"
										},
										"value": "128"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 128,
									"mutability": "constant",
									"name": "_BITPOS_AUX",
									"nameLocation": "3005:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 1884,
									"src": "2980:42:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 126,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2980:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313932",
										"id": 127,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3019:3:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_192_by_1",
											"typeString": "int_const 192"
										},
										"value": "192"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 136,
									"mutability": "constant",
									"name": "_BITMASK_AUX_COMPLEMENT",
									"nameLocation": "3135:23:1",
									"nodeType": "VariableDeclaration",
									"scope": 1884,
									"src": "3110:65:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 129,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3110:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512895_by_1",
											"typeString": "int_const 6277...(50 digits omitted)...2895"
										},
										"id": 135,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
														"typeString": "int_const 6277...(50 digits omitted)...2896"
													},
													"id": 132,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 130,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3162:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "313932",
														"id": 131,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3167:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_192_by_1",
															"typeString": "int_const 192"
														},
														"value": "192"
													},
													"src": "3162:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
														"typeString": "int_const 6277...(50 digits omitted)...2896"
													}
												}
											],
											"id": 133,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "3161:10:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
												"typeString": "int_const 6277...(50 digits omitted)...2896"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 134,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3174:1:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "3161:14:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512895_by_1",
											"typeString": "int_const 6277...(50 digits omitted)...2895"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 139,
									"mutability": "constant",
									"name": "_BITPOS_START_TIMESTAMP",
									"nameLocation": "3272:23:1",
									"nodeType": "VariableDeclaration",
									"scope": 1884,
									"src": "3247:54:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 137,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3247:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313630",
										"id": 138,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3298:3:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_160_by_1",
											"typeString": "int_const 160"
										},
										"value": "160"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 144,
									"mutability": "constant",
									"name": "_BITMASK_BURNED",
									"nameLocation": "3394:15:1",
									"nodeType": "VariableDeclaration",
									"scope": 1884,
									"src": "3369:51:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 140,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3369:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_26959946667150639794667015087019630673637144422540572481103610249216_by_1",
											"typeString": "int_const 2695...(60 digits omitted)...9216"
										},
										"id": 143,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31",
											"id": 141,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3412:1:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"nodeType": "BinaryOperation",
										"operator": "<<",
										"rightExpression": {
											"hexValue": "323234",
											"id": 142,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3417:3:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_224_by_1",
												"typeString": "int_const 224"
											},
											"value": "224"
										},
										"src": "3412:8:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_26959946667150639794667015087019630673637144422540572481103610249216_by_1",
											"typeString": "int_const 2695...(60 digits omitted)...9216"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 147,
									"mutability": "constant",
									"name": "_BITPOS_NEXT_INITIALIZED",
									"nameLocation": "3526:24:1",
									"nodeType": "VariableDeclaration",
									"scope": 1884,
									"src": "3501:55:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 145,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3501:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "323235",
										"id": 146,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3553:3:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_225_by_1",
											"typeString": "int_const 225"
										},
										"value": "225"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 152,
									"mutability": "constant",
									"name": "_BITMASK_NEXT_INITIALIZED",
									"nameLocation": "3658:25:1",
									"nodeType": "VariableDeclaration",
									"scope": 1884,
									"src": "3633:61:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 148,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3633:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_53919893334301279589334030174039261347274288845081144962207220498432_by_1",
											"typeString": "int_const 5391...(60 digits omitted)...8432"
										},
										"id": 151,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31",
											"id": 149,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3686:1:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"nodeType": "BinaryOperation",
										"operator": "<<",
										"rightExpression": {
											"hexValue": "323235",
											"id": 150,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3691:3:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_225_by_1",
												"typeString": "int_const 225"
											},
											"value": "225"
										},
										"src": "3686:8:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_53919893334301279589334030174039261347274288845081144962207220498432_by_1",
											"typeString": "int_const 5391...(60 digits omitted)...8432"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 155,
									"mutability": "constant",
									"name": "_BITPOS_EXTRA_DATA",
									"nameLocation": "3786:18:1",
									"nodeType": "VariableDeclaration",
									"scope": 1884,
									"src": "3761:49:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 153,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3761:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "323332",
										"id": 154,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3807:3:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_232_by_1",
											"typeString": "int_const 232"
										},
										"value": "232"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 163,
									"mutability": "constant",
									"name": "_BITMASK_EXTRA_DATA_COMPLEMENT",
									"nameLocation": "3928:30:1",
									"nodeType": "VariableDeclaration",
									"scope": 1884,
									"src": "3903:72:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 156,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3903:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799295_by_1",
											"typeString": "int_const 6901...(62 digits omitted)...9295"
										},
										"id": 162,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799296_by_1",
														"typeString": "int_const 6901...(62 digits omitted)...9296"
													},
													"id": 159,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 157,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3962:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "323332",
														"id": 158,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3967:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_232_by_1",
															"typeString": "int_const 232"
														},
														"value": "232"
													},
													"src": "3962:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799296_by_1",
														"typeString": "int_const 6901...(62 digits omitted)...9296"
													}
												}
											],
											"id": 160,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "3961:10:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799296_by_1",
												"typeString": "int_const 6901...(62 digits omitted)...9296"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 161,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3974:1:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "3961:14:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799295_by_1",
											"typeString": "int_const 6901...(62 digits omitted)...9295"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 171,
									"mutability": "constant",
									"name": "_BITMASK_ADDRESS",
									"nameLocation": "4060:16:1",
									"nodeType": "VariableDeclaration",
									"scope": 1884,
									"src": "4035:58:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 164,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "4035:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542975_by_1",
											"typeString": "int_const 1461...(41 digits omitted)...2975"
										},
										"id": 170,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542976_by_1",
														"typeString": "int_const 1461...(41 digits omitted)...2976"
													},
													"id": 167,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 165,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4080:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "313630",
														"id": 166,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4085:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_160_by_1",
															"typeString": "int_const 160"
														},
														"value": "160"
													},
													"src": "4080:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542976_by_1",
														"typeString": "int_const 1461...(41 digits omitted)...2976"
													}
												}
											],
											"id": 168,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "4079:10:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542976_by_1",
												"typeString": "int_const 1461...(41 digits omitted)...2976"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 169,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "4092:1:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "4079:14:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542975_by_1",
											"typeString": "int_const 1461...(41 digits omitted)...2975"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 174,
									"mutability": "constant",
									"name": "_MAX_MINT_ERC2309_QUANTITY_LIMIT",
									"nameLocation": "4401:32:1",
									"nodeType": "VariableDeclaration",
									"scope": 1884,
									"src": "4376:64:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 172,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "4376:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "35303030",
										"id": 173,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4436:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5000_by_1",
											"typeString": "int_const 5000"
										},
										"value": "5000"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 177,
									"mutability": "constant",
									"name": "_TRANSFER_EVENT_SIGNATURE",
									"nameLocation": "4587:25:1",
									"nodeType": "VariableDeclaration",
									"scope": 1884,
									"src": "4562:127:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 175,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "4562:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307864646632353261643162653263383962363963326230363866633337386461613935326261376631363363346131313632386635356134646635323362336566",
										"id": 176,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4623:66:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100389287136786176327247604509743168900146139575972864366142685224231313322991_by_1",
											"typeString": "int_const 1003...(70 digits omitted)...2991"
										},
										"value": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 179,
									"mutability": "mutable",
									"name": "_currentIndex",
									"nameLocation": "4932:13:1",
									"nodeType": "VariableDeclaration",
									"scope": 1884,
									"src": "4916:29:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 178,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "4916:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 181,
									"mutability": "mutable",
									"name": "_burnCounter",
									"nameLocation": "5004:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 1884,
									"src": "4988:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 180,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "4988:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 183,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "5056:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 1884,
									"src": "5041:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 182,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "5041:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 185,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "5103:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 1884,
									"src": "5088:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 184,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "5088:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 189,
									"mutability": "mutable",
									"name": "_packedOwnerships",
									"nameLocation": "5530:17:1",
									"nodeType": "VariableDeclaration",
									"scope": 1884,
									"src": "5494:53:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 188,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 186,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "5502:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "5494:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 187,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "5513:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 193,
									"mutability": "mutable",
									"name": "_packedAddressData",
									"nameLocation": "5789:18:1",
									"nodeType": "VariableDeclaration",
									"scope": 1884,
									"src": "5753:54:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 192,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 190,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "5761:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "5753:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 191,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "5772:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 198,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "5909:15:1",
									"nodeType": "VariableDeclaration",
									"scope": 1884,
									"src": "5864:60:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$111_storage_$",
										"typeString": "mapping(uint256 => struct ERC721A.TokenApprovalRef)"
									},
									"typeName": {
										"id": 197,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 194,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "5872:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "5864:36:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$111_storage_$",
											"typeString": "mapping(uint256 => struct ERC721A.TokenApprovalRef)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 196,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 195,
												"name": "TokenApprovalRef",
												"nameLocations": [
													"5883:16:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 111,
												"src": "5883:16:1"
											},
											"referencedDeclaration": 111,
											"src": "5883:16:1",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_TokenApprovalRef_$111_storage_ptr",
												"typeString": "struct ERC721A.TokenApprovalRef"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 204,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "6032:18:1",
									"nodeType": "VariableDeclaration",
									"scope": 1884,
									"src": "5979:71:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 203,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 199,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "5987:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "5979:44:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 202,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 200,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "6006:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "5998:24:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 201,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "6017:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 224,
										"nodeType": "Block",
										"src": "6296:98:1",
										"statements": [
											{
												"expression": {
													"id": 213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 211,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 183,
														"src": "6306:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 212,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 206,
														"src": "6314:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "6306:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 214,
												"nodeType": "ExpressionStatement",
												"src": "6306:13:1"
											},
											{
												"expression": {
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 215,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 185,
														"src": "6329:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 216,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "6339:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "6329:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 218,
												"nodeType": "ExpressionStatement",
												"src": "6329:17:1"
											},
											{
												"expression": {
													"id": 222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 219,
														"name": "_currentIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 179,
														"src": "6356:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 220,
															"name": "_startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 234,
															"src": "6372:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 221,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6372:15:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6356:31:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 223,
												"nodeType": "ExpressionStatement",
												"src": "6356:31:1"
											}
										]
									},
									"id": 225,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "6266:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 225,
												"src": "6252:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 205,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6252:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "6287:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 225,
												"src": "6273:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 207,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6273:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6251:44:1"
									},
									"returnParameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6296:0:1"
									},
									"scope": 1884,
									"src": "6240:154:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 233,
										"nodeType": "Block",
										"src": "6785:25:1",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6802:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 230,
												"id": 232,
												"nodeType": "Return",
												"src": "6795:8:1"
											}
										]
									},
									"documentation": {
										"id": 226,
										"nodeType": "StructuredDocumentation",
										"src": "6590:125:1",
										"text": " @dev Returns the starting token ID.\n To change the starting token ID, please override this function."
									},
									"id": 234,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_startTokenId",
									"nameLocation": "6729:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6742:2:1"
									},
									"returnParameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "6776:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 228,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6776:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6775:9:1"
									},
									"scope": 1884,
									"src": "6720:90:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 242,
										"nodeType": "Block",
										"src": "6948:37:1",
										"statements": [
											{
												"expression": {
													"id": 240,
													"name": "_currentIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 179,
													"src": "6965:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 239,
												"id": 241,
												"nodeType": "Return",
												"src": "6958:20:1"
											}
										]
									},
									"documentation": {
										"id": 235,
										"nodeType": "StructuredDocumentation",
										"src": "6816:63:1",
										"text": " @dev Returns the next token ID to be minted."
									},
									"id": 243,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nextTokenId",
									"nameLocation": "6893:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 236,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6905:2:1"
									},
									"returnParameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "6939:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6939:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6938:9:1"
									},
									"scope": 1884,
									"src": "6884:101:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1941
									],
									"body": {
										"id": 258,
										"nodeType": "Block",
										"src": "7258:247:1",
										"statements": [
											{
												"id": 257,
												"nodeType": "UncheckedBlock",
												"src": "7411:88:1",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 255,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 252,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 250,
																	"name": "_currentIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 179,
																	"src": "7442:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 251,
																	"name": "_burnCounter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 181,
																	"src": "7458:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7442:28:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 253,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 234,
																	"src": "7473:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 254,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7473:15:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7442:46:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 249,
														"id": 256,
														"nodeType": "Return",
														"src": "7435:53:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 244,
										"nodeType": "StructuredDocumentation",
										"src": "6991:192:1",
										"text": " @dev Returns the total number of tokens in existence.\n Burned tokens will reduce the count.\n To get the total number of tokens minted, please see {_totalMinted}."
									},
									"functionSelector": "18160ddd",
									"id": 259,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "7197:11:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 246,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7231:8:1"
									},
									"parameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7208:2:1"
									},
									"returnParameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "7249:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 247,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7249:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7248:9:1"
									},
									"scope": 1884,
									"src": "7188:317:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 271,
										"nodeType": "Block",
										"src": "7662:226:1",
										"statements": [
											{
												"id": 270,
												"nodeType": "UncheckedBlock",
												"src": "7809:73:1",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 268,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 265,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 179,
																"src": "7840:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 266,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 234,
																	"src": "7856:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 267,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7856:15:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7840:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 264,
														"id": 269,
														"nodeType": "Return",
														"src": "7833:38:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "7511:82:1",
										"text": " @dev Returns the total amount of tokens minted in the contract."
									},
									"id": 272,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_totalMinted",
									"nameLocation": "7607:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 261,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7619:2:1"
									},
									"returnParameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "7653:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7653:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7652:9:1"
									},
									"scope": 1884,
									"src": "7598:290:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 280,
										"nodeType": "Block",
										"src": "8029:36:1",
										"statements": [
											{
												"expression": {
													"id": 278,
													"name": "_burnCounter",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 181,
													"src": "8046:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 277,
												"id": 279,
												"nodeType": "Return",
												"src": "8039:19:1"
											}
										]
									},
									"documentation": {
										"id": 273,
										"nodeType": "StructuredDocumentation",
										"src": "7894:66:1",
										"text": " @dev Returns the total number of tokens burned."
									},
									"id": 281,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_totalBurned",
									"nameLocation": "7974:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7986:2:1"
									},
									"returnParameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "8020:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8020:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8019:9:1"
									},
									"scope": 1884,
									"src": "7965:100:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1984
									],
									"body": {
										"id": 308,
										"nodeType": "Block",
										"src": "8420:158:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 290,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 284,
														"src": "8434:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 293,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8451:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 292,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8443:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 291,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8443:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 294,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8443:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8434:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 301,
												"nodeType": "IfStatement",
												"src": "8430:69:1",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 297,
																	"name": "BalanceQueryForZeroAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1896,
																	"src": "8463:26:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 298,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8490:8:1",
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "8463:35:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 296,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1883,
															"src": "8455:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 299,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8455:44:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 300,
													"nodeType": "ExpressionStatement",
													"src": "8455:44:1"
												}
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 302,
															"name": "_packedAddressData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 193,
															"src": "8516:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 304,
														"indexExpression": {
															"id": 303,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 284,
															"src": "8535:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "8516:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"id": 305,
														"name": "_BITMASK_ADDRESS_DATA_ENTRY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 119,
														"src": "8544:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8516:55:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 289,
												"id": 307,
												"nodeType": "Return",
												"src": "8509:62:1"
											}
										]
									},
									"documentation": {
										"id": 282,
										"nodeType": "StructuredDocumentation",
										"src": "8260:74:1",
										"text": " @dev Returns the number of tokens in `owner`'s account."
									},
									"functionSelector": "70a08231",
									"id": 309,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "8348:9:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 286,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8393:8:1"
									},
									"parameters": {
										"id": 285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8366:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "8358:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 283,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8358:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8357:15:1"
									},
									"returnParameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "8411:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8411:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8410:9:1"
									},
									"scope": 1884,
									"src": "8339:239:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 326,
										"nodeType": "Block",
										"src": "8725:106:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 321,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 317,
																		"name": "_packedAddressData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 193,
																		"src": "8743:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 319,
																	"indexExpression": {
																		"id": 318,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 312,
																		"src": "8762:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "8743:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"id": 320,
																	"name": "_BITPOS_NUMBER_MINTED",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 122,
																	"src": "8772:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8743:50:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 322,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "8742:52:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"id": 323,
														"name": "_BITMASK_ADDRESS_DATA_ENTRY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 119,
														"src": "8797:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8742:82:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 316,
												"id": 325,
												"nodeType": "Return",
												"src": "8735:89:1"
											}
										]
									},
									"documentation": {
										"id": 310,
										"nodeType": "StructuredDocumentation",
										"src": "8584:66:1",
										"text": " Returns the number of tokens minted by `owner`."
									},
									"id": 327,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_numberMinted",
									"nameLocation": "8664:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8686:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "8678:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 311,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8678:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8677:15:1"
									},
									"returnParameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "8716:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 314,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8716:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8715:9:1"
									},
									"scope": 1884,
									"src": "8655:176:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "8994:106:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 339,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 335,
																		"name": "_packedAddressData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 193,
																		"src": "9012:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 337,
																	"indexExpression": {
																		"id": 336,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 330,
																		"src": "9031:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "9012:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"id": 338,
																	"name": "_BITPOS_NUMBER_BURNED",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 125,
																	"src": "9041:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9012:50:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 340,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9011:52:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"id": 341,
														"name": "_BITMASK_ADDRESS_DATA_ENTRY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 119,
														"src": "9066:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9011:82:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 334,
												"id": 343,
												"nodeType": "Return",
												"src": "9004:89:1"
											}
										]
									},
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "8837:82:1",
										"text": " Returns the number of tokens burned by or on behalf of `owner`."
									},
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_numberBurned",
									"nameLocation": "8933:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8955:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "8947:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8947:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8946:15:1"
									},
									"returnParameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "8985:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8985:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8984:9:1"
									},
									"scope": 1884,
									"src": "8924:176:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "9276:72:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 355,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 193,
																	"src": "9300:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 357,
																"indexExpression": {
																	"id": 356,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 348,
																	"src": "9319:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9300:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"id": 358,
																"name": "_BITPOS_AUX",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 128,
																"src": "9329:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9300:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 354,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "9293:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint64_$",
															"typeString": "type(uint64)"
														},
														"typeName": {
															"id": 353,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "9293:6:1",
															"typeDescriptions": {}
														}
													},
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9293:48:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 352,
												"id": 361,
												"nodeType": "Return",
												"src": "9286:55:1"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "9106:102:1",
										"text": " Returns the auxiliary data for `owner`. (e.g. number of whitelist mint slots used)."
									},
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getAux",
									"nameLocation": "9222:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9238:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "9230:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 347,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9230:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9229:15:1"
									},
									"returnParameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "9268:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 350,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "9268:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9267:8:1"
									},
									"scope": 1884,
									"src": "9213:135:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 399,
										"nodeType": "Block",
										"src": "9591:334:1",
										"statements": [
											{
												"assignments": [
													372
												],
												"declarations": [
													{
														"constant": false,
														"id": 372,
														"mutability": "mutable",
														"name": "packed",
														"nameLocation": "9609:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 399,
														"src": "9601:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 371,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9601:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 376,
												"initialValue": {
													"baseExpression": {
														"id": 373,
														"name": "_packedAddressData",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "9618:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 375,
													"indexExpression": {
														"id": 374,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 366,
														"src": "9637:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9618:25:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9601:42:1"
											},
											{
												"assignments": [
													378
												],
												"declarations": [
													{
														"constant": false,
														"id": 378,
														"mutability": "mutable",
														"name": "auxCasted",
														"nameLocation": "9661:9:1",
														"nodeType": "VariableDeclaration",
														"scope": 399,
														"src": "9653:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 377,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9653:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 379,
												"nodeType": "VariableDeclarationStatement",
												"src": "9653:17:1"
											},
											{
												"AST": {
													"nativeSrc": "9753:40:1",
													"nodeType": "YulBlock",
													"src": "9753:40:1",
													"statements": [
														{
															"nativeSrc": "9767:16:1",
															"nodeType": "YulAssignment",
															"src": "9767:16:1",
															"value": {
																"name": "aux",
																"nativeSrc": "9780:3:1",
																"nodeType": "YulIdentifier",
																"src": "9780:3:1"
															},
															"variableNames": [
																{
																	"name": "auxCasted",
																	"nativeSrc": "9767:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "9767:9:1"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 368,
														"isOffset": false,
														"isSlot": false,
														"src": "9780:3:1",
														"valueSize": 1
													},
													{
														"declaration": 378,
														"isOffset": false,
														"isSlot": false,
														"src": "9767:9:1",
														"valueSize": 1
													}
												],
												"id": 380,
												"nodeType": "InlineAssembly",
												"src": "9744:49:1"
											},
											{
												"expression": {
													"id": 391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 381,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 372,
														"src": "9802:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 390,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 384,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 382,
																		"name": "packed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 372,
																		"src": "9812:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&",
																	"rightExpression": {
																		"id": 383,
																		"name": "_BITMASK_AUX_COMPLEMENT",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 136,
																		"src": "9821:23:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "9812:32:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 385,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "9811:34:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "|",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 388,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 386,
																		"name": "auxCasted",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 378,
																		"src": "9849:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<<",
																	"rightExpression": {
																		"id": 387,
																		"name": "_BITPOS_AUX",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 128,
																		"src": "9862:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "9849:24:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 389,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "9848:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "9811:63:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9802:72:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 392,
												"nodeType": "ExpressionStatement",
												"src": "9802:72:1"
											},
											{
												"expression": {
													"id": 397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 393,
															"name": "_packedAddressData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 193,
															"src": "9884:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 395,
														"indexExpression": {
															"id": 394,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 366,
															"src": "9903:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9884:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 396,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 372,
														"src": "9912:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9884:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 398,
												"nodeType": "ExpressionStatement",
												"src": "9884:34:1"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "9354:171:1",
										"text": " Sets the auxiliary data for `owner`. (e.g. number of whitelist mint slots used).\n If there are multiple variables, please pack them into a uint64."
									},
									"id": 400,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setAux",
									"nameLocation": "9539:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9555:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "9547:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9547:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "aux",
												"nameLocation": "9569:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "9562:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 367,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "9562:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9546:27:1"
									},
									"returnParameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9591:0:1"
									},
									"scope": 1884,
									"src": "9530:395:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1949
									],
									"body": {
										"id": 421,
										"nodeType": "Block",
										"src": "10549:539:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 415,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 411,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 409,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 403,
																"src": "10861:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30783031666663396137",
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10876:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_33540519_by_1",
																	"typeString": "int_const 33540519"
																},
																"value": "0x01ffc9a7"
															},
															"src": "10861:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 414,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 412,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 403,
																"src": "10937:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30783830616335386364",
																"id": 413,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10952:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2158778573_by_1",
																	"typeString": "int_const 2158778573"
																},
																"value": "0x80ac58cd"
															},
															"src": "10937:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "10861:101:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 418,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 416,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 403,
															"src": "11013:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30783562356531333966",
															"id": 417,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11028:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1532892063_by_1",
																"typeString": "int_const 1532892063"
															},
															"value": "0x5b5e139f"
														},
														"src": "11013:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "10861:177:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 408,
												"id": 420,
												"nodeType": "Return",
												"src": "10842:196:1"
											}
										]
									},
									"documentation": {
										"id": 401,
										"nodeType": "StructuredDocumentation",
										"src": "10112:341:1",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified)\n to learn more about how these ids are created.\n This function call must use less than 30000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 422,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "10467:17:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 405,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "10525:8:1"
									},
									"parameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "10492:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "10485:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 402,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "10485:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10484:20:1"
									},
									"returnParameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "10543:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 406,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10543:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10542:6:1"
									},
									"scope": 1884,
									"src": "10458:630:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2064
									],
									"body": {
										"id": 431,
										"nodeType": "Block",
										"src": "11411:29:1",
										"statements": [
											{
												"expression": {
													"id": 429,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 183,
													"src": "11428:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 428,
												"id": 430,
												"nodeType": "Return",
												"src": "11421:12:1"
											}
										]
									},
									"documentation": {
										"id": 423,
										"nodeType": "StructuredDocumentation",
										"src": "11279:58:1",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 432,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "11351:4:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 425,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "11378:8:1"
									},
									"parameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11355:2:1"
									},
									"returnParameters": {
										"id": 428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 432,
												"src": "11396:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 426,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11396:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11395:15:1"
									},
									"scope": 1884,
									"src": "11342:98:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2070
									],
									"body": {
										"id": 441,
										"nodeType": "Block",
										"src": "11582:31:1",
										"statements": [
											{
												"expression": {
													"id": 439,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 185,
													"src": "11599:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 438,
												"id": 440,
												"nodeType": "Return",
												"src": "11592:14:1"
											}
										]
									},
									"documentation": {
										"id": 433,
										"nodeType": "StructuredDocumentation",
										"src": "11446:60:1",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 442,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "11520:6:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 435,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "11549:8:1"
									},
									"parameters": {
										"id": 434,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11526:2:1"
									},
									"returnParameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "11567:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 436,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11567:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11566:15:1"
									},
									"scope": 1884,
									"src": "11511:102:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2078
									],
									"body": {
										"id": 486,
										"nodeType": "Block",
										"src": "11802:234:1",
										"statements": [
											{
												"condition": {
													"id": 454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "11816:17:1",
													"subExpression": {
														"arguments": [
															{
																"id": 452,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 445,
																"src": "11825:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 451,
															"name": "_exists",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 865,
															"src": "11817:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (uint256) view returns (bool)"
															}
														},
														"id": 453,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11817:16:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 460,
												"nodeType": "IfStatement",
												"src": "11812:68:1",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 456,
																	"name": "URIQueryForNonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1920,
																	"src": "11843:27:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 457,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "11871:8:1",
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "11843:36:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 455,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1883,
															"src": "11835:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 458,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11835:45:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 459,
													"nodeType": "ExpressionStatement",
													"src": "11835:45:1"
												}
											},
											{
												"assignments": [
													462
												],
												"declarations": [
													{
														"constant": false,
														"id": 462,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "11905:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 486,
														"src": "11891:21:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 461,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "11891:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 465,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 463,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 496,
														"src": "11915:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11915:10:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11891:34:1"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 472,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 468,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 462,
																		"src": "11948:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 467,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11942:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 466,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "11942:5:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11942:14:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 470,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11957:6:1",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "11942:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 471,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11967:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "11942:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 483,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12027:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "11942:87:1",
													"trueExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 477,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 462,
																		"src": "11995:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 479,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 445,
																				"src": "12014:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 478,
																			"name": "_toString",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1875,
																			"src": "12004:9:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																				"typeString": "function (uint256) pure returns (string memory)"
																			}
																		},
																		"id": 480,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12004:18:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 475,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "11978:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 476,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "11982:12:1",
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"src": "11978:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 481,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11978:45:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 474,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11971:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 473,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "11971:6:1",
																"typeDescriptions": {}
															}
														},
														"id": 482,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11971:53:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 450,
												"id": 485,
												"nodeType": "Return",
												"src": "11935:94:1"
											}
										]
									},
									"documentation": {
										"id": 443,
										"nodeType": "StructuredDocumentation",
										"src": "11619:90:1",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 487,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "11723:8:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 447,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "11769:8:1"
									},
									"parameters": {
										"id": 446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11740:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "11732:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 444,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11732:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11731:17:1"
									},
									"returnParameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "11787:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 448,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11787:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11786:15:1"
									},
									"scope": 1884,
									"src": "11714:322:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 495,
										"nodeType": "Block",
										"src": "12347:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 493,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12364:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 492,
												"id": 494,
												"nodeType": "Return",
												"src": "12357:9:1"
											}
										]
									},
									"documentation": {
										"id": 488,
										"nodeType": "StructuredDocumentation",
										"src": "12042:234:1",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, it can be overridden in child contracts."
									},
									"id": 496,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "12290:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12298:2:1"
									},
									"returnParameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "12332:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 490,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12332:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12331:15:1"
									},
									"scope": 1884,
									"src": "12281:92:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1992
									],
									"body": {
										"id": 515,
										"nodeType": "Block",
										"src": "12784:69:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 510,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 499,
																			"src": "12836:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 509,
																		"name": "_packedOwnershipOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 661,
																		"src": "12817:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) view returns (uint256)"
																		}
																	},
																	"id": 511,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12817:27:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 508,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12809:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint160_$",
																	"typeString": "type(uint160)"
																},
																"typeName": {
																	"id": 507,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "12809:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 512,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12809:36:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 506,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "12801:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 505,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12801:7:1",
															"typeDescriptions": {}
														}
													},
													"id": 513,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12801:45:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 504,
												"id": 514,
												"nodeType": "Return",
												"src": "12794:52:1"
											}
										]
									},
									"documentation": {
										"id": 497,
										"nodeType": "StructuredDocumentation",
										"src": "12567:131:1",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 516,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "12712:7:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 501,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "12757:8:1"
									},
									"parameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12728:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "12720:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 498,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12720:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12719:17:1"
									},
									"returnParameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "12775:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 502,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12775:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12774:9:1"
									},
									"scope": 1884,
									"src": "12703:150:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 531,
										"nodeType": "Block",
										"src": "13129:71:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 527,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 519,
																	"src": "13184:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 526,
																"name": "_packedOwnershipOf",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 661,
																"src": "13165:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) view returns (uint256)"
																}
															},
															"id": 528,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13165:27:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 525,
														"name": "_unpackedOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 715,
														"src": "13146:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_struct$_TokenOwnership_$1935_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct IERC721A.TokenOwnership memory)"
														}
													},
													"id": 529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13146:47:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$1935_memory_ptr",
														"typeString": "struct IERC721A.TokenOwnership memory"
													}
												},
												"functionReturnParameters": 524,
												"id": 530,
												"nodeType": "Return",
												"src": "13139:54:1"
											}
										]
									},
									"documentation": {
										"id": 517,
										"nodeType": "StructuredDocumentation",
										"src": "12859:172:1",
										"text": " @dev Gas spent here starts off proportional to the maximum mint batch size.\n It gradually moves to O(1) as tokens get transferred around over time."
									},
									"id": 532,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownershipOf",
									"nameLocation": "13045:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13066:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "13058:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 518,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13058:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13057:17:1"
									},
									"returnParameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "13106:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenOwnership_$1935_memory_ptr",
													"typeString": "struct IERC721A.TokenOwnership"
												},
												"typeName": {
													"id": 522,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 521,
														"name": "TokenOwnership",
														"nameLocations": [
															"13106:14:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1935,
														"src": "13106:14:1"
													},
													"referencedDeclaration": 1935,
													"src": "13106:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$1935_storage_ptr",
														"typeString": "struct IERC721A.TokenOwnership"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13105:23:1"
									},
									"scope": 1884,
									"src": "13036:164:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 547,
										"nodeType": "Block",
										"src": "13382:68:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 542,
																"name": "_packedOwnerships",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 189,
																"src": "13418:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																	"typeString": "mapping(uint256 => uint256)"
																}
															},
															"id": 544,
															"indexExpression": {
																"id": 543,
																"name": "index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 535,
																"src": "13436:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "13418:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 541,
														"name": "_unpackedOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 715,
														"src": "13399:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_struct$_TokenOwnership_$1935_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct IERC721A.TokenOwnership memory)"
														}
													},
													"id": 545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13399:44:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$1935_memory_ptr",
														"typeString": "struct IERC721A.TokenOwnership memory"
													}
												},
												"functionReturnParameters": 540,
												"id": 546,
												"nodeType": "Return",
												"src": "13392:51:1"
											}
										]
									},
									"documentation": {
										"id": 533,
										"nodeType": "StructuredDocumentation",
										"src": "13206:80:1",
										"text": " @dev Returns the unpacked `TokenOwnership` struct at `index`."
									},
									"id": 548,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownershipAt",
									"nameLocation": "13300:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "13321:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "13313:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 534,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13313:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13312:15:1"
									},
									"returnParameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "13359:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenOwnership_$1935_memory_ptr",
													"typeString": "struct IERC721A.TokenOwnership"
												},
												"typeName": {
													"id": 538,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 537,
														"name": "TokenOwnership",
														"nameLocations": [
															"13359:14:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1935,
														"src": "13359:14:1"
													},
													"referencedDeclaration": 1935,
													"src": "13359:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$1935_storage_ptr",
														"typeString": "struct IERC721A.TokenOwnership"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13358:23:1"
									},
									"scope": 1884,
									"src": "13291:159:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 562,
										"nodeType": "Block",
										"src": "13714:53:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 556,
															"name": "_packedOwnerships",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 189,
															"src": "13731:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 558,
														"indexExpression": {
															"id": 557,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 551,
															"src": "13749:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "13731:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 559,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13759:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "13731:29:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 555,
												"id": 561,
												"nodeType": "Return",
												"src": "13724:36:1"
											}
										]
									},
									"documentation": {
										"id": 549,
										"nodeType": "StructuredDocumentation",
										"src": "13456:168:1",
										"text": " @dev Returns whether the ownership slot at `index` is initialized.\n An uninitialized slot does not necessarily mean that the slot has no owner."
									},
									"id": 563,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownershipIsInitialized",
									"nameLocation": "13638:23:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "13670:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "13662:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 550,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13662:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13661:15:1"
									},
									"returnParameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "13708:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 553,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13708:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13707:6:1"
									},
									"scope": 1884,
									"src": "13629:138:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 584,
										"nodeType": "Block",
										"src": "13939:128:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 569,
															"name": "_packedOwnerships",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 189,
															"src": "13953:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 571,
														"indexExpression": {
															"id": 570,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 566,
															"src": "13971:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "13953:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 572,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13981:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "13953:29:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 583,
												"nodeType": "IfStatement",
												"src": "13949:112:1",
												"trueBody": {
													"id": 582,
													"nodeType": "Block",
													"src": "13984:77:1",
													"statements": [
														{
															"expression": {
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 574,
																		"name": "_packedOwnerships",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 189,
																		"src": "13998:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 576,
																	"indexExpression": {
																		"id": 575,
																		"name": "index",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 566,
																		"src": "14016:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "13998:24:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 578,
																			"name": "index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 566,
																			"src": "14044:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 577,
																		"name": "_packedOwnershipOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 661,
																		"src": "14025:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) view returns (uint256)"
																		}
																	},
																	"id": 579,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14025:25:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13998:52:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 581,
															"nodeType": "ExpressionStatement",
															"src": "13998:52:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 564,
										"nodeType": "StructuredDocumentation",
										"src": "13773:97:1",
										"text": " @dev Initializes the ownership slot minted at `index` for efficiency purposes."
									},
									"id": 585,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_initializeOwnershipAt",
									"nameLocation": "13884:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "13915:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "13907:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 565,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13907:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13906:15:1"
									},
									"returnParameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13939:0:1"
									},
									"scope": 1884,
									"src": "13875:192:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 660,
										"nodeType": "Block",
										"src": "14227:1895:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 593,
															"name": "_startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 234,
															"src": "14241:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 594,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14241:15:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 595,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 588,
														"src": "14260:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14241:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 654,
												"nodeType": "IfStatement",
												"src": "14237:1822:1",
												"trueBody": {
													"id": 653,
													"nodeType": "Block",
													"src": "14269:1790:1",
													"statements": [
														{
															"expression": {
																"id": 601,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 597,
																	"name": "packed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 591,
																	"src": "14283:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 598,
																		"name": "_packedOwnerships",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 189,
																		"src": "14292:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 600,
																	"indexExpression": {
																		"id": 599,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 588,
																		"src": "14310:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "14292:26:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14283:35:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 602,
															"nodeType": "ExpressionStatement",
															"src": "14283:35:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 605,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 603,
																	"name": "packed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 591,
																	"src": "14416:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 604,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14426:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "14416:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 644,
															"nodeType": "IfStatement",
															"src": "14412:1270:1",
															"trueBody": {
																"id": 643,
																"nodeType": "Block",
																"src": "14429:1253:1",
																"statements": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 608,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 606,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 588,
																				"src": "14451:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">=",
																			"rightExpression": {
																				"id": 607,
																				"name": "_currentIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 179,
																				"src": "14462:13:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "14451:24:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 614,
																		"nodeType": "IfStatement",
																		"src": "14447:77:1",
																		"trueBody": {
																			"expression": {
																				"arguments": [
																					{
																						"expression": {
																							"id": 610,
																							"name": "OwnerQueryForNonexistentToken",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1905,
																							"src": "14485:29:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																								"typeString": "function () pure returns (error)"
																							}
																						},
																						"id": 611,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "14515:8:1",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "14485:38:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					],
																					"id": 609,
																					"name": "_revert",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1883,
																					"src": "14477:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																						"typeString": "function (bytes4) pure"
																					}
																				},
																				"id": 612,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14477:47:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$__$",
																					"typeString": "tuple()"
																				}
																			},
																			"id": 613,
																			"nodeType": "ExpressionStatement",
																			"src": "14477:47:1"
																		}
																	},
																	{
																		"body": {
																			"id": 641,
																			"nodeType": "Block",
																			"src": "15080:588:1",
																			"statements": [
																				{
																					"id": 622,
																					"nodeType": "UncheckedBlock",
																					"src": "15102:96:1",
																					"statements": [
																						{
																							"expression": {
																								"id": 620,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftHandSide": {
																									"id": 615,
																									"name": "packed",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 591,
																									"src": "15138:6:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "Assignment",
																								"operator": "=",
																								"rightHandSide": {
																									"baseExpression": {
																										"id": 616,
																										"name": "_packedOwnerships",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 189,
																										"src": "15147:17:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																											"typeString": "mapping(uint256 => uint256)"
																										}
																									},
																									"id": 619,
																									"indexExpression": {
																										"id": 618,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"nodeType": "UnaryOperation",
																										"operator": "--",
																										"prefix": true,
																										"src": "15165:9:1",
																										"subExpression": {
																											"id": 617,
																											"name": "tokenId",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 588,
																											"src": "15167:7:1",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "15147:28:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "15138:37:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 621,
																							"nodeType": "ExpressionStatement",
																							"src": "15138:37:1"
																						}
																					]
																				},
																				{
																					"condition": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 625,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 623,
																							"name": "packed",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 591,
																							"src": "15223:6:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "==",
																						"rightExpression": {
																							"hexValue": "30",
																							"id": 624,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "15233:1:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						},
																						"src": "15223:11:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"id": 627,
																					"nodeType": "IfStatement",
																					"src": "15219:25:1",
																					"trueBody": {
																						"id": 626,
																						"nodeType": "Continue",
																						"src": "15236:8:1"
																					}
																				},
																				{
																					"condition": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 632,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 630,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 628,
																								"name": "packed",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 591,
																								"src": "15270:6:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "&",
																							"rightExpression": {
																								"id": 629,
																								"name": "_BITMASK_BURNED",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 144,
																								"src": "15279:15:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "15270:24:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "==",
																						"rightExpression": {
																							"hexValue": "30",
																							"id": 631,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "15298:1:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						},
																						"src": "15270:29:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"id": 635,
																					"nodeType": "IfStatement",
																					"src": "15266:48:1",
																					"trueBody": {
																						"expression": {
																							"id": 633,
																							"name": "packed",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 591,
																							"src": "15308:6:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"functionReturnParameters": 592,
																						"id": 634,
																						"nodeType": "Return",
																						"src": "15301:13:1"
																					}
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"expression": {
																									"id": 637,
																									"name": "OwnerQueryForNonexistentToken",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1905,
																									"src": "15610:29:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																										"typeString": "function () pure returns (error)"
																									}
																								},
																								"id": 638,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "15640:8:1",
																								"memberName": "selector",
																								"nodeType": "MemberAccess",
																								"src": "15610:38:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes4",
																									"typeString": "bytes4"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_bytes4",
																									"typeString": "bytes4"
																								}
																							],
																							"id": 636,
																							"name": "_revert",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1883,
																							"src": "15602:7:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																								"typeString": "function (bytes4) pure"
																							}
																						},
																						"id": 639,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "15602:47:1",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 640,
																					"nodeType": "ExpressionStatement",
																					"src": "15602:47:1"
																				}
																			]
																		},
																		"id": 642,
																		"isSimpleCounterLoop": false,
																		"nodeType": "ForStatement",
																		"src": "15071:597:1"
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 649,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 647,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 645,
																		"name": "packed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 591,
																		"src": "16004:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&",
																	"rightExpression": {
																		"id": 646,
																		"name": "_BITMASK_BURNED",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 144,
																		"src": "16013:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "16004:24:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 648,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16032:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "16004:29:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 652,
															"nodeType": "IfStatement",
															"src": "16000:48:1",
															"trueBody": {
																"expression": {
																	"id": 650,
																	"name": "packed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 591,
																	"src": "16042:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"functionReturnParameters": 592,
																"id": 651,
																"nodeType": "Return",
																"src": "16035:13:1"
															}
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 656,
																"name": "OwnerQueryForNonexistentToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1905,
																"src": "16076:29:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																	"typeString": "function () pure returns (error)"
																}
															},
															"id": 657,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "16106:8:1",
															"memberName": "selector",
															"nodeType": "MemberAccess",
															"src": "16076:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														],
														"id": 655,
														"name": "_revert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1883,
														"src": "16068:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
															"typeString": "function (bytes4) pure"
														}
													},
													"id": 658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16068:47:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 659,
												"nodeType": "ExpressionStatement",
												"src": "16068:47:1"
											}
										]
									},
									"documentation": {
										"id": 586,
										"nodeType": "StructuredDocumentation",
										"src": "14073:66:1",
										"text": " Returns the packed ownership data of `tokenId`."
									},
									"id": 661,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_packedOwnershipOf",
									"nameLocation": "14153:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14180:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "14172:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 587,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14172:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14171:17:1"
									},
									"returnParameters": {
										"id": 592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 591,
												"mutability": "mutable",
												"name": "packed",
												"nameLocation": "14219:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "14211:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 590,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14211:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14210:16:1"
									},
									"scope": 1884,
									"src": "14144:1978:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 714,
										"nodeType": "Block",
										"src": "16315:262:1",
										"statements": [
											{
												"expression": {
													"id": 680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 670,
															"name": "ownership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 668,
															"src": "16325:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$1935_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"id": 672,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "16335:4:1",
														"memberName": "addr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1928,
														"src": "16325:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 677,
																		"name": "packed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 664,
																		"src": "16358:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 676,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "16350:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 675,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "16350:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 678,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16350:15:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															],
															"id": 674,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16342:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 673,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16342:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 679,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16342:24:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16325:41:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 681,
												"nodeType": "ExpressionStatement",
												"src": "16325:41:1"
											},
											{
												"expression": {
													"id": 691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 682,
															"name": "ownership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 668,
															"src": "16376:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$1935_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"id": 684,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "16386:14:1",
														"memberName": "startTimestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1930,
														"src": "16376:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 689,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 687,
																	"name": "packed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 664,
																	"src": "16410:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"id": 688,
																	"name": "_BITPOS_START_TIMESTAMP",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 139,
																	"src": "16420:23:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "16410:33:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16403:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint64_$",
																"typeString": "type(uint64)"
															},
															"typeName": {
																"id": 685,
																"name": "uint64",
																"nodeType": "ElementaryTypeName",
																"src": "16403:6:1",
																"typeDescriptions": {}
															}
														},
														"id": 690,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16403:41:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "16376:68:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 692,
												"nodeType": "ExpressionStatement",
												"src": "16376:68:1"
											},
											{
												"expression": {
													"id": 701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 693,
															"name": "ownership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 668,
															"src": "16454:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$1935_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"id": 695,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "16464:6:1",
														"memberName": "burned",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1932,
														"src": "16454:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 700,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 698,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 696,
																"name": "packed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 664,
																"src": "16473:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"id": 697,
																"name": "_BITMASK_BURNED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 144,
																"src": "16482:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "16473:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 699,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16501:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "16473:29:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "16454:48:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 702,
												"nodeType": "ExpressionStatement",
												"src": "16454:48:1"
											},
											{
												"expression": {
													"id": 712,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 703,
															"name": "ownership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 668,
															"src": "16512:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$1935_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"id": 705,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "16522:9:1",
														"memberName": "extraData",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1934,
														"src": "16512:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 710,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 708,
																	"name": "packed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 664,
																	"src": "16541:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"id": 709,
																	"name": "_BITPOS_EXTRA_DATA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 155,
																	"src": "16551:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "16541:28:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 707,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16534:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint24_$",
																"typeString": "type(uint24)"
															},
															"typeName": {
																"id": 706,
																"name": "uint24",
																"nodeType": "ElementaryTypeName",
																"src": "16534:6:1",
																"typeDescriptions": {}
															}
														},
														"id": 711,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16534:36:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														}
													},
													"src": "16512:58:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"id": 713,
												"nodeType": "ExpressionStatement",
												"src": "16512:58:1"
											}
										]
									},
									"documentation": {
										"id": 662,
										"nodeType": "StructuredDocumentation",
										"src": "16128:83:1",
										"text": " @dev Returns the unpacked `TokenOwnership` struct from `packed`."
									},
									"id": 715,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_unpackedOwnership",
									"nameLocation": "16225:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 664,
												"mutability": "mutable",
												"name": "packed",
												"nameLocation": "16252:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 715,
												"src": "16244:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 663,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16244:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16243:16:1"
									},
									"returnParameters": {
										"id": 669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "ownership",
												"nameLocation": "16304:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 715,
												"src": "16282:31:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenOwnership_$1935_memory_ptr",
													"typeString": "struct IERC721A.TokenOwnership"
												},
												"typeName": {
													"id": 667,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 666,
														"name": "TokenOwnership",
														"nameLocations": [
															"16282:14:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1935,
														"src": "16282:14:1"
													},
													"referencedDeclaration": 1935,
													"src": "16282:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$1935_storage_ptr",
														"typeString": "struct IERC721A.TokenOwnership"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16281:33:1"
									},
									"scope": 1884,
									"src": "16216:361:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 726,
										"nodeType": "Block",
										"src": "16751:347:1",
										"statements": [
											{
												"AST": {
													"nativeSrc": "16770:322:1",
													"nodeType": "YulBlock",
													"src": "16770:322:1",
													"statements": [
														{
															"nativeSrc": "16880:37:1",
															"nodeType": "YulAssignment",
															"src": "16880:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "owner",
																		"nativeSrc": "16893:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "16893:5:1"
																	},
																	{
																		"name": "_BITMASK_ADDRESS",
																		"nativeSrc": "16900:16:1",
																		"nodeType": "YulIdentifier",
																		"src": "16900:16:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "16889:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "16889:3:1"
																},
																"nativeSrc": "16889:28:1",
																"nodeType": "YulFunctionCall",
																"src": "16889:28:1"
															},
															"variableNames": [
																{
																	"name": "owner",
																	"nativeSrc": "16880:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "16880:5:1"
																}
															]
														},
														{
															"nativeSrc": "17009:73:1",
															"nodeType": "YulAssignment",
															"src": "17009:73:1",
															"value": {
																"arguments": [
																	{
																		"name": "owner",
																		"nativeSrc": "17022:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "17022:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_BITPOS_START_TIMESTAMP",
																						"nativeSrc": "17036:23:1",
																						"nodeType": "YulIdentifier",
																						"src": "17036:23:1"
																					},
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "timestamp",
																							"nativeSrc": "17061:9:1",
																							"nodeType": "YulIdentifier",
																							"src": "17061:9:1"
																						},
																						"nativeSrc": "17061:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "17061:11:1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "17032:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "17032:3:1"
																				},
																				"nativeSrc": "17032:41:1",
																				"nodeType": "YulFunctionCall",
																				"src": "17032:41:1"
																			},
																			{
																				"name": "flags",
																				"nativeSrc": "17075:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "17075:5:1"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "17029:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "17029:2:1"
																		},
																		"nativeSrc": "17029:52:1",
																		"nodeType": "YulFunctionCall",
																		"src": "17029:52:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "17019:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "17019:2:1"
																},
																"nativeSrc": "17019:63:1",
																"nodeType": "YulFunctionCall",
																"src": "17019:63:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "17009:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "17009:6:1"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 171,
														"isOffset": false,
														"isSlot": false,
														"src": "16900:16:1",
														"valueSize": 1
													},
													{
														"declaration": 139,
														"isOffset": false,
														"isSlot": false,
														"src": "17036:23:1",
														"valueSize": 1
													},
													{
														"declaration": 720,
														"isOffset": false,
														"isSlot": false,
														"src": "17075:5:1",
														"valueSize": 1
													},
													{
														"declaration": 718,
														"isOffset": false,
														"isSlot": false,
														"src": "16880:5:1",
														"valueSize": 1
													},
													{
														"declaration": 718,
														"isOffset": false,
														"isSlot": false,
														"src": "16893:5:1",
														"valueSize": 1
													},
													{
														"declaration": 718,
														"isOffset": false,
														"isSlot": false,
														"src": "17022:5:1",
														"valueSize": 1
													},
													{
														"declaration": 723,
														"isOffset": false,
														"isSlot": false,
														"src": "17009:6:1",
														"valueSize": 1
													}
												],
												"id": 725,
												"nodeType": "InlineAssembly",
												"src": "16761:331:1"
											}
										]
									},
									"documentation": {
										"id": 716,
										"nodeType": "StructuredDocumentation",
										"src": "16583:67:1",
										"text": " @dev Packs ownership data into a single uint256."
									},
									"id": 727,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_packOwnershipData",
									"nameLocation": "16664:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 718,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "16691:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 727,
												"src": "16683:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 717,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16683:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 720,
												"mutability": "mutable",
												"name": "flags",
												"nameLocation": "16706:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 727,
												"src": "16698:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 719,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16698:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16682:30:1"
									},
									"returnParameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "16743:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 727,
												"src": "16735:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16735:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16734:16:1"
									},
									"scope": 1884,
									"src": "16655:443:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 736,
										"nodeType": "Block",
										"src": "17281:232:1",
										"statements": [
											{
												"AST": {
													"nativeSrc": "17365:142:1",
													"nodeType": "YulBlock",
													"src": "17365:142:1",
													"statements": [
														{
															"nativeSrc": "17441:56:1",
															"nodeType": "YulAssignment",
															"src": "17441:56:1",
															"value": {
																"arguments": [
																	{
																		"name": "_BITPOS_NEXT_INITIALIZED",
																		"nativeSrc": "17455:24:1",
																		"nodeType": "YulIdentifier",
																		"src": "17455:24:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "quantity",
																				"nativeSrc": "17484:8:1",
																				"nodeType": "YulIdentifier",
																				"src": "17484:8:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17494:1:1",
																				"nodeType": "YulLiteral",
																				"src": "17494:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "17481:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "17481:2:1"
																		},
																		"nativeSrc": "17481:15:1",
																		"nodeType": "YulFunctionCall",
																		"src": "17481:15:1"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "17451:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "17451:3:1"
																},
																"nativeSrc": "17451:46:1",
																"nodeType": "YulFunctionCall",
																"src": "17451:46:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "17441:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "17441:6:1"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 147,
														"isOffset": false,
														"isSlot": false,
														"src": "17455:24:1",
														"valueSize": 1
													},
													{
														"declaration": 730,
														"isOffset": false,
														"isSlot": false,
														"src": "17484:8:1",
														"valueSize": 1
													},
													{
														"declaration": 733,
														"isOffset": false,
														"isSlot": false,
														"src": "17441:6:1",
														"valueSize": 1
													}
												],
												"id": 735,
												"nodeType": "InlineAssembly",
												"src": "17356:151:1"
											}
										]
									},
									"documentation": {
										"id": 728,
										"nodeType": "StructuredDocumentation",
										"src": "17104:86:1",
										"text": " @dev Returns the `nextInitialized` flag set if `quantity` equals 1."
									},
									"id": 737,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nextInitializedFlag",
									"nameLocation": "17204:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "17233:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "17225:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 729,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17225:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17224:18:1"
									},
									"returnParameters": {
										"id": 734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 733,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "17273:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "17265:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 732,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17265:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17264:16:1"
									},
									"scope": 1884,
									"src": "17195:318:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										2032
									],
									"body": {
										"id": 752,
										"nodeType": "Block",
										"src": "18011:44:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 747,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 740,
															"src": "18030:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 748,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 742,
															"src": "18034:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 749,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18043:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 746,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1547,
															1597
														],
														"referencedDeclaration": 1597,
														"src": "18021:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,bool)"
														}
													},
													"id": 750,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18021:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 751,
												"nodeType": "ExpressionStatement",
												"src": "18021:27:1"
											}
										]
									},
									"documentation": {
										"id": 738,
										"nodeType": "StructuredDocumentation",
										"src": "17706:222:1",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account. See {ERC721A-_approve}.\n Requirements:\n - The caller must own the token or be an approved operator."
									},
									"functionSelector": "095ea7b3",
									"id": 753,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "17942:7:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 744,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "18002:8:1"
									},
									"parameters": {
										"id": 743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "17958:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "17950:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 739,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17950:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "17970:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "17962:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 741,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17962:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17949:29:1"
									},
									"returnParameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18011:0:1"
									},
									"scope": 1884,
									"src": "17933:122:1",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2048
									],
									"body": {
										"id": 777,
										"nodeType": "Block",
										"src": "18290:138:1",
										"statements": [
											{
												"condition": {
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "18304:17:1",
													"subExpression": {
														"arguments": [
															{
																"id": 763,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 756,
																"src": "18313:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 762,
															"name": "_exists",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 865,
															"src": "18305:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (uint256) view returns (bool)"
															}
														},
														"id": 764,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18305:16:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 771,
												"nodeType": "IfStatement",
												"src": "18300:73:1",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 767,
																	"name": "ApprovalQueryForNonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1893,
																	"src": "18331:32:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 768,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "18364:8:1",
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "18331:41:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 766,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1883,
															"src": "18323:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 769,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18323:50:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 770,
													"nodeType": "ExpressionStatement",
													"src": "18323:50:1"
												}
											},
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 772,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "18391:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$111_storage_$",
																"typeString": "mapping(uint256 => struct ERC721A.TokenApprovalRef storage ref)"
															}
														},
														"id": 774,
														"indexExpression": {
															"id": 773,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 756,
															"src": "18407:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "18391:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenApprovalRef_$111_storage",
															"typeString": "struct ERC721A.TokenApprovalRef storage ref"
														}
													},
													"id": 775,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "18416:5:1",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 110,
													"src": "18391:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 761,
												"id": 776,
												"nodeType": "Return",
												"src": "18384:37:1"
											}
										]
									},
									"documentation": {
										"id": 754,
										"nodeType": "StructuredDocumentation",
										"src": "18061:139:1",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 778,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "18214:11:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 758,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "18263:8:1"
									},
									"parameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "18234:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "18226:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 755,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18226:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18225:17:1"
									},
									"returnParameters": {
										"id": 761,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 760,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "18281:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 759,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18281:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18280:9:1"
									},
									"scope": 1884,
									"src": "18205:223:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2040
									],
									"body": {
										"id": 803,
										"nodeType": "Block",
										"src": "18839:147:1",
										"statements": [
											{
												"expression": {
													"id": 794,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 787,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 204,
																"src": "18849:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 791,
															"indexExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 788,
																	"name": "_msgSenderERC721A",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1865,
																	"src": "18868:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 789,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18868:19:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "18849:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 792,
														"indexExpression": {
															"id": 790,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 781,
															"src": "18889:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "18849:49:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 793,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 783,
														"src": "18901:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "18849:60:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 795,
												"nodeType": "ExpressionStatement",
												"src": "18849:60:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 797,
																"name": "_msgSenderERC721A",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1865,
																"src": "18939:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 798,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18939:19:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 799,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 781,
															"src": "18960:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 800,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 783,
															"src": "18970:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 796,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1976,
														"src": "18924:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 801,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18924:55:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 802,
												"nodeType": "EmitStatement",
												"src": "18919:60:1"
											}
										]
									},
									"documentation": {
										"id": 779,
										"nodeType": "StructuredDocumentation",
										"src": "18434:316:1",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom}\n for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 804,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "18764:17:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 785,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "18830:8:1"
									},
									"parameters": {
										"id": 784,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 781,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "18790:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "18782:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 780,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18782:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 783,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "18805:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "18800:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 782,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "18800:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18781:33:1"
									},
									"returnParameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18839:0:1"
									},
									"scope": 1884,
									"src": "18755:231:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2058
									],
									"body": {
										"id": 821,
										"nodeType": "Block",
										"src": "19239:59:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 815,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 204,
															"src": "19256:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 817,
														"indexExpression": {
															"id": 816,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 807,
															"src": "19275:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "19256:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 819,
													"indexExpression": {
														"id": 818,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 809,
														"src": "19282:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "19256:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 814,
												"id": 820,
												"nodeType": "Return",
												"src": "19249:42:1"
											}
										]
									},
									"documentation": {
										"id": 805,
										"nodeType": "StructuredDocumentation",
										"src": "18992:139:1",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 822,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "19145:16:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 811,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "19215:8:1"
									},
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 807,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "19170:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "19162:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19162:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "19185:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "19177:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 808,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19177:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19161:33:1"
									},
									"returnParameters": {
										"id": 814,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 813,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "19233:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 812,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "19233:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19232:6:1"
									},
									"scope": 1884,
									"src": "19136:162:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 864,
										"nodeType": "Block",
										"src": "19625:282:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 833,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 830,
															"name": "_startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 234,
															"src": "19639:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 831,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19639:15:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 832,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 825,
														"src": "19658:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19639:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 863,
												"nodeType": "IfStatement",
												"src": "19635:266:1",
												"trueBody": {
													"id": 862,
													"nodeType": "Block",
													"src": "19667:234:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 836,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 834,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 825,
																	"src": "19685:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 835,
																	"name": "_currentIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 179,
																	"src": "19695:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "19685:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 861,
															"nodeType": "IfStatement",
															"src": "19681:210:1",
															"trueBody": {
																"id": 860,
																"nodeType": "Block",
																"src": "19710:181:1",
																"statements": [
																	{
																		"assignments": [
																			838
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 838,
																				"mutability": "mutable",
																				"name": "packed",
																				"nameLocation": "19736:6:1",
																				"nodeType": "VariableDeclaration",
																				"scope": 860,
																				"src": "19728:14:1",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 837,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "19728:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 839,
																		"nodeType": "VariableDeclarationStatement",
																		"src": "19728:14:1"
																	},
																	{
																		"body": {
																			"expression": {
																				"id": 849,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "UnaryOperation",
																				"operator": "--",
																				"prefix": true,
																				"src": "19811:9:1",
																				"subExpression": {
																					"id": 848,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 825,
																					"src": "19813:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 850,
																			"nodeType": "ExpressionStatement",
																			"src": "19811:9:1"
																		},
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 847,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"id": 844,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"id": 840,
																							"name": "packed",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 838,
																							"src": "19768:6:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"baseExpression": {
																								"id": 841,
																								"name": "_packedOwnerships",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 189,
																								"src": "19777:17:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																									"typeString": "mapping(uint256 => uint256)"
																								}
																							},
																							"id": 843,
																							"indexExpression": {
																								"id": 842,
																								"name": "tokenId",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 825,
																								"src": "19795:7:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "19777:26:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "19768:35:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 845,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "19767:37:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 846,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "19808:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "19767:42:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 851,
																		"nodeType": "WhileStatement",
																		"src": "19760:60:1"
																	},
																	{
																		"expression": {
																			"id": 858,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 852,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 828,
																				"src": "19838:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 857,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 855,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 853,
																						"name": "packed",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 838,
																						"src": "19847:6:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "&",
																					"rightExpression": {
																						"id": 854,
																						"name": "_BITMASK_BURNED",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 144,
																						"src": "19856:15:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "19847:24:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"hexValue": "30",
																					"id": 856,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "19875:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"src": "19847:29:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "19838:38:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 859,
																		"nodeType": "ExpressionStatement",
																		"src": "19838:38:1"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 823,
										"nodeType": "StructuredDocumentation",
										"src": "19304:238:1",
										"text": " @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted. See {_mint}."
									},
									"id": 865,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_exists",
									"nameLocation": "19556:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 825,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "19572:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "19564:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 824,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19564:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19563:17:1"
									},
									"returnParameters": {
										"id": 829,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "19617:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "19612:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 827,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "19612:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19611:13:1"
									},
									"scope": 1884,
									"src": "19547:360:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 878,
										"nodeType": "Block",
										"src": "20169:488:1",
										"statements": [
											{
												"AST": {
													"nativeSrc": "20188:463:1",
													"nodeType": "YulBlock",
													"src": "20188:463:1",
													"statements": [
														{
															"nativeSrc": "20298:37:1",
															"nodeType": "YulAssignment",
															"src": "20298:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "owner",
																		"nativeSrc": "20311:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "20311:5:1"
																	},
																	{
																		"name": "_BITMASK_ADDRESS",
																		"nativeSrc": "20318:16:1",
																		"nodeType": "YulIdentifier",
																		"src": "20318:16:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "20307:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "20307:3:1"
																},
																"nativeSrc": "20307:28:1",
																"nodeType": "YulFunctionCall",
																"src": "20307:28:1"
															},
															"variableNames": [
																{
																	"name": "owner",
																	"nativeSrc": "20298:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "20298:5:1"
																}
															]
														},
														{
															"nativeSrc": "20448:45:1",
															"nodeType": "YulAssignment",
															"src": "20448:45:1",
															"value": {
																"arguments": [
																	{
																		"name": "msgSender",
																		"nativeSrc": "20465:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "20465:9:1"
																	},
																	{
																		"name": "_BITMASK_ADDRESS",
																		"nativeSrc": "20476:16:1",
																		"nodeType": "YulIdentifier",
																		"src": "20476:16:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "20461:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "20461:3:1"
																},
																"nativeSrc": "20461:32:1",
																"nodeType": "YulFunctionCall",
																"src": "20461:32:1"
															},
															"variableNames": [
																{
																	"name": "msgSender",
																	"nativeSrc": "20448:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "20448:9:1"
																}
															]
														},
														{
															"nativeSrc": "20575:66:1",
															"nodeType": "YulAssignment",
															"src": "20575:66:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "msgSender",
																				"nativeSrc": "20591:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "20591:9:1"
																			},
																			{
																				"name": "owner",
																				"nativeSrc": "20602:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "20602:5:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "20588:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "20588:2:1"
																		},
																		"nativeSrc": "20588:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "20588:20:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "msgSender",
																				"nativeSrc": "20613:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "20613:9:1"
																			},
																			{
																				"name": "approvedAddress",
																				"nativeSrc": "20624:15:1",
																				"nodeType": "YulIdentifier",
																				"src": "20624:15:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "20610:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "20610:2:1"
																		},
																		"nativeSrc": "20610:30:1",
																		"nodeType": "YulFunctionCall",
																		"src": "20610:30:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "20585:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "20585:2:1"
																},
																"nativeSrc": "20585:56:1",
																"nodeType": "YulFunctionCall",
																"src": "20585:56:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "20575:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "20575:6:1"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 171,
														"isOffset": false,
														"isSlot": false,
														"src": "20318:16:1",
														"valueSize": 1
													},
													{
														"declaration": 171,
														"isOffset": false,
														"isSlot": false,
														"src": "20476:16:1",
														"valueSize": 1
													},
													{
														"declaration": 868,
														"isOffset": false,
														"isSlot": false,
														"src": "20624:15:1",
														"valueSize": 1
													},
													{
														"declaration": 872,
														"isOffset": false,
														"isSlot": false,
														"src": "20448:9:1",
														"valueSize": 1
													},
													{
														"declaration": 872,
														"isOffset": false,
														"isSlot": false,
														"src": "20465:9:1",
														"valueSize": 1
													},
													{
														"declaration": 872,
														"isOffset": false,
														"isSlot": false,
														"src": "20591:9:1",
														"valueSize": 1
													},
													{
														"declaration": 872,
														"isOffset": false,
														"isSlot": false,
														"src": "20613:9:1",
														"valueSize": 1
													},
													{
														"declaration": 870,
														"isOffset": false,
														"isSlot": false,
														"src": "20298:5:1",
														"valueSize": 1
													},
													{
														"declaration": 870,
														"isOffset": false,
														"isSlot": false,
														"src": "20311:5:1",
														"valueSize": 1
													},
													{
														"declaration": 870,
														"isOffset": false,
														"isSlot": false,
														"src": "20602:5:1",
														"valueSize": 1
													},
													{
														"declaration": 875,
														"isOffset": false,
														"isSlot": false,
														"src": "20575:6:1",
														"valueSize": 1
													}
												],
												"id": 877,
												"nodeType": "InlineAssembly",
												"src": "20179:472:1"
											}
										]
									},
									"documentation": {
										"id": 866,
										"nodeType": "StructuredDocumentation",
										"src": "19913:93:1",
										"text": " @dev Returns whether `msgSender` is equal to `approvedAddress` or `owner`."
									},
									"id": 879,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isSenderApprovedOrOwner",
									"nameLocation": "20020:24:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 868,
												"mutability": "mutable",
												"name": "approvedAddress",
												"nameLocation": "20062:15:1",
												"nodeType": "VariableDeclaration",
												"scope": 879,
												"src": "20054:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 867,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20054:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 870,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "20095:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 879,
												"src": "20087:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 869,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20087:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 872,
												"mutability": "mutable",
												"name": "msgSender",
												"nameLocation": "20118:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 879,
												"src": "20110:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 871,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20110:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20044:89:1"
									},
									"returnParameters": {
										"id": 876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "20161:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 879,
												"src": "20156:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 874,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "20156:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20155:13:1"
									},
									"scope": 1884,
									"src": "20011:646:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 897,
										"nodeType": "Block",
										"src": "20922:317:1",
										"statements": [
											{
												"assignments": [
													891
												],
												"declarations": [
													{
														"constant": false,
														"id": 891,
														"mutability": "mutable",
														"name": "tokenApproval",
														"nameLocation": "20957:13:1",
														"nodeType": "VariableDeclaration",
														"scope": 897,
														"src": "20932:38:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenApprovalRef_$111_storage_ptr",
															"typeString": "struct ERC721A.TokenApprovalRef"
														},
														"typeName": {
															"id": 890,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 889,
																"name": "TokenApprovalRef",
																"nameLocations": [
																	"20932:16:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 111,
																"src": "20932:16:1"
															},
															"referencedDeclaration": 111,
															"src": "20932:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenApprovalRef_$111_storage_ptr",
																"typeString": "struct ERC721A.TokenApprovalRef"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 895,
												"initialValue": {
													"baseExpression": {
														"id": 892,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 198,
														"src": "20973:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$111_storage_$",
															"typeString": "mapping(uint256 => struct ERC721A.TokenApprovalRef storage ref)"
														}
													},
													"id": 894,
													"indexExpression": {
														"id": 893,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 882,
														"src": "20989:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "20973:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenApprovalRef_$111_storage",
														"typeString": "struct ERC721A.TokenApprovalRef storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20932:65:1"
											},
											{
												"AST": {
													"nativeSrc": "21110:123:1",
													"nodeType": "YulBlock",
													"src": "21110:123:1",
													"statements": [
														{
															"nativeSrc": "21124:41:1",
															"nodeType": "YulAssignment",
															"src": "21124:41:1",
															"value": {
																"name": "tokenApproval.slot",
																"nativeSrc": "21147:18:1",
																"nodeType": "YulIdentifier",
																"src": "21147:18:1"
															},
															"variableNames": [
																{
																	"name": "approvedAddressSlot",
																	"nativeSrc": "21124:19:1",
																	"nodeType": "YulIdentifier",
																	"src": "21124:19:1"
																}
															]
														},
														{
															"nativeSrc": "21178:45:1",
															"nodeType": "YulAssignment",
															"src": "21178:45:1",
															"value": {
																"arguments": [
																	{
																		"name": "approvedAddressSlot",
																		"nativeSrc": "21203:19:1",
																		"nodeType": "YulIdentifier",
																		"src": "21203:19:1"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nativeSrc": "21197:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "21197:5:1"
																},
																"nativeSrc": "21197:26:1",
																"nodeType": "YulFunctionCall",
																"src": "21197:26:1"
															},
															"variableNames": [
																{
																	"name": "approvedAddress",
																	"nativeSrc": "21178:15:1",
																	"nodeType": "YulIdentifier",
																	"src": "21178:15:1"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 887,
														"isOffset": false,
														"isSlot": false,
														"src": "21178:15:1",
														"valueSize": 1
													},
													{
														"declaration": 885,
														"isOffset": false,
														"isSlot": false,
														"src": "21124:19:1",
														"valueSize": 1
													},
													{
														"declaration": 885,
														"isOffset": false,
														"isSlot": false,
														"src": "21203:19:1",
														"valueSize": 1
													},
													{
														"declaration": 891,
														"isOffset": false,
														"isSlot": true,
														"src": "21147:18:1",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 896,
												"nodeType": "InlineAssembly",
												"src": "21101:132:1"
											}
										]
									},
									"documentation": {
										"id": 880,
										"nodeType": "StructuredDocumentation",
										"src": "20663:97:1",
										"text": " @dev Returns the storage slot and value for the approved address of `tokenId`."
									},
									"id": 898,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getApprovedSlotAndAddress",
									"nameLocation": "20774:26:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 882,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "20809:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "20801:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 881,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20801:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20800:17:1"
									},
									"returnParameters": {
										"id": 888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 885,
												"mutability": "mutable",
												"name": "approvedAddressSlot",
												"nameLocation": "20872:19:1",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "20864:27:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 884,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20864:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 887,
												"mutability": "mutable",
												"name": "approvedAddress",
												"nameLocation": "20901:15:1",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "20893:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 886,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20893:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20863:54:1"
									},
									"scope": 1884,
									"src": "20765:474:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										2024
									],
									"body": {
										"id": 1070,
										"nodeType": "Block",
										"src": "21967:3320:1",
										"statements": [
											{
												"assignments": [
													910
												],
												"declarations": [
													{
														"constant": false,
														"id": 910,
														"mutability": "mutable",
														"name": "prevOwnershipPacked",
														"nameLocation": "21985:19:1",
														"nodeType": "VariableDeclaration",
														"scope": 1070,
														"src": "21977:27:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 909,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "21977:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 914,
												"initialValue": {
													"arguments": [
														{
															"id": 912,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 905,
															"src": "22026:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 911,
														"name": "_packedOwnershipOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 661,
														"src": "22007:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 913,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22007:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21977:57:1"
											},
											{
												"expression": {
													"id": 931,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 915,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 901,
														"src": "22136:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 928,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 924,
																							"name": "from",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 901,
																							"src": "22175:4:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 923,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "22167:7:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_uint160_$",
																							"typeString": "type(uint160)"
																						},
																						"typeName": {
																							"id": 922,
																							"name": "uint160",
																							"nodeType": "ElementaryTypeName",
																							"src": "22167:7:1",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 925,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "22167:13:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					}
																				],
																				"id": 921,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "22159:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 920,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "22159:7:1",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 926,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "22159:22:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"id": 927,
																			"name": "_BITMASK_ADDRESS",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 171,
																			"src": "22184:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "22159:41:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 919,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "22151:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 918,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "22151:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 929,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22151:50:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															],
															"id": 917,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "22143:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 916,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "22143:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 930,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22143:59:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "22136:66:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 932,
												"nodeType": "ExpressionStatement",
												"src": "22136:66:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 941,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 937,
																		"name": "prevOwnershipPacked",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 910,
																		"src": "22233:19:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 936,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "22225:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 935,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "22225:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 938,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22225:28:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															],
															"id": 934,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "22217:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 933,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "22217:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 939,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22217:37:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 940,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 901,
														"src": "22258:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "22217:45:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 947,
												"nodeType": "IfStatement",
												"src": "22213:95:1",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 943,
																	"name": "TransferFromIncorrectOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1911,
																	"src": "22272:26:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 944,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "22299:8:1",
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "22272:35:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 942,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1883,
															"src": "22264:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 945,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22264:44:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 946,
													"nodeType": "ExpressionStatement",
													"src": "22264:44:1"
												}
											},
											{
												"assignments": [
													949,
													951
												],
												"declarations": [
													{
														"constant": false,
														"id": 949,
														"mutability": "mutable",
														"name": "approvedAddressSlot",
														"nameLocation": "22328:19:1",
														"nodeType": "VariableDeclaration",
														"scope": 1070,
														"src": "22320:27:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 948,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "22320:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 951,
														"mutability": "mutable",
														"name": "approvedAddress",
														"nameLocation": "22357:15:1",
														"nodeType": "VariableDeclaration",
														"scope": 1070,
														"src": "22349:23:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 950,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "22349:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 955,
												"initialValue": {
													"arguments": [
														{
															"id": 953,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 905,
															"src": "22403:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 952,
														"name": "_getApprovedSlotAndAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 898,
														"src": "22376:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_address_$",
															"typeString": "function (uint256) view returns (uint256,address)"
														}
													},
													"id": 954,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22376:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_address_$",
														"typeString": "tuple(uint256,address)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "22319:92:1"
											},
											{
												"condition": {
													"id": 962,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "22507:69:1",
													"subExpression": {
														"arguments": [
															{
																"id": 957,
																"name": "approvedAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 951,
																"src": "22533:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 958,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 901,
																"src": "22550:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 959,
																	"name": "_msgSenderERC721A",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1865,
																	"src": "22556:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 960,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22556:19:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 956,
															"name": "_isSenderApprovedOrOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 879,
															"src": "22508:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_address_$returns$_t_bool_$",
																"typeString": "function (address,address,address) pure returns (bool)"
															}
														},
														"id": 961,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22508:68:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 975,
												"nodeType": "IfStatement",
												"src": "22503:188:1",
												"trueBody": {
													"condition": {
														"id": 968,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "22594:44:1",
														"subExpression": {
															"arguments": [
																{
																	"id": 964,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 901,
																	"src": "22612:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 965,
																		"name": "_msgSenderERC721A",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1865,
																		"src": "22618:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 966,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "22618:19:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 963,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 822,
																"src": "22595:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 967,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22595:43:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 974,
													"nodeType": "IfStatement",
													"src": "22590:101:1",
													"trueBody": {
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 970,
																		"name": "TransferCallerNotOwnerNorApproved",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1908,
																		"src": "22648:33:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																			"typeString": "function () pure returns (error)"
																		}
																	},
																	"id": 971,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "22682:8:1",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "22648:42:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																],
																"id": 969,
																"name": "_revert",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1883,
																"src": "22640:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																	"typeString": "function (bytes4) pure"
																}
															},
															"id": 972,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22640:51:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 973,
														"nodeType": "ExpressionStatement",
														"src": "22640:51:1"
													}
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 977,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 901,
															"src": "22724:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 978,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 903,
															"src": "22730:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 979,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 905,
															"src": "22734:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 980,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "22743:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 976,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1143,
														"src": "22702:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 981,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22702:43:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 982,
												"nodeType": "ExpressionStatement",
												"src": "22702:43:1"
											},
											{
												"AST": {
													"nativeSrc": "22817:181:1",
													"nodeType": "YulBlock",
													"src": "22817:181:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "22850:138:1",
																"nodeType": "YulBlock",
																"src": "22850:138:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "approvedAddressSlot",
																					"nativeSrc": "22951:19:1",
																					"nodeType": "YulIdentifier",
																					"src": "22951:19:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "22972:1:1",
																					"nodeType": "YulLiteral",
																					"src": "22972:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "sstore",
																				"nativeSrc": "22944:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "22944:6:1"
																			},
																			"nativeSrc": "22944:30:1",
																			"nodeType": "YulFunctionCall",
																			"src": "22944:30:1"
																		},
																		"nativeSrc": "22944:30:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "22944:30:1"
																	}
																]
															},
															"condition": {
																"name": "approvedAddress",
																"nativeSrc": "22834:15:1",
																"nodeType": "YulIdentifier",
																"src": "22834:15:1"
															},
															"nativeSrc": "22831:157:1",
															"nodeType": "YulIf",
															"src": "22831:157:1"
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 951,
														"isOffset": false,
														"isSlot": false,
														"src": "22834:15:1",
														"valueSize": 1
													},
													{
														"declaration": 949,
														"isOffset": false,
														"isSlot": false,
														"src": "22951:19:1",
														"valueSize": 1
													}
												],
												"id": 983,
												"nodeType": "InlineAssembly",
												"src": "22808:190:1"
											},
											{
												"id": 1040,
												"nodeType": "UncheckedBlock",
												"src": "23265:1361:1",
												"statements": [
													{
														"expression": {
															"id": 987,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "--",
															"prefix": true,
															"src": "23358:26:1",
															"subExpression": {
																"baseExpression": {
																	"id": 984,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 193,
																	"src": "23360:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 986,
																"indexExpression": {
																	"id": 985,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 901,
																	"src": "23379:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "23360:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 988,
														"nodeType": "ExpressionStatement",
														"src": "23358:26:1"
													},
													{
														"expression": {
															"id": 992,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": true,
															"src": "23426:24:1",
															"subExpression": {
																"baseExpression": {
																	"id": 989,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 193,
																	"src": "23428:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 991,
																"indexExpression": {
																	"id": 990,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 903,
																	"src": "23447:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "23428:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 993,
														"nodeType": "ExpressionStatement",
														"src": "23426:24:1"
													},
													{
														"expression": {
															"id": 1007,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 994,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 189,
																	"src": "23714:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 996,
																"indexExpression": {
																	"id": 995,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 905,
																	"src": "23732:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "23714:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 998,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 903,
																		"src": "23779:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1005,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 999,
																			"name": "_BITMASK_NEXT_INITIALIZED",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 152,
																			"src": "23799:25:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "|",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 1001,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 901,
																					"src": "23842:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1002,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 903,
																					"src": "23848:2:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1003,
																					"name": "prevOwnershipPacked",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 910,
																					"src": "23852:19:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1000,
																				"name": "_nextExtraData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1855,
																				"src": "23827:14:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 1004,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "23827:45:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "23799:73:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 997,
																	"name": "_packOwnershipData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 727,
																	"src": "23743:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view returns (uint256)"
																	}
																},
																"id": 1006,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23743:143:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23714:172:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1008,
														"nodeType": "ExpressionStatement",
														"src": "23714:172:1"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1013,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1011,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1009,
																	"name": "prevOwnershipPacked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 910,
																	"src": "24003:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1010,
																	"name": "_BITMASK_NEXT_INITIALIZED",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 152,
																	"src": "24025:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "24003:47:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1012,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "24054:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "24003:52:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1039,
														"nodeType": "IfStatement",
														"src": "23999:617:1",
														"trueBody": {
															"id": 1038,
															"nodeType": "Block",
															"src": "24057:559:1",
															"statements": [
																{
																	"assignments": [
																		1015
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 1015,
																			"mutability": "mutable",
																			"name": "nextTokenId",
																			"nameLocation": "24083:11:1",
																			"nodeType": "VariableDeclaration",
																			"scope": 1038,
																			"src": "24075:19:1",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 1014,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "24075:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 1019,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1018,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1016,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 905,
																			"src": "24097:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1017,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24107:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "24097:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "24075:33:1"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1024,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"id": 1020,
																				"name": "_packedOwnerships",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 189,
																				"src": "24228:17:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																					"typeString": "mapping(uint256 => uint256)"
																				}
																			},
																			"id": 1022,
																			"indexExpression": {
																				"id": 1021,
																				"name": "nextTokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1015,
																				"src": "24246:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "24228:30:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1023,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24262:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "24228:35:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1037,
																	"nodeType": "IfStatement",
																	"src": "24224:378:1",
																	"trueBody": {
																		"id": 1036,
																		"nodeType": "Block",
																		"src": "24265:337:1",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1027,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1025,
																						"name": "nextTokenId",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1015,
																						"src": "24349:11:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"id": 1026,
																						"name": "_currentIndex",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 179,
																						"src": "24364:13:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "24349:28:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1035,
																				"nodeType": "IfStatement",
																				"src": "24345:239:1",
																				"trueBody": {
																					"id": 1034,
																					"nodeType": "Block",
																					"src": "24379:205:1",
																					"statements": [
																						{
																							"expression": {
																								"id": 1032,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftHandSide": {
																									"baseExpression": {
																										"id": 1028,
																										"name": "_packedOwnerships",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 189,
																										"src": "24509:17:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																											"typeString": "mapping(uint256 => uint256)"
																										}
																									},
																									"id": 1030,
																									"indexExpression": {
																										"id": 1029,
																										"name": "nextTokenId",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1015,
																										"src": "24527:11:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": true,
																									"nodeType": "IndexAccess",
																									"src": "24509:30:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "Assignment",
																								"operator": "=",
																								"rightHandSide": {
																									"id": 1031,
																									"name": "prevOwnershipPacked",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 910,
																									"src": "24542:19:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "24509:52:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 1033,
																							"nodeType": "ExpressionStatement",
																							"src": "24509:52:1"
																						}
																					]
																				}
																			}
																		]
																	}
																}
															]
														}
													}
												]
											},
											{
												"assignments": [
													1042
												],
												"declarations": [
													{
														"constant": false,
														"id": 1042,
														"mutability": "mutable",
														"name": "toMasked",
														"nameLocation": "24733:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 1070,
														"src": "24725:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1041,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "24725:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1052,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1051,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1047,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 903,
																		"src": "24760:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1046,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "24752:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 1045,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "24752:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 1048,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24752:11:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															],
															"id": 1044,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "24744:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 1043,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "24744:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 1049,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "24744:20:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"id": 1050,
														"name": "_BITMASK_ADDRESS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "24767:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "24744:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "24725:58:1"
											},
											{
												"AST": {
													"nativeSrc": "24802:358:1",
													"nodeType": "YulBlock",
													"src": "24802:358:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "24880:1:1",
																		"nodeType": "YulLiteral",
																		"src": "24880:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24936:1:1",
																		"nodeType": "YulLiteral",
																		"src": "24936:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "_TRANSFER_EVENT_SIGNATURE",
																		"nativeSrc": "24990:25:1",
																		"nodeType": "YulIdentifier",
																		"src": "24990:25:1"
																	},
																	{
																		"name": "from",
																		"nativeSrc": "25047:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "25047:4:1"
																	},
																	{
																		"name": "toMasked",
																		"nativeSrc": "25080:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "25080:8:1"
																	},
																	{
																		"name": "tokenId",
																		"nativeSrc": "25115:7:1",
																		"nodeType": "YulIdentifier",
																		"src": "25115:7:1"
																	}
																],
																"functionName": {
																	"name": "log4",
																	"nativeSrc": "24858:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "24858:4:1"
																},
																"nativeSrc": "24858:292:1",
																"nodeType": "YulFunctionCall",
																"src": "24858:292:1"
															},
															"nativeSrc": "24858:292:1",
															"nodeType": "YulExpressionStatement",
															"src": "24858:292:1"
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 177,
														"isOffset": false,
														"isSlot": false,
														"src": "24990:25:1",
														"valueSize": 1
													},
													{
														"declaration": 901,
														"isOffset": false,
														"isSlot": false,
														"src": "25047:4:1",
														"valueSize": 1
													},
													{
														"declaration": 1042,
														"isOffset": false,
														"isSlot": false,
														"src": "25080:8:1",
														"valueSize": 1
													},
													{
														"declaration": 905,
														"isOffset": false,
														"isSlot": false,
														"src": "25115:7:1",
														"valueSize": 1
													}
												],
												"id": 1053,
												"nodeType": "InlineAssembly",
												"src": "24793:367:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1054,
														"name": "toMasked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1042,
														"src": "25173:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1055,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "25185:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "25173:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1062,
												"nodeType": "IfStatement",
												"src": "25169:58:1",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 1058,
																	"name": "TransferToZeroAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1917,
																	"src": "25196:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1059,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "25218:8:1",
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "25196:30:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 1057,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1883,
															"src": "25188:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 1060,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "25188:39:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1061,
													"nodeType": "ExpressionStatement",
													"src": "25188:39:1"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1064,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 901,
															"src": "25259:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1065,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 903,
															"src": "25265:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1066,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 905,
															"src": "25269:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1067,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "25278:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1063,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1156,
														"src": "25238:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1068,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25238:42:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1069,
												"nodeType": "ExpressionStatement",
												"src": "25238:42:1"
											}
										]
									},
									"documentation": {
										"id": 899,
										"nodeType": "StructuredDocumentation",
										"src": "21432:403:1",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token\n by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1071,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "21849:12:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 907,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "21958:8:1"
									},
									"parameters": {
										"id": 906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 901,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "21879:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1071,
												"src": "21871:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 900,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21871:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 903,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "21901:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1071,
												"src": "21893:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 902,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21893:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "21921:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1071,
												"src": "21913:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 904,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21913:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21861:73:1"
									},
									"returnParameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21967:0:1"
									},
									"scope": 1884,
									"src": "21840:3447:1",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2014
									],
									"body": {
										"id": 1089,
										"nodeType": "Block",
										"src": "25509:56:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1083,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1074,
															"src": "25536:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1084,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1076,
															"src": "25542:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1085,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1078,
															"src": "25546:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1086,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "25555:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1082,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1090,
															1130
														],
														"referencedDeclaration": 1130,
														"src": "25519:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1087,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25519:39:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1088,
												"nodeType": "ExpressionStatement",
												"src": "25519:39:1"
											}
										]
									},
									"documentation": {
										"id": 1072,
										"nodeType": "StructuredDocumentation",
										"src": "25293:80:1",
										"text": " @dev Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
									},
									"functionSelector": "42842e0e",
									"id": 1090,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "25387:16:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1080,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "25500:8:1"
									},
									"parameters": {
										"id": 1079,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1074,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "25421:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1090,
												"src": "25413:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1073,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25413:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1076,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "25443:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1090,
												"src": "25435:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1075,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25435:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1078,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "25463:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1090,
												"src": "25455:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1077,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25455:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25403:73:1"
									},
									"returnParameters": {
										"id": 1081,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25509:0:1"
									},
									"scope": 1884,
									"src": "25378:187:1",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2004
									],
									"body": {
										"id": 1129,
										"nodeType": "Block",
										"src": "26305:246:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1104,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1093,
															"src": "26328:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1105,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1095,
															"src": "26334:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1106,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1097,
															"src": "26338:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1103,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1071,
														"src": "26315:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26315:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1108,
												"nodeType": "ExpressionStatement",
												"src": "26315:31:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1109,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1095,
																"src": "26360:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1110,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "26363:4:1",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "26360:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1111,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "26368:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "26360:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1112,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "26378:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "26360:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1128,
												"nodeType": "IfStatement",
												"src": "26356:189:1",
												"trueBody": {
													"condition": {
														"id": 1120,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "26397:57:1",
														"subExpression": {
															"arguments": [
																{
																	"id": 1115,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1093,
																	"src": "26429:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1116,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1095,
																	"src": "26435:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1117,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1097,
																	"src": "26439:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1118,
																	"name": "_data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1099,
																	"src": "26448:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1114,
																"name": "_checkContractOnERC721Received",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1212,
																"src": "26398:30:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																}
															},
															"id": 1119,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26398:56:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1127,
													"nodeType": "IfStatement",
													"src": "26393:152:1",
													"trueBody": {
														"id": 1126,
														"nodeType": "Block",
														"src": "26456:89:1",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 1122,
																				"name": "TransferToNonERC721ReceiverImplementer",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1914,
																				"src": "26482:38:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																					"typeString": "function () pure returns (error)"
																				}
																			},
																			"id": 1123,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "26521:8:1",
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "26482:47:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		],
																		"id": 1121,
																		"name": "_revert",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1883,
																		"src": "26474:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																			"typeString": "function (bytes4) pure"
																		}
																	},
																	"id": 1124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "26474:56:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1125,
																"nodeType": "ExpressionStatement",
																"src": "26474:56:1"
															}
														]
													}
												}
											}
										]
									},
									"documentation": {
										"id": 1091,
										"nodeType": "StructuredDocumentation",
										"src": "25571:570:1",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token\n by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement\n {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1130,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "26155:16:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1101,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "26296:8:1"
									},
									"parameters": {
										"id": 1100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1093,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "26189:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "26181:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1092,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26181:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1095,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "26211:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "26203:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1094,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26203:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1097,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "26231:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "26223:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1096,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26223:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1099,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "26261:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "26248:18:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1098,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "26248:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26171:101:1"
									},
									"returnParameters": {
										"id": 1102,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26305:0:1"
									},
									"scope": 1884,
									"src": "26146:405:1",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1142,
										"nodeType": "Block",
										"src": "27347:2:1",
										"statements": []
									},
									"documentation": {
										"id": 1131,
										"nodeType": "StructuredDocumentation",
										"src": "26557:633:1",
										"text": " @dev Hook that is called before a set of serially-ordered token IDs\n are about to be transferred. This includes minting.\n And also called before burning one token.\n `startTokenId` - the first token ID to be transferred.\n `quantity` - the amount to be transferred.\n Calling conditions:\n - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, `tokenId` will be burned by `from`.\n - `from` and `to` are never both zero."
									},
									"id": 1143,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfers",
									"nameLocation": "27204:21:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1133,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "27243:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "27235:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27235:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1135,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "27265:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "27257:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1134,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27257:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "startTokenId",
												"nameLocation": "27285:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "27277:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27277:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1139,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "27315:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "27307:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27307:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27225:104:1"
									},
									"returnParameters": {
										"id": 1141,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27347:0:1"
									},
									"scope": 1884,
									"src": "27195:154:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1155,
										"nodeType": "Block",
										"src": "28147:2:1",
										"statements": []
									},
									"documentation": {
										"id": 1144,
										"nodeType": "StructuredDocumentation",
										"src": "27355:636:1",
										"text": " @dev Hook that is called after a set of serially-ordered token IDs\n have been transferred. This includes minting.\n And also called after one token has been burned.\n `startTokenId` - the first token ID to be transferred.\n `quantity` - the amount to be transferred.\n Calling conditions:\n - When `from` and `to` are both non-zero, `from`'s `tokenId` has been\n transferred to `to`.\n - When `from` is zero, `tokenId` has been minted for `to`.\n - When `to` is zero, `tokenId` has been burned by `from`.\n - `from` and `to` are never both zero."
									},
									"id": 1156,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfers",
									"nameLocation": "28005:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1146,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "28043:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "28035:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1145,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28035:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1148,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "28065:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "28057:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28057:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1150,
												"mutability": "mutable",
												"name": "startTokenId",
												"nameLocation": "28085:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "28077:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28077:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1152,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "28115:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "28107:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1151,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28107:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28025:104:1"
									},
									"returnParameters": {
										"id": 1154,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28147:0:1"
									},
									"scope": 1884,
									"src": "27996:153:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1211,
										"nodeType": "Block",
										"src": "28741:509:1",
										"statements": [
											{
												"clauses": [
													{
														"block": {
															"id": 1191,
															"nodeType": "Block",
															"src": "28890:96:1",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		},
																		"id": 1189,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1183,
																			"name": "retval",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1181,
																			"src": "28911:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"expression": {
																				"expression": {
																					"arguments": [
																						{
																							"id": 1185,
																							"name": "to",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1161,
																							"src": "28946:2:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 1184,
																						"name": "ERC721A__IERC721Receiver",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 105,
																						"src": "28921:24:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_ERC721A__IERC721Receiver_$105_$",
																							"typeString": "type(contract ERC721A__IERC721Receiver)"
																						}
																					},
																					"id": 1186,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "28921:28:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_ERC721A__IERC721Receiver_$105",
																						"typeString": "contract ERC721A__IERC721Receiver"
																					}
																				},
																				"id": 1187,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "28950:16:1",
																				"memberName": "onERC721Received",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 104,
																				"src": "28921:45:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																					"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																				}
																			},
																			"id": 1188,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "28967:8:1",
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "28921:54:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		"src": "28911:64:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"functionReturnParameters": 1169,
																	"id": 1190,
																	"nodeType": "Return",
																	"src": "28904:71:1"
																}
															]
														},
														"errorName": "",
														"id": 1192,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 1182,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 1181,
																	"mutability": "mutable",
																	"name": "retval",
																	"nameLocation": "28873:6:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 1192,
																	"src": "28866:13:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	"typeName": {
																		"id": 1180,
																		"name": "bytes4",
																		"nodeType": "ElementaryTypeName",
																		"src": "28866:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "28852:37:1"
														},
														"src": "28844:142:1"
													},
													{
														"block": {
															"id": 1208,
															"nodeType": "Block",
															"src": "29015:229:1",
															"statements": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1199,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 1196,
																				"name": "reason",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1194,
																				"src": "29033:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 1197,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "29040:6:1",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "29033:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1198,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "29050:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "29033:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1206,
																	"nodeType": "IfStatement",
																	"src": "29029:113:1",
																	"trueBody": {
																		"id": 1205,
																		"nodeType": "Block",
																		"src": "29053:89:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"expression": {
																								"id": 1201,
																								"name": "TransferToNonERC721ReceiverImplementer",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1914,
																								"src": "29079:38:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																									"typeString": "function () pure returns (error)"
																								}
																							},
																							"id": 1202,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "29118:8:1",
																							"memberName": "selector",
																							"nodeType": "MemberAccess",
																							"src": "29079:47:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes4",
																								"typeString": "bytes4"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes4",
																								"typeString": "bytes4"
																							}
																						],
																						"id": 1200,
																						"name": "_revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1883,
																						"src": "29071:7:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																							"typeString": "function (bytes4) pure"
																						}
																					},
																					"id": 1203,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "29071:56:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1204,
																				"nodeType": "ExpressionStatement",
																				"src": "29071:56:1"
																			}
																		]
																	}
																},
																{
																	"AST": {
																		"nativeSrc": "29164:70:1",
																		"nodeType": "YulBlock",
																		"src": "29164:70:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "29193:2:1",
																									"nodeType": "YulLiteral",
																									"src": "29193:2:1",
																									"type": "",
																									"value": "32"
																								},
																								{
																									"name": "reason",
																									"nativeSrc": "29197:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "29197:6:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "29189:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "29189:3:1"
																							},
																							"nativeSrc": "29189:15:1",
																							"nodeType": "YulFunctionCall",
																							"src": "29189:15:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "reason",
																									"nativeSrc": "29212:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "29212:6:1"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nativeSrc": "29206:5:1",
																								"nodeType": "YulIdentifier",
																								"src": "29206:5:1"
																							},
																							"nativeSrc": "29206:13:1",
																							"nodeType": "YulFunctionCall",
																							"src": "29206:13:1"
																						}
																					],
																					"functionName": {
																						"name": "revert",
																						"nativeSrc": "29182:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "29182:6:1"
																					},
																					"nativeSrc": "29182:38:1",
																					"nodeType": "YulFunctionCall",
																					"src": "29182:38:1"
																				},
																				"nativeSrc": "29182:38:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "29182:38:1"
																			}
																		]
																	},
																	"evmVersion": "istanbul",
																	"externalReferences": [
																		{
																			"declaration": 1194,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "29197:6:1",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1194,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "29212:6:1",
																			"valueSize": 1
																		}
																	],
																	"id": 1207,
																	"nodeType": "InlineAssembly",
																	"src": "29155:79:1"
																}
															]
														},
														"errorName": "",
														"id": 1209,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 1195,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 1194,
																	"mutability": "mutable",
																	"name": "reason",
																	"nameLocation": "29007:6:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 1209,
																	"src": "28994:19:1",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes"
																	},
																	"typeName": {
																		"id": 1193,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "28994:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_storage_ptr",
																			"typeString": "bytes"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "28993:21:1"
														},
														"src": "28987:257:1"
													}
												],
												"externalCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1174,
																"name": "_msgSenderERC721A",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1865,
																"src": "28801:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1175,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "28801:19:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1176,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1159,
															"src": "28822:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1177,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1163,
															"src": "28828:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1178,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1165,
															"src": "28837:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1171,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1161,
																	"src": "28780:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1170,
																"name": "ERC721A__IERC721Receiver",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 105,
																"src": "28755:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC721A__IERC721Receiver_$105_$",
																	"typeString": "type(contract ERC721A__IERC721Receiver)"
																}
															},
															"id": 1172,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "28755:28:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC721A__IERC721Receiver_$105",
																"typeString": "contract ERC721A__IERC721Receiver"
															}
														},
														"id": 1173,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "28784:16:1",
														"memberName": "onERC721Received",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 104,
														"src": "28755:45:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
															"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
														}
													},
													"id": 1179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28755:88:1",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"id": 1210,
												"nodeType": "TryStatement",
												"src": "28751:493:1"
											}
										]
									},
									"documentation": {
										"id": 1157,
										"nodeType": "StructuredDocumentation",
										"src": "28155:417:1",
										"text": " @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target contract.\n `from` - Previous owner of the given token ID.\n `to` - Target address that will receive the token.\n `tokenId` - Token ID to be transferred.\n `_data` - Optional data to send along with the call.\n Returns whether the call correctly returned the expected magic value."
									},
									"id": 1212,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkContractOnERC721Received",
									"nameLocation": "28586:30:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1159,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "28634:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1212,
												"src": "28626:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1158,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28626:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1161,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "28656:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1212,
												"src": "28648:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28648:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1163,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "28676:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1212,
												"src": "28668:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28668:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1165,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "28706:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1212,
												"src": "28693:18:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1164,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "28693:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28616:101:1"
									},
									"returnParameters": {
										"id": 1169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1168,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1212,
												"src": "28735:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1167,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "28735:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28734:6:1"
									},
									"scope": 1884,
									"src": "28577:673:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1330,
										"nodeType": "Block",
										"src": "29758:2189:1",
										"statements": [
											{
												"assignments": [
													1221
												],
												"declarations": [
													{
														"constant": false,
														"id": 1221,
														"mutability": "mutable",
														"name": "startTokenId",
														"nameLocation": "29776:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 1330,
														"src": "29768:20:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1220,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "29768:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1223,
												"initialValue": {
													"id": 1222,
													"name": "_currentIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 179,
													"src": "29791:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "29768:36:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1224,
														"name": "quantity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1217,
														"src": "29818:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1225,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "29830:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "29818:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1232,
												"nodeType": "IfStatement",
												"src": "29814:53:1",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 1228,
																	"name": "MintZeroQuantity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1902,
																	"src": "29841:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1229,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "29858:8:1",
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "29841:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 1227,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1883,
															"src": "29833:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 1230,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "29833:34:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1231,
													"nodeType": "ExpressionStatement",
													"src": "29833:34:1"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1236,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29908:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1235,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "29900:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1234,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "29900:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1237,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29900:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1238,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1215,
															"src": "29912:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1239,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1221,
															"src": "29916:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1240,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1217,
															"src": "29930:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1233,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1143,
														"src": "29878:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29878:61:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1242,
												"nodeType": "ExpressionStatement",
												"src": "29878:61:1"
											},
											{
												"id": 1319,
												"nodeType": "UncheckedBlock",
												"src": "30122:1749:1",
												"statements": [
													{
														"expression": {
															"id": 1261,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1243,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 189,
																	"src": "30367:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1245,
																"indexExpression": {
																	"id": 1244,
																	"name": "startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1221,
																	"src": "30385:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "30367:31:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 1247,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1215,
																		"src": "30437:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1259,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 1249,
																					"name": "quantity",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1217,
																					"src": "30478:8:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1248,
																				"name": "_nextInitializedFlag",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 737,
																				"src": "30457:20:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1250,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "30457:30:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "|",
																		"rightExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"hexValue": "30",
																							"id": 1254,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "30513:1:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							}
																						],
																						"id": 1253,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "30505:7:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1252,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "30505:7:1",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1255,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "30505:10:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1256,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1215,
																					"src": "30517:2:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"hexValue": "30",
																					"id": 1257,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "30521:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1251,
																				"name": "_nextExtraData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1855,
																				"src": "30490:14:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 1258,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "30490:33:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "30457:66:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1246,
																	"name": "_packOwnershipData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 727,
																	"src": "30401:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view returns (uint256)"
																	}
																},
																"id": 1260,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30401:136:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "30367:170:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1262,
														"nodeType": "ExpressionStatement",
														"src": "30367:170:1"
													},
													{
														"expression": {
															"id": 1275,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1263,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 193,
																	"src": "30748:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1265,
																"indexExpression": {
																	"id": 1264,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1215,
																	"src": "30767:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "30748:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1274,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1266,
																	"name": "quantity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1217,
																	"src": "30774:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1272,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1269,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 1267,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "30787:1:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"id": 1268,
																							"name": "_BITPOS_NUMBER_MINTED",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 122,
																							"src": "30792:21:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "30787:26:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1270,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "30786:28:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "|",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 1271,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "30817:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "30786:32:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1273,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "30785:34:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "30774:45:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "30748:71:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1276,
														"nodeType": "ExpressionStatement",
														"src": "30748:71:1"
													},
													{
														"assignments": [
															1278
														],
														"declarations": [
															{
																"constant": false,
																"id": 1278,
																"mutability": "mutable",
																"name": "toMasked",
																"nameLocation": "30935:8:1",
																"nodeType": "VariableDeclaration",
																"scope": 1319,
																"src": "30927:16:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1277,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "30927:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1288,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1287,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1283,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1215,
																				"src": "30962:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1282,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "30954:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint160_$",
																				"typeString": "type(uint160)"
																			},
																			"typeName": {
																				"id": 1281,
																				"name": "uint160",
																				"nodeType": "ElementaryTypeName",
																				"src": "30954:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1284,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "30954:11:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	],
																	"id": 1280,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "30946:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1279,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "30946:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 1285,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30946:20:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"id": 1286,
																"name": "_BITMASK_ADDRESS",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 171,
																"src": "30969:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "30946:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "30927:58:1"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1291,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1289,
																"name": "toMasked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1278,
																"src": "31004:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1290,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "31016:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "31004:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1297,
														"nodeType": "IfStatement",
														"src": "31000:54:1",
														"trueBody": {
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1293,
																			"name": "MintToZeroAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1899,
																			"src": "31027:17:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																				"typeString": "function () pure returns (error)"
																			}
																		},
																		"id": 1294,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "31045:8:1",
																		"memberName": "selector",
																		"nodeType": "MemberAccess",
																		"src": "31027:26:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	],
																	"id": 1292,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1883,
																	"src": "31019:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																		"typeString": "function (bytes4) pure"
																	}
																},
																"id": 1295,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "31019:35:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1296,
															"nodeType": "ExpressionStatement",
															"src": "31019:35:1"
														}
													},
													{
														"assignments": [
															1299
														],
														"declarations": [
															{
																"constant": false,
																"id": 1299,
																"mutability": "mutable",
																"name": "end",
																"nameLocation": "31077:3:1",
																"nodeType": "VariableDeclaration",
																"scope": 1319,
																"src": "31069:11:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1298,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "31069:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1303,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1300,
																"name": "startTokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1221,
																"src": "31083:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1301,
																"name": "quantity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1217,
																"src": "31098:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "31083:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "31069:37:1"
													},
													{
														"assignments": [
															1305
														],
														"declarations": [
															{
																"constant": false,
																"id": 1305,
																"mutability": "mutable",
																"name": "tokenId",
																"nameLocation": "31128:7:1",
																"nodeType": "VariableDeclaration",
																"scope": 1319,
																"src": "31120:15:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1304,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "31120:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1307,
														"initialValue": {
															"id": 1306,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1221,
															"src": "31138:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "31120:30:1"
													},
													{
														"body": {
															"id": 1309,
															"nodeType": "Block",
															"src": "31168:633:1",
															"statements": [
																{
																	"AST": {
																		"nativeSrc": "31195:441:1",
																		"nodeType": "YulBlock",
																		"src": "31195:441:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "31297:1:1",
																							"nodeType": "YulLiteral",
																							"src": "31297:1:1",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "31361:1:1",
																							"nodeType": "YulLiteral",
																							"src": "31361:1:1",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"name": "_TRANSFER_EVENT_SIGNATURE",
																							"nativeSrc": "31423:25:1",
																							"nodeType": "YulIdentifier",
																							"src": "31423:25:1"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "31488:1:1",
																							"nodeType": "YulLiteral",
																							"src": "31488:1:1",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"name": "toMasked",
																							"nativeSrc": "31532:8:1",
																							"nodeType": "YulIdentifier",
																							"src": "31532:8:1"
																						},
																						{
																							"name": "tokenId",
																							"nativeSrc": "31575:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "31575:7:1"
																						}
																					],
																					"functionName": {
																						"name": "log4",
																						"nativeSrc": "31267:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "31267:4:1"
																					},
																					"nativeSrc": "31267:351:1",
																					"nodeType": "YulFunctionCall",
																					"src": "31267:351:1"
																				},
																				"nativeSrc": "31267:351:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "31267:351:1"
																			}
																		]
																	},
																	"evmVersion": "istanbul",
																	"externalReferences": [
																		{
																			"declaration": 177,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "31423:25:1",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1278,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "31532:8:1",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1305,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "31575:7:1",
																			"valueSize": 1
																		}
																	],
																	"id": 1308,
																	"nodeType": "InlineAssembly",
																	"src": "31186:450:1"
																}
															]
														},
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1313,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1311,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": true,
																"src": "31809:9:1",
																"subExpression": {
																	"id": 1310,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1305,
																	"src": "31811:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1312,
																"name": "end",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1299,
																"src": "31822:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "31809:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1314,
														"nodeType": "DoWhileStatement",
														"src": "31165:662:1"
													},
													{
														"expression": {
															"id": 1317,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1315,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 179,
																"src": "31841:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"id": 1316,
																"name": "end",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1299,
																"src": "31857:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "31841:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1318,
														"nodeType": "ExpressionStatement",
														"src": "31841:19:1"
													}
												]
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1323,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "31909:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1322,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "31901:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1321,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "31901:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1324,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31901:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1325,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1215,
															"src": "31913:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1326,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1221,
															"src": "31917:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1327,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1217,
															"src": "31931:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1320,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1156,
														"src": "31880:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31880:60:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1329,
												"nodeType": "ExpressionStatement",
												"src": "31880:60:1"
											}
										]
									},
									"documentation": {
										"id": 1213,
										"nodeType": "StructuredDocumentation",
										"src": "29441:250:1",
										"text": " @dev Mints `quantity` tokens and transfers them to `to`.\n Requirements:\n - `to` cannot be the zero address.\n - `quantity` must be greater than 0.\n Emits a {Transfer} event for each mint."
									},
									"id": 1331,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "29705:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1215,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "29719:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1331,
												"src": "29711:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29711:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1217,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "29731:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1331,
												"src": "29723:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29723:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29710:30:1"
									},
									"returnParameters": {
										"id": 1219,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29758:0:1"
									},
									"scope": 1884,
									"src": "29696:2251:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1448,
										"nodeType": "Block",
										"src": "32856:1401:1",
										"statements": [
											{
												"assignments": [
													1340
												],
												"declarations": [
													{
														"constant": false,
														"id": 1340,
														"mutability": "mutable",
														"name": "startTokenId",
														"nameLocation": "32874:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 1448,
														"src": "32866:20:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1339,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "32866:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1342,
												"initialValue": {
													"id": 1341,
													"name": "_currentIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 179,
													"src": "32889:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "32866:36:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1343,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1334,
														"src": "32916:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1346,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "32930:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1345,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "32922:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1344,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "32922:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 1347,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "32922:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "32916:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1354,
												"nodeType": "IfStatement",
												"src": "32912:57:1",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 1350,
																	"name": "MintToZeroAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1899,
																	"src": "32942:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1351,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "32960:8:1",
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "32942:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 1349,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1883,
															"src": "32934:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 1352,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "32934:35:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1353,
													"nodeType": "ExpressionStatement",
													"src": "32934:35:1"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1355,
														"name": "quantity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1336,
														"src": "32983:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1356,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "32995:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "32983:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1363,
												"nodeType": "IfStatement",
												"src": "32979:53:1",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 1359,
																	"name": "MintZeroQuantity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1902,
																	"src": "33006:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1360,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "33023:8:1",
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "33006:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 1358,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1883,
															"src": "32998:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 1361,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "32998:34:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1362,
													"nodeType": "ExpressionStatement",
													"src": "32998:34:1"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1364,
														"name": "quantity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1336,
														"src": "33046:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1365,
														"name": "_MAX_MINT_ERC2309_QUANTITY_LIMIT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "33057:32:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "33046:43:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1372,
												"nodeType": "IfStatement",
												"src": "33042:98:1",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 1368,
																	"name": "MintERC2309QuantityExceedsLimit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1923,
																	"src": "33099:31:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1369,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "33131:8:1",
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "33099:40:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 1367,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1883,
															"src": "33091:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 1370,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "33091:49:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1371,
													"nodeType": "ExpressionStatement",
													"src": "33091:49:1"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1376,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "33181:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1375,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "33173:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1374,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "33173:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1377,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "33173:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1378,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1334,
															"src": "33185:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1379,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1340,
															"src": "33189:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1380,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1336,
															"src": "33203:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1373,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1143,
														"src": "33151:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33151:61:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1382,
												"nodeType": "ExpressionStatement",
												"src": "33151:61:1"
											},
											{
												"id": 1437,
												"nodeType": "UncheckedBlock",
												"src": "33321:860:1",
												"statements": [
													{
														"expression": {
															"id": 1395,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1383,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 193,
																	"src": "33541:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1385,
																"indexExpression": {
																	"id": 1384,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1334,
																	"src": "33560:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "33541:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1394,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1386,
																	"name": "quantity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1336,
																	"src": "33567:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1392,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1389,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 1387,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "33580:1:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"id": 1388,
																							"name": "_BITPOS_NUMBER_MINTED",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 122,
																							"src": "33585:21:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "33580:26:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1390,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "33579:28:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "|",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 1391,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "33610:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "33579:32:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1393,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "33578:34:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "33567:45:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "33541:71:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1396,
														"nodeType": "ExpressionStatement",
														"src": "33541:71:1"
													},
													{
														"expression": {
															"id": 1415,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1397,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 189,
																	"src": "33848:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1399,
																"indexExpression": {
																	"id": 1398,
																	"name": "startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1340,
																	"src": "33866:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "33848:31:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 1401,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1334,
																		"src": "33918:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1413,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 1403,
																					"name": "quantity",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1336,
																					"src": "33959:8:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1402,
																				"name": "_nextInitializedFlag",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 737,
																				"src": "33938:20:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1404,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "33938:30:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "|",
																		"rightExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"hexValue": "30",
																							"id": 1408,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "33994:1:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							}
																						],
																						"id": 1407,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "33986:7:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1406,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "33986:7:1",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1409,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "33986:10:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1410,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1334,
																					"src": "33998:2:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"hexValue": "30",
																					"id": 1411,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "34002:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1405,
																				"name": "_nextExtraData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1855,
																				"src": "33971:14:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 1412,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "33971:33:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "33938:66:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1400,
																	"name": "_packOwnershipData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 727,
																	"src": "33882:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view returns (uint256)"
																	}
																},
																"id": 1414,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "33882:136:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "33848:170:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1416,
														"nodeType": "ExpressionStatement",
														"src": "33848:170:1"
													},
													{
														"eventCall": {
															"arguments": [
																{
																	"id": 1418,
																	"name": "startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1340,
																	"src": "34058:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1423,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1421,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1419,
																			"name": "startTokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1340,
																			"src": "34072:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"id": 1420,
																			"name": "quantity",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1336,
																			"src": "34087:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "34072:23:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1422,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "34098:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "34072:27:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1426,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "34109:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "34101:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1424,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "34101:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1427,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "34101:10:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1428,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1334,
																	"src": "34113:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1417,
																"name": "ConsecutiveTransfer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2089,
																"src": "34038:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_address_$returns$__$",
																	"typeString": "function (uint256,uint256,address,address)"
																}
															},
															"id": 1429,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "34038:78:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1430,
														"nodeType": "EmitStatement",
														"src": "34033:83:1"
													},
													{
														"expression": {
															"id": 1435,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1431,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 179,
																"src": "34131:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1434,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1432,
																	"name": "startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1340,
																	"src": "34147:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1433,
																	"name": "quantity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1336,
																	"src": "34162:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "34147:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "34131:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1436,
														"nodeType": "ExpressionStatement",
														"src": "34131:39:1"
													}
												]
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1441,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "34219:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1440,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "34211:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1439,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "34211:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1442,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "34211:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1443,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1334,
															"src": "34223:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1444,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1340,
															"src": "34227:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1445,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1336,
															"src": "34241:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1438,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1156,
														"src": "34190:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34190:60:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1447,
												"nodeType": "ExpressionStatement",
												"src": "34190:60:1"
											}
										]
									},
									"documentation": {
										"id": 1332,
										"nodeType": "StructuredDocumentation",
										"src": "31953:829:1",
										"text": " @dev Mints `quantity` tokens and transfers them to `to`.\n This function is intended for efficient minting only during contract creation.\n It emits only one {ConsecutiveTransfer} as defined in\n [ERC2309](https://eips.ethereum.org/EIPS/eip-2309),\n instead of a sequence of {Transfer} event(s).\n Calling this function outside of contract creation WILL make your contract\n non-compliant with the ERC721 standard.\n For full ERC721 compliance, substituting ERC721 {Transfer} event(s) with the ERC2309\n {ConsecutiveTransfer} event is only permissible during contract creation.\n Requirements:\n - `to` cannot be the zero address.\n - `quantity` must be greater than 0.\n Emits a {ConsecutiveTransfer} event."
									},
									"id": 1449,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mintERC2309",
									"nameLocation": "32796:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1334,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "32817:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1449,
												"src": "32809:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1333,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32809:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1336,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "32829:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1449,
												"src": "32821:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1335,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32821:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32808:30:1"
									},
									"returnParameters": {
										"id": 1338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32856:0:1"
									},
									"scope": 1884,
									"src": "32787:1470:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1516,
										"nodeType": "Block",
										"src": "34772:572:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1460,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1452,
															"src": "34788:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1461,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1454,
															"src": "34792:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1459,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1331,
														"src": "34782:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34782:19:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1463,
												"nodeType": "ExpressionStatement",
												"src": "34782:19:1"
											},
											{
												"id": 1515,
												"nodeType": "UncheckedBlock",
												"src": "34812:526:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1468,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"expression": {
																		"id": 1464,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1452,
																		"src": "34840:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 1465,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "34843:4:1",
																	"memberName": "code",
																	"nodeType": "MemberAccess",
																	"src": "34840:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 1466,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "34848:6:1",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "34840:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1467,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "34858:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "34840:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1514,
														"nodeType": "IfStatement",
														"src": "34836:492:1",
														"trueBody": {
															"id": 1513,
															"nodeType": "Block",
															"src": "34861:467:1",
															"statements": [
																{
																	"assignments": [
																		1470
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 1470,
																			"mutability": "mutable",
																			"name": "end",
																			"nameLocation": "34887:3:1",
																			"nodeType": "VariableDeclaration",
																			"scope": 1513,
																			"src": "34879:11:1",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 1469,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "34879:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 1472,
																	"initialValue": {
																		"id": 1471,
																		"name": "_currentIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 179,
																		"src": "34893:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "34879:27:1"
																},
																{
																	"assignments": [
																		1474
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 1474,
																			"mutability": "mutable",
																			"name": "index",
																			"nameLocation": "34932:5:1",
																			"nodeType": "VariableDeclaration",
																			"scope": 1513,
																			"src": "34924:13:1",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 1473,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "34924:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 1478,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1477,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1475,
																			"name": "end",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1470,
																			"src": "34940:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 1476,
																			"name": "quantity",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1454,
																			"src": "34946:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "34940:14:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "34924:30:1"
																},
																{
																	"body": {
																		"id": 1497,
																		"nodeType": "Block",
																		"src": "34975:214:1",
																		"statements": [
																			{
																				"condition": {
																					"id": 1489,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "!",
																					"prefix": true,
																					"src": "35001:63:1",
																					"subExpression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"hexValue": "30",
																										"id": 1482,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "35041:1:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_0_by_1",
																											"typeString": "int_const 0"
																										},
																										"value": "0"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_rational_0_by_1",
																											"typeString": "int_const 0"
																										}
																									],
																									"id": 1481,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "35033:7:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_address_$",
																										"typeString": "type(address)"
																									},
																									"typeName": {
																										"id": 1480,
																										"name": "address",
																										"nodeType": "ElementaryTypeName",
																										"src": "35033:7:1",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 1483,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "35033:10:1",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 1484,
																								"name": "to",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1452,
																								"src": "35045:2:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 1486,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "UnaryOperation",
																								"operator": "++",
																								"prefix": false,
																								"src": "35049:7:1",
																								"subExpression": {
																									"id": 1485,
																									"name": "index",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1474,
																									"src": "35049:5:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 1487,
																								"name": "_data",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1456,
																								"src": "35058:5:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							],
																							"id": 1479,
																							"name": "_checkContractOnERC721Received",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1212,
																							"src": "35002:30:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																								"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																							}
																						},
																						"id": 1488,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "35002:62:1",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1496,
																				"nodeType": "IfStatement",
																				"src": "34997:174:1",
																				"trueBody": {
																					"id": 1495,
																					"nodeType": "Block",
																					"src": "35066:105:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"expression": {
																											"id": 1491,
																											"name": "TransferToNonERC721ReceiverImplementer",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1914,
																											"src": "35100:38:1",
																											"typeDescriptions": {
																												"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																												"typeString": "function () pure returns (error)"
																											}
																										},
																										"id": 1492,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberLocation": "35139:8:1",
																										"memberName": "selector",
																										"nodeType": "MemberAccess",
																										"src": "35100:47:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_bytes4",
																											"typeString": "bytes4"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_bytes4",
																											"typeString": "bytes4"
																										}
																									],
																									"id": 1490,
																									"name": "_revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1883,
																									"src": "35092:7:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																										"typeString": "function (bytes4) pure"
																									}
																								},
																								"id": 1493,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "35092:56:1",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1494,
																							"nodeType": "ExpressionStatement",
																							"src": "35092:56:1"
																						}
																					]
																				}
																			}
																		]
																	},
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1500,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1498,
																			"name": "index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1474,
																			"src": "35197:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"id": 1499,
																			"name": "end",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1470,
																			"src": "35205:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "35197:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1501,
																	"nodeType": "DoWhileStatement",
																	"src": "34972:238:1"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1504,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1502,
																			"name": "_currentIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 179,
																			"src": "35273:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 1503,
																			"name": "end",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1470,
																			"src": "35290:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "35273:20:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1512,
																	"nodeType": "IfStatement",
																	"src": "35269:44:1",
																	"trueBody": {
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"hexValue": "30",
																							"id": 1508,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "35310:1:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							}
																						],
																						"id": 1507,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "35303:6:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bytes4_$",
																							"typeString": "type(bytes4)"
																						},
																						"typeName": {
																							"id": 1506,
																							"name": "bytes4",
																							"nodeType": "ElementaryTypeName",
																							"src": "35303:6:1",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1509,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "35303:9:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				],
																				"id": 1505,
																				"name": "_revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1883,
																				"src": "35295:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																					"typeString": "function (bytes4) pure"
																				}
																			},
																			"id": 1510,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "35295:18:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1511,
																		"nodeType": "ExpressionStatement",
																		"src": "35295:18:1"
																	}
																}
															]
														}
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1450,
										"nodeType": "StructuredDocumentation",
										"src": "34263:388:1",
										"text": " @dev Safely mints `quantity` tokens and transfers them to `to`.\n Requirements:\n - If `to` refers to a smart contract, it must implement\n {IERC721Receiver-onERC721Received}, which is called for each safe transfer.\n - `quantity` must be greater than 0.\n See {_mint}.\n Emits a {Transfer} event for each mint."
									},
									"id": 1517,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "34665:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1452,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "34692:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1517,
												"src": "34684:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1451,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34684:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1454,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "34712:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1517,
												"src": "34704:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1453,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34704:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1456,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "34743:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1517,
												"src": "34730:18:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1455,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "34730:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34674:80:1"
									},
									"returnParameters": {
										"id": 1458,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34772:0:1"
									},
									"scope": 1884,
									"src": "34656:688:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1531,
										"nodeType": "Block",
										"src": "35489:44:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1526,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1520,
															"src": "35509:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1527,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1522,
															"src": "35513:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1528,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "35523:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1525,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1517,
															1532
														],
														"referencedDeclaration": 1517,
														"src": "35499:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 1529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35499:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1530,
												"nodeType": "ExpressionStatement",
												"src": "35499:27:1"
											}
										]
									},
									"documentation": {
										"id": 1518,
										"nodeType": "StructuredDocumentation",
										"src": "35350:68:1",
										"text": " @dev Equivalent to `_safeMint(to, quantity, '')`."
									},
									"id": 1532,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "35432:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1520,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "35450:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1532,
												"src": "35442:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1519,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35442:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1522,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "35462:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1532,
												"src": "35454:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1521,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35454:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35441:30:1"
									},
									"returnParameters": {
										"id": 1524,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "35489:0:1"
									},
									"scope": 1884,
									"src": "35423:110:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1546,
										"nodeType": "Block",
										"src": "35865:45:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1541,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1535,
															"src": "35884:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1542,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1537,
															"src": "35888:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "66616c7365",
															"id": 1543,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "35897:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1540,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1547,
															1597
														],
														"referencedDeclaration": 1597,
														"src": "35875:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,bool)"
														}
													},
													"id": 1544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35875:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1545,
												"nodeType": "ExpressionStatement",
												"src": "35875:28:1"
											}
										]
									},
									"documentation": {
										"id": 1533,
										"nodeType": "StructuredDocumentation",
										"src": "35727:69:1",
										"text": " @dev Equivalent to `_approve(to, tokenId, false)`."
									},
									"id": 1547,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "35810:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1535,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "35827:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1547,
												"src": "35819:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1534,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35819:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1537,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "35839:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1547,
												"src": "35831:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1536,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35831:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35818:29:1"
									},
									"returnParameters": {
										"id": 1539,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "35865:0:1"
									},
									"scope": 1884,
									"src": "35801:109:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1596,
										"nodeType": "Block",
										"src": "36427:346:1",
										"statements": [
											{
												"assignments": [
													1558
												],
												"declarations": [
													{
														"constant": false,
														"id": 1558,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "36445:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 1596,
														"src": "36437:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1557,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "36437:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1562,
												"initialValue": {
													"arguments": [
														{
															"id": 1560,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1552,
															"src": "36461:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1559,
														"name": "ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 516,
														"src": "36453:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36453:16:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "36437:32:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1563,
														"name": "approvalCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1554,
														"src": "36484:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1567,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1564,
																"name": "_msgSenderERC721A",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1865,
																"src": "36501:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1565,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "36501:19:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 1566,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1558,
															"src": "36524:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "36501:28:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "36484:45:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1582,
												"nodeType": "IfStatement",
												"src": "36480:198:1",
												"trueBody": {
													"condition": {
														"id": 1574,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "36547:45:1",
														"subExpression": {
															"arguments": [
																{
																	"id": 1570,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1558,
																	"src": "36565:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1571,
																		"name": "_msgSenderERC721A",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1865,
																		"src": "36572:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1572,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "36572:19:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1569,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 822,
																"src": "36548:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 1573,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "36548:44:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1581,
													"nodeType": "IfStatement",
													"src": "36543:135:1",
													"trueBody": {
														"id": 1580,
														"nodeType": "Block",
														"src": "36594:84:1",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 1576,
																				"name": "ApprovalCallerNotOwnerNorApproved",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1890,
																				"src": "36620:33:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																					"typeString": "function () pure returns (error)"
																				}
																			},
																			"id": 1577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "36654:8:1",
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "36620:42:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		],
																		"id": 1575,
																		"name": "_revert",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1883,
																		"src": "36612:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																			"typeString": "function (bytes4) pure"
																		}
																	},
																	"id": 1578,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "36612:51:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1579,
																"nodeType": "ExpressionStatement",
																"src": "36612:51:1"
															}
														]
													}
												}
											},
											{
												"expression": {
													"id": 1588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1583,
																"name": "_tokenApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 198,
																"src": "36688:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$111_storage_$",
																	"typeString": "mapping(uint256 => struct ERC721A.TokenApprovalRef storage ref)"
																}
															},
															"id": 1585,
															"indexExpression": {
																"id": 1584,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1552,
																"src": "36704:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "36688:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenApprovalRef_$111_storage",
																"typeString": "struct ERC721A.TokenApprovalRef storage ref"
															}
														},
														"id": 1586,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "36713:5:1",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 110,
														"src": "36688:30:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1587,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1550,
														"src": "36721:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "36688:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1589,
												"nodeType": "ExpressionStatement",
												"src": "36688:35:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1591,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1558,
															"src": "36747:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1592,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1550,
															"src": "36754:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1593,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1552,
															"src": "36758:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1590,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1967,
														"src": "36738:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36738:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1595,
												"nodeType": "EmitStatement",
												"src": "36733:33:1"
											}
										]
									},
									"documentation": {
										"id": 1548,
										"nodeType": "StructuredDocumentation",
										"src": "35916:392:1",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the\n zero address clears previous approvals.\n Requirements:\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"id": 1597,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "36322:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1550,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "36348:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1597,
												"src": "36340:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1549,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "36340:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1552,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "36368:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1597,
												"src": "36360:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1551,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "36360:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1554,
												"mutability": "mutable",
												"name": "approvalCheck",
												"nameLocation": "36390:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 1597,
												"src": "36385:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1553,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "36385:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36330:79:1"
									},
									"returnParameters": {
										"id": 1556,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "36427:0:1"
									},
									"scope": 1884,
									"src": "36313:460:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1608,
										"nodeType": "Block",
										"src": "37080:38:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1604,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1600,
															"src": "37096:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "66616c7365",
															"id": 1605,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "37105:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1603,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1609,
															1763
														],
														"referencedDeclaration": 1763,
														"src": "37090:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (uint256,bool)"
														}
													},
													"id": 1606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37090:21:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1607,
												"nodeType": "ExpressionStatement",
												"src": "37090:21:1"
											}
										]
									},
									"documentation": {
										"id": 1598,
										"nodeType": "StructuredDocumentation",
										"src": "36964:62:1",
										"text": " @dev Equivalent to `_burn(tokenId, false)`."
									},
									"id": 1609,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "37040:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1600,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "37054:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1609,
												"src": "37046:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1599,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37046:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37045:17:1"
									},
									"returnParameters": {
										"id": 1602,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "37080:0:1"
									},
									"scope": 1884,
									"src": "37031:87:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1762,
										"nodeType": "Block",
										"src": "37404:2955:1",
										"statements": [
											{
												"assignments": [
													1618
												],
												"declarations": [
													{
														"constant": false,
														"id": 1618,
														"mutability": "mutable",
														"name": "prevOwnershipPacked",
														"nameLocation": "37422:19:1",
														"nodeType": "VariableDeclaration",
														"scope": 1762,
														"src": "37414:27:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1617,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "37414:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1622,
												"initialValue": {
													"arguments": [
														{
															"id": 1620,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1612,
															"src": "37463:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1619,
														"name": "_packedOwnershipOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 661,
														"src": "37444:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1621,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37444:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "37414:57:1"
											},
											{
												"assignments": [
													1624
												],
												"declarations": [
													{
														"constant": false,
														"id": 1624,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "37490:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 1762,
														"src": "37482:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1623,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "37482:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1632,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1629,
																	"name": "prevOwnershipPacked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1618,
																	"src": "37513:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1628,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "37505:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint160_$",
																	"typeString": "type(uint160)"
																},
																"typeName": {
																	"id": 1627,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "37505:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1630,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "37505:28:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 1626,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "37497:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1625,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "37497:7:1",
															"typeDescriptions": {}
														}
													},
													"id": 1631,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37497:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "37482:52:1"
											},
											{
												"assignments": [
													1634,
													1636
												],
												"declarations": [
													{
														"constant": false,
														"id": 1634,
														"mutability": "mutable",
														"name": "approvedAddressSlot",
														"nameLocation": "37554:19:1",
														"nodeType": "VariableDeclaration",
														"scope": 1762,
														"src": "37546:27:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1633,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "37546:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1636,
														"mutability": "mutable",
														"name": "approvedAddress",
														"nameLocation": "37583:15:1",
														"nodeType": "VariableDeclaration",
														"scope": 1762,
														"src": "37575:23:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1635,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "37575:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1640,
												"initialValue": {
													"arguments": [
														{
															"id": 1638,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1612,
															"src": "37629:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1637,
														"name": "_getApprovedSlotAndAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 898,
														"src": "37602:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_address_$",
															"typeString": "function (uint256) view returns (uint256,address)"
														}
													},
													"id": 1639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37602:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_address_$",
														"typeString": "tuple(uint256,address)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "37545:92:1"
											},
											{
												"condition": {
													"id": 1641,
													"name": "approvalCheck",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1614,
													"src": "37652:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1663,
												"nodeType": "IfStatement",
												"src": "37648:321:1",
												"trueBody": {
													"id": 1662,
													"nodeType": "Block",
													"src": "37667:302:1",
													"statements": [
														{
															"condition": {
																"id": 1648,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "37770:69:1",
																"subExpression": {
																	"arguments": [
																		{
																			"id": 1643,
																			"name": "approvedAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1636,
																			"src": "37796:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1644,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1624,
																			"src": "37813:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 1645,
																				"name": "_msgSenderERC721A",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1865,
																				"src": "37819:17:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																					"typeString": "function () view returns (address)"
																				}
																			},
																			"id": 1646,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "37819:19:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1642,
																		"name": "_isSenderApprovedOrOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 879,
																		"src": "37771:24:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_address_$returns$_t_bool_$",
																			"typeString": "function (address,address,address) pure returns (bool)"
																		}
																	},
																	"id": 1647,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "37771:68:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1661,
															"nodeType": "IfStatement",
															"src": "37766:192:1",
															"trueBody": {
																"condition": {
																	"id": 1654,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "37861:44:1",
																	"subExpression": {
																		"arguments": [
																			{
																				"id": 1650,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1624,
																				"src": "37879:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"id": 1651,
																					"name": "_msgSenderERC721A",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1865,
																					"src": "37885:17:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																						"typeString": "function () view returns (address)"
																					}
																				},
																				"id": 1652,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "37885:19:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1649,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 822,
																			"src": "37862:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 1653,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "37862:43:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 1660,
																"nodeType": "IfStatement",
																"src": "37857:101:1",
																"trueBody": {
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 1656,
																					"name": "TransferCallerNotOwnerNorApproved",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1908,
																					"src": "37915:33:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																						"typeString": "function () pure returns (error)"
																					}
																				},
																				"id": 1657,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "37949:8:1",
																				"memberName": "selector",
																				"nodeType": "MemberAccess",
																				"src": "37915:42:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				}
																			],
																			"id": 1655,
																			"name": "_revert",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1883,
																			"src": "37907:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																				"typeString": "function (bytes4) pure"
																			}
																		},
																		"id": 1658,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "37907:51:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1659,
																	"nodeType": "ExpressionStatement",
																	"src": "37907:51:1"
																}
															}
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1665,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1624,
															"src": "38001:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1668,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "38015:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1667,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "38007:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1666,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "38007:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1669,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "38007:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1670,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1612,
															"src": "38019:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1671,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "38028:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1664,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1143,
														"src": "37979:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1672,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37979:51:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1673,
												"nodeType": "ExpressionStatement",
												"src": "37979:51:1"
											},
											{
												"AST": {
													"nativeSrc": "38102:181:1",
													"nodeType": "YulBlock",
													"src": "38102:181:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "38135:138:1",
																"nodeType": "YulBlock",
																"src": "38135:138:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "approvedAddressSlot",
																					"nativeSrc": "38236:19:1",
																					"nodeType": "YulIdentifier",
																					"src": "38236:19:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "38257:1:1",
																					"nodeType": "YulLiteral",
																					"src": "38257:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "sstore",
																				"nativeSrc": "38229:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "38229:6:1"
																			},
																			"nativeSrc": "38229:30:1",
																			"nodeType": "YulFunctionCall",
																			"src": "38229:30:1"
																		},
																		"nativeSrc": "38229:30:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "38229:30:1"
																	}
																]
															},
															"condition": {
																"name": "approvedAddress",
																"nativeSrc": "38119:15:1",
																"nodeType": "YulIdentifier",
																"src": "38119:15:1"
															},
															"nativeSrc": "38116:157:1",
															"nodeType": "YulIf",
															"src": "38116:157:1"
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1636,
														"isOffset": false,
														"isSlot": false,
														"src": "38119:15:1",
														"valueSize": 1
													},
													{
														"declaration": 1634,
														"isOffset": false,
														"isSlot": false,
														"src": "38236:19:1",
														"valueSize": 1
													}
												],
												"id": 1674,
												"nodeType": "InlineAssembly",
												"src": "38093:190:1"
											},
											{
												"id": 1738,
												"nodeType": "UncheckedBlock",
												"src": "38550:1545:1",
												"statements": [
													{
														"expression": {
															"id": 1684,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1675,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 193,
																	"src": "38862:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1677,
																"indexExpression": {
																	"id": 1676,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1624,
																	"src": "38881:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "38862:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1683,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1680,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "31",
																				"id": 1678,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "38891:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<<",
																			"rightExpression": {
																				"id": 1679,
																				"name": "_BITPOS_NUMBER_BURNED",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 125,
																				"src": "38896:21:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "38891:26:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1681,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "38890:28:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1682,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "38921:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "38890:32:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "38862:60:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1685,
														"nodeType": "ExpressionStatement",
														"src": "38862:60:1"
													},
													{
														"expression": {
															"id": 1705,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1686,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 189,
																	"src": "39153:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1688,
																"indexExpression": {
																	"id": 1687,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1612,
																	"src": "39171:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "39153:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 1690,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1624,
																		"src": "39218:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1703,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1693,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1691,
																						"name": "_BITMASK_BURNED",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 144,
																						"src": "39241:15:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "|",
																					"rightExpression": {
																						"id": 1692,
																						"name": "_BITMASK_NEXT_INITIALIZED",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 152,
																						"src": "39259:25:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "39241:43:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1694,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "39240:45:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "|",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 1696,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1624,
																					"src": "39303:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"arguments": [
																						{
																							"hexValue": "30",
																							"id": 1699,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "39317:1:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							}
																						],
																						"id": 1698,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "39309:7:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1697,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "39309:7:1",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1700,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "39309:10:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1701,
																					"name": "prevOwnershipPacked",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1618,
																					"src": "39321:19:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1695,
																				"name": "_nextExtraData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1855,
																				"src": "39288:14:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 1702,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "39288:53:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "39240:101:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1689,
																	"name": "_packOwnershipData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 727,
																	"src": "39182:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view returns (uint256)"
																	}
																},
																"id": 1704,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "39182:173:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "39153:202:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1706,
														"nodeType": "ExpressionStatement",
														"src": "39153:202:1"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1711,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1709,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1707,
																	"name": "prevOwnershipPacked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1618,
																	"src": "39472:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1708,
																	"name": "_BITMASK_NEXT_INITIALIZED",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 152,
																	"src": "39494:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "39472:47:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1710,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "39523:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "39472:52:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1737,
														"nodeType": "IfStatement",
														"src": "39468:617:1",
														"trueBody": {
															"id": 1736,
															"nodeType": "Block",
															"src": "39526:559:1",
															"statements": [
																{
																	"assignments": [
																		1713
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 1713,
																			"mutability": "mutable",
																			"name": "nextTokenId",
																			"nameLocation": "39552:11:1",
																			"nodeType": "VariableDeclaration",
																			"scope": 1736,
																			"src": "39544:19:1",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 1712,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "39544:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 1717,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1716,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1714,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1612,
																			"src": "39566:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1715,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "39576:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "39566:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "39544:33:1"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1722,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"id": 1718,
																				"name": "_packedOwnerships",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 189,
																				"src": "39697:17:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																					"typeString": "mapping(uint256 => uint256)"
																				}
																			},
																			"id": 1720,
																			"indexExpression": {
																				"id": 1719,
																				"name": "nextTokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1713,
																				"src": "39715:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "39697:30:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1721,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "39731:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "39697:35:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1735,
																	"nodeType": "IfStatement",
																	"src": "39693:378:1",
																	"trueBody": {
																		"id": 1734,
																		"nodeType": "Block",
																		"src": "39734:337:1",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1725,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1723,
																						"name": "nextTokenId",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1713,
																						"src": "39818:11:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"id": 1724,
																						"name": "_currentIndex",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 179,
																						"src": "39833:13:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "39818:28:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1733,
																				"nodeType": "IfStatement",
																				"src": "39814:239:1",
																				"trueBody": {
																					"id": 1732,
																					"nodeType": "Block",
																					"src": "39848:205:1",
																					"statements": [
																						{
																							"expression": {
																								"id": 1730,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftHandSide": {
																									"baseExpression": {
																										"id": 1726,
																										"name": "_packedOwnerships",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 189,
																										"src": "39978:17:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																											"typeString": "mapping(uint256 => uint256)"
																										}
																									},
																									"id": 1728,
																									"indexExpression": {
																										"id": 1727,
																										"name": "nextTokenId",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1713,
																										"src": "39996:11:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": true,
																									"nodeType": "IndexAccess",
																									"src": "39978:30:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "Assignment",
																								"operator": "=",
																								"rightHandSide": {
																									"id": 1729,
																									"name": "prevOwnershipPacked",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1618,
																									"src": "40011:19:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "39978:52:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 1731,
																							"nodeType": "ExpressionStatement",
																							"src": "39978:52:1"
																						}
																					]
																				}
																			}
																		]
																	}
																}
															]
														}
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1740,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1624,
															"src": "40119:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1743,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "40133:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1742,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "40125:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1741,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "40125:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1744,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "40125:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1745,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1612,
															"src": "40137:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1739,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1958,
														"src": "40110:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1746,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "40110:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1747,
												"nodeType": "EmitStatement",
												"src": "40105:40:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1749,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1624,
															"src": "40176:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1752,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "40190:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1751,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "40182:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1750,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "40182:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1753,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "40182:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1754,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1612,
															"src": "40194:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1755,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "40203:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1748,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1156,
														"src": "40155:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "40155:50:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1757,
												"nodeType": "ExpressionStatement",
												"src": "40155:50:1"
											},
											{
												"id": 1761,
												"nodeType": "UncheckedBlock",
												"src": "40304:49:1",
												"statements": [
													{
														"expression": {
															"id": 1759,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": false,
															"src": "40328:14:1",
															"subExpression": {
																"id": 1758,
																"name": "_burnCounter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 181,
																"src": "40328:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1760,
														"nodeType": "ExpressionStatement",
														"src": "40328:14:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1610,
										"nodeType": "StructuredDocumentation",
										"src": "37124:206:1",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 1763,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "37344:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1612,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "37358:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1763,
												"src": "37350:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1611,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37350:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1614,
												"mutability": "mutable",
												"name": "approvalCheck",
												"nameLocation": "37372:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 1763,
												"src": "37367:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1613,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "37367:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37349:37:1"
									},
									"returnParameters": {
										"id": 1616,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "37404:0:1"
									},
									"scope": 1884,
									"src": "37335:3024:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1808,
										"nodeType": "Block",
										"src": "40717:456:1",
										"statements": [
											{
												"assignments": [
													1772
												],
												"declarations": [
													{
														"constant": false,
														"id": 1772,
														"mutability": "mutable",
														"name": "packed",
														"nameLocation": "40735:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 1808,
														"src": "40727:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1771,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "40727:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1776,
												"initialValue": {
													"baseExpression": {
														"id": 1773,
														"name": "_packedOwnerships",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 189,
														"src": "40744:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 1775,
													"indexExpression": {
														"id": 1774,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1766,
														"src": "40762:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "40744:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "40727:41:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1779,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1777,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1772,
														"src": "40782:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1778,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "40792:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "40782:11:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1785,
												"nodeType": "IfStatement",
												"src": "40778:70:1",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 1781,
																	"name": "OwnershipNotInitializedForExtraData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1926,
																	"src": "40803:35:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1782,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "40839:8:1",
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "40803:44:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 1780,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1883,
															"src": "40795:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 1783,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "40795:53:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1784,
													"nodeType": "ExpressionStatement",
													"src": "40795:53:1"
												}
											},
											{
												"assignments": [
													1787
												],
												"declarations": [
													{
														"constant": false,
														"id": 1787,
														"mutability": "mutable",
														"name": "extraDataCasted",
														"nameLocation": "40866:15:1",
														"nodeType": "VariableDeclaration",
														"scope": 1808,
														"src": "40858:23:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1786,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "40858:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1788,
												"nodeType": "VariableDeclarationStatement",
												"src": "40858:23:1"
											},
											{
												"AST": {
													"nativeSrc": "40970:52:1",
													"nodeType": "YulBlock",
													"src": "40970:52:1",
													"statements": [
														{
															"nativeSrc": "40984:28:1",
															"nodeType": "YulAssignment",
															"src": "40984:28:1",
															"value": {
																"name": "extraData",
																"nativeSrc": "41003:9:1",
																"nodeType": "YulIdentifier",
																"src": "41003:9:1"
															},
															"variableNames": [
																{
																	"name": "extraDataCasted",
																	"nativeSrc": "40984:15:1",
																	"nodeType": "YulIdentifier",
																	"src": "40984:15:1"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1768,
														"isOffset": false,
														"isSlot": false,
														"src": "41003:9:1",
														"valueSize": 1
													},
													{
														"declaration": 1787,
														"isOffset": false,
														"isSlot": false,
														"src": "40984:15:1",
														"valueSize": 1
													}
												],
												"id": 1789,
												"nodeType": "InlineAssembly",
												"src": "40961:61:1"
											},
											{
												"expression": {
													"id": 1800,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1790,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1772,
														"src": "41031:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1799,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1793,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1791,
																		"name": "packed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1772,
																		"src": "41041:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&",
																	"rightExpression": {
																		"id": 1792,
																		"name": "_BITMASK_EXTRA_DATA_COMPLEMENT",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 163,
																		"src": "41050:30:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "41041:39:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1794,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "41040:41:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "|",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1797,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1795,
																		"name": "extraDataCasted",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1787,
																		"src": "41085:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<<",
																	"rightExpression": {
																		"id": 1796,
																		"name": "_BITPOS_EXTRA_DATA",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 155,
																		"src": "41104:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "41085:37:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1798,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "41084:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "41040:83:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "41031:92:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1801,
												"nodeType": "ExpressionStatement",
												"src": "41031:92:1"
											},
											{
												"expression": {
													"id": 1806,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1802,
															"name": "_packedOwnerships",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 189,
															"src": "41133:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1804,
														"indexExpression": {
															"id": 1803,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1766,
															"src": "41151:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "41133:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1805,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1772,
														"src": "41160:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "41133:33:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1807,
												"nodeType": "ExpressionStatement",
												"src": "41133:33:1"
											}
										]
									},
									"documentation": {
										"id": 1764,
										"nodeType": "StructuredDocumentation",
										"src": "40553:84:1",
										"text": " @dev Directly sets the extra data for the ownership data `index`."
									},
									"id": 1809,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setExtraDataAt",
									"nameLocation": "40651:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1766,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "40675:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1809,
												"src": "40667:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1765,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "40667:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1768,
												"mutability": "mutable",
												"name": "extraData",
												"nameLocation": "40689:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 1809,
												"src": "40682:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1767,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "40682:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40666:33:1"
									},
									"returnParameters": {
										"id": 1770,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "40717:0:1"
									},
									"scope": 1884,
									"src": "40642:531:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1821,
										"nodeType": "Block",
										"src": "41874:2:1",
										"statements": []
									},
									"documentation": {
										"id": 1810,
										"nodeType": "StructuredDocumentation",
										"src": "41179:549:1",
										"text": " @dev Called during each token transfer to set the 24bit `extraData` field.\n Intended to be overridden by the cosumer contract.\n `previousExtraData` - the value of `extraData` before transfer.\n Calling conditions:\n - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, `tokenId` will be burned by `from`.\n - `from` and `to` are never both zero."
									},
									"id": 1822,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_extraData",
									"nameLocation": "41742:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1817,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1812,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "41770:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1822,
												"src": "41762:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1811,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "41762:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1814,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "41792:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1822,
												"src": "41784:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "41784:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1816,
												"mutability": "mutable",
												"name": "previousExtraData",
												"nameLocation": "41811:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 1822,
												"src": "41804:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1815,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "41804:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41752:82:1"
									},
									"returnParameters": {
										"id": 1820,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1819,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1822,
												"src": "41866:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1818,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "41866:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41865:8:1"
									},
									"scope": 1884,
									"src": "41733:143:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1854,
										"nodeType": "Block",
										"src": "42162:164:1",
										"statements": [
											{
												"assignments": [
													1835
												],
												"declarations": [
													{
														"constant": false,
														"id": 1835,
														"mutability": "mutable",
														"name": "extraData",
														"nameLocation": "42179:9:1",
														"nodeType": "VariableDeclaration",
														"scope": 1854,
														"src": "42172:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														},
														"typeName": {
															"id": 1834,
															"name": "uint24",
															"nodeType": "ElementaryTypeName",
															"src": "42172:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1842,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1840,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1838,
																"name": "prevOwnershipPacked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1829,
																"src": "42198:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"id": 1839,
																"name": "_BITPOS_EXTRA_DATA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 155,
																"src": "42221:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "42198:41:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1837,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "42191:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint24_$",
															"typeString": "type(uint24)"
														},
														"typeName": {
															"id": 1836,
															"name": "uint24",
															"nodeType": "ElementaryTypeName",
															"src": "42191:6:1",
															"typeDescriptions": {}
														}
													},
													"id": 1841,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42191:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "42172:68:1"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1852,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1846,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1825,
																		"src": "42276:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1847,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1827,
																		"src": "42282:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1848,
																		"name": "extraData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1835,
																		"src": "42286:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint24",
																			"typeString": "uint24"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint24",
																			"typeString": "uint24"
																		}
																	],
																	"id": 1845,
																	"name": "_extraData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1822,
																	"src": "42265:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint24_$returns$_t_uint24_$",
																		"typeString": "function (address,address,uint24) view returns (uint24)"
																	}
																},
																"id": 1849,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "42265:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint24",
																	"typeString": "uint24"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint24",
																	"typeString": "uint24"
																}
															],
															"id": 1844,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "42257:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 1843,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "42257:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 1850,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "42257:40:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"id": 1851,
														"name": "_BITPOS_EXTRA_DATA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 155,
														"src": "42301:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "42257:62:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1833,
												"id": 1853,
												"nodeType": "Return",
												"src": "42250:69:1"
											}
										]
									},
									"documentation": {
										"id": 1823,
										"nodeType": "StructuredDocumentation",
										"src": "41882:135:1",
										"text": " @dev Returns the next extra data for the packed ownership data.\n The returned result is shifted into position."
									},
									"id": 1855,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nextExtraData",
									"nameLocation": "42031:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1825,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "42063:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1855,
												"src": "42055:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1824,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "42055:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1827,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "42085:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1855,
												"src": "42077:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1826,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "42077:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1829,
												"mutability": "mutable",
												"name": "prevOwnershipPacked",
												"nameLocation": "42105:19:1",
												"nodeType": "VariableDeclaration",
												"scope": 1855,
												"src": "42097:27:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1828,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "42097:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42045:85:1"
									},
									"returnParameters": {
										"id": 1833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1855,
												"src": "42153:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "42153:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42152:9:1"
									},
									"scope": 1884,
									"src": "42022:304:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1864,
										"nodeType": "Block",
										"src": "42764:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1861,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "42781:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "42785:6:1",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "42781:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1860,
												"id": 1863,
												"nodeType": "Return",
												"src": "42774:17:1"
											}
										]
									},
									"documentation": {
										"id": 1856,
										"nodeType": "StructuredDocumentation",
										"src": "42517:173:1",
										"text": " @dev Returns the message sender (defaults to `msg.sender`).\n If you are writing GSN compatible contracts, you need to override this function."
									},
									"id": 1865,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSenderERC721A",
									"nameLocation": "42704:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1857,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "42721:2:1"
									},
									"returnParameters": {
										"id": 1860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1859,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1865,
												"src": "42755:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1858,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "42755:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42754:9:1"
									},
									"scope": 1884,
									"src": "42695:103:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1874,
										"nodeType": "Block",
										"src": "42979:1624:1",
										"statements": [
											{
												"AST": {
													"nativeSrc": "42998:1599:1",
													"nodeType": "YulBlock",
													"src": "42998:1599:1",
													"statements": [
														{
															"nativeSrc": "43362:31:1",
															"nodeType": "YulVariableDeclaration",
															"src": "43362:31:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "43381:4:1",
																				"nodeType": "YulLiteral",
																				"src": "43381:4:1",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "43375:5:1",
																			"nodeType": "YulIdentifier",
																			"src": "43375:5:1"
																		},
																		"nativeSrc": "43375:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "43375:11:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "43388:4:1",
																		"nodeType": "YulLiteral",
																		"src": "43388:4:1",
																		"type": "",
																		"value": "0xa0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "43371:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "43371:3:1"
																},
																"nativeSrc": "43371:22:1",
																"nodeType": "YulFunctionCall",
																"src": "43371:22:1"
															},
															"variables": [
																{
																	"name": "m",
																	"nativeSrc": "43366:1:1",
																	"nodeType": "YulTypedName",
																	"src": "43366:1:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "43472:4:1",
																		"nodeType": "YulLiteral",
																		"src": "43472:4:1",
																		"type": "",
																		"value": "0x40"
																	},
																	{
																		"name": "m",
																		"nativeSrc": "43478:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "43478:1:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "43465:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "43465:6:1"
																},
																"nativeSrc": "43465:15:1",
																"nodeType": "YulFunctionCall",
																"src": "43465:15:1"
															},
															"nativeSrc": "43465:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "43465:15:1"
														},
														{
															"nativeSrc": "43537:19:1",
															"nodeType": "YulAssignment",
															"src": "43537:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "m",
																		"nativeSrc": "43548:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "43548:1:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "43551:4:1",
																		"nodeType": "YulLiteral",
																		"src": "43551:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "43544:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "43544:3:1"
																},
																"nativeSrc": "43544:12:1",
																"nodeType": "YulFunctionCall",
																"src": "43544:12:1"
															},
															"variableNames": [
																{
																	"name": "str",
																	"nativeSrc": "43537:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "43537:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "str",
																		"nativeSrc": "43626:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "43626:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "43631:1:1",
																		"nodeType": "YulLiteral",
																		"src": "43631:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "43619:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "43619:6:1"
																},
																"nativeSrc": "43619:14:1",
																"nodeType": "YulFunctionCall",
																"src": "43619:14:1"
															},
															"nativeSrc": "43619:14:1",
															"nodeType": "YulExpressionStatement",
															"src": "43619:14:1"
														},
														{
															"nativeSrc": "43721:14:1",
															"nodeType": "YulVariableDeclaration",
															"src": "43721:14:1",
															"value": {
																"name": "str",
																"nativeSrc": "43732:3:1",
																"nodeType": "YulIdentifier",
																"src": "43732:3:1"
															},
															"variables": [
																{
																	"name": "end",
																	"nativeSrc": "43725:3:1",
																	"nodeType": "YulTypedName",
																	"src": "43725:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "43979:388:1",
																"nodeType": "YulBlock",
																"src": "43979:388:1",
																"statements": [
																	{
																		"nativeSrc": "43997:18:1",
																		"nodeType": "YulAssignment",
																		"src": "43997:18:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "str",
																					"nativeSrc": "44008:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "44008:3:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "44013:1:1",
																					"nodeType": "YulLiteral",
																					"src": "44013:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "sub",
																				"nativeSrc": "44004:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "44004:3:1"
																			},
																			"nativeSrc": "44004:11:1",
																			"nodeType": "YulFunctionCall",
																			"src": "44004:11:1"
																		},
																		"variableNames": [
																			{
																				"name": "str",
																				"nativeSrc": "43997:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "43997:3:1"
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "str",
																					"nativeSrc": "44158:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "44158:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "44167:2:1",
																							"nodeType": "YulLiteral",
																							"src": "44167:2:1",
																							"type": "",
																							"value": "48"
																						},
																						{
																							"arguments": [
																								{
																									"name": "temp",
																									"nativeSrc": "44175:4:1",
																									"nodeType": "YulIdentifier",
																									"src": "44175:4:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "44181:2:1",
																									"nodeType": "YulLiteral",
																									"src": "44181:2:1",
																									"type": "",
																									"value": "10"
																								}
																							],
																							"functionName": {
																								"name": "mod",
																								"nativeSrc": "44171:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "44171:3:1"
																							},
																							"nativeSrc": "44171:13:1",
																							"nodeType": "YulFunctionCall",
																							"src": "44171:13:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "44163:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "44163:3:1"
																					},
																					"nativeSrc": "44163:22:1",
																					"nodeType": "YulFunctionCall",
																					"src": "44163:22:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore8",
																				"nativeSrc": "44150:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "44150:7:1"
																			},
																			"nativeSrc": "44150:36:1",
																			"nodeType": "YulFunctionCall",
																			"src": "44150:36:1"
																		},
																		"nativeSrc": "44150:36:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "44150:36:1"
																	},
																	{
																		"nativeSrc": "44255:21:1",
																		"nodeType": "YulAssignment",
																		"src": "44255:21:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "temp",
																					"nativeSrc": "44267:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "44267:4:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "44273:2:1",
																					"nodeType": "YulLiteral",
																					"src": "44273:2:1",
																					"type": "",
																					"value": "10"
																				}
																			],
																			"functionName": {
																				"name": "div",
																				"nativeSrc": "44263:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "44263:3:1"
																			},
																			"nativeSrc": "44263:13:1",
																			"nodeType": "YulFunctionCall",
																			"src": "44263:13:1"
																		},
																		"variableNames": [
																			{
																				"name": "temp",
																				"nativeSrc": "44255:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "44255:4:1"
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "44344:9:1",
																			"nodeType": "YulBlock",
																			"src": "44344:9:1",
																			"statements": [
																				{
																					"nativeSrc": "44346:5:1",
																					"nodeType": "YulBreak",
																					"src": "44346:5:1"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "temp",
																					"nativeSrc": "44338:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "44338:4:1"
																				}
																			],
																			"functionName": {
																				"name": "iszero",
																				"nativeSrc": "44331:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "44331:6:1"
																			},
																			"nativeSrc": "44331:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "44331:12:1"
																		},
																		"nativeSrc": "44328:25:1",
																		"nodeType": "YulIf",
																		"src": "44328:25:1"
																	}
																]
															},
															"condition": {
																"kind": "number",
																"nativeSrc": "43974:1:1",
																"nodeType": "YulLiteral",
																"src": "43974:1:1",
																"type": "",
																"value": "1"
															},
															"nativeSrc": "43948:419:1",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "43976:2:1",
																"nodeType": "YulBlock",
																"src": "43976:2:1",
																"statements": []
															},
															"pre": {
																"nativeSrc": "43952:21:1",
																"nodeType": "YulBlock",
																"src": "43952:21:1",
																"statements": [
																	{
																		"nativeSrc": "43954:17:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "43954:17:1",
																		"value": {
																			"name": "value",
																			"nativeSrc": "43966:5:1",
																			"nodeType": "YulIdentifier",
																			"src": "43966:5:1"
																		},
																		"variables": [
																			{
																				"name": "temp",
																				"nativeSrc": "43958:4:1",
																				"nodeType": "YulTypedName",
																				"src": "43958:4:1",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "43948:419:1"
														},
														{
															"nativeSrc": "44381:27:1",
															"nodeType": "YulVariableDeclaration",
															"src": "44381:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "end",
																		"nativeSrc": "44399:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "44399:3:1"
																	},
																	{
																		"name": "str",
																		"nativeSrc": "44404:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "44404:3:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "44395:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "44395:3:1"
																},
																"nativeSrc": "44395:13:1",
																"nodeType": "YulFunctionCall",
																"src": "44395:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "44385:6:1",
																	"nodeType": "YulTypedName",
																	"src": "44385:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "44501:21:1",
															"nodeType": "YulAssignment",
															"src": "44501:21:1",
															"value": {
																"arguments": [
																	{
																		"name": "str",
																		"nativeSrc": "44512:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "44512:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "44517:4:1",
																		"nodeType": "YulLiteral",
																		"src": "44517:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "44508:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "44508:3:1"
																},
																"nativeSrc": "44508:14:1",
																"nodeType": "YulFunctionCall",
																"src": "44508:14:1"
															},
															"variableNames": [
																{
																	"name": "str",
																	"nativeSrc": "44501:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "44501:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "str",
																		"nativeSrc": "44575:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "44575:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "44580:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "44580:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "44568:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "44568:6:1"
																},
																"nativeSrc": "44568:19:1",
																"nodeType": "YulFunctionCall",
																"src": "44568:19:1"
															},
															"nativeSrc": "44568:19:1",
															"nodeType": "YulExpressionStatement",
															"src": "44568:19:1"
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1871,
														"isOffset": false,
														"isSlot": false,
														"src": "43537:3:1",
														"valueSize": 1
													},
													{
														"declaration": 1871,
														"isOffset": false,
														"isSlot": false,
														"src": "43626:3:1",
														"valueSize": 1
													},
													{
														"declaration": 1871,
														"isOffset": false,
														"isSlot": false,
														"src": "43732:3:1",
														"valueSize": 1
													},
													{
														"declaration": 1871,
														"isOffset": false,
														"isSlot": false,
														"src": "43997:3:1",
														"valueSize": 1
													},
													{
														"declaration": 1871,
														"isOffset": false,
														"isSlot": false,
														"src": "44008:3:1",
														"valueSize": 1
													},
													{
														"declaration": 1871,
														"isOffset": false,
														"isSlot": false,
														"src": "44158:3:1",
														"valueSize": 1
													},
													{
														"declaration": 1871,
														"isOffset": false,
														"isSlot": false,
														"src": "44404:3:1",
														"valueSize": 1
													},
													{
														"declaration": 1871,
														"isOffset": false,
														"isSlot": false,
														"src": "44501:3:1",
														"valueSize": 1
													},
													{
														"declaration": 1871,
														"isOffset": false,
														"isSlot": false,
														"src": "44512:3:1",
														"valueSize": 1
													},
													{
														"declaration": 1871,
														"isOffset": false,
														"isSlot": false,
														"src": "44575:3:1",
														"valueSize": 1
													},
													{
														"declaration": 1868,
														"isOffset": false,
														"isSlot": false,
														"src": "43966:5:1",
														"valueSize": 1
													}
												],
												"id": 1873,
												"nodeType": "InlineAssembly",
												"src": "42989:1608:1"
											}
										]
									},
									"documentation": {
										"id": 1866,
										"nodeType": "StructuredDocumentation",
										"src": "42804:86:1",
										"text": " @dev Converts a uint256 to its ASCII string decimal representation."
									},
									"id": 1875,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_toString",
									"nameLocation": "42904:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1869,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1868,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "42922:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1875,
												"src": "42914:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1867,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "42914:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42913:15:1"
									},
									"returnParameters": {
										"id": 1872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1871,
												"mutability": "mutable",
												"name": "str",
												"nameLocation": "42974:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 1875,
												"src": "42960:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1870,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "42960:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42959:19:1"
									},
									"scope": 1884,
									"src": "42895:1708:1",
									"stateMutability": "pure",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1882,
										"nodeType": "Block",
										"src": "44718:107:1",
										"statements": [
											{
												"AST": {
													"nativeSrc": "44737:82:1",
													"nodeType": "YulBlock",
													"src": "44737:82:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "44758:4:1",
																		"nodeType": "YulLiteral",
																		"src": "44758:4:1",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"name": "errorSelector",
																		"nativeSrc": "44764:13:1",
																		"nodeType": "YulIdentifier",
																		"src": "44764:13:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "44751:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "44751:6:1"
																},
																"nativeSrc": "44751:27:1",
																"nodeType": "YulFunctionCall",
																"src": "44751:27:1"
															},
															"nativeSrc": "44751:27:1",
															"nodeType": "YulExpressionStatement",
															"src": "44751:27:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "44798:4:1",
																		"nodeType": "YulLiteral",
																		"src": "44798:4:1",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "44804:4:1",
																		"nodeType": "YulLiteral",
																		"src": "44804:4:1",
																		"type": "",
																		"value": "0x04"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "44791:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "44791:6:1"
																},
																"nativeSrc": "44791:18:1",
																"nodeType": "YulFunctionCall",
																"src": "44791:18:1"
															},
															"nativeSrc": "44791:18:1",
															"nodeType": "YulExpressionStatement",
															"src": "44791:18:1"
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1878,
														"isOffset": false,
														"isSlot": false,
														"src": "44764:13:1",
														"valueSize": 1
													}
												],
												"id": 1881,
												"nodeType": "InlineAssembly",
												"src": "44728:91:1"
											}
										]
									},
									"documentation": {
										"id": 1876,
										"nodeType": "StructuredDocumentation",
										"src": "44609:51:1",
										"text": " @dev For more efficient reverts."
									},
									"id": 1883,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "44674:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1878,
												"mutability": "mutable",
												"name": "errorSelector",
												"nameLocation": "44689:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 1883,
												"src": "44682:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1877,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "44682:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44681:22:1"
									},
									"returnParameters": {
										"id": 1880,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "44718:0:1"
									},
									"scope": 1884,
									"src": "44665:160:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1885,
							"src": "2189:42638:1",
							"usedErrors": [
								1890,
								1893,
								1896,
								1899,
								1902,
								1905,
								1908,
								1911,
								1914,
								1917,
								1920,
								1923,
								1926
							],
							"usedEvents": [
								1958,
								1967,
								1976,
								2089
							]
						}
					],
					"src": "1378:43450:1"
				},
				"id": 1
			},
			"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/IERC721A.sol": {
				"ast": {
					"absolutePath": "Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/IERC721A.sol",
					"exportedSymbols": {
						"IERC721A": [
							2090
						]
					},
					"id": 2091,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1886,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "1378:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721A",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1887,
								"nodeType": "StructuredDocumentation",
								"src": "1403:37:2",
								"text": " @dev Interface of ERC721A."
							},
							"fullyImplemented": false,
							"id": 2090,
							"linearizedBaseContracts": [
								2090
							],
							"name": "IERC721A",
							"nameLocation": "1451:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1888,
										"nodeType": "StructuredDocumentation",
										"src": "1466:76:2",
										"text": " The caller must own the token or be an approved operator."
									},
									"errorSelector": "cfb3b942",
									"id": 1890,
									"name": "ApprovalCallerNotOwnerNorApproved",
									"nameLocation": "1553:33:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1889,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1586:2:2"
									},
									"src": "1547:42:2"
								},
								{
									"documentation": {
										"id": 1891,
										"nodeType": "StructuredDocumentation",
										"src": "1595:44:2",
										"text": " The token does not exist."
									},
									"errorSelector": "cf4700e4",
									"id": 1893,
									"name": "ApprovalQueryForNonexistentToken",
									"nameLocation": "1650:32:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1682:2:2"
									},
									"src": "1644:41:2"
								},
								{
									"documentation": {
										"id": 1894,
										"nodeType": "StructuredDocumentation",
										"src": "1691:65:2",
										"text": " Cannot query the balance for the zero address."
									},
									"errorSelector": "8f4eb604",
									"id": 1896,
									"name": "BalanceQueryForZeroAddress",
									"nameLocation": "1767:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1895,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1793:2:2"
									},
									"src": "1761:35:2"
								},
								{
									"documentation": {
										"id": 1897,
										"nodeType": "StructuredDocumentation",
										"src": "1802:51:2",
										"text": " Cannot mint to the zero address."
									},
									"errorSelector": "2e076300",
									"id": 1899,
									"name": "MintToZeroAddress",
									"nameLocation": "1864:17:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1881:2:2"
									},
									"src": "1858:26:2"
								},
								{
									"documentation": {
										"id": 1900,
										"nodeType": "StructuredDocumentation",
										"src": "1890:72:2",
										"text": " The quantity of tokens minted must be more than zero."
									},
									"errorSelector": "b562e8dd",
									"id": 1902,
									"name": "MintZeroQuantity",
									"nameLocation": "1973:16:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1901,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1989:2:2"
									},
									"src": "1967:25:2"
								},
								{
									"documentation": {
										"id": 1903,
										"nodeType": "StructuredDocumentation",
										"src": "1998:44:2",
										"text": " The token does not exist."
									},
									"errorSelector": "df2d9b42",
									"id": 1905,
									"name": "OwnerQueryForNonexistentToken",
									"nameLocation": "2053:29:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1904,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2082:2:2"
									},
									"src": "2047:38:2"
								},
								{
									"documentation": {
										"id": 1906,
										"nodeType": "StructuredDocumentation",
										"src": "2091:76:2",
										"text": " The caller must own the token or be an approved operator."
									},
									"errorSelector": "59c896be",
									"id": 1908,
									"name": "TransferCallerNotOwnerNorApproved",
									"nameLocation": "2178:33:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2211:2:2"
									},
									"src": "2172:42:2"
								},
								{
									"documentation": {
										"id": 1909,
										"nodeType": "StructuredDocumentation",
										"src": "2220:53:2",
										"text": " The token must be owned by `from`."
									},
									"errorSelector": "a1148100",
									"id": 1911,
									"name": "TransferFromIncorrectOwner",
									"nameLocation": "2284:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1910,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2310:2:2"
									},
									"src": "2278:35:2"
								},
								{
									"documentation": {
										"id": 1912,
										"nodeType": "StructuredDocumentation",
										"src": "2319:116:2",
										"text": " Cannot safely transfer to a contract that does not implement the\n ERC721Receiver interface."
									},
									"errorSelector": "d1a57ed6",
									"id": 1914,
									"name": "TransferToNonERC721ReceiverImplementer",
									"nameLocation": "2446:38:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1913,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2484:2:2"
									},
									"src": "2440:47:2"
								},
								{
									"documentation": {
										"id": 1915,
										"nodeType": "StructuredDocumentation",
										"src": "2493:55:2",
										"text": " Cannot transfer to the zero address."
									},
									"errorSelector": "ea553b34",
									"id": 1917,
									"name": "TransferToZeroAddress",
									"nameLocation": "2559:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2580:2:2"
									},
									"src": "2553:30:2"
								},
								{
									"documentation": {
										"id": 1918,
										"nodeType": "StructuredDocumentation",
										"src": "2589:44:2",
										"text": " The token does not exist."
									},
									"errorSelector": "a14c4b50",
									"id": 1920,
									"name": "URIQueryForNonexistentToken",
									"nameLocation": "2644:27:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1919,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2671:2:2"
									},
									"src": "2638:36:2"
								},
								{
									"documentation": {
										"id": 1921,
										"nodeType": "StructuredDocumentation",
										"src": "2680:79:2",
										"text": " The `quantity` minted with ERC2309 exceeds the safety limit."
									},
									"errorSelector": "3db1f9af",
									"id": 1923,
									"name": "MintERC2309QuantityExceedsLimit",
									"nameLocation": "2770:31:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1922,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2801:2:2"
									},
									"src": "2764:40:2"
								},
								{
									"documentation": {
										"id": 1924,
										"nodeType": "StructuredDocumentation",
										"src": "2810:83:2",
										"text": " The `extraData` cannot be set on an unintialized ownership slot."
									},
									"errorSelector": "00d58153",
									"id": 1926,
									"name": "OwnershipNotInitializedForExtraData",
									"nameLocation": "2904:35:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1925,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2939:2:2"
									},
									"src": "2898:44:2"
								},
								{
									"canonicalName": "IERC721A.TokenOwnership",
									"id": 1935,
									"members": [
										{
											"constant": false,
											"id": 1928,
											"mutability": "mutable",
											"name": "addr",
											"nameLocation": "3206:4:2",
											"nodeType": "VariableDeclaration",
											"scope": 1935,
											"src": "3198:12:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1927,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3198:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1930,
											"mutability": "mutable",
											"name": "startTimestamp",
											"nameLocation": "3311:14:2",
											"nodeType": "VariableDeclaration",
											"scope": 1935,
											"src": "3304:21:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 1929,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "3304:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1932,
											"mutability": "mutable",
											"name": "burned",
											"nameLocation": "3386:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 1935,
											"src": "3381:11:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1931,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "3381:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1934,
											"mutability": "mutable",
											"name": "extraData",
											"nameLocation": "3497:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 1935,
											"src": "3490:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 1933,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "3490:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TokenOwnership",
									"nameLocation": "3136:14:2",
									"nodeType": "StructDefinition",
									"scope": 2090,
									"src": "3129:384:2",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 1936,
										"nodeType": "StructuredDocumentation",
										"src": "3704:192:2",
										"text": " @dev Returns the total number of tokens in existence.\n Burned tokens will reduce the count.\n To get the total number of tokens minted, please see {_totalMinted}."
									},
									"functionSelector": "18160ddd",
									"id": 1941,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3910:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1937,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3921:2:2"
									},
									"returnParameters": {
										"id": 1940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1939,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1941,
												"src": "3947:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1938,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3947:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3946:9:2"
									},
									"scope": 2090,
									"src": "3901:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1942,
										"nodeType": "StructuredDocumentation",
										"src": "4143:341:2",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified)\n to learn more about how these ids are created.\n This function call must use less than 30000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1949,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "4498:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1944,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "4523:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 1949,
												"src": "4516:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1943,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "4516:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4515:20:2"
									},
									"returnParameters": {
										"id": 1948,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1947,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1949,
												"src": "4559:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1946,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4559:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4558:6:2"
									},
									"scope": 2090,
									"src": "4489:76:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1950,
										"nodeType": "StructuredDocumentation",
										"src": "4752:88:2",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1958,
									"name": "Transfer",
									"nameLocation": "4851:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1957,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1952,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4876:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1958,
												"src": "4860:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1951,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1954,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4898:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1958,
												"src": "4882:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1953,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4882:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1956,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4918:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1958,
												"src": "4902:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1955,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4902:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:67:2"
									},
									"src": "4845:82:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1959,
										"nodeType": "StructuredDocumentation",
										"src": "4933:94:2",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1967,
									"name": "Approval",
									"nameLocation": "5038:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1961,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5063:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1967,
												"src": "5047:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1960,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5047:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1963,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "5086:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1967,
												"src": "5070:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1962,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5070:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1965,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5112:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1967,
												"src": "5096:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1964,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5096:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5046:74:2"
									},
									"src": "5032:89:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1968,
										"nodeType": "StructuredDocumentation",
										"src": "5127:124:2",
										"text": " @dev Emitted when `owner` enables or disables\n (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1976,
									"name": "ApprovalForAll",
									"nameLocation": "5262:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1975,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1970,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5293:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1976,
												"src": "5277:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1969,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5277:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1972,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5316:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1976,
												"src": "5300:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1971,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5300:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1974,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "5331:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1976,
												"src": "5326:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1973,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5326:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5276:64:2"
									},
									"src": "5256:85:2"
								},
								{
									"documentation": {
										"id": 1977,
										"nodeType": "StructuredDocumentation",
										"src": "5347:74:2",
										"text": " @dev Returns the number of tokens in `owner`'s account."
									},
									"functionSelector": "70a08231",
									"id": 1984,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "5435:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1980,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1979,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5453:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1984,
												"src": "5445:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1978,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5445:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5444:15:2"
									},
									"returnParameters": {
										"id": 1983,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1982,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "5491:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1984,
												"src": "5483:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1981,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5483:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5482:17:2"
									},
									"scope": 2090,
									"src": "5426:74:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1985,
										"nodeType": "StructuredDocumentation",
										"src": "5506:131:2",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1992,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "5651:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1988,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1987,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5667:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1992,
												"src": "5659:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1986,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5659:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5658:17:2"
									},
									"returnParameters": {
										"id": 1991,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1990,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5707:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1992,
												"src": "5699:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1989,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5699:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5698:15:2"
									},
									"scope": 2090,
									"src": "5642:72:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1993,
										"nodeType": "StructuredDocumentation",
										"src": "5720:711:2",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`,\n checking first that contract recipients are aware of the ERC721 protocol\n to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be have been allowed to move\n this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement\n {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 2004,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "6445:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2002,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1995,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6479:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 2004,
												"src": "6471:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1994,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6471:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1997,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6501:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 2004,
												"src": "6493:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1996,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6493:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1999,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6521:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 2004,
												"src": "6513:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1998,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2001,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6553:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 2004,
												"src": "6538:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2000,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6538:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6461:102:2"
									},
									"returnParameters": {
										"id": 2003,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6580:0:2"
									},
									"scope": 2090,
									"src": "6436:145:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2005,
										"nodeType": "StructuredDocumentation",
										"src": "6587:80:2",
										"text": " @dev Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
									},
									"functionSelector": "42842e0e",
									"id": 2014,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "6681:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2012,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2007,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6715:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 2014,
												"src": "6707:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2006,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6707:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2009,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6737:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 2014,
												"src": "6729:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2008,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6729:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2011,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6757:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 2014,
												"src": "6749:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2010,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6749:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6697:73:2"
									},
									"returnParameters": {
										"id": 2013,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6787:0:2"
									},
									"scope": 2090,
									"src": "6672:116:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2015,
										"nodeType": "StructuredDocumentation",
										"src": "6794:512:2",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom}\n whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token\n by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 2024,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "7320:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2017,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7350:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 2024,
												"src": "7342:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2016,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7342:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2019,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7372:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 2024,
												"src": "7364:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2018,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7364:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2021,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7392:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 2024,
												"src": "7384:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2020,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7384:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7332:73:2"
									},
									"returnParameters": {
										"id": 2023,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7422:0:2"
									},
									"scope": 2090,
									"src": "7311:112:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2025,
										"nodeType": "StructuredDocumentation",
										"src": "7429:459:2",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the\n zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 2032,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "7902:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2027,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7918:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 2032,
												"src": "7910:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2026,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7910:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2029,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7930:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 2032,
												"src": "7922:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2028,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7922:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7909:29:2"
									},
									"returnParameters": {
										"id": 2031,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7955:0:2"
									},
									"scope": 2090,
									"src": "7893:63:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2033,
										"nodeType": "StructuredDocumentation",
										"src": "7962:316:2",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom}\n for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 2040,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "8292:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2038,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2035,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "8318:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 2040,
												"src": "8310:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2034,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8310:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2037,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "8333:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 2040,
												"src": "8328:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2036,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8328:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8309:34:2"
									},
									"returnParameters": {
										"id": 2039,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8352:0:2"
									},
									"scope": 2090,
									"src": "8283:70:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2041,
										"nodeType": "StructuredDocumentation",
										"src": "8359:139:2",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 2048,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "8512:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2044,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2043,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8532:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 2048,
												"src": "8524:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2042,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8524:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8523:17:2"
									},
									"returnParameters": {
										"id": 2047,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2046,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "8572:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 2048,
												"src": "8564:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2045,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8564:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8563:18:2"
									},
									"scope": 2090,
									"src": "8503:79:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2049,
										"nodeType": "StructuredDocumentation",
										"src": "8588:139:2",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 2058,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "8741:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2054,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2051,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8766:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 2058,
												"src": "8758:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2050,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8758:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2053,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "8781:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 2058,
												"src": "8773:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2052,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8773:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8757:33:2"
									},
									"returnParameters": {
										"id": 2057,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2056,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2058,
												"src": "8814:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2055,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8814:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8813:6:2"
									},
									"scope": 2090,
									"src": "8732:88:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2059,
										"nodeType": "StructuredDocumentation",
										"src": "9011:58:2",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 2064,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "9083:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2060,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9087:2:2"
									},
									"returnParameters": {
										"id": 2063,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2062,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2064,
												"src": "9113:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2061,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "9113:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9112:15:2"
									},
									"scope": 2090,
									"src": "9074:54:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2065,
										"nodeType": "StructuredDocumentation",
										"src": "9134:60:2",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 2070,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "9208:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2066,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9214:2:2"
									},
									"returnParameters": {
										"id": 2069,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2068,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2070,
												"src": "9240:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2067,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "9240:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9239:15:2"
									},
									"scope": 2090,
									"src": "9199:56:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2071,
										"nodeType": "StructuredDocumentation",
										"src": "9261:90:2",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 2078,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "9365:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2073,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9382:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 2078,
												"src": "9374:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2072,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9374:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9373:17:2"
									},
									"returnParameters": {
										"id": 2077,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2076,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2078,
												"src": "9414:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2075,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "9414:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9413:15:2"
									},
									"scope": 2090,
									"src": "9356:73:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2079,
										"nodeType": "StructuredDocumentation",
										"src": "9616:267:2",
										"text": " @dev Emitted when tokens in `fromTokenId` to `toTokenId`\n (inclusive) is transferred from `from` to `to`, as defined in the\n [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard.\n See {_mintERC2309} for more details."
									},
									"eventSelector": "deaa91b6123d068f5821d0fb0678463d1a8a6079fe8af5de3ce5e896dcf9133d",
									"id": 2089,
									"name": "ConsecutiveTransfer",
									"nameLocation": "9894:19:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2088,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2081,
												"indexed": true,
												"mutability": "mutable",
												"name": "fromTokenId",
												"nameLocation": "9930:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 2089,
												"src": "9914:27:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2080,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9914:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2083,
												"indexed": false,
												"mutability": "mutable",
												"name": "toTokenId",
												"nameLocation": "9951:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 2089,
												"src": "9943:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2082,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9943:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2085,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "9978:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 2089,
												"src": "9962:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2084,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9962:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2087,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10000:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 2089,
												"src": "9984:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2086,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9984:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9913:90:2"
									},
									"src": "9888:116:2"
								}
							],
							"scope": 2091,
							"src": "1441:8565:2",
							"usedErrors": [
								1890,
								1893,
								1896,
								1899,
								1902,
								1905,
								1908,
								1911,
								1914,
								1917,
								1920,
								1923,
								1926
							],
							"usedEvents": [
								1958,
								1967,
								1976,
								2089
							]
						}
					],
					"src": "1378:8629:2"
				},
				"id": 2
			},
			"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/extensions/ERC721ABurnable.sol": {
				"ast": {
					"absolutePath": "Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/extensions/ERC721ABurnable.sol",
					"exportedSymbols": {
						"ERC721A": [
							1884
						],
						"ERC721ABurnable": [
							2113
						],
						"ERC721A__IERC721Receiver": [
							105
						],
						"IERC721A": [
							2090
						],
						"IERC721ABurnable": [
							2126
						]
					},
					"id": 2114,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2092,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "1378:23:3"
						},
						{
							"absolutePath": "Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/extensions/IERC721ABurnable.sol",
							"file": "./IERC721ABurnable.sol",
							"id": 2093,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2114,
							"sourceUnit": 2127,
							"src": "1403:32:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/ERC721A.sol",
							"file": "../ERC721A.sol",
							"id": 2094,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2114,
							"sourceUnit": 1885,
							"src": "1436:24:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2096,
										"name": "ERC721A",
										"nameLocations": [
											"1604:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1884,
										"src": "1604:7:3"
									},
									"id": 2097,
									"nodeType": "InheritanceSpecifier",
									"src": "1604:7:3"
								},
								{
									"baseName": {
										"id": 2098,
										"name": "IERC721ABurnable",
										"nameLocations": [
											"1613:16:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2126,
										"src": "1613:16:3"
									},
									"id": 2099,
									"nodeType": "InheritanceSpecifier",
									"src": "1613:16:3"
								}
							],
							"canonicalName": "ERC721ABurnable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2095,
								"nodeType": "StructuredDocumentation",
								"src": "1462:104:3",
								"text": " @title ERC721ABurnable.\n @dev ERC721A token that can be irreversibly burned (destroyed)."
							},
							"fullyImplemented": true,
							"id": 2113,
							"linearizedBaseContracts": [
								2113,
								2126,
								1884,
								2090
							],
							"name": "ERC721ABurnable",
							"nameLocation": "1585:15:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										2125
									],
									"body": {
										"id": 2111,
										"nodeType": "Block",
										"src": "1859:37:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2107,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2102,
															"src": "1875:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 2108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1884:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2106,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1609,
															1763
														],
														"referencedDeclaration": 1763,
														"src": "1869:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (uint256,bool)"
														}
													},
													"id": 2109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1869:20:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2110,
												"nodeType": "ExpressionStatement",
												"src": "1869:20:3"
											}
										]
									},
									"documentation": {
										"id": 2100,
										"nodeType": "StructuredDocumentation",
										"src": "1636:163:3",
										"text": " @dev Burns `tokenId`. See {ERC721A-_burn}.\n Requirements:\n - The caller must own `tokenId` or be an approved operator."
									},
									"functionSelector": "42966c68",
									"id": 2112,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "1813:4:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2104,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1850:8:3"
									},
									"parameters": {
										"id": 2103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2102,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1826:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 2112,
												"src": "1818:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2101,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1818:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1817:17:3"
									},
									"returnParameters": {
										"id": 2105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1859:0:3"
									},
									"scope": 2113,
									"src": "1804:92:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 2114,
							"src": "1567:331:3",
							"usedErrors": [
								1890,
								1893,
								1896,
								1899,
								1902,
								1905,
								1908,
								1911,
								1914,
								1917,
								1920,
								1923,
								1926
							],
							"usedEvents": [
								1958,
								1967,
								1976,
								2089
							]
						}
					],
					"src": "1378:521:3"
				},
				"id": 3
			},
			"Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/extensions/IERC721ABurnable.sol": {
				"ast": {
					"absolutePath": "Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/extensions/IERC721ABurnable.sol",
					"exportedSymbols": {
						"IERC721A": [
							2090
						],
						"IERC721ABurnable": [
							2126
						]
					},
					"id": 2127,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2115,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "1378:23:4"
						},
						{
							"absolutePath": "Azuki-ERC721A-ERC721ABurnableMock(copy)(copy)/IERC721A.sol",
							"file": "../IERC721A.sol",
							"id": 2116,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2127,
							"sourceUnit": 2091,
							"src": "1403:25:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2118,
										"name": "IERC721A",
										"nameLocations": [
											"1506:8:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2090,
										"src": "1506:8:4"
									},
									"id": 2119,
									"nodeType": "InheritanceSpecifier",
									"src": "1506:8:4"
								}
							],
							"canonicalName": "IERC721ABurnable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2117,
								"nodeType": "StructuredDocumentation",
								"src": "1430:45:4",
								"text": " @dev Interface of ERC721ABurnable."
							},
							"fullyImplemented": false,
							"id": 2126,
							"linearizedBaseContracts": [
								2126,
								2090
							],
							"name": "IERC721ABurnable",
							"nameLocation": "1486:16:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2120,
										"nodeType": "StructuredDocumentation",
										"src": "1521:163:4",
										"text": " @dev Burns `tokenId`. See {ERC721A-_burn}.\n Requirements:\n - The caller must own `tokenId` or be an approved operator."
									},
									"functionSelector": "42966c68",
									"id": 2125,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "1698:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2122,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1711:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 2125,
												"src": "1703:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1703:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1702:17:4"
									},
									"returnParameters": {
										"id": 2124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1728:0:4"
									},
									"scope": 2126,
									"src": "1689:40:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2127,
							"src": "1476:255:4",
							"usedErrors": [
								1890,
								1893,
								1896,
								1899,
								1902,
								1905,
								1908,
								1911,
								1914,
								1917,
								1920,
								1923,
								1926
							],
							"usedEvents": [
								1958,
								1967,
								1976,
								2089
							]
						}
					],
					"src": "1378:354:4"
				},
				"id": 4
			}
		}
	}
}