{
	"id": "9bb3ed7dd4fe1fd99fc82c77ec5f30b0",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.4",
	"solcLongVersion": "0.8.4+commit.c7e474f2",
	"input": {
		"language": "Solidity",
		"sources": {
			"token-staking(copy)(copy)/contracts/Staking.sol": {
				"content": "/*\n    \n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██    ██████  ███████ ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██      ██    ██\n  ██      ██    ██ ██    ██ █████   ██████  ██    ██ ██    ██ █████      ██   ██ █████   ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██       ██  ██\n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██ ██ ██████  ███████   ████\n  \n  Find any smart contract, and build your project faster: https://www.cookbook.dev\n  Twitter: https://twitter.com/cookbook_dev\n  Discord: https://discord.gg/cookbookdev\n  \n  Find this contract on Cookbook: https://www.cookbook.dev/contracts/token-staking?utm=code\n  */\n  \n  // SPDX-License-Identifier: MIT\npragma solidity 0.8.4;\n\nimport \"token-staking/@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\n/// @notice Wording below needs to properly represent the legal terms so has to be reviewed\n/// @notice Comments have been written by the development team and may not represent the actual terms of the contract correctly\n\n/// @title Oiler Staking\n/// @author oiler.network\n/// @dev that staking contract is fully dependent on the provided reward token and the underlying LP token.\n/**\n * @notice Staking contract assumes there is a Staking Program going on until a specified Staking Program End Date.\n * And there is an amount of Oiler tokens that is gonna be given away to incentivise participation in the Staking Program (called StakingFund).\n * \n * During this Program - users commit to lock tokens for some period of time, earning RewardPoints (if they don't unlock prematurely).\n * RewardPoints multiplier grows linearly with the locking period length (see the formula in calculateStakingRewardPoints() function)\n * \n * After the end of the Staking Program - the amount of RewardPoints earned by each user is relatively compared to the total RewardPoints\n * earned by all staking participants - and the OIL tokens from StakingFund are divided among them accordingly, by their RewardPoints proportions.\n */\ncontract Staking {\n\n  /**\n   * @dev Saving gas by using lower-bit variables to fit the Stake struct into 256bits\n   *\n   * LP Tokens are calculated by this formula:\n   * LP Tokens = sqrt(tokenAmount * e18 * usdcAmount * e6) =\n   *           = sqrt(100 000 000 * usdcAmount * e24) =          // here 100 000 000 is totalSupply of OIL\n   *           = sqrt(usdcAmount * e32) =\n   *           = sqrt(usdcAmount) * e16\n   * \n   * Thus the maximum amount of USDC we can use to not overflow the maximum amount of uint72 (4722 e18) will be:\n   *             sqrt(usdcAmount) * e16 < 4722 * e18\n   *             sqrt(usdcAmount) < 472 200\n   *             usdcAmount < 222 972 840 000\n   * Which is over two hundred trillion dollars - the amount highly improbable at our Uniswap pool as for today\n   *\n   * tokenAmount is limited by LP tokens amount (4722e18 LPs for hundreds of trillions of dollars)   (Range: [0 - 4722 e18]          - uint72 (max 4722 e18))\n   * lockingPeriodInBlocks is limited by Staking Program duration (around 700000 blocks)             (Range: [1 - 700000]            - uint24 (max 16 777 215))\n   * startBlock is in a typical range of Mainnet, Testnets, local networks blocks range              (Range: [0 - 100 000 000]       - uint32 (max 4 294 967 295))\n   * \n   * expectedStakingRewardPoints is limited by:\n   * LP tokens amount * lockingPeriodInBlocks * lockingPeriodInBlocks\n   * which is:\n   * uint72 * uint24 * uint24 = which gives us max uint120, but we use uint128 anyway                (Range: [0 - 1.33 e36]           - uint128 (max 340 e36))\n   */\n    struct Stake {\n        uint72 tokenAmount;                   // Amount of tokens locked in a stake                                                             \n        uint24 lockingPeriodInBlocks;         // Arbitrary lock period that will give you a reward                                    \n        uint32 startBlock;                    // Start of the locking                                                                            \n        uint128 expectedStakingRewardPoints;  // The amount of RewardPoints the stake will earn if not unlocked prematurely    \n    }\n    \n    /// @notice Active stakes for each user\n    mapping (address => Stake) public stakes;\n\n    /// @notice \"Reward points\" each user earned (would be relative to totalRewardPoints to get the percentage)\n    mapping (address => uint256) public rewardPointsEarned;\n    \n    /// @notice Total \"reward points\" all users earned\n    uint256 public totalRewardPoints;\n    /// @notice Block when Staking Program ends          \n    uint256 immutable public stakingProgramEndsBlock;\n    /// @notice Amount of Staking Bonus Fund (500 000 OIL), Oiler funds must be here, approved and ready to be transferredFrom\n    uint256 immutable public stakingFundAmount;\n    \n    /// @notice Uniswap pool that we accept LP tokens from\n    IERC20 public poolToken;\n    /// @notice Oiler token that will be given as a reward\n    IERC20 immutable public oilerToken;\n    \n    /// @notice The amount of OIL tokens earned, granted to be released during vesting period \n    mapping (address => uint256) public grantedTokens;\n    /// @notice The amount of OIL tokens that were already released during vesting period\n    mapping (address => uint256) public releasedTokens;\n    \n    /// @dev In blocks - should be around 100 days\n    uint256 immutable public vestingDuration;\n\n    /// @dev Check if poolToken was initialized\n    modifier poolTokenSet() {\n        require(address(poolToken) != address(0x0), \"poolToken not set\");\n        _;\n    }\n\n    /// @dev Owner is used only in setPoolToken()\n    address immutable public owner;\n\n    /// @dev Used only in setPoolToken()\n    modifier onlyOwner() {\n        require(msg.sender == owner, \"Can only be called by owner\");\n        _;\n    }\n\n    /**\n     * @dev before deploying the stakingFundAddress must have set allowances on behalf of that contract. The address can be predicted basing on the CREATE or CREATE2 opcode.\n     * @param oilerToken_ - address of the token in which rewards will be payed off.\n     * @param stakingDurationInBlocks_ - Number of blocks after which staking will end.\n     * @param stakingFundAmount_ - Amount of tokens to be payed of as rewards.\n     * @param vestingDuration_ - Number of blocks after which OIL tokens earned by staking will be released (duration of Vesting period).\n     * @param owner_ - Owner of the contract (is used to initialize poolToken after it's available).\n     */\n    constructor(address oilerToken_, uint256 stakingDurationInBlocks_, uint256 stakingFundAmount_, uint256 vestingDuration_, address owner_) {\n        require(owner_ != address(0x0), \"Owner address cannot be zero\");\n        owner = owner_;\n\n        require(oilerToken_ != address(0x0), \"oilerToken address cannot be zero\");\n        oilerToken = IERC20(oilerToken_);\n        \n        stakingProgramEndsBlock = block.number + stakingDurationInBlocks_;\n        vestingDuration = vestingDuration_;\n\n        \n        stakingFundAmount = stakingFundAmount_;\n    }\n\n    /// @notice Initialize poolToken when OIL<>USDC Uniswap pool is available\n    function setPoolToken(address poolToken_, address stakingFundAddress_) public onlyOwner {\n        require(address(poolToken) == address(0x0), \"poolToken was already set\");\n        require(poolToken_ != address(0x0), \"poolToken address cannot be zero\");\n        poolToken = IERC20(poolToken_);\n        // Transfer the Staking Bonus Funds from stakingFundAddress here\n        require(IERC20(oilerToken).balanceOf(stakingFundAddress_) >= stakingFundAmount, \"StakingFund doesn't have enough OIL balance\");\n        require(IERC20(oilerToken).allowance(stakingFundAddress_, address(this)) >= stakingFundAmount, \"StakingFund doesn't have enough allowance\");\n        require(IERC20(oilerToken).transferFrom(stakingFundAddress_, address(this), stakingFundAmount), \"TransferFrom of OIL from StakingFund failed\");\n    }\n\n    /**\n     * @notice Calculates the RewardPoints user will earn for a given tokenAmount locked for a given period\n     * @dev If any parameter is zero - it will fail, thus we save gas on \"requires\" by not checking in other places\n     * @param tokenAmount_ - Amount of tokens to be stake.\n     * @param lockingPeriodInBlocks_ - Lock duration defined in blocks.\n     */\n    function calculateStakingRewardPoints(uint72 tokenAmount_, uint24 lockingPeriodInBlocks_) public pure returns (uint128) {\n        //\n        //                         /                                   \\\n        //  stakingRewardPoints = ( tokenAmount * lockingPeriodInBlocks )  *  lockingPeriodInBlocks\n        //                         \\                                   /\n        //\n\n        uint256 stakingRewardPoints = uint256(tokenAmount_) * uint256(lockingPeriodInBlocks_) * uint256(lockingPeriodInBlocks_);\n        require(stakingRewardPoints > 0, \"Neither tokenAmount nor lockingPeriod couldn't be 0\");\n        return uint128(stakingRewardPoints);\n    }\n\n    /**\n     * @notice Lock the LP tokens for a specified period of Blocks.\n     * @notice Can only be called before Staking Program ends.\n     * @notice And the locking period can't last longer than the end of Staking Program block.\n     * @param tokenAmount_ - Amount of LP tokens to be locked.\n     * @param lockingPeriodInBlocks_ - locking period duration defined in blocks.\n     */\n    function lockTokens(uint72 tokenAmount_, uint24 lockingPeriodInBlocks_) public poolTokenSet {\n        // Here we don't check lockingPeriodInBlocks_ for being non-zero, cause its happening in calculateStakingRewardPoints() calculation\n        require(block.number <= stakingProgramEndsBlock - lockingPeriodInBlocks_, \"Your lock period exceeds Staking Program duration\");\n        require(stakes[msg.sender].tokenAmount == 0, \"Already staking\");\n\n        // This is a locking reward - will be earned only after the full lock period is over - otherwise not applicable\n        uint128 expectedStakingRewardPoints = calculateStakingRewardPoints(tokenAmount_, lockingPeriodInBlocks_);\n\n        Stake memory stake = Stake(tokenAmount_, lockingPeriodInBlocks_, uint32(block.number), expectedStakingRewardPoints);\n        stakes[msg.sender] = stake;\n        \n        // We add the rewards initially during locking of tokens, and subtract them later if unlocking is made prematurely\n        // That prevents us from waiting for all users to unlock to distribute the rewards after Staking Program Ends\n        totalRewardPoints += expectedStakingRewardPoints;\n        rewardPointsEarned[msg.sender] += expectedStakingRewardPoints;\n        \n        // We transfer LP tokens from user to this contract, \"locking\" them\n        // We don't check for allowances or balance cause it's done within the transferFrom() and would only raise gas costs\n        require(poolToken.transferFrom(msg.sender, address(this), tokenAmount_), \"TransferFrom of poolTokens failed\");\n\n        emit StakeLocked(msg.sender, tokenAmount_, lockingPeriodInBlocks_, expectedStakingRewardPoints);\n    }\n\n    /**\n     * @notice Unlock the tokens and get the reward\n     * @notice This can be called at any time, even after Staking Program end block\n     */\n    function unlockTokens() public poolTokenSet {\n        Stake memory stake = stakes[msg.sender];\n\n        uint256 stakeAmount = stake.tokenAmount;\n\n        require(stakeAmount != 0, \"You don't have a stake to unlock\");\n\n        require(block.number > stake.startBlock, \"You can't withdraw the stake in the same block it was locked\");\n\n        // Check if the unlock is called prematurely - and subtract the reward if it is the case\n        _punishEarlyWithdrawal(stake);\n\n        // Zero the Stake - to protect from double-unlocking and to be able to stake again\n        delete stakes[msg.sender];\n\n        require(poolToken.transfer(msg.sender, stakeAmount), \"Pool token transfer failed\");\n    }\n    \n    /**\n     * @notice If the unlock is called prematurely - we subtract the bonus\n     */\n    function _punishEarlyWithdrawal(Stake memory stake_) internal {\n        // As any of the locking periods can't be longer than Staking Program end block - this will automatically mean that if called after Staking Program end - all stakes locking periods are over\n        // So no rewards can be manipulated after Staking Program ends\n        if (block.number < (stake_.startBlock + stake_.lockingPeriodInBlocks)) { // lt - cause you can only withdraw at or after startBlock + lockPeriod\n            rewardPointsEarned[msg.sender] -= stake_.expectedStakingRewardPoints;\n            totalRewardPoints -= stake_.expectedStakingRewardPoints;\n            emit StakeUnlockedPrematurely(msg.sender, stake_.tokenAmount, stake_.lockingPeriodInBlocks, block.number - stake_.startBlock);\n        } else {\n            emit StakeUnlocked(msg.sender, stake_.tokenAmount, stake_.lockingPeriodInBlocks, stake_.expectedStakingRewardPoints);\n        }\n    }\n    \n    /** \n     * @notice This can only be called after the Staking Program ended\n     * @dev Which means that all stakes lock periods are already over, and totalRewardPoints value isn't changing anymore - so we can now calculate the percentages of rewards\n     */\n    function getRewards() public {\n        require(block.number > stakingProgramEndsBlock, \"You can only get Rewards after Staking Program ends\");\n        require(stakes[msg.sender].tokenAmount == 0, \"You still have a stake locked - please unlock first, don't leave free money here\");\n        require(rewardPointsEarned[msg.sender] > 0, \"You don't have any rewardPoints\");\n        \n        // The amount earned is calculated as:\n        //\n        //                                  user RewardPoints earned during Staking Program\n        // amountEarned = stakingFund * -------------------------------------------------------\n        //                                 total RewardPoints earned by everyone participated\n        //\n        // Division always rounds towards zero in solidity.\n        // And because of this rounding somebody always misses the fractional part of their earnings and gets only integer amount.\n        // Thus the worst thing that can happen is amountEarned becomes 0, and we check for that in _grantTokens()\n        uint256 amountEarned = stakingFundAmount * rewardPointsEarned[msg.sender] / totalRewardPoints;\n        rewardPointsEarned[msg.sender] = 0; // Zero rewardPoints of a user - so this function can be called only once per user\n\n        _grantTokens(msg.sender, amountEarned); // Grant OIL reward earned by user for future vesting during the Vesting period\n    }\n    \n    //////////////////////////////////////////////////////\n    //\n    //     VESTING PART\n    //\n    //////////////////////////////////////////////////////\n    \n\n    /**\n     * @param recipient_ - Recipient of granted tokens\n     * @param amountEarned_ - Amount of tokens earned to be granted\n     */\n    function _grantTokens(address recipient_, uint256 amountEarned_) internal {\n        require(amountEarned_ > 0, \"You didn't earn any integer amount of wei\");\n        require(recipient_ != address(0), \"TokenVesting: beneficiary is the zero address\");\n        grantedTokens[recipient_] = amountEarned_;\n        emit RewardGranted(recipient_, amountEarned_);\n    }\n    \n    /// @notice Releases granted tokens\n    function release() public {\n        uint256 releasable = _releasableAmount(msg.sender);\n        require(releasable > 0, \"Vesting release: no tokens are due\");\n\n        releasedTokens[msg.sender] += releasable;\n        require(oilerToken.transfer(msg.sender, releasable), \"Reward oilers transfer failed\");\n\n        emit grantedTokensReleased(msg.sender, releasable);\n    }\n    \n    /// @notice Releasable amount is what is available at a given time minus what was already withdrawn\n    function _releasableAmount(address recipient_) internal view returns (uint256) {\n        return _vestedAmount(recipient_) - releasedTokens[recipient_];\n    }\n    \n    /**\n     * @notice The output of this function gradually changes from [0.. to ..grantedAmount] while the vesting is going\n     * @param recipient_ - vested tokens recipient\n     * @return vested amount\n     */\n    function _vestedAmount(address recipient_) internal view returns (uint256) {\n        if (block.number >= stakingProgramEndsBlock + vestingDuration) {\n            // Return the full granted amount if Vesting Period is over\n            return grantedTokens[recipient_];\n        } else {\n            // Return the proportional amount if Vesting Period is still going\n            return grantedTokens[recipient_] * (block.number - stakingProgramEndsBlock) / vestingDuration;\n        }\n    }\n    \n    event StakeLocked(address recipient, uint256 tokenAmount, uint256 lockingPeriodInBlocks, uint256 expectedStakingRewardPoints);\n    event StakeUnlockedPrematurely(address recipient, uint256 tokenAmount, uint256 lockingPeriodInBlocks, uint256 actualLockingPeriodInBlocks);\n    event StakeUnlocked(address recipient, uint256 tokenAmount, uint256 lockingPeriodInBlocks, uint256 rewardPoints);\n    event RewardGranted(address recipient, uint256 amountEarned);\n    event grantedTokensReleased(address recipient, uint256 amount);\n}"
			},
			"token-staking/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "/*\n    \n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██    ██████  ███████ ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██      ██    ██\n  ██      ██    ██ ██    ██ █████   ██████  ██    ██ ██    ██ █████      ██   ██ █████   ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██       ██  ██\n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██ ██ ██████  ███████   ████\n  \n  Find any smart contract, and build your project faster: https://www.cookbook.dev\n  Twitter: https://twitter.com/cookbook_dev\n  Discord: https://discord.gg/cookbookdev\n  \n  Find this contract on Cookbook: https://www.cookbook.dev/contracts/token-staking?utm=code\n  */\n  \n  // SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"token-staking(copy)(copy)/contracts/Staking.sol": {
				"Staking": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "oilerToken_",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "stakingDurationInBlocks_",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "stakingFundAmount_",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "vestingDuration_",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner_",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountEarned",
									"type": "uint256"
								}
							],
							"name": "RewardGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "lockingPeriodInBlocks",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "expectedStakingRewardPoints",
									"type": "uint256"
								}
							],
							"name": "StakeLocked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "lockingPeriodInBlocks",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "rewardPoints",
									"type": "uint256"
								}
							],
							"name": "StakeUnlocked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "lockingPeriodInBlocks",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "actualLockingPeriodInBlocks",
									"type": "uint256"
								}
							],
							"name": "StakeUnlockedPrematurely",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "grantedTokensReleased",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint72",
									"name": "tokenAmount_",
									"type": "uint72"
								},
								{
									"internalType": "uint24",
									"name": "lockingPeriodInBlocks_",
									"type": "uint24"
								}
							],
							"name": "calculateStakingRewardPoints",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getRewards",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "grantedTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint72",
									"name": "tokenAmount_",
									"type": "uint72"
								},
								{
									"internalType": "uint24",
									"name": "lockingPeriodInBlocks_",
									"type": "uint24"
								}
							],
							"name": "lockTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "oilerToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "poolToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "release",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "releasedTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "rewardPointsEarned",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "poolToken_",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "stakingFundAddress_",
									"type": "address"
								}
							],
							"name": "setPoolToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "stakes",
							"outputs": [
								{
									"internalType": "uint72",
									"name": "tokenAmount",
									"type": "uint72"
								},
								{
									"internalType": "uint24",
									"name": "lockingPeriodInBlocks",
									"type": "uint24"
								},
								{
									"internalType": "uint32",
									"name": "startBlock",
									"type": "uint32"
								},
								{
									"internalType": "uint128",
									"name": "expectedStakingRewardPoints",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakingFundAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakingProgramEndsBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalRewardPoints",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unlockTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "vestingDuration",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"calculateStakingRewardPoints(uint72,uint24)": {
								"details": "If any parameter is zero - it will fail, thus we save gas on \"requires\" by not checking in other places",
								"params": {
									"lockingPeriodInBlocks_": "- Lock duration defined in blocks.",
									"tokenAmount_": "- Amount of tokens to be stake."
								}
							},
							"constructor": {
								"details": "before deploying the stakingFundAddress must have set allowances on behalf of that contract. The address can be predicted basing on the CREATE or CREATE2 opcode.",
								"params": {
									"oilerToken_": "- address of the token in which rewards will be payed off.",
									"owner_": "- Owner of the contract (is used to initialize poolToken after it's available).",
									"stakingDurationInBlocks_": "- Number of blocks after which staking will end.",
									"stakingFundAmount_": "- Amount of tokens to be payed of as rewards.",
									"vestingDuration_": "- Number of blocks after which OIL tokens earned by staking will be released (duration of Vesting period)."
								}
							},
							"getRewards()": {
								"details": "Which means that all stakes lock periods are already over, and totalRewardPoints value isn't changing anymore - so we can now calculate the percentages of rewards"
							},
							"lockTokens(uint72,uint24)": {
								"params": {
									"lockingPeriodInBlocks_": "- locking period duration defined in blocks.",
									"tokenAmount_": "- Amount of LP tokens to be locked."
								}
							}
						},
						"stateVariables": {
							"owner": {
								"details": "Owner is used only in setPoolToken()"
							},
							"vestingDuration": {
								"details": "In blocks - should be around 100 days"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"token-staking(copy)(copy)/contracts/Staking.sol\":2612:17827  contract Staking {... */\n  mstore(0x40, 0x0120)\n    /* \"token-staking(copy)(copy)/contracts/Staking.sol\":7116:7669  constructor(address oilerToken_, uint256 stakingDurationInBlocks_, uint256 stakingFundAmount_, uint256 vestingDuration_, address owner_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"token-staking(copy)(copy)/contracts/Staking.sol\":7289:7292  0x0 */\n  0x00\n    /* \"token-staking(copy)(copy)/contracts/Staking.sol\":7271:7293  owner_ != address(0x0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"token-staking(copy)(copy)/contracts/Staking.sol\":7271:7277  owner_ */\n  dup2\n    /* \"token-staking(copy)(copy)/contracts/Staking.sol\":7271:7293  owner_ != address(0x0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n  iszero\n    /* \"token-staking(copy)(copy)/contracts/Staking.sol\":7263:7326  require(owner_ != address(0x0), \"Owner address cannot be zero\") */\n  tag_6\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_7\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_6:\n    /* \"token-staking(copy)(copy)/contracts/Staking.sol\":7344:7350  owner_ */\n  dup1\n    /* \"token-staking(copy)(copy)/contracts/Staking.sol\":7336:7350  owner = owner_ */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x0100\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x60\n  shl\n  dup2\n  mstore\n  pop\n  pop\n    /* \"token-staking(copy)(copy)/contracts/Staking.sol\":7392:7395  0x0 */\n  0x00\n    /* \"token-staking(copy)(copy)/contracts/Staking.sol\":7369:7396  oilerToken_ != address(0x0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"token-staking(copy)(copy)/contracts/Staking.sol\":7369:7380  oilerToken_ */\n  dup6\n    /* \"token-staking(copy)(copy)/contracts/Staking.sol\":7369:7396  oilerToken_ != address(0x0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n  iszero\n    /* \"token-staking(copy)(copy)/contracts/Staking.sol\":7361:7434  require(oilerToken_ != address(0x0), \"oilerToken address cannot be zero\") */\n  tag_9\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_10\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_9:\n    /* \"token-staking(copy)(copy)/contracts/Staking.sol\":7464:7475  oilerToken_ */\n  dup5\n    /* \"token-staking(copy)(copy)/contracts/Staking.sol\":7444:7476  oilerToken = IERC20(oilerToken_) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xc0\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x60\n  shl\n  dup2\n  mstore\n  pop\n  pop\n    /* \"token-staking(copy)(copy)/contracts/Staking.sol\":7536:7560  stakingDurationInBlocks_ */\n  dup4\n    /* \"token-staking(copy)(copy)/contracts/Staking.sol\":7521:7533  block.number */\n  number\n    /* \"token-staking(copy)(copy)/contracts/Staking.sol\":7521:7560  block.number + stakingDurationInBlocks_ */\n  tag_12\n  swap2\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n    /* \"token-staking(copy)(copy)/contracts/Staking.sol\":7495:7560  stakingProgramEndsBlock = block.number + stakingDurationInBlocks_ */\n  0x80\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"token-staking(copy)(copy)/contracts/Staking.sol\":7588:7604  vestingDuration_ */\n  dup2\n    /* \"token-staking(copy)(copy)/contracts/Staking.sol\":7570:7604  vestingDuration = vestingDuration_ */\n  0xe0\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"token-staking(copy)(copy)/contracts/Staking.sol\":7644:7662  stakingFundAmount_ */\n  dup3\n    /* \"token-staking(copy)(copy)/contracts/Staking.sol\":7624:7662  stakingFundAmount = stakingFundAmount_ */\n  0xa0\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"token-staking(copy)(copy)/contracts/Staking.sol\":7116:7669  constructor(address oilerToken_, uint256 stakingDurationInBlocks_, uint256 stakingFundAmount_, uint256 vestingDuration_, address owner_) {... */\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"token-staking(copy)(copy)/contracts/Staking.sol\":2612:17827  contract Staking {... */\n  jump(tag_14)\n    /* \"#utility.yul\":7:150   */\ntag_16:\n    /* \"#utility.yul\":64:69   */\n  0x00\n    /* \"#utility.yul\":95:101   */\n  dup2\n    /* \"#utility.yul\":89:102   */\n  mload\n    /* \"#utility.yul\":80:102   */\n  swap1\n  pop\n    /* \"#utility.yul\":111:144   */\n  tag_18\n    /* \"#utility.yul\":138:143   */\n  dup2\n    /* \"#utility.yul\":111:144   */\n  tag_19\n  jump\t// in\ntag_18:\n    /* \"#utility.yul\":70:150   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":156:299   */\ntag_20:\n    /* \"#utility.yul\":213:218   */\n  0x00\n    /* \"#utility.yul\":244:250   */\n  dup2\n    /* \"#utility.yul\":238:251   */\n  mload\n    /* \"#utility.yul\":229:251   */\n  swap1\n  pop\n    /* \"#utility.yul\":260:293   */\n  tag_22\n    /* \"#utility.yul\":287:292   */\n  dup2\n    /* \"#utility.yul\":260:293   */\n  tag_23\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":219:299   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":305:1215   */\ntag_3:\n    /* \"#utility.yul\":411:417   */\n  0x00\n    /* \"#utility.yul\":419:425   */\n  dup1\n    /* \"#utility.yul\":427:433   */\n  0x00\n    /* \"#utility.yul\":435:441   */\n  dup1\n    /* \"#utility.yul\":443:449   */\n  0x00\n    /* \"#utility.yul\":492:495   */\n  0xa0\n    /* \"#utility.yul\":480:489   */\n  dup7\n    /* \"#utility.yul\":471:478   */\n  dup9\n    /* \"#utility.yul\":467:490   */\n  sub\n    /* \"#utility.yul\":463:496   */\n  slt\n    /* \"#utility.yul\":460:462   */\n  iszero\n  tag_25\n  jumpi\n    /* \"#utility.yul\":509:510   */\n  0x00\n    /* \"#utility.yul\":506:507   */\n  dup1\n    /* \"#utility.yul\":499:511   */\n  revert\n    /* \"#utility.yul\":460:462   */\ntag_25:\n    /* \"#utility.yul\":552:553   */\n  0x00\n    /* \"#utility.yul\":577:641   */\n  tag_26\n    /* \"#utility.yul\":633:640   */\n  dup9\n    /* \"#utility.yul\":624:630   */\n  dup3\n    /* \"#utility.yul\":613:622   */\n  dup10\n    /* \"#utility.yul\":609:631   */\n  add\n    /* \"#utility.yul\":577:641   */\n  tag_16\n  jump\t// in\ntag_26:\n    /* \"#utility.yul\":567:641   */\n  swap6\n  pop\n    /* \"#utility.yul\":523:651   */\n  pop\n    /* \"#utility.yul\":690:692   */\n  0x20\n    /* \"#utility.yul\":716:780   */\n  tag_27\n    /* \"#utility.yul\":772:779   */\n  dup9\n    /* \"#utility.yul\":763:769   */\n  dup3\n    /* \"#utility.yul\":752:761   */\n  dup10\n    /* \"#utility.yul\":748:770   */\n  add\n    /* \"#utility.yul\":716:780   */\n  tag_20\n  jump\t// in\ntag_27:\n    /* \"#utility.yul\":706:780   */\n  swap5\n  pop\n    /* \"#utility.yul\":661:790   */\n  pop\n    /* \"#utility.yul\":829:831   */\n  0x40\n    /* \"#utility.yul\":855:919   */\n  tag_28\n    /* \"#utility.yul\":911:918   */\n  dup9\n    /* \"#utility.yul\":902:908   */\n  dup3\n    /* \"#utility.yul\":891:900   */\n  dup10\n    /* \"#utility.yul\":887:909   */\n  add\n    /* \"#utility.yul\":855:919   */\n  tag_20\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":845:919   */\n  swap4\n  pop\n    /* \"#utility.yul\":800:929   */\n  pop\n    /* \"#utility.yul\":968:970   */\n  0x60\n    /* \"#utility.yul\":994:1058   */\n  tag_29\n    /* \"#utility.yul\":1050:1057   */\n  dup9\n    /* \"#utility.yul\":1041:1047   */\n  dup3\n    /* \"#utility.yul\":1030:1039   */\n  dup10\n    /* \"#utility.yul\":1026:1048   */\n  add\n    /* \"#utility.yul\":994:1058   */\n  tag_20\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":984:1058   */\n  swap3\n  pop\n    /* \"#utility.yul\":939:1068   */\n  pop\n    /* \"#utility.yul\":1107:1110   */\n  0x80\n    /* \"#utility.yul\":1134:1198   */\n  tag_30\n    /* \"#utility.yul\":1190:1197   */\n  dup9\n    /* \"#utility.yul\":1181:1187   */\n  dup3\n    /* \"#utility.yul\":1170:1179   */\n  dup10\n    /* \"#utility.yul\":1166:1188   */\n  add\n    /* \"#utility.yul\":1134:1198   */\n  tag_16\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":1124:1198   */\n  swap2\n  pop\n    /* \"#utility.yul\":1078:1208   */\n  pop\n    /* \"#utility.yul\":450:1215   */\n  swap3\n  swap6\n  pop\n  swap3\n  swap6\n  swap1\n  swap4\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1221:1587   */\ntag_31:\n    /* \"#utility.yul\":1363:1366   */\n  0x00\n    /* \"#utility.yul\":1384:1451   */\n  tag_33\n    /* \"#utility.yul\":1448:1450   */\n  0x1c\n    /* \"#utility.yul\":1443:1446   */\n  dup4\n    /* \"#utility.yul\":1384:1451   */\n  tag_34\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":1377:1451   */\n  swap2\n  pop\n    /* \"#utility.yul\":1460:1553   */\n  tag_35\n    /* \"#utility.yul\":1549:1552   */\n  dup3\n    /* \"#utility.yul\":1460:1553   */\n  tag_36\n  jump\t// in\ntag_35:\n    /* \"#utility.yul\":1578:1580   */\n  0x20\n    /* \"#utility.yul\":1573:1576   */\n  dup3\n    /* \"#utility.yul\":1569:1581   */\n  add\n    /* \"#utility.yul\":1562:1581   */\n  swap1\n  pop\n    /* \"#utility.yul\":1367:1587   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1593:1959   */\ntag_37:\n    /* \"#utility.yul\":1735:1738   */\n  0x00\n    /* \"#utility.yul\":1756:1823   */\n  tag_39\n    /* \"#utility.yul\":1820:1822   */\n  0x21\n    /* \"#utility.yul\":1815:1818   */\n  dup4\n    /* \"#utility.yul\":1756:1823   */\n  tag_34\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":1749:1823   */\n  swap2\n  pop\n    /* \"#utility.yul\":1832:1925   */\n  tag_40\n    /* \"#utility.yul\":1921:1924   */\n  dup3\n    /* \"#utility.yul\":1832:1925   */\n  tag_41\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1950:1952   */\n  0x40\n    /* \"#utility.yul\":1945:1948   */\n  dup3\n    /* \"#utility.yul\":1941:1953   */\n  add\n    /* \"#utility.yul\":1934:1953   */\n  swap1\n  pop\n    /* \"#utility.yul\":1739:1959   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1965:2384   */\ntag_8:\n    /* \"#utility.yul\":2131:2135   */\n  0x00\n    /* \"#utility.yul\":2169:2171   */\n  0x20\n    /* \"#utility.yul\":2158:2167   */\n  dup3\n    /* \"#utility.yul\":2154:2172   */\n  add\n    /* \"#utility.yul\":2146:2172   */\n  swap1\n  pop\n    /* \"#utility.yul\":2218:2227   */\n  dup2\n    /* \"#utility.yul\":2212:2216   */\n  dup2\n    /* \"#utility.yul\":2208:2228   */\n  sub\n    /* \"#utility.yul\":2204:2205   */\n  0x00\n    /* \"#utility.yul\":2193:2202   */\n  dup4\n    /* \"#utility.yul\":2189:2206   */\n  add\n    /* \"#utility.yul\":2182:2229   */\n  mstore\n    /* \"#utility.yul\":2246:2377   */\n  tag_43\n    /* \"#utility.yul\":2372:2376   */\n  dup2\n    /* \"#utility.yul\":2246:2377   */\n  tag_31\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":2238:2377   */\n  swap1\n  pop\n    /* \"#utility.yul\":2136:2384   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2390:2809   */\ntag_11:\n    /* \"#utility.yul\":2556:2560   */\n  0x00\n    /* \"#utility.yul\":2594:2596   */\n  0x20\n    /* \"#utility.yul\":2583:2592   */\n  dup3\n    /* \"#utility.yul\":2579:2597   */\n  add\n    /* \"#utility.yul\":2571:2597   */\n  swap1\n  pop\n    /* \"#utility.yul\":2643:2652   */\n  dup2\n    /* \"#utility.yul\":2637:2641   */\n  dup2\n    /* \"#utility.yul\":2633:2653   */\n  sub\n    /* \"#utility.yul\":2629:2630   */\n  0x00\n    /* \"#utility.yul\":2618:2627   */\n  dup4\n    /* \"#utility.yul\":2614:2631   */\n  add\n    /* \"#utility.yul\":2607:2654   */\n  mstore\n    /* \"#utility.yul\":2671:2802   */\n  tag_45\n    /* \"#utility.yul\":2797:2801   */\n  dup2\n    /* \"#utility.yul\":2671:2802   */\n  tag_37\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":2663:2802   */\n  swap1\n  pop\n    /* \"#utility.yul\":2561:2809   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2815:2984   */\ntag_34:\n    /* \"#utility.yul\":2899:2910   */\n  0x00\n    /* \"#utility.yul\":2933:2939   */\n  dup3\n    /* \"#utility.yul\":2928:2931   */\n  dup3\n    /* \"#utility.yul\":2921:2940   */\n  mstore\n    /* \"#utility.yul\":2973:2977   */\n  0x20\n    /* \"#utility.yul\":2968:2971   */\n  dup3\n    /* \"#utility.yul\":2964:2978   */\n  add\n    /* \"#utility.yul\":2949:2978   */\n  swap1\n  pop\n    /* \"#utility.yul\":2911:2984   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2990:3295   */\ntag_13:\n    /* \"#utility.yul\":3030:3033   */\n  0x00\n    /* \"#utility.yul\":3049:3069   */\n  tag_48\n    /* \"#utility.yul\":3067:3068   */\n  dup3\n    /* \"#utility.yul\":3049:3069   */\n  tag_49\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":3044:3069   */\n  swap2\n  pop\n    /* \"#utility.yul\":3083:3103   */\n  tag_50\n    /* \"#utility.yul\":3101:3102   */\n  dup4\n    /* \"#utility.yul\":3083:3103   */\n  tag_49\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":3078:3103   */\n  swap3\n  pop\n    /* \"#utility.yul\":3237:3238   */\n  dup3\n    /* \"#utility.yul\":3169:3235   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":3165:3239   */\n  sub\n    /* \"#utility.yul\":3162:3163   */\n  dup3\n    /* \"#utility.yul\":3159:3240   */\n  gt\n    /* \"#utility.yul\":3156:3158   */\n  iszero\n  tag_51\n  jumpi\n    /* \"#utility.yul\":3243:3261   */\n  tag_52\n  tag_53\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":3156:3158   */\ntag_51:\n    /* \"#utility.yul\":3287:3288   */\n  dup3\n    /* \"#utility.yul\":3284:3285   */\n  dup3\n    /* \"#utility.yul\":3280:3289   */\n  add\n    /* \"#utility.yul\":3273:3289   */\n  swap1\n  pop\n    /* \"#utility.yul\":3034:3295   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3301:3397   */\ntag_54:\n    /* \"#utility.yul\":3338:3345   */\n  0x00\n    /* \"#utility.yul\":3367:3391   */\n  tag_56\n    /* \"#utility.yul\":3385:3390   */\n  dup3\n    /* \"#utility.yul\":3367:3391   */\n  tag_57\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":3356:3391   */\n  swap1\n  pop\n    /* \"#utility.yul\":3346:3397   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3403:3529   */\ntag_57:\n    /* \"#utility.yul\":3440:3447   */\n  0x00\n    /* \"#utility.yul\":3480:3522   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":3473:3478   */\n  dup3\n    /* \"#utility.yul\":3469:3523   */\n  and\n    /* \"#utility.yul\":3458:3523   */\n  swap1\n  pop\n    /* \"#utility.yul\":3448:3529   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3535:3612   */\ntag_49:\n    /* \"#utility.yul\":3572:3579   */\n  0x00\n    /* \"#utility.yul\":3601:3606   */\n  dup2\n    /* \"#utility.yul\":3590:3606   */\n  swap1\n  pop\n    /* \"#utility.yul\":3580:3612   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3618:3798   */\ntag_53:\n    /* \"#utility.yul\":3666:3743   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3663:3664   */\n  0x00\n    /* \"#utility.yul\":3656:3744   */\n  mstore\n    /* \"#utility.yul\":3763:3767   */\n  0x11\n    /* \"#utility.yul\":3760:3761   */\n  0x04\n    /* \"#utility.yul\":3753:3768   */\n  mstore\n    /* \"#utility.yul\":3787:3791   */\n  0x24\n    /* \"#utility.yul\":3784:3785   */\n  0x00\n    /* \"#utility.yul\":3777:3792   */\n  revert\n    /* \"#utility.yul\":3804:3982   */\ntag_36:\n    /* \"#utility.yul\":3944:3974   */\n  0x4f776e657220616464726573732063616e6e6f74206265207a65726f00000000\n    /* \"#utility.yul\":3940:3941   */\n  0x00\n    /* \"#utility.yul\":3932:3938   */\n  dup3\n    /* \"#utility.yul\":3928:3942   */\n  add\n    /* \"#utility.yul\":3921:3975   */\n  mstore\n    /* \"#utility.yul\":3910:3982   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3988:4208   */\ntag_41:\n    /* \"#utility.yul\":4128:4162   */\n  0x6f696c6572546f6b656e20616464726573732063616e6e6f74206265207a6572\n    /* \"#utility.yul\":4124:4125   */\n  0x00\n    /* \"#utility.yul\":4116:4122   */\n  dup3\n    /* \"#utility.yul\":4112:4126   */\n  add\n    /* \"#utility.yul\":4105:4163   */\n  mstore\n    /* \"#utility.yul\":4197:4200   */\n  0x6f00000000000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":4192:4194   */\n  0x20\n    /* \"#utility.yul\":4184:4190   */\n  dup3\n    /* \"#utility.yul\":4180:4195   */\n  add\n    /* \"#utility.yul\":4173:4201   */\n  mstore\n    /* \"#utility.yul\":4094:4208   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4214:4336   */\ntag_19:\n    /* \"#utility.yul\":4287:4311   */\n  tag_64\n    /* \"#utility.yul\":4305:4310   */\n  dup2\n    /* \"#utility.yul\":4287:4311   */\n  tag_54\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":4280:4285   */\n  dup2\n    /* \"#utility.yul\":4277:4312   */\n  eq\n    /* \"#utility.yul\":4267:4269   */\n  tag_65\n  jumpi\n    /* \"#utility.yul\":4326:4327   */\n  0x00\n    /* \"#utility.yul\":4323:4324   */\n  dup1\n    /* \"#utility.yul\":4316:4328   */\n  revert\n    /* \"#utility.yul\":4267:4269   */\ntag_65:\n    /* \"#utility.yul\":4257:4336   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4342:4464   */\ntag_23:\n    /* \"#utility.yul\":4415:4439   */\n  tag_67\n    /* \"#utility.yul\":4433:4438   */\n  dup2\n    /* \"#utility.yul\":4415:4439   */\n  tag_49\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":4408:4413   */\n  dup2\n    /* \"#utility.yul\":4405:4440   */\n  eq\n    /* \"#utility.yul\":4395:4397   */\n  tag_68\n  jumpi\n    /* \"#utility.yul\":4454:4455   */\n  0x00\n    /* \"#utility.yul\":4451:4452   */\n  dup1\n    /* \"#utility.yul\":4444:4456   */\n  revert\n    /* \"#utility.yul\":4395:4397   */\ntag_68:\n    /* \"#utility.yul\":4385:4464   */\n  pop\n  jump\t// out\n    /* \"token-staking(copy)(copy)/contracts/Staking.sol\":2612:17827  contract Staking {... */\ntag_14:\n  mload(0x80)\n  mload(0xa0)\n  shr(0x60, mload(0xc0))\n  mload(0xe0)\n  shr(0x60, mload(0x0100))\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x57014f1e5f1d53e43fa40624186159531d6372d1ab8f40ec7882845ca66de31d\")\n  0x00\n  assignImmutable(\"0xbbd48b257be1b8216d144ef9be5734f8d11697959c9e0f7768bec89db74a63a3\")\n  0x00\n  assignImmutable(\"0x880de8116b3dfac28e9ff528a9fef1d1e0a51449c1addce011ffec1f302992b6\")\n  0x00\n  assignImmutable(\"0x8b953cbb84328003779eb1ef176ef07f7dd0ae3d4a8e408de53d15a36466c86e\")\n  0x00\n  assignImmutable(\"0x7749cc8014201da2069c21d93ba99c584b6f62d393fde534ed47eac227e31561\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":2612:17827  contract Staking {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x86d1a69f\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xc959360b\n      gt\n      tag_21\n      jumpi\n      dup1\n      0xc959360b\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xcbdf382c\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xe0e4a722\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xf6ffab88\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xf968f493\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x86d1a69f\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xbc0925ae\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xc2e8caf6\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x52946b04\n      gt\n      tag_22\n      jumpi\n      dup1\n      0x52946b04\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x70ff852b\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x798633b9\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x81e9207d\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x0572b0cc\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1514617e\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x16934fc4\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x378592c8\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":13821:15220  function getRewards() public {... */\n    tag_3:\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      stop\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":5976:6016  uint256 immutable public vestingDuration */\n    tag_4:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":4823:4863  mapping (address => Stake) public stakes */\n    tag_5:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_33\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":9998:11657  function lockTokens(uint72 tokenAmount_, uint24 lockingPeriodInBlocks_) public poolTokenSet {... */\n    tag_6:\n      tag_35\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      tag_38\n      jump\t// in\n    tag_35:\n      stop\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":5379:5421  uint256 immutable public stakingFundAmount */\n    tag_7:\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":5864:5914  mapping (address => uint256) public releasedTokens */\n    tag_8:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_43:\n      tag_44\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":8938:9605  function calculateStakingRewardPoints(uint72 tokenAmount_, uint24 lockingPeriodInBlocks_) public pure returns (uint128) {... */\n    tag_9:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_47:\n      tag_48\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":5579:5613  IERC20 immutable public oilerToken */\n    tag_10:\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":15941:16312  function release() public {... */\n    tag_11:\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n      stop\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":6243:6273  address immutable public owner */\n    tag_12:\n      tag_57\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":5198:5246  uint256 immutable public stakingProgramEndsBlock */\n    tag_13:\n      tag_61\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":5102:5134  uint256 public totalRewardPoints */\n    tag_14:\n      tag_64\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      tag_66\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":4982:5036  mapping (address => uint256) public rewardPointsEarned */\n    tag_15:\n      tag_67\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_68\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_68:\n      tag_69\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      tag_70\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":5491:5514  IERC20 public poolToken */\n    tag_16:\n      tag_71\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      tag_73\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":5719:5768  mapping (address => uint256) public grantedTokens */\n    tag_17:\n      tag_74\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_75\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_75:\n      tag_76\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      tag_77\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":7753:8561  function setPoolToken(address poolToken_, address stakingFundAddress_) public onlyOwner {... */\n    tag_18:\n      tag_78\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_79\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n      tag_81\n      jump\t// in\n    tag_78:\n      stop\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":11815:12509  function unlockTokens() public poolTokenSet {... */\n    tag_19:\n      tag_82\n      tag_83\n      jump\t// in\n    tag_82:\n      stop\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":13821:15220  function getRewards() public {... */\n    tag_24:\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":13883:13906  stakingProgramEndsBlock */\n      immutable(\"0x7749cc8014201da2069c21d93ba99c584b6f62d393fde534ed47eac227e31561\")\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":13868:13880  block.number */\n      number\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":13868:13906  block.number > stakingProgramEndsBlock */\n      gt\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":13860:13962  require(block.number > stakingProgramEndsBlock, \"You can only get Rewards after Staking Program ends\") */\n      tag_85\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_86\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_85:\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":14014:14015  0 */\n      0x00\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":13980:13986  stakes */\n      dup1\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":13980:13998  stakes[msg.sender] */\n      0x00\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":13987:13997  msg.sender */\n      caller\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":13980:13998  stakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":13980:14010  stakes[msg.sender].tokenAmount */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffff\n      and\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":13980:14015  stakes[msg.sender].tokenAmount == 0 */\n      0xffffffffffffffffff\n      and\n      eq\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":13972:14100  require(stakes[msg.sender].tokenAmount == 0, \"You still have a stake locked - please unlock first, don't leave free money here\") */\n      tag_88\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_89\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_88:\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":14151:14152  0 */\n      0x00\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":14118:14136  rewardPointsEarned */\n      0x01\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":14118:14148  rewardPointsEarned[msg.sender] */\n      0x00\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":14137:14147  msg.sender */\n      caller\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":14118:14148  rewardPointsEarned[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":14118:14152  rewardPointsEarned[msg.sender] > 0 */\n      gt\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":14110:14188  require(rewardPointsEarned[msg.sender] > 0, \"You don't have any rewardPoints\") */\n      tag_91\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_92\n      swap1\n      tag_93\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_91:\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":14864:14884  uint256 amountEarned */\n      0x00\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":14940:14957  totalRewardPoints */\n      sload(0x02)\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":14907:14925  rewardPointsEarned */\n      0x01\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":14907:14937  rewardPointsEarned[msg.sender] */\n      0x00\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":14926:14936  msg.sender */\n      caller\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":14907:14937  rewardPointsEarned[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":14887:14904  stakingFundAmount */\n      immutable(\"0x8b953cbb84328003779eb1ef176ef07f7dd0ae3d4a8e408de53d15a36466c86e\")\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":14887:14937  stakingFundAmount * rewardPointsEarned[msg.sender] */\n      tag_94\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_94:\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":14887:14957  stakingFundAmount * rewardPointsEarned[msg.sender] / totalRewardPoints */\n      tag_96\n      swap2\n      swap1\n      tag_97\n      jump\t// in\n    tag_96:\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":14864:14957  uint256 amountEarned = stakingFundAmount * rewardPointsEarned[msg.sender] / totalRewardPoints */\n      swap1\n      pop\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":15000:15001  0 */\n      0x00\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":14967:14985  rewardPointsEarned */\n      0x01\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":14967:14997  rewardPointsEarned[msg.sender] */\n      0x00\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":14986:14996  msg.sender */\n      caller\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":14967:14997  rewardPointsEarned[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":14967:15001  rewardPointsEarned[msg.sender] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":15095:15133  _grantTokens(msg.sender, amountEarned) */\n      tag_98\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":15108:15118  msg.sender */\n      caller\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":15120:15132  amountEarned */\n      dup3\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":15095:15107  _grantTokens */\n      tag_99\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":15095:15133  _grantTokens(msg.sender, amountEarned) */\n      jump\t// in\n    tag_98:\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":13821:15220  function getRewards() public {... */\n      pop\n      jump\t// out\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":5976:6016  uint256 immutable public vestingDuration */\n    tag_26:\n      immutable(\"0xbbd48b257be1b8216d144ef9be5734f8d11697959c9e0f7768bec89db74a63a3\")\n      dup2\n      jump\t// out\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":4823:4863  mapping (address => Stake) public stakes */\n    tag_32:\n      mstore(0x20, 0x00)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x00\n      add\n      0x09\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffff\n      and\n      swap1\n      dup1\n      0x00\n      add\n      0x0c\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n      swap1\n      dup1\n      0x00\n      add\n      0x10\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffff\n      and\n      swap1\n      pop\n      dup5\n      jump\t// out\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":9998:11657  function lockTokens(uint72 tokenAmount_, uint24 lockingPeriodInBlocks_) public poolTokenSet {... */\n    tag_38:\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":6143:6146  0x0 */\n      0x00\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":6113:6147  address(poolToken) != address(0x0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":6121:6130  poolToken */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":6113:6147  address(poolToken) != address(0x0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":6105:6169  require(address(poolToken) != address(0x0), \"poolToken not set\") */\n      tag_101\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap1\n      tag_103\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_101:\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":10290:10312  lockingPeriodInBlocks_ */\n      dup1\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":10264:10312  stakingProgramEndsBlock - lockingPeriodInBlocks_ */\n      0xffffff\n      and\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":10264:10287  stakingProgramEndsBlock */\n      immutable(\"0x7749cc8014201da2069c21d93ba99c584b6f62d393fde534ed47eac227e31561\")\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":10264:10312  stakingProgramEndsBlock - lockingPeriodInBlocks_ */\n      tag_105\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_105:\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":10248:10260  block.number */\n      number\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":10248:10312  block.number <= stakingProgramEndsBlock - lockingPeriodInBlocks_ */\n      gt\n      iszero\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":10240:10366  require(block.number <= stakingProgramEndsBlock - lockingPeriodInBlocks_, \"Your lock period exceeds Staking Program duration\") */\n      tag_107\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_108\n      swap1\n      tag_109\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_107:\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":10418:10419  0 */\n      0x00\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":10384:10390  stakes */\n      dup1\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":10384:10402  stakes[msg.sender] */\n      0x00\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":10391:10401  msg.sender */\n      caller\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":10384:10402  stakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":10384:10414  stakes[msg.sender].tokenAmount */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffff\n      and\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":10384:10419  stakes[msg.sender].tokenAmount == 0 */\n      0xffffffffffffffffff\n      and\n      eq\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":10376:10439  require(stakes[msg.sender].tokenAmount == 0, \"Already staking\") */\n      tag_110\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_111\n      swap1\n      tag_112\n      jump\t// in\n    tag_111:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_110:\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":10570:10605  uint128 expectedStakingRewardPoints */\n      0x00\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":10608:10674  calculateStakingRewardPoints(tokenAmount_, lockingPeriodInBlocks_) */\n      tag_113\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":10637:10649  tokenAmount_ */\n      dup4\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":10651:10673  lockingPeriodInBlocks_ */\n      dup4\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":10608:10636  calculateStakingRewardPoints */\n      tag_48\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":10608:10674  calculateStakingRewardPoints(tokenAmount_, lockingPeriodInBlocks_) */\n      jump\t// in\n    tag_113:\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":10570:10674  uint128 expectedStakingRewardPoints = calculateStakingRewardPoints(tokenAmount_, lockingPeriodInBlocks_) */\n      swap1\n      pop\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":10685:10703  Stake memory stake */\n      0x00\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":10706:10800  Stake(tokenAmount_, lockingPeriodInBlocks_, uint32(block.number), expectedStakingRewardPoints) */\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      dup1\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":10712:10724  tokenAmount_ */\n      dup6\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":10706:10800  Stake(tokenAmount_, lockingPeriodInBlocks_, uint32(block.number), expectedStakingRewardPoints) */\n      0xffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":10726:10748  lockingPeriodInBlocks_ */\n      dup5\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":10706:10800  Stake(tokenAmount_, lockingPeriodInBlocks_, uint32(block.number), expectedStakingRewardPoints) */\n      0xffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":10757:10769  block.number */\n      number\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":10706:10800  Stake(tokenAmount_, lockingPeriodInBlocks_, uint32(block.number), expectedStakingRewardPoints) */\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":10772:10799  expectedStakingRewardPoints */\n      dup4\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":10706:10800  Stake(tokenAmount_, lockingPeriodInBlocks_, uint32(block.number), expectedStakingRewardPoints) */\n      0xffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":10685:10800  Stake memory stake = Stake(tokenAmount_, lockingPeriodInBlocks_, uint32(block.number), expectedStakingRewardPoints) */\n      swap1\n      pop\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":10831:10836  stake */\n      dup1\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":10810:10816  stakes */\n      0x00\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":10810:10828  stakes[msg.sender] */\n      dup1\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":10817:10827  msg.sender */\n      caller\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":10810:10828  stakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":10810:10836  stakes[msg.sender] = stake */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x09)\n      dup2\n      sload\n      dup2\n      0xffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x0c)\n      dup2\n      sload\n      dup2\n      0xffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x10)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      swap1\n      pop\n      pop\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":11117:11144  expectedStakingRewardPoints */\n      dup2\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":11096:11144  totalRewardPoints += expectedStakingRewardPoints */\n      0xffffffffffffffffffffffffffffffff\n      and\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":11096:11113  totalRewardPoints */\n      0x02\n      0x00\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":11096:11144  totalRewardPoints += expectedStakingRewardPoints */\n      dup3\n      dup3\n      sload\n      tag_114\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_114:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":11188:11215  expectedStakingRewardPoints */\n      dup2\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":11154:11215  rewardPointsEarned[msg.sender] += expectedStakingRewardPoints */\n      0xffffffffffffffffffffffffffffffff\n      and\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":11154:11172  rewardPointsEarned */\n      0x01\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":11154:11184  rewardPointsEarned[msg.sender] */\n      0x00\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":11173:11183  msg.sender */\n      caller\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":11154:11184  rewardPointsEarned[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":11154:11215  rewardPointsEarned[msg.sender] += expectedStakingRewardPoints */\n      dup3\n      dup3\n      sload\n      tag_116\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_116:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":11443:11452  poolToken */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":11443:11465  poolToken.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":11466:11476  msg.sender */\n      caller\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":11486:11490  this */\n      address\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":11493:11505  tokenAmount_ */\n      dup8\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":11443:11506  poolToken.transferFrom(msg.sender, address(this), tokenAmount_) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_117\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_118\n      jump\t// in\n    tag_117:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_119\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_119:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_121\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_121:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_122\n      swap2\n      swap1\n      tag_123\n      jump\t// in\n    tag_122:\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":11435:11544  require(poolToken.transferFrom(msg.sender, address(this), tokenAmount_), \"TransferFrom of poolTokens failed\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_125\n      swap1\n      tag_126\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_124:\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":11560:11650  StakeLocked(msg.sender, tokenAmount_, lockingPeriodInBlocks_, expectedStakingRewardPoints) */\n      0xe7dbea143058f90be7a1644e539342c25ddc5379868fe922bab596de99debf41\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":11572:11582  msg.sender */\n      caller\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":11584:11596  tokenAmount_ */\n      dup6\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":11598:11620  lockingPeriodInBlocks_ */\n      dup6\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":11622:11649  expectedStakingRewardPoints */\n      dup6\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":11560:11650  StakeLocked(msg.sender, tokenAmount_, lockingPeriodInBlocks_, expectedStakingRewardPoints) */\n      mload(0x40)\n      tag_127\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_127:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":6179:6180  _ */\n      pop\n      pop\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":9998:11657  function lockTokens(uint72 tokenAmount_, uint24 lockingPeriodInBlocks_) public poolTokenSet {... */\n      pop\n      pop\n      jump\t// out\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":5379:5421  uint256 immutable public stakingFundAmount */\n    tag_40:\n      immutable(\"0x8b953cbb84328003779eb1ef176ef07f7dd0ae3d4a8e408de53d15a36466c86e\")\n      dup2\n      jump\t// out\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":5864:5914  mapping (address => uint256) public releasedTokens */\n    tag_44:\n      mstore(0x20, 0x05)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":8938:9605  function calculateStakingRewardPoints(uint72 tokenAmount_, uint24 lockingPeriodInBlocks_) public pure returns (uint128) {... */\n    tag_48:\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":9049:9056  uint128 */\n      0x00\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":9337:9364  uint256 stakingRewardPoints */\n      dup1\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":9433:9455  lockingPeriodInBlocks_ */\n      dup3\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":9425:9456  uint256(lockingPeriodInBlocks_) */\n      0xffffff\n      and\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":9399:9421  lockingPeriodInBlocks_ */\n      dup4\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":9391:9422  uint256(lockingPeriodInBlocks_) */\n      0xffffff\n      and\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":9375:9387  tokenAmount_ */\n      dup6\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":9367:9388  uint256(tokenAmount_) */\n      0xffffffffffffffffff\n      and\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":9367:9422  uint256(tokenAmount_) * uint256(lockingPeriodInBlocks_) */\n      tag_130\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_130:\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":9367:9456  uint256(tokenAmount_) * uint256(lockingPeriodInBlocks_) * uint256(lockingPeriodInBlocks_) */\n      tag_131\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_131:\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":9337:9456  uint256 stakingRewardPoints = uint256(tokenAmount_) * uint256(lockingPeriodInBlocks_) * uint256(lockingPeriodInBlocks_) */\n      swap1\n      pop\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":9496:9497  0 */\n      0x00\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":9474:9493  stakingRewardPoints */\n      dup2\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":9474:9497  stakingRewardPoints > 0 */\n      gt\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":9466:9553  require(stakingRewardPoints > 0, \"Neither tokenAmount nor lockingPeriod couldn't be 0\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_133\n      swap1\n      tag_134\n      jump\t// in\n    tag_133:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_132:\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":9578:9597  stakingRewardPoints */\n      dup1\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":9563:9598  return uint128(stakingRewardPoints) */\n      swap2\n      pop\n      pop\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":8938:9605  function calculateStakingRewardPoints(uint72 tokenAmount_, uint24 lockingPeriodInBlocks_) public pure returns (uint128) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":5579:5613  IERC20 immutable public oilerToken */\n    tag_52:\n      immutable(\"0x880de8116b3dfac28e9ff528a9fef1d1e0a51449c1addce011ffec1f302992b6\")\n      dup2\n      jump\t// out\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":15941:16312  function release() public {... */\n    tag_56:\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":15977:15995  uint256 releasable */\n      0x00\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":15998:16027  _releasableAmount(msg.sender) */\n      tag_136\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":16016:16026  msg.sender */\n      caller\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":15998:16015  _releasableAmount */\n      tag_137\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":15998:16027  _releasableAmount(msg.sender) */\n      jump\t// in\n    tag_136:\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":15977:16027  uint256 releasable = _releasableAmount(msg.sender) */\n      swap1\n      pop\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":16058:16059  0 */\n      0x00\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":16045:16055  releasable */\n      dup2\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":16045:16059  releasable > 0 */\n      gt\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":16037:16098  require(releasable > 0, \"Vesting release: no tokens are due\") */\n      tag_138\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_139\n      swap1\n      tag_140\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_138:\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":16139:16149  releasable */\n      dup1\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":16109:16123  releasedTokens */\n      0x05\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":16109:16135  releasedTokens[msg.sender] */\n      0x00\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":16124:16134  msg.sender */\n      caller\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":16109:16135  releasedTokens[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":16109:16149  releasedTokens[msg.sender] += releasable */\n      dup3\n      dup3\n      sload\n      tag_141\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_141:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":16167:16177  oilerToken */\n      immutable(\"0x880de8116b3dfac28e9ff528a9fef1d1e0a51449c1addce011ffec1f302992b6\")\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":16167:16186  oilerToken.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":16187:16197  msg.sender */\n      caller\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":16199:16209  releasable */\n      dup4\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":16167:16210  oilerToken.transfer(msg.sender, releasable) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_142\n      swap3\n      swap2\n      swap1\n      tag_143\n      jump\t// in\n    tag_142:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_144\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_144:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_146\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_146:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_147\n      swap2\n      swap1\n      tag_123\n      jump\t// in\n    tag_147:\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":16159:16244  require(oilerToken.transfer(msg.sender, releasable), \"Reward oilers transfer failed\") */\n      tag_148\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_149\n      swap1\n      tag_150\n      jump\t// in\n    tag_149:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_148:\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":16260:16305  grantedTokensReleased(msg.sender, releasable) */\n      0x769d4212c4fbfaa012a896b49e0f3bb14d32dd0d60ce1a13d357ee6b69db77c2\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":16282:16292  msg.sender */\n      caller\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":16294:16304  releasable */\n      dup3\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":16260:16305  grantedTokensReleased(msg.sender, releasable) */\n      mload(0x40)\n      tag_151\n      swap3\n      swap2\n      swap1\n      tag_143\n      jump\t// in\n    tag_151:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":15941:16312  function release() public {... */\n      pop\n      jump\t// out\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":6243:6273  address immutable public owner */\n    tag_58:\n      immutable(\"0x57014f1e5f1d53e43fa40624186159531d6372d1ab8f40ec7882845ca66de31d\")\n      dup2\n      jump\t// out\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":5198:5246  uint256 immutable public stakingProgramEndsBlock */\n    tag_62:\n      immutable(\"0x7749cc8014201da2069c21d93ba99c584b6f62d393fde534ed47eac227e31561\")\n      dup2\n      jump\t// out\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":5102:5134  uint256 public totalRewardPoints */\n    tag_65:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":4982:5036  mapping (address => uint256) public rewardPointsEarned */\n    tag_69:\n      mstore(0x20, 0x01)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":5491:5514  IERC20 public poolToken */\n    tag_72:\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":5719:5768  mapping (address => uint256) public grantedTokens */\n    tag_76:\n      mstore(0x20, 0x04)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":7753:8561  function setPoolToken(address poolToken_, address stakingFundAddress_) public onlyOwner {... */\n    tag_81:\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":6374:6379  owner */\n      immutable(\"0x57014f1e5f1d53e43fa40624186159531d6372d1ab8f40ec7882845ca66de31d\")\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":6360:6379  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":6360:6370  msg.sender */\n      caller\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":6360:6379  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":6352:6411  require(msg.sender == owner, \"Can only be called by owner\") */\n      tag_153\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_154\n      swap1\n      tag_155\n      jump\t// in\n    tag_154:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_153:\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":7889:7892  0x0 */\n      0x00\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":7859:7893  address(poolToken) == address(0x0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":7867:7876  poolToken */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":7859:7893  address(poolToken) == address(0x0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":7851:7923  require(address(poolToken) == address(0x0), \"poolToken was already set\") */\n      tag_157\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_158\n      swap1\n      tag_159\n      jump\t// in\n    tag_158:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_157:\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":7963:7966  0x0 */\n      0x00\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":7941:7967  poolToken_ != address(0x0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":7941:7951  poolToken_ */\n      dup3\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":7941:7967  poolToken_ != address(0x0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":7933:8004  require(poolToken_ != address(0x0), \"poolToken address cannot be zero\") */\n      tag_160\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_161\n      swap1\n      tag_162\n      jump\t// in\n    tag_161:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_160:\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":8033:8043  poolToken_ */\n      dup2\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":8014:8023  poolToken */\n      0x03\n      0x00\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":8014:8044  poolToken = IERC20(poolToken_) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":8188:8205  stakingFundAmount */\n      immutable(\"0x8b953cbb84328003779eb1ef176ef07f7dd0ae3d4a8e408de53d15a36466c86e\")\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":8142:8152  oilerToken */\n      immutable(\"0x880de8116b3dfac28e9ff528a9fef1d1e0a51449c1addce011ffec1f302992b6\")\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":8135:8163  IERC20(oilerToken).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":8164:8183  stakingFundAddress_ */\n      dup4\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":8135:8184  IERC20(oilerToken).balanceOf(stakingFundAddress_) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_163\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_163:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_164\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_164:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_166\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_166:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_167\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_167:\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":8135:8205  IERC20(oilerToken).balanceOf(stakingFundAddress_) >= stakingFundAmount */\n      lt\n      iszero\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":8127:8253  require(IERC20(oilerToken).balanceOf(stakingFundAddress_) >= stakingFundAmount, \"StakingFund doesn't have enough OIL balance\") */\n      tag_169\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_170\n      swap1\n      tag_171\n      jump\t// in\n    tag_170:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_169:\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":8339:8356  stakingFundAmount */\n      immutable(\"0x8b953cbb84328003779eb1ef176ef07f7dd0ae3d4a8e408de53d15a36466c86e\")\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":8278:8288  oilerToken */\n      immutable(\"0x880de8116b3dfac28e9ff528a9fef1d1e0a51449c1addce011ffec1f302992b6\")\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":8271:8299  IERC20(oilerToken).allowance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdd62ed3e\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":8300:8319  stakingFundAddress_ */\n      dup4\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":8329:8333  this */\n      address\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":8271:8335  IERC20(oilerToken).allowance(stakingFundAddress_, address(this)) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_172\n      swap3\n      swap2\n      swap1\n      tag_173\n      jump\t// in\n    tag_172:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_174\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_174:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_176\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_176:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_177\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_177:\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":8271:8356  IERC20(oilerToken).allowance(stakingFundAddress_, address(this)) >= stakingFundAmount */\n      lt\n      iszero\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":8263:8402  require(IERC20(oilerToken).allowance(stakingFundAddress_, address(this)) >= stakingFundAmount, \"StakingFund doesn't have enough allowance\") */\n      tag_178\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_179\n      swap1\n      tag_180\n      jump\t// in\n    tag_179:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_178:\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":8427:8437  oilerToken */\n      immutable(\"0x880de8116b3dfac28e9ff528a9fef1d1e0a51449c1addce011ffec1f302992b6\")\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":8420:8451  IERC20(oilerToken).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":8452:8471  stakingFundAddress_ */\n      dup3\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":8481:8485  this */\n      address\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":8488:8505  stakingFundAmount */\n      immutable(\"0x8b953cbb84328003779eb1ef176ef07f7dd0ae3d4a8e408de53d15a36466c86e\")\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":8420:8506  IERC20(oilerToken).transferFrom(stakingFundAddress_, address(this), stakingFundAmount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_181\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_182\n      jump\t// in\n    tag_181:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_183\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_183:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_185\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_185:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_186\n      swap2\n      swap1\n      tag_123\n      jump\t// in\n    tag_186:\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":8412:8554  require(IERC20(oilerToken).transferFrom(stakingFundAddress_, address(this), stakingFundAmount), \"TransferFrom of OIL from StakingFund failed\") */\n      tag_187\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_188\n      swap1\n      tag_189\n      jump\t// in\n    tag_188:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_187:\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":7753:8561  function setPoolToken(address poolToken_, address stakingFundAddress_) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":11815:12509  function unlockTokens() public poolTokenSet {... */\n    tag_83:\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":6143:6146  0x0 */\n      0x00\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":6113:6147  address(poolToken) != address(0x0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":6121:6130  poolToken */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":6113:6147  address(poolToken) != address(0x0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":6105:6169  require(address(poolToken) != address(0x0), \"poolToken not set\") */\n      tag_191\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_192\n      swap1\n      tag_103\n      jump\t// in\n    tag_192:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_191:\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":11869:11887  Stake memory stake */\n      0x00\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":11890:11896  stakes */\n      dup1\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":11890:11908  stakes[msg.sender] */\n      0x00\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":11897:11907  msg.sender */\n      caller\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":11890:11908  stakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":11869:11908  Stake memory stake = stakes[msg.sender] */\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffff\n      and\n      0xffffffffffffffffff\n      and\n      0xffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup3\n      add\n      0x09\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffff\n      and\n      0xffffff\n      and\n      0xffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup3\n      add\n      0x0c\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup3\n      add\n      0x10\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":11919:11938  uint256 stakeAmount */\n      0x00\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":11941:11946  stake */\n      dup2\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":11941:11958  stake.tokenAmount */\n      0x00\n      add\n      mload\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":11919:11958  uint256 stakeAmount = stake.tokenAmount */\n      0xffffffffffffffffff\n      and\n      swap1\n      pop\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":11992:11993  0 */\n      0x00\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":11977:11988  stakeAmount */\n      dup2\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":11977:11993  stakeAmount != 0 */\n      eq\n      iszero\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":11969:12030  require(stakeAmount != 0, \"You don't have a stake to unlock\") */\n      tag_194\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_195\n      swap1\n      tag_196\n      jump\t// in\n    tag_195:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_194:\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":12064:12069  stake */\n      dup2\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":12064:12080  stake.startBlock */\n      0x40\n      add\n      mload\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":12049:12080  block.number > stake.startBlock */\n      0xffffffff\n      and\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":12049:12061  block.number */\n      number\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":12049:12080  block.number > stake.startBlock */\n      gt\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":12041:12145  require(block.number > stake.startBlock, \"You can't withdraw the stake in the same block it was locked\") */\n      tag_197\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_198\n      swap1\n      tag_199\n      jump\t// in\n    tag_198:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_197:\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":12253:12282  _punishEarlyWithdrawal(stake) */\n      tag_200\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":12276:12281  stake */\n      dup3\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":12253:12275  _punishEarlyWithdrawal */\n      tag_201\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":12253:12282  _punishEarlyWithdrawal(stake) */\n      jump\t// in\n    tag_200:\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":12391:12397  stakes */\n      0x00\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":12391:12409  stakes[msg.sender] */\n      dup1\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":12398:12408  msg.sender */\n      caller\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":12391:12409  stakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":12384:12409  delete stakes[msg.sender] */\n      dup1\n      dup3\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      swap1\n      0xffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      sstore\n      0x00\n      dup3\n      add\n      exp(0x0100, 0x09)\n      dup2\n      sload\n      swap1\n      0xffffff\n      mul\n      not\n      and\n      swap1\n      sstore\n      0x00\n      dup3\n      add\n      exp(0x0100, 0x0c)\n      dup2\n      sload\n      swap1\n      0xffffffff\n      mul\n      not\n      and\n      swap1\n      sstore\n      0x00\n      dup3\n      add\n      exp(0x0100, 0x10)\n      dup2\n      sload\n      swap1\n      0xffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      sstore\n      pop\n      pop\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":12428:12437  poolToken */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":12428:12446  poolToken.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":12447:12457  msg.sender */\n      caller\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":12459:12470  stakeAmount */\n      dup4\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":12428:12471  poolToken.transfer(msg.sender, stakeAmount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap3\n      swap2\n      swap1\n      tag_143\n      jump\t// in\n    tag_202:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_203\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_203:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_205\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_205:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_206\n      swap2\n      swap1\n      tag_123\n      jump\t// in\n    tag_206:\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":12420:12502  require(poolToken.transfer(msg.sender, stakeAmount), \"Pool token transfer failed\") */\n      tag_207\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_208\n      swap1\n      tag_209\n      jump\t// in\n    tag_208:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_207:\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":6179:6180  _ */\n      pop\n      pop\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":11815:12509  function unlockTokens() public poolTokenSet {... */\n      jump\t// out\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":15531:15891  function _grantTokens(address recipient_, uint256 amountEarned_) internal {... */\n    tag_99:\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":15639:15640  0 */\n      0x00\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":15623:15636  amountEarned_ */\n      dup2\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":15623:15640  amountEarned_ > 0 */\n      gt\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":15615:15686  require(amountEarned_ > 0, \"You didn't earn any integer amount of wei\") */\n      tag_211\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_212\n      swap1\n      tag_213\n      jump\t// in\n    tag_212:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_211:\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":15726:15727  0 */\n      0x00\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":15704:15728  recipient_ != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":15704:15714  recipient_ */\n      dup3\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":15704:15728  recipient_ != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":15696:15778  require(recipient_ != address(0), \"TokenVesting: beneficiary is the zero address\") */\n      tag_214\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_215\n      swap1\n      tag_216\n      jump\t// in\n    tag_215:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_214:\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":15816:15829  amountEarned_ */\n      dup1\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":15788:15801  grantedTokens */\n      0x04\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":15788:15813  grantedTokens[recipient_] */\n      0x00\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":15802:15812  recipient_ */\n      dup5\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":15788:15813  grantedTokens[recipient_] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":15788:15829  grantedTokens[recipient_] = amountEarned_ */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":15844:15884  RewardGranted(recipient_, amountEarned_) */\n      0x6e1afd29522b0aaf986597bcc53f5fb4daae2af7cfd41d00c384ab1bdf912b23\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":15858:15868  recipient_ */\n      dup3\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":15870:15883  amountEarned_ */\n      dup3\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":15844:15884  RewardGranted(recipient_, amountEarned_) */\n      mload(0x40)\n      tag_217\n      swap3\n      swap2\n      swap1\n      tag_143\n      jump\t// in\n    tag_217:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":15531:15891  function _grantTokens(address recipient_, uint256 amountEarned_) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":16426:16583  function _releasableAmount(address recipient_) internal view returns (uint256) {... */\n    tag_137:\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":16496:16503  uint256 */\n      0x00\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":16550:16564  releasedTokens */\n      0x05\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":16550:16576  releasedTokens[recipient_] */\n      0x00\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":16565:16575  recipient_ */\n      dup4\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":16550:16576  releasedTokens[recipient_] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":16522:16547  _vestedAmount(recipient_) */\n      tag_219\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":16536:16546  recipient_ */\n      dup4\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":16522:16535  _vestedAmount */\n      tag_220\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":16522:16547  _vestedAmount(recipient_) */\n      jump\t// in\n    tag_219:\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":16522:16576  _vestedAmount(recipient_) - releasedTokens[recipient_] */\n      tag_221\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_221:\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":16515:16576  return _vestedAmount(recipient_) - releasedTokens[recipient_] */\n      swap1\n      pop\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":16426:16583  function _releasableAmount(address recipient_) internal view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":12610:13548  function _punishEarlyWithdrawal(Stake memory stake_) internal {... */\n    tag_201:\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":12991:12997  stake_ */\n      dup1\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":12991:13019  stake_.lockingPeriodInBlocks */\n      0x20\n      add\n      mload\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":12971:13019  stake_.startBlock + stake_.lockingPeriodInBlocks */\n      0xffffff\n      and\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":12971:12977  stake_ */\n      dup2\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":12971:12988  stake_.startBlock */\n      0x40\n      add\n      mload\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":12971:13019  stake_.startBlock + stake_.lockingPeriodInBlocks */\n      tag_223\n      swap2\n      swap1\n      tag_224\n      jump\t// in\n    tag_223:\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":12955:13020  block.number < (stake_.startBlock + stake_.lockingPeriodInBlocks) */\n      0xffffffff\n      and\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":12955:12967  block.number */\n      number\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":12955:13020  block.number < (stake_.startBlock + stake_.lockingPeriodInBlocks) */\n      lt\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":12951:13542  if (block.number < (stake_.startBlock + stake_.lockingPeriodInBlocks)) { // lt - cause you can only withdraw at or after startBlock + lockPeriod... */\n      iszero\n      tag_225\n      jumpi\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":13142:13148  stake_ */\n      dup1\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":13142:13176  stake_.expectedStakingRewardPoints */\n      0x60\n      add\n      mload\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":13108:13176  rewardPointsEarned[msg.sender] -= stake_.expectedStakingRewardPoints */\n      0xffffffffffffffffffffffffffffffff\n      and\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":13108:13126  rewardPointsEarned */\n      0x01\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":13108:13138  rewardPointsEarned[msg.sender] */\n      0x00\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":13127:13137  msg.sender */\n      caller\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":13108:13138  rewardPointsEarned[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":13108:13176  rewardPointsEarned[msg.sender] -= stake_.expectedStakingRewardPoints */\n      dup3\n      dup3\n      sload\n      tag_226\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_226:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":13211:13217  stake_ */\n      dup1\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":13211:13245  stake_.expectedStakingRewardPoints */\n      0x60\n      add\n      mload\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":13190:13245  totalRewardPoints -= stake_.expectedStakingRewardPoints */\n      0xffffffffffffffffffffffffffffffff\n      and\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":13190:13207  totalRewardPoints */\n      0x02\n      0x00\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":13190:13245  totalRewardPoints -= stake_.expectedStakingRewardPoints */\n      dup3\n      dup3\n      sload\n      tag_227\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_227:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":13264:13384  StakeUnlockedPrematurely(msg.sender, stake_.tokenAmount, stake_.lockingPeriodInBlocks, block.number - stake_.startBlock) */\n      0x6c6f3c7d8c87976393011cc962da12841024bc1d62d2de21716a6306ab314ef3\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":13289:13299  msg.sender */\n      caller\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":13301:13307  stake_ */\n      dup3\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":13301:13319  stake_.tokenAmount */\n      0x00\n      add\n      mload\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":13321:13327  stake_ */\n      dup4\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":13321:13349  stake_.lockingPeriodInBlocks */\n      0x20\n      add\n      mload\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":13366:13372  stake_ */\n      dup5\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":13366:13383  stake_.startBlock */\n      0x40\n      add\n      mload\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":13351:13383  block.number - stake_.startBlock */\n      0xffffffff\n      and\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":13351:13363  block.number */\n      number\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":13351:13383  block.number - stake_.startBlock */\n      tag_228\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_228:\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":13264:13384  StakeUnlockedPrematurely(msg.sender, stake_.tokenAmount, stake_.lockingPeriodInBlocks, block.number - stake_.startBlock) */\n      mload(0x40)\n      tag_229\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_230\n      jump\t// in\n    tag_229:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":12951:13542  if (block.number < (stake_.startBlock + stake_.lockingPeriodInBlocks)) { // lt - cause you can only withdraw at or after startBlock + lockPeriod... */\n      jump(tag_231)\n    tag_225:\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":13420:13531  StakeUnlocked(msg.sender, stake_.tokenAmount, stake_.lockingPeriodInBlocks, stake_.expectedStakingRewardPoints) */\n      0x391930ab48e95a9040c849cc86e1b2f63c711a1f59d6e324ce775dc9a0051056\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":13434:13444  msg.sender */\n      caller\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":13446:13452  stake_ */\n      dup3\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":13446:13464  stake_.tokenAmount */\n      0x00\n      add\n      mload\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":13466:13472  stake_ */\n      dup4\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":13466:13494  stake_.lockingPeriodInBlocks */\n      0x20\n      add\n      mload\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":13496:13502  stake_ */\n      dup5\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":13496:13530  stake_.expectedStakingRewardPoints */\n      0x60\n      add\n      mload\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":13420:13531  StakeUnlocked(msg.sender, stake_.tokenAmount, stake_.lockingPeriodInBlocks, stake_.expectedStakingRewardPoints) */\n      mload(0x40)\n      tag_232\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_232:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":12951:13542  if (block.number < (stake_.startBlock + stake_.lockingPeriodInBlocks)) { // lt - cause you can only withdraw at or after startBlock + lockPeriod... */\n    tag_231:\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":12610:13548  function _punishEarlyWithdrawal(Stake memory stake_) internal {... */\n      pop\n      jump\t// out\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":16807:17293  function _vestedAmount(address recipient_) internal view returns (uint256) {... */\n    tag_220:\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":16873:16880  uint256 */\n      0x00\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":16938:16953  vestingDuration */\n      immutable(\"0xbbd48b257be1b8216d144ef9be5734f8d11697959c9e0f7768bec89db74a63a3\")\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":16912:16935  stakingProgramEndsBlock */\n      immutable(\"0x7749cc8014201da2069c21d93ba99c584b6f62d393fde534ed47eac227e31561\")\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":16912:16953  stakingProgramEndsBlock + vestingDuration */\n      tag_234\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_234:\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":16896:16908  block.number */\n      number\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":16896:16953  block.number >= stakingProgramEndsBlock + vestingDuration */\n      lt\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":16892:17287  if (block.number >= stakingProgramEndsBlock + vestingDuration) {... */\n      tag_235\n      jumpi\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":17048:17061  grantedTokens */\n      0x04\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":17048:17073  grantedTokens[recipient_] */\n      0x00\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":17062:17072  recipient_ */\n      dup4\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":17048:17073  grantedTokens[recipient_] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":17041:17073  return grantedTokens[recipient_] */\n      swap1\n      pop\n      jump(tag_233)\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":16892:17287  if (block.number >= stakingProgramEndsBlock + vestingDuration) {... */\n    tag_235:\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":17261:17276  vestingDuration */\n      immutable(\"0xbbd48b257be1b8216d144ef9be5734f8d11697959c9e0f7768bec89db74a63a3\")\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":17234:17257  stakingProgramEndsBlock */\n      immutable(\"0x7749cc8014201da2069c21d93ba99c584b6f62d393fde534ed47eac227e31561\")\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":17219:17231  block.number */\n      number\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":17219:17257  block.number - stakingProgramEndsBlock */\n      tag_237\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_237:\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":17190:17203  grantedTokens */\n      0x04\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":17190:17215  grantedTokens[recipient_] */\n      0x00\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":17204:17214  recipient_ */\n      dup6\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":17190:17215  grantedTokens[recipient_] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":17190:17258  grantedTokens[recipient_] * (block.number - stakingProgramEndsBlock) */\n      tag_238\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_238:\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":17190:17276  grantedTokens[recipient_] * (block.number - stakingProgramEndsBlock) / vestingDuration */\n      tag_239\n      swap2\n      swap1\n      tag_97\n      jump\t// in\n    tag_239:\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":17183:17276  return grantedTokens[recipient_] * (block.number - stakingProgramEndsBlock) / vestingDuration */\n      swap1\n      pop\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":16807:17293  function _vestedAmount(address recipient_) internal view returns (uint256) {... */\n    tag_233:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_241:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_243\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_244\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":59:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:289   */\n    tag_245:\n        /* \"#utility.yul\":206:211   */\n      0x00\n        /* \"#utility.yul\":237:243   */\n      dup2\n        /* \"#utility.yul\":231:244   */\n      mload\n        /* \"#utility.yul\":222:244   */\n      swap1\n      pop\n        /* \"#utility.yul\":253:283   */\n      tag_247\n        /* \"#utility.yul\":277:282   */\n      dup2\n        /* \"#utility.yul\":253:283   */\n      tag_248\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":212:289   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":295:432   */\n    tag_249:\n        /* \"#utility.yul\":340:345   */\n      0x00\n        /* \"#utility.yul\":378:384   */\n      dup2\n        /* \"#utility.yul\":365:385   */\n      calldataload\n        /* \"#utility.yul\":356:385   */\n      swap1\n      pop\n        /* \"#utility.yul\":394:426   */\n      tag_251\n        /* \"#utility.yul\":420:425   */\n      dup2\n        /* \"#utility.yul\":394:426   */\n      tag_252\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":346:432   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":438:581   */\n    tag_253:\n        /* \"#utility.yul\":495:500   */\n      0x00\n        /* \"#utility.yul\":526:532   */\n      dup2\n        /* \"#utility.yul\":520:533   */\n      mload\n        /* \"#utility.yul\":511:533   */\n      swap1\n      pop\n        /* \"#utility.yul\":542:575   */\n      tag_255\n        /* \"#utility.yul\":569:574   */\n      dup2\n        /* \"#utility.yul\":542:575   */\n      tag_256\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":501:581   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":587:724   */\n    tag_257:\n        /* \"#utility.yul\":632:637   */\n      0x00\n        /* \"#utility.yul\":670:676   */\n      dup2\n        /* \"#utility.yul\":657:677   */\n      calldataload\n        /* \"#utility.yul\":648:677   */\n      swap1\n      pop\n        /* \"#utility.yul\":686:718   */\n      tag_259\n        /* \"#utility.yul\":712:717   */\n      dup2\n        /* \"#utility.yul\":686:718   */\n      tag_260\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":638:724   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":730:992   */\n    tag_31:\n        /* \"#utility.yul\":789:795   */\n      0x00\n        /* \"#utility.yul\":838:840   */\n      0x20\n        /* \"#utility.yul\":826:835   */\n      dup3\n        /* \"#utility.yul\":817:824   */\n      dup5\n        /* \"#utility.yul\":813:836   */\n      sub\n        /* \"#utility.yul\":809:841   */\n      slt\n        /* \"#utility.yul\":806:808   */\n      iszero\n      tag_262\n      jumpi\n        /* \"#utility.yul\":854:855   */\n      0x00\n        /* \"#utility.yul\":851:852   */\n      dup1\n        /* \"#utility.yul\":844:856   */\n      revert\n        /* \"#utility.yul\":806:808   */\n    tag_262:\n        /* \"#utility.yul\":897:898   */\n      0x00\n        /* \"#utility.yul\":922:975   */\n      tag_263\n        /* \"#utility.yul\":967:974   */\n      dup5\n        /* \"#utility.yul\":958:964   */\n      dup3\n        /* \"#utility.yul\":947:956   */\n      dup6\n        /* \"#utility.yul\":943:965   */\n      add\n        /* \"#utility.yul\":922:975   */\n      tag_241\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":912:975   */\n      swap2\n      pop\n        /* \"#utility.yul\":868:985   */\n      pop\n        /* \"#utility.yul\":796:992   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":998:1405   */\n    tag_80:\n        /* \"#utility.yul\":1066:1072   */\n      0x00\n        /* \"#utility.yul\":1074:1080   */\n      dup1\n        /* \"#utility.yul\":1123:1125   */\n      0x40\n        /* \"#utility.yul\":1111:1120   */\n      dup4\n        /* \"#utility.yul\":1102:1109   */\n      dup6\n        /* \"#utility.yul\":1098:1121   */\n      sub\n        /* \"#utility.yul\":1094:1126   */\n      slt\n        /* \"#utility.yul\":1091:1093   */\n      iszero\n      tag_265\n      jumpi\n        /* \"#utility.yul\":1139:1140   */\n      0x00\n        /* \"#utility.yul\":1136:1137   */\n      dup1\n        /* \"#utility.yul\":1129:1141   */\n      revert\n        /* \"#utility.yul\":1091:1093   */\n    tag_265:\n        /* \"#utility.yul\":1182:1183   */\n      0x00\n        /* \"#utility.yul\":1207:1260   */\n      tag_266\n        /* \"#utility.yul\":1252:1259   */\n      dup6\n        /* \"#utility.yul\":1243:1249   */\n      dup3\n        /* \"#utility.yul\":1232:1241   */\n      dup7\n        /* \"#utility.yul\":1228:1250   */\n      add\n        /* \"#utility.yul\":1207:1260   */\n      tag_241\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":1197:1260   */\n      swap3\n      pop\n        /* \"#utility.yul\":1153:1270   */\n      pop\n        /* \"#utility.yul\":1309:1311   */\n      0x20\n        /* \"#utility.yul\":1335:1388   */\n      tag_267\n        /* \"#utility.yul\":1380:1387   */\n      dup6\n        /* \"#utility.yul\":1371:1377   */\n      dup3\n        /* \"#utility.yul\":1360:1369   */\n      dup7\n        /* \"#utility.yul\":1356:1378   */\n      add\n        /* \"#utility.yul\":1335:1388   */\n      tag_241\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":1325:1388   */\n      swap2\n      pop\n        /* \"#utility.yul\":1280:1398   */\n      pop\n        /* \"#utility.yul\":1081:1405   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1411:1689   */\n    tag_123:\n        /* \"#utility.yul\":1478:1484   */\n      0x00\n        /* \"#utility.yul\":1527:1529   */\n      0x20\n        /* \"#utility.yul\":1515:1524   */\n      dup3\n        /* \"#utility.yul\":1506:1513   */\n      dup5\n        /* \"#utility.yul\":1502:1525   */\n      sub\n        /* \"#utility.yul\":1498:1530   */\n      slt\n        /* \"#utility.yul\":1495:1497   */\n      iszero\n      tag_269\n      jumpi\n        /* \"#utility.yul\":1543:1544   */\n      0x00\n        /* \"#utility.yul\":1540:1541   */\n      dup1\n        /* \"#utility.yul\":1533:1545   */\n      revert\n        /* \"#utility.yul\":1495:1497   */\n    tag_269:\n        /* \"#utility.yul\":1586:1587   */\n      0x00\n        /* \"#utility.yul\":1611:1672   */\n      tag_270\n        /* \"#utility.yul\":1664:1671   */\n      dup5\n        /* \"#utility.yul\":1655:1661   */\n      dup3\n        /* \"#utility.yul\":1644:1653   */\n      dup6\n        /* \"#utility.yul\":1640:1662   */\n      add\n        /* \"#utility.yul\":1611:1672   */\n      tag_245\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":1601:1672   */\n      swap2\n      pop\n        /* \"#utility.yul\":1557:1682   */\n      pop\n        /* \"#utility.yul\":1485:1689   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1695:1979   */\n    tag_168:\n        /* \"#utility.yul\":1765:1771   */\n      0x00\n        /* \"#utility.yul\":1814:1816   */\n      0x20\n        /* \"#utility.yul\":1802:1811   */\n      dup3\n        /* \"#utility.yul\":1793:1800   */\n      dup5\n        /* \"#utility.yul\":1789:1812   */\n      sub\n        /* \"#utility.yul\":1785:1817   */\n      slt\n        /* \"#utility.yul\":1782:1784   */\n      iszero\n      tag_272\n      jumpi\n        /* \"#utility.yul\":1830:1831   */\n      0x00\n        /* \"#utility.yul\":1827:1828   */\n      dup1\n        /* \"#utility.yul\":1820:1832   */\n      revert\n        /* \"#utility.yul\":1782:1784   */\n    tag_272:\n        /* \"#utility.yul\":1873:1874   */\n      0x00\n        /* \"#utility.yul\":1898:1962   */\n      tag_273\n        /* \"#utility.yul\":1954:1961   */\n      dup5\n        /* \"#utility.yul\":1945:1951   */\n      dup3\n        /* \"#utility.yul\":1934:1943   */\n      dup6\n        /* \"#utility.yul\":1930:1952   */\n      add\n        /* \"#utility.yul\":1898:1962   */\n      tag_253\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":1888:1962   */\n      swap2\n      pop\n        /* \"#utility.yul\":1844:1972   */\n      pop\n        /* \"#utility.yul\":1772:1979   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1985:2388   */\n    tag_37:\n        /* \"#utility.yul\":2051:2057   */\n      0x00\n        /* \"#utility.yul\":2059:2065   */\n      dup1\n        /* \"#utility.yul\":2108:2110   */\n      0x40\n        /* \"#utility.yul\":2096:2105   */\n      dup4\n        /* \"#utility.yul\":2087:2094   */\n      dup6\n        /* \"#utility.yul\":2083:2106   */\n      sub\n        /* \"#utility.yul\":2079:2111   */\n      slt\n        /* \"#utility.yul\":2076:2078   */\n      iszero\n      tag_275\n      jumpi\n        /* \"#utility.yul\":2124:2125   */\n      0x00\n        /* \"#utility.yul\":2121:2122   */\n      dup1\n        /* \"#utility.yul\":2114:2126   */\n      revert\n        /* \"#utility.yul\":2076:2078   */\n    tag_275:\n        /* \"#utility.yul\":2167:2168   */\n      0x00\n        /* \"#utility.yul\":2192:2244   */\n      tag_276\n        /* \"#utility.yul\":2236:2243   */\n      dup6\n        /* \"#utility.yul\":2227:2233   */\n      dup3\n        /* \"#utility.yul\":2216:2225   */\n      dup7\n        /* \"#utility.yul\":2212:2234   */\n      add\n        /* \"#utility.yul\":2192:2244   */\n      tag_257\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":2182:2244   */\n      swap3\n      pop\n        /* \"#utility.yul\":2138:2254   */\n      pop\n        /* \"#utility.yul\":2293:2295   */\n      0x20\n        /* \"#utility.yul\":2319:2371   */\n      tag_277\n        /* \"#utility.yul\":2363:2370   */\n      dup6\n        /* \"#utility.yul\":2354:2360   */\n      dup3\n        /* \"#utility.yul\":2343:2352   */\n      dup7\n        /* \"#utility.yul\":2339:2361   */\n      add\n        /* \"#utility.yul\":2319:2371   */\n      tag_249\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":2309:2371   */\n      swap2\n      pop\n        /* \"#utility.yul\":2264:2381   */\n      pop\n        /* \"#utility.yul\":2066:2388   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2394:2512   */\n    tag_278:\n        /* \"#utility.yul\":2481:2505   */\n      tag_280\n        /* \"#utility.yul\":2499:2504   */\n      dup2\n        /* \"#utility.yul\":2481:2505   */\n      tag_281\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":2476:2479   */\n      dup3\n        /* \"#utility.yul\":2469:2506   */\n      mstore\n        /* \"#utility.yul\":2459:2512   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2518:2677   */\n    tag_282:\n        /* \"#utility.yul\":2619:2670   */\n      tag_284\n        /* \"#utility.yul\":2664:2669   */\n      dup2\n        /* \"#utility.yul\":2619:2670   */\n      tag_285\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":2614:2617   */\n      dup3\n        /* \"#utility.yul\":2607:2671   */\n      mstore\n        /* \"#utility.yul\":2597:2677   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2683:3049   */\n    tag_286:\n        /* \"#utility.yul\":2825:2828   */\n      0x00\n        /* \"#utility.yul\":2846:2913   */\n      tag_288\n        /* \"#utility.yul\":2910:2912   */\n      0x1d\n        /* \"#utility.yul\":2905:2908   */\n      dup4\n        /* \"#utility.yul\":2846:2913   */\n      tag_289\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":2839:2913   */\n      swap2\n      pop\n        /* \"#utility.yul\":2922:3015   */\n      tag_290\n        /* \"#utility.yul\":3011:3014   */\n      dup3\n        /* \"#utility.yul\":2922:3015   */\n      tag_291\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":3040:3042   */\n      0x20\n        /* \"#utility.yul\":3035:3038   */\n      dup3\n        /* \"#utility.yul\":3031:3043   */\n      add\n        /* \"#utility.yul\":3024:3043   */\n      swap1\n      pop\n        /* \"#utility.yul\":2829:3049   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3055:3421   */\n    tag_292:\n        /* \"#utility.yul\":3197:3200   */\n      0x00\n        /* \"#utility.yul\":3218:3285   */\n      tag_294\n        /* \"#utility.yul\":3282:3284   */\n      0x22\n        /* \"#utility.yul\":3277:3280   */\n      dup4\n        /* \"#utility.yul\":3218:3285   */\n      tag_289\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":3211:3285   */\n      swap2\n      pop\n        /* \"#utility.yul\":3294:3387   */\n      tag_295\n        /* \"#utility.yul\":3383:3386   */\n      dup3\n        /* \"#utility.yul\":3294:3387   */\n      tag_296\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":3412:3414   */\n      0x40\n        /* \"#utility.yul\":3407:3410   */\n      dup3\n        /* \"#utility.yul\":3403:3415   */\n      add\n        /* \"#utility.yul\":3396:3415   */\n      swap1\n      pop\n        /* \"#utility.yul\":3201:3421   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3427:3793   */\n    tag_297:\n        /* \"#utility.yul\":3569:3572   */\n      0x00\n        /* \"#utility.yul\":3590:3657   */\n      tag_299\n        /* \"#utility.yul\":3654:3656   */\n      0x2d\n        /* \"#utility.yul\":3649:3652   */\n      dup4\n        /* \"#utility.yul\":3590:3657   */\n      tag_289\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":3583:3657   */\n      swap2\n      pop\n        /* \"#utility.yul\":3666:3759   */\n      tag_300\n        /* \"#utility.yul\":3755:3758   */\n      dup3\n        /* \"#utility.yul\":3666:3759   */\n      tag_301\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":3784:3786   */\n      0x40\n        /* \"#utility.yul\":3779:3782   */\n      dup3\n        /* \"#utility.yul\":3775:3787   */\n      add\n        /* \"#utility.yul\":3768:3787   */\n      swap1\n      pop\n        /* \"#utility.yul\":3573:3793   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3799:4165   */\n    tag_302:\n        /* \"#utility.yul\":3941:3944   */\n      0x00\n        /* \"#utility.yul\":3962:4029   */\n      tag_304\n        /* \"#utility.yul\":4026:4028   */\n      0x1a\n        /* \"#utility.yul\":4021:4024   */\n      dup4\n        /* \"#utility.yul\":3962:4029   */\n      tag_289\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":3955:4029   */\n      swap2\n      pop\n        /* \"#utility.yul\":4038:4131   */\n      tag_305\n        /* \"#utility.yul\":4127:4130   */\n      dup3\n        /* \"#utility.yul\":4038:4131   */\n      tag_306\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":4156:4158   */\n      0x20\n        /* \"#utility.yul\":4151:4154   */\n      dup3\n        /* \"#utility.yul\":4147:4159   */\n      add\n        /* \"#utility.yul\":4140:4159   */\n      swap1\n      pop\n        /* \"#utility.yul\":3945:4165   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4171:4537   */\n    tag_307:\n        /* \"#utility.yul\":4313:4316   */\n      0x00\n        /* \"#utility.yul\":4334:4401   */\n      tag_309\n        /* \"#utility.yul\":4398:4400   */\n      0x50\n        /* \"#utility.yul\":4393:4396   */\n      dup4\n        /* \"#utility.yul\":4334:4401   */\n      tag_289\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":4327:4401   */\n      swap2\n      pop\n        /* \"#utility.yul\":4410:4503   */\n      tag_310\n        /* \"#utility.yul\":4499:4502   */\n      dup3\n        /* \"#utility.yul\":4410:4503   */\n      tag_311\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":4528:4530   */\n      0x60\n        /* \"#utility.yul\":4523:4526   */\n      dup3\n        /* \"#utility.yul\":4519:4531   */\n      add\n        /* \"#utility.yul\":4512:4531   */\n      swap1\n      pop\n        /* \"#utility.yul\":4317:4537   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4543:4909   */\n    tag_312:\n        /* \"#utility.yul\":4685:4688   */\n      0x00\n        /* \"#utility.yul\":4706:4773   */\n      tag_314\n        /* \"#utility.yul\":4770:4772   */\n      0x20\n        /* \"#utility.yul\":4765:4768   */\n      dup4\n        /* \"#utility.yul\":4706:4773   */\n      tag_289\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":4699:4773   */\n      swap2\n      pop\n        /* \"#utility.yul\":4782:4875   */\n      tag_315\n        /* \"#utility.yul\":4871:4874   */\n      dup3\n        /* \"#utility.yul\":4782:4875   */\n      tag_316\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":4900:4902   */\n      0x20\n        /* \"#utility.yul\":4895:4898   */\n      dup3\n        /* \"#utility.yul\":4891:4903   */\n      add\n        /* \"#utility.yul\":4884:4903   */\n      swap1\n      pop\n        /* \"#utility.yul\":4689:4909   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4915:5281   */\n    tag_317:\n        /* \"#utility.yul\":5057:5060   */\n      0x00\n        /* \"#utility.yul\":5078:5145   */\n      tag_319\n        /* \"#utility.yul\":5142:5144   */\n      0x31\n        /* \"#utility.yul\":5137:5140   */\n      dup4\n        /* \"#utility.yul\":5078:5145   */\n      tag_289\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":5071:5145   */\n      swap2\n      pop\n        /* \"#utility.yul\":5154:5247   */\n      tag_320\n        /* \"#utility.yul\":5243:5246   */\n      dup3\n        /* \"#utility.yul\":5154:5247   */\n      tag_321\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":5272:5274   */\n      0x40\n        /* \"#utility.yul\":5267:5270   */\n      dup3\n        /* \"#utility.yul\":5263:5275   */\n      add\n        /* \"#utility.yul\":5256:5275   */\n      swap1\n      pop\n        /* \"#utility.yul\":5061:5281   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5287:5653   */\n    tag_322:\n        /* \"#utility.yul\":5429:5432   */\n      0x00\n        /* \"#utility.yul\":5450:5517   */\n      tag_324\n        /* \"#utility.yul\":5514:5516   */\n      0x0f\n        /* \"#utility.yul\":5509:5512   */\n      dup4\n        /* \"#utility.yul\":5450:5517   */\n      tag_289\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":5443:5517   */\n      swap2\n      pop\n        /* \"#utility.yul\":5526:5619   */\n      tag_325\n        /* \"#utility.yul\":5615:5618   */\n      dup3\n        /* \"#utility.yul\":5526:5619   */\n      tag_326\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":5644:5646   */\n      0x20\n        /* \"#utility.yul\":5639:5642   */\n      dup3\n        /* \"#utility.yul\":5635:5647   */\n      add\n        /* \"#utility.yul\":5628:5647   */\n      swap1\n      pop\n        /* \"#utility.yul\":5433:5653   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5659:6025   */\n    tag_327:\n        /* \"#utility.yul\":5801:5804   */\n      0x00\n        /* \"#utility.yul\":5822:5889   */\n      tag_329\n        /* \"#utility.yul\":5886:5888   */\n      0x29\n        /* \"#utility.yul\":5881:5884   */\n      dup4\n        /* \"#utility.yul\":5822:5889   */\n      tag_289\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":5815:5889   */\n      swap2\n      pop\n        /* \"#utility.yul\":5898:5991   */\n      tag_330\n        /* \"#utility.yul\":5987:5990   */\n      dup3\n        /* \"#utility.yul\":5898:5991   */\n      tag_331\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":6016:6018   */\n      0x40\n        /* \"#utility.yul\":6011:6014   */\n      dup3\n        /* \"#utility.yul\":6007:6019   */\n      add\n        /* \"#utility.yul\":6000:6019   */\n      swap1\n      pop\n        /* \"#utility.yul\":5805:6025   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6031:6397   */\n    tag_332:\n        /* \"#utility.yul\":6173:6176   */\n      0x00\n        /* \"#utility.yul\":6194:6261   */\n      tag_334\n        /* \"#utility.yul\":6258:6260   */\n      0x33\n        /* \"#utility.yul\":6253:6256   */\n      dup4\n        /* \"#utility.yul\":6194:6261   */\n      tag_289\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":6187:6261   */\n      swap2\n      pop\n        /* \"#utility.yul\":6270:6363   */\n      tag_335\n        /* \"#utility.yul\":6359:6362   */\n      dup3\n        /* \"#utility.yul\":6270:6363   */\n      tag_336\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":6388:6390   */\n      0x40\n        /* \"#utility.yul\":6383:6386   */\n      dup3\n        /* \"#utility.yul\":6379:6391   */\n      add\n        /* \"#utility.yul\":6372:6391   */\n      swap1\n      pop\n        /* \"#utility.yul\":6177:6397   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6403:6769   */\n    tag_337:\n        /* \"#utility.yul\":6545:6548   */\n      0x00\n        /* \"#utility.yul\":6566:6633   */\n      tag_339\n        /* \"#utility.yul\":6630:6632   */\n      0x3c\n        /* \"#utility.yul\":6625:6628   */\n      dup4\n        /* \"#utility.yul\":6566:6633   */\n      tag_289\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":6559:6633   */\n      swap2\n      pop\n        /* \"#utility.yul\":6642:6735   */\n      tag_340\n        /* \"#utility.yul\":6731:6734   */\n      dup3\n        /* \"#utility.yul\":6642:6735   */\n      tag_341\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":6760:6762   */\n      0x40\n        /* \"#utility.yul\":6755:6758   */\n      dup3\n        /* \"#utility.yul\":6751:6763   */\n      add\n        /* \"#utility.yul\":6744:6763   */\n      swap1\n      pop\n        /* \"#utility.yul\":6549:6769   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6775:7141   */\n    tag_342:\n        /* \"#utility.yul\":6917:6920   */\n      0x00\n        /* \"#utility.yul\":6938:7005   */\n      tag_344\n        /* \"#utility.yul\":7002:7004   */\n      0x29\n        /* \"#utility.yul\":6997:7000   */\n      dup4\n        /* \"#utility.yul\":6938:7005   */\n      tag_289\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":6931:7005   */\n      swap2\n      pop\n        /* \"#utility.yul\":7014:7107   */\n      tag_345\n        /* \"#utility.yul\":7103:7106   */\n      dup3\n        /* \"#utility.yul\":7014:7107   */\n      tag_346\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":7132:7134   */\n      0x40\n        /* \"#utility.yul\":7127:7130   */\n      dup3\n        /* \"#utility.yul\":7123:7135   */\n      add\n        /* \"#utility.yul\":7116:7135   */\n      swap1\n      pop\n        /* \"#utility.yul\":6921:7141   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7147:7513   */\n    tag_347:\n        /* \"#utility.yul\":7289:7292   */\n      0x00\n        /* \"#utility.yul\":7310:7377   */\n      tag_349\n        /* \"#utility.yul\":7374:7376   */\n      0x20\n        /* \"#utility.yul\":7369:7372   */\n      dup4\n        /* \"#utility.yul\":7310:7377   */\n      tag_289\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":7303:7377   */\n      swap2\n      pop\n        /* \"#utility.yul\":7386:7479   */\n      tag_350\n        /* \"#utility.yul\":7475:7478   */\n      dup3\n        /* \"#utility.yul\":7386:7479   */\n      tag_351\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":7504:7506   */\n      0x20\n        /* \"#utility.yul\":7499:7502   */\n      dup3\n        /* \"#utility.yul\":7495:7507   */\n      add\n        /* \"#utility.yul\":7488:7507   */\n      swap1\n      pop\n        /* \"#utility.yul\":7293:7513   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7519:7885   */\n    tag_352:\n        /* \"#utility.yul\":7661:7664   */\n      0x00\n        /* \"#utility.yul\":7682:7749   */\n      tag_354\n        /* \"#utility.yul\":7746:7748   */\n      0x2b\n        /* \"#utility.yul\":7741:7744   */\n      dup4\n        /* \"#utility.yul\":7682:7749   */\n      tag_289\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":7675:7749   */\n      swap2\n      pop\n        /* \"#utility.yul\":7758:7851   */\n      tag_355\n        /* \"#utility.yul\":7847:7850   */\n      dup3\n        /* \"#utility.yul\":7758:7851   */\n      tag_356\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":7876:7878   */\n      0x40\n        /* \"#utility.yul\":7871:7874   */\n      dup3\n        /* \"#utility.yul\":7867:7879   */\n      add\n        /* \"#utility.yul\":7860:7879   */\n      swap1\n      pop\n        /* \"#utility.yul\":7665:7885   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7891:8257   */\n    tag_357:\n        /* \"#utility.yul\":8033:8036   */\n      0x00\n        /* \"#utility.yul\":8054:8121   */\n      tag_359\n        /* \"#utility.yul\":8118:8120   */\n      0x11\n        /* \"#utility.yul\":8113:8116   */\n      dup4\n        /* \"#utility.yul\":8054:8121   */\n      tag_289\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":8047:8121   */\n      swap2\n      pop\n        /* \"#utility.yul\":8130:8223   */\n      tag_360\n        /* \"#utility.yul\":8219:8222   */\n      dup3\n        /* \"#utility.yul\":8130:8223   */\n      tag_361\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":8248:8250   */\n      0x20\n        /* \"#utility.yul\":8243:8246   */\n      dup3\n        /* \"#utility.yul\":8239:8251   */\n      add\n        /* \"#utility.yul\":8232:8251   */\n      swap1\n      pop\n        /* \"#utility.yul\":8037:8257   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8263:8629   */\n    tag_362:\n        /* \"#utility.yul\":8405:8408   */\n      0x00\n        /* \"#utility.yul\":8426:8493   */\n      tag_364\n        /* \"#utility.yul\":8490:8492   */\n      0x21\n        /* \"#utility.yul\":8485:8488   */\n      dup4\n        /* \"#utility.yul\":8426:8493   */\n      tag_289\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":8419:8493   */\n      swap2\n      pop\n        /* \"#utility.yul\":8502:8595   */\n      tag_365\n        /* \"#utility.yul\":8591:8594   */\n      dup3\n        /* \"#utility.yul\":8502:8595   */\n      tag_366\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":8620:8622   */\n      0x40\n        /* \"#utility.yul\":8615:8618   */\n      dup3\n        /* \"#utility.yul\":8611:8623   */\n      add\n        /* \"#utility.yul\":8604:8623   */\n      swap1\n      pop\n        /* \"#utility.yul\":8409:8629   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8635:9001   */\n    tag_367:\n        /* \"#utility.yul\":8777:8780   */\n      0x00\n        /* \"#utility.yul\":8798:8865   */\n      tag_369\n        /* \"#utility.yul\":8862:8864   */\n      0x1b\n        /* \"#utility.yul\":8857:8860   */\n      dup4\n        /* \"#utility.yul\":8798:8865   */\n      tag_289\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":8791:8865   */\n      swap2\n      pop\n        /* \"#utility.yul\":8874:8967   */\n      tag_370\n        /* \"#utility.yul\":8963:8966   */\n      dup3\n        /* \"#utility.yul\":8874:8967   */\n      tag_371\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":8992:8994   */\n      0x20\n        /* \"#utility.yul\":8987:8990   */\n      dup3\n        /* \"#utility.yul\":8983:8995   */\n      add\n        /* \"#utility.yul\":8976:8995   */\n      swap1\n      pop\n        /* \"#utility.yul\":8781:9001   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9007:9373   */\n    tag_372:\n        /* \"#utility.yul\":9149:9152   */\n      0x00\n        /* \"#utility.yul\":9170:9237   */\n      tag_374\n        /* \"#utility.yul\":9234:9236   */\n      0x33\n        /* \"#utility.yul\":9229:9232   */\n      dup4\n        /* \"#utility.yul\":9170:9237   */\n      tag_289\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":9163:9237   */\n      swap2\n      pop\n        /* \"#utility.yul\":9246:9339   */\n      tag_375\n        /* \"#utility.yul\":9335:9338   */\n      dup3\n        /* \"#utility.yul\":9246:9339   */\n      tag_376\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":9364:9366   */\n      0x40\n        /* \"#utility.yul\":9359:9362   */\n      dup3\n        /* \"#utility.yul\":9355:9367   */\n      add\n        /* \"#utility.yul\":9348:9367   */\n      swap1\n      pop\n        /* \"#utility.yul\":9153:9373   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9379:9745   */\n    tag_377:\n        /* \"#utility.yul\":9521:9524   */\n      0x00\n        /* \"#utility.yul\":9542:9609   */\n      tag_379\n        /* \"#utility.yul\":9606:9608   */\n      0x2b\n        /* \"#utility.yul\":9601:9604   */\n      dup4\n        /* \"#utility.yul\":9542:9609   */\n      tag_289\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":9535:9609   */\n      swap2\n      pop\n        /* \"#utility.yul\":9618:9711   */\n      tag_380\n        /* \"#utility.yul\":9707:9710   */\n      dup3\n        /* \"#utility.yul\":9618:9711   */\n      tag_381\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":9736:9738   */\n      0x40\n        /* \"#utility.yul\":9731:9734   */\n      dup3\n        /* \"#utility.yul\":9727:9739   */\n      add\n        /* \"#utility.yul\":9720:9739   */\n      swap1\n      pop\n        /* \"#utility.yul\":9525:9745   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9751:10117   */\n    tag_382:\n        /* \"#utility.yul\":9893:9896   */\n      0x00\n        /* \"#utility.yul\":9914:9981   */\n      tag_384\n        /* \"#utility.yul\":9978:9980   */\n      0x1f\n        /* \"#utility.yul\":9973:9976   */\n      dup4\n        /* \"#utility.yul\":9914:9981   */\n      tag_289\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":9907:9981   */\n      swap2\n      pop\n        /* \"#utility.yul\":9990:10083   */\n      tag_385\n        /* \"#utility.yul\":10079:10082   */\n      dup3\n        /* \"#utility.yul\":9990:10083   */\n      tag_386\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":10108:10110   */\n      0x20\n        /* \"#utility.yul\":10103:10106   */\n      dup3\n        /* \"#utility.yul\":10099:10111   */\n      add\n        /* \"#utility.yul\":10092:10111   */\n      swap1\n      pop\n        /* \"#utility.yul\":9897:10117   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10123:10489   */\n    tag_387:\n        /* \"#utility.yul\":10265:10268   */\n      0x00\n        /* \"#utility.yul\":10286:10353   */\n      tag_389\n        /* \"#utility.yul\":10350:10352   */\n      0x19\n        /* \"#utility.yul\":10345:10348   */\n      dup4\n        /* \"#utility.yul\":10286:10353   */\n      tag_289\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":10279:10353   */\n      swap2\n      pop\n        /* \"#utility.yul\":10362:10455   */\n      tag_390\n        /* \"#utility.yul\":10451:10454   */\n      dup3\n        /* \"#utility.yul\":10362:10455   */\n      tag_391\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":10480:10482   */\n      0x20\n        /* \"#utility.yul\":10475:10478   */\n      dup3\n        /* \"#utility.yul\":10471:10483   */\n      add\n        /* \"#utility.yul\":10464:10483   */\n      swap1\n      pop\n        /* \"#utility.yul\":10269:10489   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10495:10613   */\n    tag_392:\n        /* \"#utility.yul\":10582:10606   */\n      tag_394\n        /* \"#utility.yul\":10600:10605   */\n      dup2\n        /* \"#utility.yul\":10582:10606   */\n      tag_395\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":10577:10580   */\n      dup3\n        /* \"#utility.yul\":10570:10607   */\n      mstore\n        /* \"#utility.yul\":10560:10613   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10619:10750   */\n    tag_396:\n        /* \"#utility.yul\":10706:10743   */\n      tag_398\n        /* \"#utility.yul\":10737:10742   */\n      dup2\n        /* \"#utility.yul\":10706:10743   */\n      tag_399\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":10701:10704   */\n      dup3\n        /* \"#utility.yul\":10694:10744   */\n      mstore\n        /* \"#utility.yul\":10684:10750   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10756:10871   */\n    tag_400:\n        /* \"#utility.yul\":10841:10864   */\n      tag_402\n        /* \"#utility.yul\":10858:10863   */\n      dup2\n        /* \"#utility.yul\":10841:10864   */\n      tag_403\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":10836:10839   */\n      dup3\n        /* \"#utility.yul\":10829:10865   */\n      mstore\n        /* \"#utility.yul\":10819:10871   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10877:11006   */\n    tag_404:\n        /* \"#utility.yul\":10963:10999   */\n      tag_406\n        /* \"#utility.yul\":10993:10998   */\n      dup2\n        /* \"#utility.yul\":10963:10999   */\n      tag_407\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":10958:10961   */\n      dup3\n        /* \"#utility.yul\":10951:11000   */\n      mstore\n        /* \"#utility.yul\":10941:11006   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11012:11130   */\n    tag_408:\n        /* \"#utility.yul\":11099:11123   */\n      tag_410\n        /* \"#utility.yul\":11117:11122   */\n      dup2\n        /* \"#utility.yul\":11099:11123   */\n      tag_411\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":11094:11097   */\n      dup3\n        /* \"#utility.yul\":11087:11124   */\n      mstore\n        /* \"#utility.yul\":11077:11130   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11136:11251   */\n    tag_412:\n        /* \"#utility.yul\":11221:11244   */\n      tag_414\n        /* \"#utility.yul\":11238:11243   */\n      dup2\n        /* \"#utility.yul\":11221:11244   */\n      tag_415\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":11216:11219   */\n      dup3\n        /* \"#utility.yul\":11209:11245   */\n      mstore\n        /* \"#utility.yul\":11199:11251   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11257:11386   */\n    tag_416:\n        /* \"#utility.yul\":11343:11379   */\n      tag_418\n        /* \"#utility.yul\":11373:11378   */\n      dup2\n        /* \"#utility.yul\":11343:11379   */\n      tag_419\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":11338:11341   */\n      dup3\n        /* \"#utility.yul\":11331:11380   */\n      mstore\n        /* \"#utility.yul\":11321:11386   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11392:11507   */\n    tag_420:\n        /* \"#utility.yul\":11477:11500   */\n      tag_422\n        /* \"#utility.yul\":11494:11499   */\n      dup2\n        /* \"#utility.yul\":11477:11500   */\n      tag_423\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":11472:11475   */\n      dup3\n        /* \"#utility.yul\":11465:11501   */\n      mstore\n        /* \"#utility.yul\":11455:11507   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11513:11735   */\n    tag_60:\n        /* \"#utility.yul\":11606:11610   */\n      0x00\n        /* \"#utility.yul\":11644:11646   */\n      0x20\n        /* \"#utility.yul\":11633:11642   */\n      dup3\n        /* \"#utility.yul\":11629:11647   */\n      add\n        /* \"#utility.yul\":11621:11647   */\n      swap1\n      pop\n        /* \"#utility.yul\":11657:11728   */\n      tag_425\n        /* \"#utility.yul\":11725:11726   */\n      0x00\n        /* \"#utility.yul\":11714:11723   */\n      dup4\n        /* \"#utility.yul\":11710:11727   */\n      add\n        /* \"#utility.yul\":11701:11707   */\n      dup5\n        /* \"#utility.yul\":11657:11728   */\n      tag_278\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":11611:11735   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11741:12073   */\n    tag_173:\n        /* \"#utility.yul\":11862:11866   */\n      0x00\n        /* \"#utility.yul\":11900:11902   */\n      0x40\n        /* \"#utility.yul\":11889:11898   */\n      dup3\n        /* \"#utility.yul\":11885:11903   */\n      add\n        /* \"#utility.yul\":11877:11903   */\n      swap1\n      pop\n        /* \"#utility.yul\":11913:11984   */\n      tag_427\n        /* \"#utility.yul\":11981:11982   */\n      0x00\n        /* \"#utility.yul\":11970:11979   */\n      dup4\n        /* \"#utility.yul\":11966:11983   */\n      add\n        /* \"#utility.yul\":11957:11963   */\n      dup6\n        /* \"#utility.yul\":11913:11984   */\n      tag_278\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":11994:12066   */\n      tag_428\n        /* \"#utility.yul\":12062:12064   */\n      0x20\n        /* \"#utility.yul\":12051:12060   */\n      dup4\n        /* \"#utility.yul\":12047:12065   */\n      add\n        /* \"#utility.yul\":12038:12044   */\n      dup5\n        /* \"#utility.yul\":11994:12066   */\n      tag_278\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":11867:12073   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12079:12521   */\n    tag_182:\n        /* \"#utility.yul\":12228:12232   */\n      0x00\n        /* \"#utility.yul\":12266:12268   */\n      0x60\n        /* \"#utility.yul\":12255:12264   */\n      dup3\n        /* \"#utility.yul\":12251:12269   */\n      add\n        /* \"#utility.yul\":12243:12269   */\n      swap1\n      pop\n        /* \"#utility.yul\":12279:12350   */\n      tag_430\n        /* \"#utility.yul\":12347:12348   */\n      0x00\n        /* \"#utility.yul\":12336:12345   */\n      dup4\n        /* \"#utility.yul\":12332:12349   */\n      add\n        /* \"#utility.yul\":12323:12329   */\n      dup7\n        /* \"#utility.yul\":12279:12350   */\n      tag_278\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":12360:12432   */\n      tag_431\n        /* \"#utility.yul\":12428:12430   */\n      0x20\n        /* \"#utility.yul\":12417:12426   */\n      dup4\n        /* \"#utility.yul\":12413:12431   */\n      add\n        /* \"#utility.yul\":12404:12410   */\n      dup6\n        /* \"#utility.yul\":12360:12432   */\n      tag_278\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":12442:12514   */\n      tag_432\n        /* \"#utility.yul\":12510:12512   */\n      0x40\n        /* \"#utility.yul\":12499:12508   */\n      dup4\n        /* \"#utility.yul\":12495:12513   */\n      add\n        /* \"#utility.yul\":12486:12492   */\n      dup5\n        /* \"#utility.yul\":12442:12514   */\n      tag_408\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":12233:12521   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12527:12967   */\n    tag_118:\n        /* \"#utility.yul\":12675:12679   */\n      0x00\n        /* \"#utility.yul\":12713:12715   */\n      0x60\n        /* \"#utility.yul\":12702:12711   */\n      dup3\n        /* \"#utility.yul\":12698:12716   */\n      add\n        /* \"#utility.yul\":12690:12716   */\n      swap1\n      pop\n        /* \"#utility.yul\":12726:12797   */\n      tag_434\n        /* \"#utility.yul\":12794:12795   */\n      0x00\n        /* \"#utility.yul\":12783:12792   */\n      dup4\n        /* \"#utility.yul\":12779:12796   */\n      add\n        /* \"#utility.yul\":12770:12776   */\n      dup7\n        /* \"#utility.yul\":12726:12797   */\n      tag_278\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":12807:12879   */\n      tag_435\n        /* \"#utility.yul\":12875:12877   */\n      0x20\n        /* \"#utility.yul\":12864:12873   */\n      dup4\n        /* \"#utility.yul\":12860:12878   */\n      add\n        /* \"#utility.yul\":12851:12857   */\n      dup6\n        /* \"#utility.yul\":12807:12879   */\n      tag_278\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":12889:12960   */\n      tag_436\n        /* \"#utility.yul\":12956:12958   */\n      0x40\n        /* \"#utility.yul\":12945:12954   */\n      dup4\n        /* \"#utility.yul\":12941:12959   */\n      add\n        /* \"#utility.yul\":12932:12938   */\n      dup5\n        /* \"#utility.yul\":12889:12960   */\n      tag_416\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":12680:12967   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12973:13305   */\n    tag_143:\n        /* \"#utility.yul\":13094:13098   */\n      0x00\n        /* \"#utility.yul\":13132:13134   */\n      0x40\n        /* \"#utility.yul\":13121:13130   */\n      dup3\n        /* \"#utility.yul\":13117:13135   */\n      add\n        /* \"#utility.yul\":13109:13135   */\n      swap1\n      pop\n        /* \"#utility.yul\":13145:13216   */\n      tag_438\n        /* \"#utility.yul\":13213:13214   */\n      0x00\n        /* \"#utility.yul\":13202:13211   */\n      dup4\n        /* \"#utility.yul\":13198:13215   */\n      add\n        /* \"#utility.yul\":13189:13195   */\n      dup6\n        /* \"#utility.yul\":13145:13216   */\n      tag_278\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":13226:13298   */\n      tag_439\n        /* \"#utility.yul\":13294:13296   */\n      0x20\n        /* \"#utility.yul\":13283:13292   */\n      dup4\n        /* \"#utility.yul\":13279:13297   */\n      add\n        /* \"#utility.yul\":13270:13276   */\n      dup5\n        /* \"#utility.yul\":13226:13298   */\n      tag_408\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":13099:13305   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13311:13860   */\n    tag_128:\n        /* \"#utility.yul\":13486:13490   */\n      0x00\n        /* \"#utility.yul\":13524:13527   */\n      0x80\n        /* \"#utility.yul\":13513:13522   */\n      dup3\n        /* \"#utility.yul\":13509:13528   */\n      add\n        /* \"#utility.yul\":13501:13528   */\n      swap1\n      pop\n        /* \"#utility.yul\":13538:13609   */\n      tag_441\n        /* \"#utility.yul\":13606:13607   */\n      0x00\n        /* \"#utility.yul\":13595:13604   */\n      dup4\n        /* \"#utility.yul\":13591:13608   */\n      add\n        /* \"#utility.yul\":13582:13588   */\n      dup8\n        /* \"#utility.yul\":13538:13609   */\n      tag_278\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":13619:13690   */\n      tag_442\n        /* \"#utility.yul\":13686:13688   */\n      0x20\n        /* \"#utility.yul\":13675:13684   */\n      dup4\n        /* \"#utility.yul\":13671:13689   */\n      add\n        /* \"#utility.yul\":13662:13668   */\n      dup7\n        /* \"#utility.yul\":13619:13690   */\n      tag_416\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":13700:13771   */\n      tag_443\n        /* \"#utility.yul\":13767:13769   */\n      0x40\n        /* \"#utility.yul\":13756:13765   */\n      dup4\n        /* \"#utility.yul\":13752:13770   */\n      add\n        /* \"#utility.yul\":13743:13749   */\n      dup6\n        /* \"#utility.yul\":13700:13771   */\n      tag_404\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":13781:13853   */\n      tag_444\n        /* \"#utility.yul\":13849:13851   */\n      0x60\n        /* \"#utility.yul\":13838:13847   */\n      dup4\n        /* \"#utility.yul\":13834:13852   */\n      add\n        /* \"#utility.yul\":13825:13831   */\n      dup5\n        /* \"#utility.yul\":13781:13853   */\n      tag_396\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":13491:13860   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13866:14415   */\n    tag_230:\n        /* \"#utility.yul\":14041:14045   */\n      0x00\n        /* \"#utility.yul\":14079:14082   */\n      0x80\n        /* \"#utility.yul\":14068:14077   */\n      dup3\n        /* \"#utility.yul\":14064:14083   */\n      add\n        /* \"#utility.yul\":14056:14083   */\n      swap1\n      pop\n        /* \"#utility.yul\":14093:14164   */\n      tag_446\n        /* \"#utility.yul\":14161:14162   */\n      0x00\n        /* \"#utility.yul\":14150:14159   */\n      dup4\n        /* \"#utility.yul\":14146:14163   */\n      add\n        /* \"#utility.yul\":14137:14143   */\n      dup8\n        /* \"#utility.yul\":14093:14164   */\n      tag_278\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":14174:14245   */\n      tag_447\n        /* \"#utility.yul\":14241:14243   */\n      0x20\n        /* \"#utility.yul\":14230:14239   */\n      dup4\n        /* \"#utility.yul\":14226:14244   */\n      add\n        /* \"#utility.yul\":14217:14223   */\n      dup7\n        /* \"#utility.yul\":14174:14245   */\n      tag_416\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":14255:14326   */\n      tag_448\n        /* \"#utility.yul\":14322:14324   */\n      0x40\n        /* \"#utility.yul\":14311:14320   */\n      dup4\n        /* \"#utility.yul\":14307:14325   */\n      add\n        /* \"#utility.yul\":14298:14304   */\n      dup6\n        /* \"#utility.yul\":14255:14326   */\n      tag_404\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":14336:14408   */\n      tag_449\n        /* \"#utility.yul\":14404:14406   */\n      0x60\n        /* \"#utility.yul\":14393:14402   */\n      dup4\n        /* \"#utility.yul\":14389:14407   */\n      add\n        /* \"#utility.yul\":14380:14386   */\n      dup5\n        /* \"#utility.yul\":14336:14408   */\n      tag_408\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":14046:14415   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14421:14671   */\n    tag_54:\n        /* \"#utility.yul\":14528:14532   */\n      0x00\n        /* \"#utility.yul\":14566:14568   */\n      0x20\n        /* \"#utility.yul\":14555:14564   */\n      dup3\n        /* \"#utility.yul\":14551:14569   */\n      add\n        /* \"#utility.yul\":14543:14569   */\n      swap1\n      pop\n        /* \"#utility.yul\":14579:14664   */\n      tag_451\n        /* \"#utility.yul\":14661:14662   */\n      0x00\n        /* \"#utility.yul\":14650:14659   */\n      dup4\n        /* \"#utility.yul\":14646:14663   */\n      add\n        /* \"#utility.yul\":14637:14643   */\n      dup5\n        /* \"#utility.yul\":14579:14664   */\n      tag_282\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":14533:14671   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14677:15096   */\n    tag_150:\n        /* \"#utility.yul\":14843:14847   */\n      0x00\n        /* \"#utility.yul\":14881:14883   */\n      0x20\n        /* \"#utility.yul\":14870:14879   */\n      dup3\n        /* \"#utility.yul\":14866:14884   */\n      add\n        /* \"#utility.yul\":14858:14884   */\n      swap1\n      pop\n        /* \"#utility.yul\":14930:14939   */\n      dup2\n        /* \"#utility.yul\":14924:14928   */\n      dup2\n        /* \"#utility.yul\":14920:14940   */\n      sub\n        /* \"#utility.yul\":14916:14917   */\n      0x00\n        /* \"#utility.yul\":14905:14914   */\n      dup4\n        /* \"#utility.yul\":14901:14918   */\n      add\n        /* \"#utility.yul\":14894:14941   */\n      mstore\n        /* \"#utility.yul\":14958:15089   */\n      tag_453\n        /* \"#utility.yul\":15084:15088   */\n      dup2\n        /* \"#utility.yul\":14958:15089   */\n      tag_286\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":14950:15089   */\n      swap1\n      pop\n        /* \"#utility.yul\":14848:15096   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15102:15521   */\n    tag_140:\n        /* \"#utility.yul\":15268:15272   */\n      0x00\n        /* \"#utility.yul\":15306:15308   */\n      0x20\n        /* \"#utility.yul\":15295:15304   */\n      dup3\n        /* \"#utility.yul\":15291:15309   */\n      add\n        /* \"#utility.yul\":15283:15309   */\n      swap1\n      pop\n        /* \"#utility.yul\":15355:15364   */\n      dup2\n        /* \"#utility.yul\":15349:15353   */\n      dup2\n        /* \"#utility.yul\":15345:15365   */\n      sub\n        /* \"#utility.yul\":15341:15342   */\n      0x00\n        /* \"#utility.yul\":15330:15339   */\n      dup4\n        /* \"#utility.yul\":15326:15343   */\n      add\n        /* \"#utility.yul\":15319:15366   */\n      mstore\n        /* \"#utility.yul\":15383:15514   */\n      tag_455\n        /* \"#utility.yul\":15509:15513   */\n      dup2\n        /* \"#utility.yul\":15383:15514   */\n      tag_292\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":15375:15514   */\n      swap1\n      pop\n        /* \"#utility.yul\":15273:15521   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15527:15946   */\n    tag_216:\n        /* \"#utility.yul\":15693:15697   */\n      0x00\n        /* \"#utility.yul\":15731:15733   */\n      0x20\n        /* \"#utility.yul\":15720:15729   */\n      dup3\n        /* \"#utility.yul\":15716:15734   */\n      add\n        /* \"#utility.yul\":15708:15734   */\n      swap1\n      pop\n        /* \"#utility.yul\":15780:15789   */\n      dup2\n        /* \"#utility.yul\":15774:15778   */\n      dup2\n        /* \"#utility.yul\":15770:15790   */\n      sub\n        /* \"#utility.yul\":15766:15767   */\n      0x00\n        /* \"#utility.yul\":15755:15764   */\n      dup4\n        /* \"#utility.yul\":15751:15768   */\n      add\n        /* \"#utility.yul\":15744:15791   */\n      mstore\n        /* \"#utility.yul\":15808:15939   */\n      tag_457\n        /* \"#utility.yul\":15934:15938   */\n      dup2\n        /* \"#utility.yul\":15808:15939   */\n      tag_297\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":15800:15939   */\n      swap1\n      pop\n        /* \"#utility.yul\":15698:15946   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15952:16371   */\n    tag_209:\n        /* \"#utility.yul\":16118:16122   */\n      0x00\n        /* \"#utility.yul\":16156:16158   */\n      0x20\n        /* \"#utility.yul\":16145:16154   */\n      dup3\n        /* \"#utility.yul\":16141:16159   */\n      add\n        /* \"#utility.yul\":16133:16159   */\n      swap1\n      pop\n        /* \"#utility.yul\":16205:16214   */\n      dup2\n        /* \"#utility.yul\":16199:16203   */\n      dup2\n        /* \"#utility.yul\":16195:16215   */\n      sub\n        /* \"#utility.yul\":16191:16192   */\n      0x00\n        /* \"#utility.yul\":16180:16189   */\n      dup4\n        /* \"#utility.yul\":16176:16193   */\n      add\n        /* \"#utility.yul\":16169:16216   */\n      mstore\n        /* \"#utility.yul\":16233:16364   */\n      tag_459\n        /* \"#utility.yul\":16359:16363   */\n      dup2\n        /* \"#utility.yul\":16233:16364   */\n      tag_302\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":16225:16364   */\n      swap1\n      pop\n        /* \"#utility.yul\":16123:16371   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16377:16796   */\n    tag_90:\n        /* \"#utility.yul\":16543:16547   */\n      0x00\n        /* \"#utility.yul\":16581:16583   */\n      0x20\n        /* \"#utility.yul\":16570:16579   */\n      dup3\n        /* \"#utility.yul\":16566:16584   */\n      add\n        /* \"#utility.yul\":16558:16584   */\n      swap1\n      pop\n        /* \"#utility.yul\":16630:16639   */\n      dup2\n        /* \"#utility.yul\":16624:16628   */\n      dup2\n        /* \"#utility.yul\":16620:16640   */\n      sub\n        /* \"#utility.yul\":16616:16617   */\n      0x00\n        /* \"#utility.yul\":16605:16614   */\n      dup4\n        /* \"#utility.yul\":16601:16618   */\n      add\n        /* \"#utility.yul\":16594:16641   */\n      mstore\n        /* \"#utility.yul\":16658:16789   */\n      tag_461\n        /* \"#utility.yul\":16784:16788   */\n      dup2\n        /* \"#utility.yul\":16658:16789   */\n      tag_307\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":16650:16789   */\n      swap1\n      pop\n        /* \"#utility.yul\":16548:16796   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16802:17221   */\n    tag_196:\n        /* \"#utility.yul\":16968:16972   */\n      0x00\n        /* \"#utility.yul\":17006:17008   */\n      0x20\n        /* \"#utility.yul\":16995:17004   */\n      dup3\n        /* \"#utility.yul\":16991:17009   */\n      add\n        /* \"#utility.yul\":16983:17009   */\n      swap1\n      pop\n        /* \"#utility.yul\":17055:17064   */\n      dup2\n        /* \"#utility.yul\":17049:17053   */\n      dup2\n        /* \"#utility.yul\":17045:17065   */\n      sub\n        /* \"#utility.yul\":17041:17042   */\n      0x00\n        /* \"#utility.yul\":17030:17039   */\n      dup4\n        /* \"#utility.yul\":17026:17043   */\n      add\n        /* \"#utility.yul\":17019:17066   */\n      mstore\n        /* \"#utility.yul\":17083:17214   */\n      tag_463\n        /* \"#utility.yul\":17209:17213   */\n      dup2\n        /* \"#utility.yul\":17083:17214   */\n      tag_312\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":17075:17214   */\n      swap1\n      pop\n        /* \"#utility.yul\":16973:17221   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17227:17646   */\n    tag_109:\n        /* \"#utility.yul\":17393:17397   */\n      0x00\n        /* \"#utility.yul\":17431:17433   */\n      0x20\n        /* \"#utility.yul\":17420:17429   */\n      dup3\n        /* \"#utility.yul\":17416:17434   */\n      add\n        /* \"#utility.yul\":17408:17434   */\n      swap1\n      pop\n        /* \"#utility.yul\":17480:17489   */\n      dup2\n        /* \"#utility.yul\":17474:17478   */\n      dup2\n        /* \"#utility.yul\":17470:17490   */\n      sub\n        /* \"#utility.yul\":17466:17467   */\n      0x00\n        /* \"#utility.yul\":17455:17464   */\n      dup4\n        /* \"#utility.yul\":17451:17468   */\n      add\n        /* \"#utility.yul\":17444:17491   */\n      mstore\n        /* \"#utility.yul\":17508:17639   */\n      tag_465\n        /* \"#utility.yul\":17634:17638   */\n      dup2\n        /* \"#utility.yul\":17508:17639   */\n      tag_317\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":17500:17639   */\n      swap1\n      pop\n        /* \"#utility.yul\":17398:17646   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17652:18071   */\n    tag_112:\n        /* \"#utility.yul\":17818:17822   */\n      0x00\n        /* \"#utility.yul\":17856:17858   */\n      0x20\n        /* \"#utility.yul\":17845:17854   */\n      dup3\n        /* \"#utility.yul\":17841:17859   */\n      add\n        /* \"#utility.yul\":17833:17859   */\n      swap1\n      pop\n        /* \"#utility.yul\":17905:17914   */\n      dup2\n        /* \"#utility.yul\":17899:17903   */\n      dup2\n        /* \"#utility.yul\":17895:17915   */\n      sub\n        /* \"#utility.yul\":17891:17892   */\n      0x00\n        /* \"#utility.yul\":17880:17889   */\n      dup4\n        /* \"#utility.yul\":17876:17893   */\n      add\n        /* \"#utility.yul\":17869:17916   */\n      mstore\n        /* \"#utility.yul\":17933:18064   */\n      tag_467\n        /* \"#utility.yul\":18059:18063   */\n      dup2\n        /* \"#utility.yul\":17933:18064   */\n      tag_322\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":17925:18064   */\n      swap1\n      pop\n        /* \"#utility.yul\":17823:18071   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18077:18496   */\n    tag_213:\n        /* \"#utility.yul\":18243:18247   */\n      0x00\n        /* \"#utility.yul\":18281:18283   */\n      0x20\n        /* \"#utility.yul\":18270:18279   */\n      dup3\n        /* \"#utility.yul\":18266:18284   */\n      add\n        /* \"#utility.yul\":18258:18284   */\n      swap1\n      pop\n        /* \"#utility.yul\":18330:18339   */\n      dup2\n        /* \"#utility.yul\":18324:18328   */\n      dup2\n        /* \"#utility.yul\":18320:18340   */\n      sub\n        /* \"#utility.yul\":18316:18317   */\n      0x00\n        /* \"#utility.yul\":18305:18314   */\n      dup4\n        /* \"#utility.yul\":18301:18318   */\n      add\n        /* \"#utility.yul\":18294:18341   */\n      mstore\n        /* \"#utility.yul\":18358:18489   */\n      tag_469\n        /* \"#utility.yul\":18484:18488   */\n      dup2\n        /* \"#utility.yul\":18358:18489   */\n      tag_327\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":18350:18489   */\n      swap1\n      pop\n        /* \"#utility.yul\":18248:18496   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18502:18921   */\n    tag_134:\n        /* \"#utility.yul\":18668:18672   */\n      0x00\n        /* \"#utility.yul\":18706:18708   */\n      0x20\n        /* \"#utility.yul\":18695:18704   */\n      dup3\n        /* \"#utility.yul\":18691:18709   */\n      add\n        /* \"#utility.yul\":18683:18709   */\n      swap1\n      pop\n        /* \"#utility.yul\":18755:18764   */\n      dup2\n        /* \"#utility.yul\":18749:18753   */\n      dup2\n        /* \"#utility.yul\":18745:18765   */\n      sub\n        /* \"#utility.yul\":18741:18742   */\n      0x00\n        /* \"#utility.yul\":18730:18739   */\n      dup4\n        /* \"#utility.yul\":18726:18743   */\n      add\n        /* \"#utility.yul\":18719:18766   */\n      mstore\n        /* \"#utility.yul\":18783:18914   */\n      tag_471\n        /* \"#utility.yul\":18909:18913   */\n      dup2\n        /* \"#utility.yul\":18783:18914   */\n      tag_332\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":18775:18914   */\n      swap1\n      pop\n        /* \"#utility.yul\":18673:18921   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18927:19346   */\n    tag_199:\n        /* \"#utility.yul\":19093:19097   */\n      0x00\n        /* \"#utility.yul\":19131:19133   */\n      0x20\n        /* \"#utility.yul\":19120:19129   */\n      dup3\n        /* \"#utility.yul\":19116:19134   */\n      add\n        /* \"#utility.yul\":19108:19134   */\n      swap1\n      pop\n        /* \"#utility.yul\":19180:19189   */\n      dup2\n        /* \"#utility.yul\":19174:19178   */\n      dup2\n        /* \"#utility.yul\":19170:19190   */\n      sub\n        /* \"#utility.yul\":19166:19167   */\n      0x00\n        /* \"#utility.yul\":19155:19164   */\n      dup4\n        /* \"#utility.yul\":19151:19168   */\n      add\n        /* \"#utility.yul\":19144:19191   */\n      mstore\n        /* \"#utility.yul\":19208:19339   */\n      tag_473\n        /* \"#utility.yul\":19334:19338   */\n      dup2\n        /* \"#utility.yul\":19208:19339   */\n      tag_337\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":19200:19339   */\n      swap1\n      pop\n        /* \"#utility.yul\":19098:19346   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19352:19771   */\n    tag_180:\n        /* \"#utility.yul\":19518:19522   */\n      0x00\n        /* \"#utility.yul\":19556:19558   */\n      0x20\n        /* \"#utility.yul\":19545:19554   */\n      dup3\n        /* \"#utility.yul\":19541:19559   */\n      add\n        /* \"#utility.yul\":19533:19559   */\n      swap1\n      pop\n        /* \"#utility.yul\":19605:19614   */\n      dup2\n        /* \"#utility.yul\":19599:19603   */\n      dup2\n        /* \"#utility.yul\":19595:19615   */\n      sub\n        /* \"#utility.yul\":19591:19592   */\n      0x00\n        /* \"#utility.yul\":19580:19589   */\n      dup4\n        /* \"#utility.yul\":19576:19593   */\n      add\n        /* \"#utility.yul\":19569:19616   */\n      mstore\n        /* \"#utility.yul\":19633:19764   */\n      tag_475\n        /* \"#utility.yul\":19759:19763   */\n      dup2\n        /* \"#utility.yul\":19633:19764   */\n      tag_342\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":19625:19764   */\n      swap1\n      pop\n        /* \"#utility.yul\":19523:19771   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19777:20196   */\n    tag_162:\n        /* \"#utility.yul\":19943:19947   */\n      0x00\n        /* \"#utility.yul\":19981:19983   */\n      0x20\n        /* \"#utility.yul\":19970:19979   */\n      dup3\n        /* \"#utility.yul\":19966:19984   */\n      add\n        /* \"#utility.yul\":19958:19984   */\n      swap1\n      pop\n        /* \"#utility.yul\":20030:20039   */\n      dup2\n        /* \"#utility.yul\":20024:20028   */\n      dup2\n        /* \"#utility.yul\":20020:20040   */\n      sub\n        /* \"#utility.yul\":20016:20017   */\n      0x00\n        /* \"#utility.yul\":20005:20014   */\n      dup4\n        /* \"#utility.yul\":20001:20018   */\n      add\n        /* \"#utility.yul\":19994:20041   */\n      mstore\n        /* \"#utility.yul\":20058:20189   */\n      tag_477\n        /* \"#utility.yul\":20184:20188   */\n      dup2\n        /* \"#utility.yul\":20058:20189   */\n      tag_347\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":20050:20189   */\n      swap1\n      pop\n        /* \"#utility.yul\":19948:20196   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20202:20621   */\n    tag_171:\n        /* \"#utility.yul\":20368:20372   */\n      0x00\n        /* \"#utility.yul\":20406:20408   */\n      0x20\n        /* \"#utility.yul\":20395:20404   */\n      dup3\n        /* \"#utility.yul\":20391:20409   */\n      add\n        /* \"#utility.yul\":20383:20409   */\n      swap1\n      pop\n        /* \"#utility.yul\":20455:20464   */\n      dup2\n        /* \"#utility.yul\":20449:20453   */\n      dup2\n        /* \"#utility.yul\":20445:20465   */\n      sub\n        /* \"#utility.yul\":20441:20442   */\n      0x00\n        /* \"#utility.yul\":20430:20439   */\n      dup4\n        /* \"#utility.yul\":20426:20443   */\n      add\n        /* \"#utility.yul\":20419:20466   */\n      mstore\n        /* \"#utility.yul\":20483:20614   */\n      tag_479\n        /* \"#utility.yul\":20609:20613   */\n      dup2\n        /* \"#utility.yul\":20483:20614   */\n      tag_352\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":20475:20614   */\n      swap1\n      pop\n        /* \"#utility.yul\":20373:20621   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20627:21046   */\n    tag_103:\n        /* \"#utility.yul\":20793:20797   */\n      0x00\n        /* \"#utility.yul\":20831:20833   */\n      0x20\n        /* \"#utility.yul\":20820:20829   */\n      dup3\n        /* \"#utility.yul\":20816:20834   */\n      add\n        /* \"#utility.yul\":20808:20834   */\n      swap1\n      pop\n        /* \"#utility.yul\":20880:20889   */\n      dup2\n        /* \"#utility.yul\":20874:20878   */\n      dup2\n        /* \"#utility.yul\":20870:20890   */\n      sub\n        /* \"#utility.yul\":20866:20867   */\n      0x00\n        /* \"#utility.yul\":20855:20864   */\n      dup4\n        /* \"#utility.yul\":20851:20868   */\n      add\n        /* \"#utility.yul\":20844:20891   */\n      mstore\n        /* \"#utility.yul\":20908:21039   */\n      tag_481\n        /* \"#utility.yul\":21034:21038   */\n      dup2\n        /* \"#utility.yul\":20908:21039   */\n      tag_357\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":20900:21039   */\n      swap1\n      pop\n        /* \"#utility.yul\":20798:21046   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21052:21471   */\n    tag_126:\n        /* \"#utility.yul\":21218:21222   */\n      0x00\n        /* \"#utility.yul\":21256:21258   */\n      0x20\n        /* \"#utility.yul\":21245:21254   */\n      dup3\n        /* \"#utility.yul\":21241:21259   */\n      add\n        /* \"#utility.yul\":21233:21259   */\n      swap1\n      pop\n        /* \"#utility.yul\":21305:21314   */\n      dup2\n        /* \"#utility.yul\":21299:21303   */\n      dup2\n        /* \"#utility.yul\":21295:21315   */\n      sub\n        /* \"#utility.yul\":21291:21292   */\n      0x00\n        /* \"#utility.yul\":21280:21289   */\n      dup4\n        /* \"#utility.yul\":21276:21293   */\n      add\n        /* \"#utility.yul\":21269:21316   */\n      mstore\n        /* \"#utility.yul\":21333:21464   */\n      tag_483\n        /* \"#utility.yul\":21459:21463   */\n      dup2\n        /* \"#utility.yul\":21333:21464   */\n      tag_362\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":21325:21464   */\n      swap1\n      pop\n        /* \"#utility.yul\":21223:21471   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21477:21896   */\n    tag_155:\n        /* \"#utility.yul\":21643:21647   */\n      0x00\n        /* \"#utility.yul\":21681:21683   */\n      0x20\n        /* \"#utility.yul\":21670:21679   */\n      dup3\n        /* \"#utility.yul\":21666:21684   */\n      add\n        /* \"#utility.yul\":21658:21684   */\n      swap1\n      pop\n        /* \"#utility.yul\":21730:21739   */\n      dup2\n        /* \"#utility.yul\":21724:21728   */\n      dup2\n        /* \"#utility.yul\":21720:21740   */\n      sub\n        /* \"#utility.yul\":21716:21717   */\n      0x00\n        /* \"#utility.yul\":21705:21714   */\n      dup4\n        /* \"#utility.yul\":21701:21718   */\n      add\n        /* \"#utility.yul\":21694:21741   */\n      mstore\n        /* \"#utility.yul\":21758:21889   */\n      tag_485\n        /* \"#utility.yul\":21884:21888   */\n      dup2\n        /* \"#utility.yul\":21758:21889   */\n      tag_367\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":21750:21889   */\n      swap1\n      pop\n        /* \"#utility.yul\":21648:21896   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21902:22321   */\n    tag_87:\n        /* \"#utility.yul\":22068:22072   */\n      0x00\n        /* \"#utility.yul\":22106:22108   */\n      0x20\n        /* \"#utility.yul\":22095:22104   */\n      dup3\n        /* \"#utility.yul\":22091:22109   */\n      add\n        /* \"#utility.yul\":22083:22109   */\n      swap1\n      pop\n        /* \"#utility.yul\":22155:22164   */\n      dup2\n        /* \"#utility.yul\":22149:22153   */\n      dup2\n        /* \"#utility.yul\":22145:22165   */\n      sub\n        /* \"#utility.yul\":22141:22142   */\n      0x00\n        /* \"#utility.yul\":22130:22139   */\n      dup4\n        /* \"#utility.yul\":22126:22143   */\n      add\n        /* \"#utility.yul\":22119:22166   */\n      mstore\n        /* \"#utility.yul\":22183:22314   */\n      tag_487\n        /* \"#utility.yul\":22309:22313   */\n      dup2\n        /* \"#utility.yul\":22183:22314   */\n      tag_372\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":22175:22314   */\n      swap1\n      pop\n        /* \"#utility.yul\":22073:22321   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22327:22746   */\n    tag_189:\n        /* \"#utility.yul\":22493:22497   */\n      0x00\n        /* \"#utility.yul\":22531:22533   */\n      0x20\n        /* \"#utility.yul\":22520:22529   */\n      dup3\n        /* \"#utility.yul\":22516:22534   */\n      add\n        /* \"#utility.yul\":22508:22534   */\n      swap1\n      pop\n        /* \"#utility.yul\":22580:22589   */\n      dup2\n        /* \"#utility.yul\":22574:22578   */\n      dup2\n        /* \"#utility.yul\":22570:22590   */\n      sub\n        /* \"#utility.yul\":22566:22567   */\n      0x00\n        /* \"#utility.yul\":22555:22564   */\n      dup4\n        /* \"#utility.yul\":22551:22568   */\n      add\n        /* \"#utility.yul\":22544:22591   */\n      mstore\n        /* \"#utility.yul\":22608:22739   */\n      tag_489\n        /* \"#utility.yul\":22734:22738   */\n      dup2\n        /* \"#utility.yul\":22608:22739   */\n      tag_377\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":22600:22739   */\n      swap1\n      pop\n        /* \"#utility.yul\":22498:22746   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22752:23171   */\n    tag_93:\n        /* \"#utility.yul\":22918:22922   */\n      0x00\n        /* \"#utility.yul\":22956:22958   */\n      0x20\n        /* \"#utility.yul\":22945:22954   */\n      dup3\n        /* \"#utility.yul\":22941:22959   */\n      add\n        /* \"#utility.yul\":22933:22959   */\n      swap1\n      pop\n        /* \"#utility.yul\":23005:23014   */\n      dup2\n        /* \"#utility.yul\":22999:23003   */\n      dup2\n        /* \"#utility.yul\":22995:23015   */\n      sub\n        /* \"#utility.yul\":22991:22992   */\n      0x00\n        /* \"#utility.yul\":22980:22989   */\n      dup4\n        /* \"#utility.yul\":22976:22993   */\n      add\n        /* \"#utility.yul\":22969:23016   */\n      mstore\n        /* \"#utility.yul\":23033:23164   */\n      tag_491\n        /* \"#utility.yul\":23159:23163   */\n      dup2\n        /* \"#utility.yul\":23033:23164   */\n      tag_382\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":23025:23164   */\n      swap1\n      pop\n        /* \"#utility.yul\":22923:23171   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23177:23596   */\n    tag_159:\n        /* \"#utility.yul\":23343:23347   */\n      0x00\n        /* \"#utility.yul\":23381:23383   */\n      0x20\n        /* \"#utility.yul\":23370:23379   */\n      dup3\n        /* \"#utility.yul\":23366:23384   */\n      add\n        /* \"#utility.yul\":23358:23384   */\n      swap1\n      pop\n        /* \"#utility.yul\":23430:23439   */\n      dup2\n        /* \"#utility.yul\":23424:23428   */\n      dup2\n        /* \"#utility.yul\":23420:23440   */\n      sub\n        /* \"#utility.yul\":23416:23417   */\n      0x00\n        /* \"#utility.yul\":23405:23414   */\n      dup4\n        /* \"#utility.yul\":23401:23418   */\n      add\n        /* \"#utility.yul\":23394:23441   */\n      mstore\n        /* \"#utility.yul\":23458:23589   */\n      tag_493\n        /* \"#utility.yul\":23584:23588   */\n      dup2\n        /* \"#utility.yul\":23458:23589   */\n      tag_387\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":23450:23589   */\n      swap1\n      pop\n        /* \"#utility.yul\":23348:23596   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23602:23824   */\n    tag_50:\n        /* \"#utility.yul\":23695:23699   */\n      0x00\n        /* \"#utility.yul\":23733:23735   */\n      0x20\n        /* \"#utility.yul\":23722:23731   */\n      dup3\n        /* \"#utility.yul\":23718:23736   */\n      add\n        /* \"#utility.yul\":23710:23736   */\n      swap1\n      pop\n        /* \"#utility.yul\":23746:23817   */\n      tag_495\n        /* \"#utility.yul\":23814:23815   */\n      0x00\n        /* \"#utility.yul\":23803:23812   */\n      dup4\n        /* \"#utility.yul\":23799:23816   */\n      add\n        /* \"#utility.yul\":23790:23796   */\n      dup5\n        /* \"#utility.yul\":23746:23817   */\n      tag_392\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":23700:23824   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23830:24052   */\n    tag_28:\n        /* \"#utility.yul\":23923:23927   */\n      0x00\n        /* \"#utility.yul\":23961:23963   */\n      0x20\n        /* \"#utility.yul\":23950:23959   */\n      dup3\n        /* \"#utility.yul\":23946:23964   */\n      add\n        /* \"#utility.yul\":23938:23964   */\n      swap1\n      pop\n        /* \"#utility.yul\":23974:24045   */\n      tag_497\n        /* \"#utility.yul\":24042:24043   */\n      0x00\n        /* \"#utility.yul\":24031:24040   */\n      dup4\n        /* \"#utility.yul\":24027:24044   */\n      add\n        /* \"#utility.yul\":24018:24024   */\n      dup5\n        /* \"#utility.yul\":23974:24045   */\n      tag_408\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":23928:24052   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24058:24599   */\n    tag_34:\n        /* \"#utility.yul\":24229:24233   */\n      0x00\n        /* \"#utility.yul\":24267:24270   */\n      0x80\n        /* \"#utility.yul\":24256:24265   */\n      dup3\n        /* \"#utility.yul\":24252:24271   */\n      add\n        /* \"#utility.yul\":24244:24271   */\n      swap1\n      pop\n        /* \"#utility.yul\":24281:24350   */\n      tag_499\n        /* \"#utility.yul\":24347:24348   */\n      0x00\n        /* \"#utility.yul\":24336:24345   */\n      dup4\n        /* \"#utility.yul\":24332:24349   */\n      add\n        /* \"#utility.yul\":24323:24329   */\n      dup8\n        /* \"#utility.yul\":24281:24350   */\n      tag_420\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":24360:24430   */\n      tag_500\n        /* \"#utility.yul\":24426:24428   */\n      0x20\n        /* \"#utility.yul\":24415:24424   */\n      dup4\n        /* \"#utility.yul\":24411:24429   */\n      add\n        /* \"#utility.yul\":24402:24408   */\n      dup7\n        /* \"#utility.yul\":24360:24430   */\n      tag_400\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":24440:24510   */\n      tag_501\n        /* \"#utility.yul\":24506:24508   */\n      0x40\n        /* \"#utility.yul\":24495:24504   */\n      dup4\n        /* \"#utility.yul\":24491:24509   */\n      add\n        /* \"#utility.yul\":24482:24488   */\n      dup6\n        /* \"#utility.yul\":24440:24510   */\n      tag_412\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":24520:24592   */\n      tag_502\n        /* \"#utility.yul\":24588:24590   */\n      0x60\n        /* \"#utility.yul\":24577:24586   */\n      dup4\n        /* \"#utility.yul\":24573:24591   */\n      add\n        /* \"#utility.yul\":24564:24570   */\n      dup5\n        /* \"#utility.yul\":24520:24592   */\n      tag_392\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":24234:24599   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24605:24774   */\n    tag_289:\n        /* \"#utility.yul\":24689:24700   */\n      0x00\n        /* \"#utility.yul\":24723:24729   */\n      dup3\n        /* \"#utility.yul\":24718:24721   */\n      dup3\n        /* \"#utility.yul\":24711:24730   */\n      mstore\n        /* \"#utility.yul\":24763:24767   */\n      0x20\n        /* \"#utility.yul\":24758:24761   */\n      dup3\n        /* \"#utility.yul\":24754:24768   */\n      add\n        /* \"#utility.yul\":24739:24768   */\n      swap1\n      pop\n        /* \"#utility.yul\":24701:24774   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24780:25085   */\n    tag_115:\n        /* \"#utility.yul\":24820:24823   */\n      0x00\n        /* \"#utility.yul\":24839:24859   */\n      tag_505\n        /* \"#utility.yul\":24857:24858   */\n      dup3\n        /* \"#utility.yul\":24839:24859   */\n      tag_411\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":24834:24859   */\n      swap2\n      pop\n        /* \"#utility.yul\":24873:24893   */\n      tag_506\n        /* \"#utility.yul\":24891:24892   */\n      dup4\n        /* \"#utility.yul\":24873:24893   */\n      tag_411\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":24868:24893   */\n      swap3\n      pop\n        /* \"#utility.yul\":25027:25028   */\n      dup3\n        /* \"#utility.yul\":24959:25025   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":24955:25029   */\n      sub\n        /* \"#utility.yul\":24952:24953   */\n      dup3\n        /* \"#utility.yul\":24949:25030   */\n      gt\n        /* \"#utility.yul\":24946:24948   */\n      iszero\n      tag_507\n      jumpi\n        /* \"#utility.yul\":25033:25051   */\n      tag_508\n      tag_509\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":24946:24948   */\n    tag_507:\n        /* \"#utility.yul\":25077:25078   */\n      dup3\n        /* \"#utility.yul\":25074:25075   */\n      dup3\n        /* \"#utility.yul\":25070:25079   */\n      add\n        /* \"#utility.yul\":25063:25079   */\n      swap1\n      pop\n        /* \"#utility.yul\":24824:25085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25091:25337   */\n    tag_224:\n        /* \"#utility.yul\":25130:25133   */\n      0x00\n        /* \"#utility.yul\":25149:25168   */\n      tag_511\n        /* \"#utility.yul\":25166:25167   */\n      dup3\n        /* \"#utility.yul\":25149:25168   */\n      tag_415\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":25144:25168   */\n      swap2\n      pop\n        /* \"#utility.yul\":25182:25201   */\n      tag_512\n        /* \"#utility.yul\":25199:25200   */\n      dup4\n        /* \"#utility.yul\":25182:25201   */\n      tag_415\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":25177:25201   */\n      swap3\n      pop\n        /* \"#utility.yul\":25279:25280   */\n      dup3\n        /* \"#utility.yul\":25267:25277   */\n      0xffffffff\n        /* \"#utility.yul\":25263:25281   */\n      sub\n        /* \"#utility.yul\":25260:25261   */\n      dup3\n        /* \"#utility.yul\":25257:25282   */\n      gt\n        /* \"#utility.yul\":25254:25256   */\n      iszero\n      tag_513\n      jumpi\n        /* \"#utility.yul\":25285:25303   */\n      tag_514\n      tag_509\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":25254:25256   */\n    tag_513:\n        /* \"#utility.yul\":25329:25330   */\n      dup3\n        /* \"#utility.yul\":25326:25327   */\n      dup3\n        /* \"#utility.yul\":25322:25331   */\n      add\n        /* \"#utility.yul\":25315:25331   */\n      swap1\n      pop\n        /* \"#utility.yul\":25134:25337   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25343:25528   */\n    tag_97:\n        /* \"#utility.yul\":25383:25384   */\n      0x00\n        /* \"#utility.yul\":25400:25420   */\n      tag_516\n        /* \"#utility.yul\":25418:25419   */\n      dup3\n        /* \"#utility.yul\":25400:25420   */\n      tag_411\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":25395:25420   */\n      swap2\n      pop\n        /* \"#utility.yul\":25434:25454   */\n      tag_517\n        /* \"#utility.yul\":25452:25453   */\n      dup4\n        /* \"#utility.yul\":25434:25454   */\n      tag_411\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":25429:25454   */\n      swap3\n      pop\n        /* \"#utility.yul\":25473:25474   */\n      dup3\n        /* \"#utility.yul\":25463:25465   */\n      tag_518\n      jumpi\n        /* \"#utility.yul\":25478:25496   */\n      tag_519\n      tag_520\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":25463:25465   */\n    tag_518:\n        /* \"#utility.yul\":25520:25521   */\n      dup3\n        /* \"#utility.yul\":25517:25518   */\n      dup3\n        /* \"#utility.yul\":25513:25522   */\n      div\n        /* \"#utility.yul\":25508:25522   */\n      swap1\n      pop\n        /* \"#utility.yul\":25385:25528   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25534:25882   */\n    tag_95:\n        /* \"#utility.yul\":25574:25581   */\n      0x00\n        /* \"#utility.yul\":25597:25617   */\n      tag_522\n        /* \"#utility.yul\":25615:25616   */\n      dup3\n        /* \"#utility.yul\":25597:25617   */\n      tag_411\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":25592:25617   */\n      swap2\n      pop\n        /* \"#utility.yul\":25631:25651   */\n      tag_523\n        /* \"#utility.yul\":25649:25650   */\n      dup4\n        /* \"#utility.yul\":25631:25651   */\n      tag_411\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":25626:25651   */\n      swap3\n      pop\n        /* \"#utility.yul\":25819:25820   */\n      dup2\n        /* \"#utility.yul\":25751:25817   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":25747:25821   */\n      div\n        /* \"#utility.yul\":25744:25745   */\n      dup4\n        /* \"#utility.yul\":25741:25822   */\n      gt\n        /* \"#utility.yul\":25736:25737   */\n      dup3\n        /* \"#utility.yul\":25729:25738   */\n      iszero\n        /* \"#utility.yul\":25722:25739   */\n      iszero\n        /* \"#utility.yul\":25718:25823   */\n      and\n        /* \"#utility.yul\":25715:25717   */\n      iszero\n      tag_524\n      jumpi\n        /* \"#utility.yul\":25826:25844   */\n      tag_525\n      tag_509\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":25715:25717   */\n    tag_524:\n        /* \"#utility.yul\":25874:25875   */\n      dup3\n        /* \"#utility.yul\":25871:25872   */\n      dup3\n        /* \"#utility.yul\":25867:25876   */\n      mul\n        /* \"#utility.yul\":25856:25876   */\n      swap1\n      pop\n        /* \"#utility.yul\":25582:25882   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25888:26079   */\n    tag_106:\n        /* \"#utility.yul\":25928:25932   */\n      0x00\n        /* \"#utility.yul\":25948:25968   */\n      tag_527\n        /* \"#utility.yul\":25966:25967   */\n      dup3\n        /* \"#utility.yul\":25948:25968   */\n      tag_411\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":25943:25968   */\n      swap2\n      pop\n        /* \"#utility.yul\":25982:26002   */\n      tag_528\n        /* \"#utility.yul\":26000:26001   */\n      dup4\n        /* \"#utility.yul\":25982:26002   */\n      tag_411\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":25977:26002   */\n      swap3\n      pop\n        /* \"#utility.yul\":26021:26022   */\n      dup3\n        /* \"#utility.yul\":26018:26019   */\n      dup3\n        /* \"#utility.yul\":26015:26023   */\n      lt\n        /* \"#utility.yul\":26012:26014   */\n      iszero\n      tag_529\n      jumpi\n        /* \"#utility.yul\":26026:26044   */\n      tag_530\n      tag_509\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":26012:26014   */\n    tag_529:\n        /* \"#utility.yul\":26071:26072   */\n      dup3\n        /* \"#utility.yul\":26068:26069   */\n      dup3\n        /* \"#utility.yul\":26064:26073   */\n      sub\n        /* \"#utility.yul\":26056:26073   */\n      swap1\n      pop\n        /* \"#utility.yul\":25933:26079   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26085:26181   */\n    tag_281:\n        /* \"#utility.yul\":26122:26129   */\n      0x00\n        /* \"#utility.yul\":26151:26175   */\n      tag_532\n        /* \"#utility.yul\":26169:26174   */\n      dup3\n        /* \"#utility.yul\":26151:26175   */\n      tag_533\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":26140:26175   */\n      swap1\n      pop\n        /* \"#utility.yul\":26130:26181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26187:26277   */\n    tag_534:\n        /* \"#utility.yul\":26221:26228   */\n      0x00\n        /* \"#utility.yul\":26264:26269   */\n      dup2\n        /* \"#utility.yul\":26257:26270   */\n      iszero\n        /* \"#utility.yul\":26250:26271   */\n      iszero\n        /* \"#utility.yul\":26239:26271   */\n      swap1\n      pop\n        /* \"#utility.yul\":26229:26277   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26283:26401   */\n    tag_395:\n        /* \"#utility.yul\":26320:26327   */\n      0x00\n        /* \"#utility.yul\":26360:26394   */\n      0xffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":26353:26358   */\n      dup3\n        /* \"#utility.yul\":26349:26395   */\n      and\n        /* \"#utility.yul\":26338:26395   */\n      swap1\n      pop\n        /* \"#utility.yul\":26328:26401   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26407:26533   */\n    tag_533:\n        /* \"#utility.yul\":26444:26451   */\n      0x00\n        /* \"#utility.yul\":26484:26526   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":26477:26482   */\n      dup3\n        /* \"#utility.yul\":26473:26527   */\n      and\n        /* \"#utility.yul\":26462:26527   */\n      swap1\n      pop\n        /* \"#utility.yul\":26452:26533   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26539:26630   */\n    tag_403:\n        /* \"#utility.yul\":26575:26582   */\n      0x00\n        /* \"#utility.yul\":26615:26623   */\n      0xffffff\n        /* \"#utility.yul\":26608:26613   */\n      dup3\n        /* \"#utility.yul\":26604:26624   */\n      and\n        /* \"#utility.yul\":26593:26624   */\n      swap1\n      pop\n        /* \"#utility.yul\":26583:26630   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26636:26713   */\n    tag_411:\n        /* \"#utility.yul\":26673:26680   */\n      0x00\n        /* \"#utility.yul\":26702:26707   */\n      dup2\n        /* \"#utility.yul\":26691:26707   */\n      swap1\n      pop\n        /* \"#utility.yul\":26681:26713   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26719:26812   */\n    tag_415:\n        /* \"#utility.yul\":26755:26762   */\n      0x00\n        /* \"#utility.yul\":26795:26805   */\n      0xffffffff\n        /* \"#utility.yul\":26788:26793   */\n      dup3\n        /* \"#utility.yul\":26784:26806   */\n      and\n        /* \"#utility.yul\":26773:26806   */\n      swap1\n      pop\n        /* \"#utility.yul\":26763:26812   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26818:26921   */\n    tag_423:\n        /* \"#utility.yul\":26854:26861   */\n      0x00\n        /* \"#utility.yul\":26894:26914   */\n      0xffffffffffffffffff\n        /* \"#utility.yul\":26887:26892   */\n      dup3\n        /* \"#utility.yul\":26883:26915   */\n      and\n        /* \"#utility.yul\":26872:26915   */\n      swap1\n      pop\n        /* \"#utility.yul\":26862:26921   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26927:27081   */\n    tag_285:\n        /* \"#utility.yul\":26991:27000   */\n      0x00\n        /* \"#utility.yul\":27024:27075   */\n      tag_543\n        /* \"#utility.yul\":27069:27074   */\n      dup3\n        /* \"#utility.yul\":27024:27075   */\n      tag_544\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":27011:27075   */\n      swap1\n      pop\n        /* \"#utility.yul\":27001:27081   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27087:27214   */\n    tag_544:\n        /* \"#utility.yul\":27151:27160   */\n      0x00\n        /* \"#utility.yul\":27184:27208   */\n      tag_546\n        /* \"#utility.yul\":27202:27207   */\n      dup3\n        /* \"#utility.yul\":27184:27208   */\n      tag_533\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":27171:27208   */\n      swap1\n      pop\n        /* \"#utility.yul\":27161:27214   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27220:27333   */\n    tag_399:\n        /* \"#utility.yul\":27270:27279   */\n      0x00\n        /* \"#utility.yul\":27303:27327   */\n      tag_548\n        /* \"#utility.yul\":27321:27326   */\n      dup3\n        /* \"#utility.yul\":27303:27327   */\n      tag_395\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":27290:27327   */\n      swap1\n      pop\n        /* \"#utility.yul\":27280:27333   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27339:27450   */\n    tag_407:\n        /* \"#utility.yul\":27388:27397   */\n      0x00\n        /* \"#utility.yul\":27421:27444   */\n      tag_550\n        /* \"#utility.yul\":27438:27443   */\n      dup3\n        /* \"#utility.yul\":27421:27444   */\n      tag_403\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":27408:27444   */\n      swap1\n      pop\n        /* \"#utility.yul\":27398:27450   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27456:27567   */\n    tag_419:\n        /* \"#utility.yul\":27505:27514   */\n      0x00\n        /* \"#utility.yul\":27538:27561   */\n      tag_552\n        /* \"#utility.yul\":27555:27560   */\n      dup3\n        /* \"#utility.yul\":27538:27561   */\n      tag_423\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":27525:27561   */\n      swap1\n      pop\n        /* \"#utility.yul\":27515:27567   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27573:27753   */\n    tag_509:\n        /* \"#utility.yul\":27621:27698   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":27618:27619   */\n      0x00\n        /* \"#utility.yul\":27611:27699   */\n      mstore\n        /* \"#utility.yul\":27718:27722   */\n      0x11\n        /* \"#utility.yul\":27715:27716   */\n      0x04\n        /* \"#utility.yul\":27708:27723   */\n      mstore\n        /* \"#utility.yul\":27742:27746   */\n      0x24\n        /* \"#utility.yul\":27739:27740   */\n      0x00\n        /* \"#utility.yul\":27732:27747   */\n      revert\n        /* \"#utility.yul\":27759:27939   */\n    tag_520:\n        /* \"#utility.yul\":27807:27884   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":27804:27805   */\n      0x00\n        /* \"#utility.yul\":27797:27885   */\n      mstore\n        /* \"#utility.yul\":27904:27908   */\n      0x12\n        /* \"#utility.yul\":27901:27902   */\n      0x04\n        /* \"#utility.yul\":27894:27909   */\n      mstore\n        /* \"#utility.yul\":27928:27932   */\n      0x24\n        /* \"#utility.yul\":27925:27926   */\n      0x00\n        /* \"#utility.yul\":27918:27933   */\n      revert\n        /* \"#utility.yul\":27945:28124   */\n    tag_291:\n        /* \"#utility.yul\":28085:28116   */\n      0x526577617264206f696c657273207472616e73666572206661696c6564000000\n        /* \"#utility.yul\":28081:28082   */\n      0x00\n        /* \"#utility.yul\":28073:28079   */\n      dup3\n        /* \"#utility.yul\":28069:28083   */\n      add\n        /* \"#utility.yul\":28062:28117   */\n      mstore\n        /* \"#utility.yul\":28051:28124   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28130:28351   */\n    tag_296:\n        /* \"#utility.yul\":28270:28304   */\n      0x56657374696e672072656c656173653a206e6f20746f6b656e73206172652064\n        /* \"#utility.yul\":28266:28267   */\n      0x00\n        /* \"#utility.yul\":28258:28264   */\n      dup3\n        /* \"#utility.yul\":28254:28268   */\n      add\n        /* \"#utility.yul\":28247:28305   */\n      mstore\n        /* \"#utility.yul\":28339:28343   */\n      0x7565000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":28334:28336   */\n      0x20\n        /* \"#utility.yul\":28326:28332   */\n      dup3\n        /* \"#utility.yul\":28322:28337   */\n      add\n        /* \"#utility.yul\":28315:28344   */\n      mstore\n        /* \"#utility.yul\":28236:28351   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28357:28589   */\n    tag_301:\n        /* \"#utility.yul\":28497:28531   */\n      0x546f6b656e56657374696e673a2062656e656669636961727920697320746865\n        /* \"#utility.yul\":28493:28494   */\n      0x00\n        /* \"#utility.yul\":28485:28491   */\n      dup3\n        /* \"#utility.yul\":28481:28495   */\n      add\n        /* \"#utility.yul\":28474:28532   */\n      mstore\n        /* \"#utility.yul\":28566:28581   */\n      0x207a65726f206164647265737300000000000000000000000000000000000000\n        /* \"#utility.yul\":28561:28563   */\n      0x20\n        /* \"#utility.yul\":28553:28559   */\n      dup3\n        /* \"#utility.yul\":28549:28564   */\n      add\n        /* \"#utility.yul\":28542:28582   */\n      mstore\n        /* \"#utility.yul\":28463:28589   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28595:28771   */\n    tag_306:\n        /* \"#utility.yul\":28735:28763   */\n      0x506f6f6c20746f6b656e207472616e73666572206661696c6564000000000000\n        /* \"#utility.yul\":28731:28732   */\n      0x00\n        /* \"#utility.yul\":28723:28729   */\n      dup3\n        /* \"#utility.yul\":28719:28733   */\n      add\n        /* \"#utility.yul\":28712:28764   */\n      mstore\n        /* \"#utility.yul\":28701:28771   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28777:29081   */\n    tag_311:\n        /* \"#utility.yul\":28917:28951   */\n      0x596f75207374696c6c20686176652061207374616b65206c6f636b6564202d20\n        /* \"#utility.yul\":28913:28914   */\n      0x00\n        /* \"#utility.yul\":28905:28911   */\n      dup3\n        /* \"#utility.yul\":28901:28915   */\n      add\n        /* \"#utility.yul\":28894:28952   */\n      mstore\n        /* \"#utility.yul\":28986:29020   */\n      0x706c6561736520756e6c6f636b2066697273742c20646f6e2774206c65617665\n        /* \"#utility.yul\":28981:28983   */\n      0x20\n        /* \"#utility.yul\":28973:28979   */\n      dup3\n        /* \"#utility.yul\":28969:28984   */\n      add\n        /* \"#utility.yul\":28962:29021   */\n      mstore\n        /* \"#utility.yul\":29055:29073   */\n      0x2066726565206d6f6e6579206865726500000000000000000000000000000000\n        /* \"#utility.yul\":29050:29052   */\n      0x40\n        /* \"#utility.yul\":29042:29048   */\n      dup3\n        /* \"#utility.yul\":29038:29053   */\n      add\n        /* \"#utility.yul\":29031:29074   */\n      mstore\n        /* \"#utility.yul\":28883:29081   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29087:29269   */\n    tag_316:\n        /* \"#utility.yul\":29227:29261   */\n      0x596f7520646f6e277420686176652061207374616b6520746f20756e6c6f636b\n        /* \"#utility.yul\":29223:29224   */\n      0x00\n        /* \"#utility.yul\":29215:29221   */\n      dup3\n        /* \"#utility.yul\":29211:29225   */\n      add\n        /* \"#utility.yul\":29204:29262   */\n      mstore\n        /* \"#utility.yul\":29193:29269   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29275:29511   */\n    tag_321:\n        /* \"#utility.yul\":29415:29449   */\n      0x596f7572206c6f636b20706572696f642065786365656473205374616b696e67\n        /* \"#utility.yul\":29411:29412   */\n      0x00\n        /* \"#utility.yul\":29403:29409   */\n      dup3\n        /* \"#utility.yul\":29399:29413   */\n      add\n        /* \"#utility.yul\":29392:29450   */\n      mstore\n        /* \"#utility.yul\":29484:29503   */\n      0x2050726f6772616d206475726174696f6e000000000000000000000000000000\n        /* \"#utility.yul\":29479:29481   */\n      0x20\n        /* \"#utility.yul\":29471:29477   */\n      dup3\n        /* \"#utility.yul\":29467:29482   */\n      add\n        /* \"#utility.yul\":29460:29504   */\n      mstore\n        /* \"#utility.yul\":29381:29511   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29517:29682   */\n    tag_326:\n        /* \"#utility.yul\":29657:29674   */\n      0x416c7265616479207374616b696e670000000000000000000000000000000000\n        /* \"#utility.yul\":29653:29654   */\n      0x00\n        /* \"#utility.yul\":29645:29651   */\n      dup3\n        /* \"#utility.yul\":29641:29655   */\n      add\n        /* \"#utility.yul\":29634:29675   */\n      mstore\n        /* \"#utility.yul\":29623:29682   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29688:29916   */\n    tag_331:\n        /* \"#utility.yul\":29828:29862   */\n      0x596f75206469646e2774206561726e20616e7920696e746567657220616d6f75\n        /* \"#utility.yul\":29824:29825   */\n      0x00\n        /* \"#utility.yul\":29816:29822   */\n      dup3\n        /* \"#utility.yul\":29812:29826   */\n      add\n        /* \"#utility.yul\":29805:29863   */\n      mstore\n        /* \"#utility.yul\":29897:29908   */\n      0x6e74206f66207765690000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":29892:29894   */\n      0x20\n        /* \"#utility.yul\":29884:29890   */\n      dup3\n        /* \"#utility.yul\":29880:29895   */\n      add\n        /* \"#utility.yul\":29873:29909   */\n      mstore\n        /* \"#utility.yul\":29794:29916   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29922:30160   */\n    tag_336:\n        /* \"#utility.yul\":30062:30096   */\n      0x4e65697468657220746f6b656e416d6f756e74206e6f72206c6f636b696e6750\n        /* \"#utility.yul\":30058:30059   */\n      0x00\n        /* \"#utility.yul\":30050:30056   */\n      dup3\n        /* \"#utility.yul\":30046:30060   */\n      add\n        /* \"#utility.yul\":30039:30097   */\n      mstore\n        /* \"#utility.yul\":30131:30152   */\n      0x6572696f6420636f756c646e2774206265203000000000000000000000000000\n        /* \"#utility.yul\":30126:30128   */\n      0x20\n        /* \"#utility.yul\":30118:30124   */\n      dup3\n        /* \"#utility.yul\":30114:30129   */\n      add\n        /* \"#utility.yul\":30107:30153   */\n      mstore\n        /* \"#utility.yul\":30028:30160   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30166:30413   */\n    tag_341:\n        /* \"#utility.yul\":30306:30340   */\n      0x596f752063616e277420776974686472617720746865207374616b6520696e20\n        /* \"#utility.yul\":30302:30303   */\n      0x00\n        /* \"#utility.yul\":30294:30300   */\n      dup3\n        /* \"#utility.yul\":30290:30304   */\n      add\n        /* \"#utility.yul\":30283:30341   */\n      mstore\n        /* \"#utility.yul\":30375:30405   */\n      0x7468652073616d6520626c6f636b20697420776173206c6f636b656400000000\n        /* \"#utility.yul\":30370:30372   */\n      0x20\n        /* \"#utility.yul\":30362:30368   */\n      dup3\n        /* \"#utility.yul\":30358:30373   */\n      add\n        /* \"#utility.yul\":30351:30406   */\n      mstore\n        /* \"#utility.yul\":30272:30413   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30419:30647   */\n    tag_346:\n        /* \"#utility.yul\":30559:30593   */\n      0x5374616b696e6746756e6420646f65736e2774206861766520656e6f75676820\n        /* \"#utility.yul\":30555:30556   */\n      0x00\n        /* \"#utility.yul\":30547:30553   */\n      dup3\n        /* \"#utility.yul\":30543:30557   */\n      add\n        /* \"#utility.yul\":30536:30594   */\n      mstore\n        /* \"#utility.yul\":30628:30639   */\n      0x616c6c6f77616e63650000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":30623:30625   */\n      0x20\n        /* \"#utility.yul\":30615:30621   */\n      dup3\n        /* \"#utility.yul\":30611:30626   */\n      add\n        /* \"#utility.yul\":30604:30640   */\n      mstore\n        /* \"#utility.yul\":30525:30647   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30653:30835   */\n    tag_351:\n        /* \"#utility.yul\":30793:30827   */\n      0x706f6f6c546f6b656e20616464726573732063616e6e6f74206265207a65726f\n        /* \"#utility.yul\":30789:30790   */\n      0x00\n        /* \"#utility.yul\":30781:30787   */\n      dup3\n        /* \"#utility.yul\":30777:30791   */\n      add\n        /* \"#utility.yul\":30770:30828   */\n      mstore\n        /* \"#utility.yul\":30759:30835   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30841:31071   */\n    tag_356:\n        /* \"#utility.yul\":30981:31015   */\n      0x5374616b696e6746756e6420646f65736e2774206861766520656e6f75676820\n        /* \"#utility.yul\":30977:30978   */\n      0x00\n        /* \"#utility.yul\":30969:30975   */\n      dup3\n        /* \"#utility.yul\":30965:30979   */\n      add\n        /* \"#utility.yul\":30958:31016   */\n      mstore\n        /* \"#utility.yul\":31050:31063   */\n      0x4f494c2062616c616e6365000000000000000000000000000000000000000000\n        /* \"#utility.yul\":31045:31047   */\n      0x20\n        /* \"#utility.yul\":31037:31043   */\n      dup3\n        /* \"#utility.yul\":31033:31048   */\n      add\n        /* \"#utility.yul\":31026:31064   */\n      mstore\n        /* \"#utility.yul\":30947:31071   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31077:31244   */\n    tag_361:\n        /* \"#utility.yul\":31217:31236   */\n      0x706f6f6c546f6b656e206e6f7420736574000000000000000000000000000000\n        /* \"#utility.yul\":31213:31214   */\n      0x00\n        /* \"#utility.yul\":31205:31211   */\n      dup3\n        /* \"#utility.yul\":31201:31215   */\n      add\n        /* \"#utility.yul\":31194:31237   */\n      mstore\n        /* \"#utility.yul\":31183:31244   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31250:31470   */\n    tag_366:\n        /* \"#utility.yul\":31390:31424   */\n      0x5472616e7366657246726f6d206f6620706f6f6c546f6b656e73206661696c65\n        /* \"#utility.yul\":31386:31387   */\n      0x00\n        /* \"#utility.yul\":31378:31384   */\n      dup3\n        /* \"#utility.yul\":31374:31388   */\n      add\n        /* \"#utility.yul\":31367:31425   */\n      mstore\n        /* \"#utility.yul\":31459:31462   */\n      0x6400000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":31454:31456   */\n      0x20\n        /* \"#utility.yul\":31446:31452   */\n      dup3\n        /* \"#utility.yul\":31442:31457   */\n      add\n        /* \"#utility.yul\":31435:31463   */\n      mstore\n        /* \"#utility.yul\":31356:31470   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31476:31653   */\n    tag_371:\n        /* \"#utility.yul\":31616:31645   */\n      0x43616e206f6e6c792062652063616c6c6564206279206f776e65720000000000\n        /* \"#utility.yul\":31612:31613   */\n      0x00\n        /* \"#utility.yul\":31604:31610   */\n      dup3\n        /* \"#utility.yul\":31600:31614   */\n      add\n        /* \"#utility.yul\":31593:31646   */\n      mstore\n        /* \"#utility.yul\":31582:31653   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31659:31897   */\n    tag_376:\n        /* \"#utility.yul\":31799:31833   */\n      0x596f752063616e206f6e6c792067657420526577617264732061667465722053\n        /* \"#utility.yul\":31795:31796   */\n      0x00\n        /* \"#utility.yul\":31787:31793   */\n      dup3\n        /* \"#utility.yul\":31783:31797   */\n      add\n        /* \"#utility.yul\":31776:31834   */\n      mstore\n        /* \"#utility.yul\":31868:31889   */\n      0x74616b696e672050726f6772616d20656e647300000000000000000000000000\n        /* \"#utility.yul\":31863:31865   */\n      0x20\n        /* \"#utility.yul\":31855:31861   */\n      dup3\n        /* \"#utility.yul\":31851:31866   */\n      add\n        /* \"#utility.yul\":31844:31890   */\n      mstore\n        /* \"#utility.yul\":31765:31897   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31903:32133   */\n    tag_381:\n        /* \"#utility.yul\":32043:32077   */\n      0x5472616e7366657246726f6d206f66204f494c2066726f6d205374616b696e67\n        /* \"#utility.yul\":32039:32040   */\n      0x00\n        /* \"#utility.yul\":32031:32037   */\n      dup3\n        /* \"#utility.yul\":32027:32041   */\n      add\n        /* \"#utility.yul\":32020:32078   */\n      mstore\n        /* \"#utility.yul\":32112:32125   */\n      0x46756e64206661696c6564000000000000000000000000000000000000000000\n        /* \"#utility.yul\":32107:32109   */\n      0x20\n        /* \"#utility.yul\":32099:32105   */\n      dup3\n        /* \"#utility.yul\":32095:32110   */\n      add\n        /* \"#utility.yul\":32088:32126   */\n      mstore\n        /* \"#utility.yul\":32009:32133   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":32139:32320   */\n    tag_386:\n        /* \"#utility.yul\":32279:32312   */\n      0x596f7520646f6e2774206861766520616e7920726577617264506f696e747300\n        /* \"#utility.yul\":32275:32276   */\n      0x00\n        /* \"#utility.yul\":32267:32273   */\n      dup3\n        /* \"#utility.yul\":32263:32277   */\n      add\n        /* \"#utility.yul\":32256:32313   */\n      mstore\n        /* \"#utility.yul\":32245:32320   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":32326:32501   */\n    tag_391:\n        /* \"#utility.yul\":32466:32493   */\n      0x706f6f6c546f6b656e2077617320616c72656164792073657400000000000000\n        /* \"#utility.yul\":32462:32463   */\n      0x00\n        /* \"#utility.yul\":32454:32460   */\n      dup3\n        /* \"#utility.yul\":32450:32464   */\n      add\n        /* \"#utility.yul\":32443:32494   */\n      mstore\n        /* \"#utility.yul\":32432:32501   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":32507:32629   */\n    tag_244:\n        /* \"#utility.yul\":32580:32604   */\n      tag_577\n        /* \"#utility.yul\":32598:32603   */\n      dup2\n        /* \"#utility.yul\":32580:32604   */\n      tag_281\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":32573:32578   */\n      dup2\n        /* \"#utility.yul\":32570:32605   */\n      eq\n        /* \"#utility.yul\":32560:32562   */\n      tag_578\n      jumpi\n        /* \"#utility.yul\":32619:32620   */\n      0x00\n        /* \"#utility.yul\":32616:32617   */\n      dup1\n        /* \"#utility.yul\":32609:32621   */\n      revert\n        /* \"#utility.yul\":32560:32562   */\n    tag_578:\n        /* \"#utility.yul\":32550:32629   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":32635:32751   */\n    tag_248:\n        /* \"#utility.yul\":32705:32726   */\n      tag_580\n        /* \"#utility.yul\":32720:32725   */\n      dup2\n        /* \"#utility.yul\":32705:32726   */\n      tag_534\n      jump\t// in\n    tag_580:\n        /* \"#utility.yul\":32698:32703   */\n      dup2\n        /* \"#utility.yul\":32695:32727   */\n      eq\n        /* \"#utility.yul\":32685:32687   */\n      tag_581\n      jumpi\n        /* \"#utility.yul\":32741:32742   */\n      0x00\n        /* \"#utility.yul\":32738:32739   */\n      dup1\n        /* \"#utility.yul\":32731:32743   */\n      revert\n        /* \"#utility.yul\":32685:32687   */\n    tag_581:\n        /* \"#utility.yul\":32675:32751   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":32757:32877   */\n    tag_252:\n        /* \"#utility.yul\":32829:32852   */\n      tag_583\n        /* \"#utility.yul\":32846:32851   */\n      dup2\n        /* \"#utility.yul\":32829:32852   */\n      tag_403\n      jump\t// in\n    tag_583:\n        /* \"#utility.yul\":32822:32827   */\n      dup2\n        /* \"#utility.yul\":32819:32853   */\n      eq\n        /* \"#utility.yul\":32809:32811   */\n      tag_584\n      jumpi\n        /* \"#utility.yul\":32867:32868   */\n      0x00\n        /* \"#utility.yul\":32864:32865   */\n      dup1\n        /* \"#utility.yul\":32857:32869   */\n      revert\n        /* \"#utility.yul\":32809:32811   */\n    tag_584:\n        /* \"#utility.yul\":32799:32877   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":32883:33005   */\n    tag_256:\n        /* \"#utility.yul\":32956:32980   */\n      tag_586\n        /* \"#utility.yul\":32974:32979   */\n      dup2\n        /* \"#utility.yul\":32956:32980   */\n      tag_411\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":32949:32954   */\n      dup2\n        /* \"#utility.yul\":32946:32981   */\n      eq\n        /* \"#utility.yul\":32936:32938   */\n      tag_587\n      jumpi\n        /* \"#utility.yul\":32995:32996   */\n      0x00\n        /* \"#utility.yul\":32992:32993   */\n      dup1\n        /* \"#utility.yul\":32985:32997   */\n      revert\n        /* \"#utility.yul\":32936:32938   */\n    tag_587:\n        /* \"#utility.yul\":32926:33005   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":33011:33131   */\n    tag_260:\n        /* \"#utility.yul\":33083:33106   */\n      tag_589\n        /* \"#utility.yul\":33100:33105   */\n      dup2\n        /* \"#utility.yul\":33083:33106   */\n      tag_423\n      jump\t// in\n    tag_589:\n        /* \"#utility.yul\":33076:33081   */\n      dup2\n        /* \"#utility.yul\":33073:33107   */\n      eq\n        /* \"#utility.yul\":33063:33065   */\n      tag_590\n      jumpi\n        /* \"#utility.yul\":33121:33122   */\n      0x00\n        /* \"#utility.yul\":33118:33119   */\n      dup1\n        /* \"#utility.yul\":33111:33123   */\n      revert\n        /* \"#utility.yul\":33063:33065   */\n    tag_590:\n        /* \"#utility.yul\":33053:33131   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212203f20109eed4bb9ce5d17b0838ce18f043db97a4ec79d9ae90ea1334089c0736264736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4467:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "70:80:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "80:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "89:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "80:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "138:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "111:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "111:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "111:33:2"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "48:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "56:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:2",
														"type": ""
													}
												],
												"src": "7:143:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "219:80:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "229:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "244:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "238:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "238:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "229:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "287:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "260:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "260:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "260:33:2"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "197:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "205:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "213:5:2",
														"type": ""
													}
												],
												"src": "156:143:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "450:765:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "497:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "506:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "509:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "499:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "499:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "499:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "471:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "480:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "467:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "467:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "492:3:2",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "463:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "463:33:2"
															},
															"nodeType": "YulIf",
															"src": "460:2:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "523:128:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "538:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "552:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "542:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "567:74:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "613:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "624:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "609:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "609:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "633:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "577:31:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "577:64:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "567:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "661:129:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "676:16:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "690:2:2",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "680:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "706:74:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "752:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "763:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "748:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "748:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "772:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "716:31:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "716:64:2"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "706:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "800:129:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "815:16:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "829:2:2",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "819:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "845:74:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "891:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "902:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "887:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "887:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "911:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "855:31:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "855:64:2"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "845:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "939:129:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "954:16:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "968:2:2",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "958:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "984:74:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1030:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1041:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1026:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1026:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1050:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "994:31:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "994:64:2"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "984:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1078:130:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1093:17:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1107:3:2",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1097:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1124:74:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1170:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1181:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1166:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1166:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1190:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1134:31:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1134:64:2"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "1124:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256t_uint256t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "388:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "399:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "411:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "419:6:2",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "427:6:2",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "435:6:2",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "443:6:2",
														"type": ""
													}
												],
												"src": "305:910:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1367:220:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1377:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1443:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1448:2:2",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1384:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1384:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1377:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1549:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_83f15613d50744e36233662068435f875a75fdb9868ea86636d56800cc9f79af",
																	"nodeType": "YulIdentifier",
																	"src": "1460:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1460:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1460:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1562:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1573:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1578:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1569:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1569:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1562:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_83f15613d50744e36233662068435f875a75fdb9868ea86636d56800cc9f79af_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1355:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1363:3:2",
														"type": ""
													}
												],
												"src": "1221:366:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1739:220:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1749:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1815:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1820:2:2",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1756:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1756:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1749:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1921:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a9e37c7970c290c2b0169155873f1318b42e2d4175bc114412df2e2ee1b730cb",
																	"nodeType": "YulIdentifier",
																	"src": "1832:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1832:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1832:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1934:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1945:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1950:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1941:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1941:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1934:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a9e37c7970c290c2b0169155873f1318b42e2d4175bc114412df2e2ee1b730cb_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1727:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1735:3:2",
														"type": ""
													}
												],
												"src": "1593:366:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2136:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2146:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2158:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2169:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2154:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2154:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2146:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2193:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2204:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2189:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2189:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2212:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2218:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2208:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2208:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2182:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2182:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2182:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2238:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2372:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_83f15613d50744e36233662068435f875a75fdb9868ea86636d56800cc9f79af_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2246:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2246:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2238:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_83f15613d50744e36233662068435f875a75fdb9868ea86636d56800cc9f79af__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2116:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2131:4:2",
														"type": ""
													}
												],
												"src": "1965:419:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2561:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2571:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2583:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2594:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2579:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2579:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2571:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2618:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2629:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2614:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2614:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2637:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2643:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2633:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2633:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2607:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2607:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2607:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2663:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2797:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a9e37c7970c290c2b0169155873f1318b42e2d4175bc114412df2e2ee1b730cb_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2671:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2671:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2663:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a9e37c7970c290c2b0169155873f1318b42e2d4175bc114412df2e2ee1b730cb__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2541:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2556:4:2",
														"type": ""
													}
												],
												"src": "2390:419:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2911:73:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2928:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2933:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2921:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2921:19:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2921:19:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2949:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2968:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2973:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2964:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2964:14:2"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "2949:11:2"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2883:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2888:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "2899:11:2",
														"type": ""
													}
												],
												"src": "2815:169:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3034:261:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3044:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3067:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3049:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3049:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "3044:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3078:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3101:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3083:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3083:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "3078:1:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3241:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3243:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3243:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3243:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3162:1:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3169:66:2",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3237:1:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3165:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3165:74:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3159:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3159:81:2"
															},
															"nodeType": "YulIf",
															"src": "3156:2:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3273:16:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3284:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3287:1:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3280:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3280:9:2"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "3273:3:2"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3021:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3024:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "3030:3:2",
														"type": ""
													}
												],
												"src": "2990:305:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3346:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3356:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3385:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "3367:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3367:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3356:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3328:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3338:7:2",
														"type": ""
													}
												],
												"src": "3301:96:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3448:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3458:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3473:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3480:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3469:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3469:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3458:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3430:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3440:7:2",
														"type": ""
													}
												],
												"src": "3403:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3580:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3590:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3601:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3590:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3562:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3572:7:2",
														"type": ""
													}
												],
												"src": "3535:77:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3646:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3663:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3666:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3656:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3656:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3656:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3760:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3763:4:2",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3753:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3753:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3753:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3784:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3787:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3777:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3777:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3777:15:2"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "3618:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3910:72:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3932:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3940:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3928:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3928:14:2"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3944:30:2",
																		"type": "",
																		"value": "Owner address cannot be zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3921:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3921:54:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3921:54:2"
														}
													]
												},
												"name": "store_literal_in_memory_83f15613d50744e36233662068435f875a75fdb9868ea86636d56800cc9f79af",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3902:6:2",
														"type": ""
													}
												],
												"src": "3804:178:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4094:114:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4116:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4124:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4112:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4112:14:2"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4128:34:2",
																		"type": "",
																		"value": "oilerToken address cannot be zer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4105:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4105:58:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4105:58:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4184:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4192:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4180:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4180:15:2"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4197:3:2",
																		"type": "",
																		"value": "o"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4173:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4173:28:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4173:28:2"
														}
													]
												},
												"name": "store_literal_in_memory_a9e37c7970c290c2b0169155873f1318b42e2d4175bc114412df2e2ee1b730cb",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "4086:6:2",
														"type": ""
													}
												],
												"src": "3988:220:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4257:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4314:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4323:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4326:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4316:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4316:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4316:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4280:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4305:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "4287:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4287:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4277:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4277:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4270:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4270:43:2"
															},
															"nodeType": "YulIf",
															"src": "4267:2:2"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4250:5:2",
														"type": ""
													}
												],
												"src": "4214:122:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4385:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4442:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4451:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4454:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4444:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4444:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4444:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4408:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4433:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "4415:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4415:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4405:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4405:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4398:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4398:43:2"
															},
															"nodeType": "YulIf",
															"src": "4395:2:2"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4378:5:2",
														"type": ""
													}
												],
												"src": "4342:122:2"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_uint256t_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_stringliteral_83f15613d50744e36233662068435f875a75fdb9868ea86636d56800cc9f79af_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_83f15613d50744e36233662068435f875a75fdb9868ea86636d56800cc9f79af(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_a9e37c7970c290c2b0169155873f1318b42e2d4175bc114412df2e2ee1b730cb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_a9e37c7970c290c2b0169155873f1318b42e2d4175bc114412df2e2ee1b730cb(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_83f15613d50744e36233662068435f875a75fdb9868ea86636d56800cc9f79af__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_83f15613d50744e36233662068435f875a75fdb9868ea86636d56800cc9f79af_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_a9e37c7970c290c2b0169155873f1318b42e2d4175bc114412df2e2ee1b730cb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a9e37c7970c290c2b0169155873f1318b42e2d4175bc114412df2e2ee1b730cb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_83f15613d50744e36233662068435f875a75fdb9868ea86636d56800cc9f79af(memPtr) {\n\n        mstore(add(memPtr, 0), \"Owner address cannot be zero\")\n\n    }\n\n    function store_literal_in_memory_a9e37c7970c290c2b0169155873f1318b42e2d4175bc114412df2e2ee1b730cb(memPtr) {\n\n        mstore(add(memPtr, 0), \"oilerToken address cannot be zer\")\n\n        mstore(add(memPtr, 32), \"o\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6101206040523480156200001257600080fd5b50604051620032b5380380620032b58339818101604052810190620000389190620001eb565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415620000ab576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000a290620002bb565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166101008173ffffffffffffffffffffffffffffffffffffffff1660601b81525050600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16141562000156576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200014d90620002dd565b60405180910390fd5b8473ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff1660601b8152505083436200019b919062000310565b608081815250508160e081815250508260a08181525050505050505062000486565b600081519050620001ce8162000452565b92915050565b600081519050620001e5816200046c565b92915050565b600080600080600060a086880312156200020457600080fd5b60006200021488828901620001bd565b95505060206200022788828901620001d4565b94505060406200023a88828901620001d4565b93505060606200024d88828901620001d4565b92505060806200026088828901620001bd565b9150509295509295909350565b60006200027c601c83620002ff565b91506200028982620003da565b602082019050919050565b6000620002a3602183620002ff565b9150620002b08262000403565b604082019050919050565b60006020820190508181036000830152620002d6816200026d565b9050919050565b60006020820190508181036000830152620002f88162000294565b9050919050565b600082825260208201905092915050565b60006200031d82620003a1565b91506200032a83620003a1565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115620003625762000361620003ab565b5b828201905092915050565b60006200037a8262000381565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4f776e657220616464726573732063616e6e6f74206265207a65726f00000000600082015250565b7f6f696c6572546f6b656e20616464726573732063616e6e6f74206265207a657260008201527f6f00000000000000000000000000000000000000000000000000000000000000602082015250565b6200045d816200036d565b81146200046957600080fd5b50565b6200047781620003a1565b81146200048357600080fd5b50565b60805160a05160c05160601c60e0516101005160601c612d7b6200053a60003960008181610d9b0152610e3f01526000818161058301528181611a2b0152611ac4015260008181610ba901528181610c73015281816110300152818161113b01526112270152600081816104fa01528181610aef0152818161100f0152818161111a015261126501526000818161032d015281816106bf01528181610dbf01528181611a4c0152611ae50152612d7b6000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c806386d1a69f116100a2578063c959360b11610071578063c959360b14610287578063cbdf382c146102b7578063e0e4a722146102d5578063f6ffab8814610305578063f968f493146103215761010b565b806386d1a69f146102235780638da5cb5b1461022d578063bc0925ae1461024b578063c2e8caf6146102695761010b565b806352946b04116100de57806352946b041461018757806370ff852b146101a5578063798633b9146101d557806381e9207d146102055761010b565b80630572b0cc146101105780631514617e1461011a57806316934fc414610138578063378592c81461016b575b600080fd5b61011861032b565b005b610122610581565b60405161012f9190612477565b60405180910390f35b610152600480360381019061014d9190611bd4565b6105a5565b6040516101629493929190612492565b60405180910390f35b61018560048036038101906101809190611c8b565b610625565b005b61018f610aed565b60405161019c9190612477565b60405180910390f35b6101bf60048036038101906101ba9190611bd4565b610b11565b6040516101cc9190612477565b60405180910390f35b6101ef60048036038101906101ea9190611c8b565b610b29565b6040516101fc919061245c565b60405180910390f35b61020d610ba7565b60405161021a91906121a1565b60405180910390f35b61022b610bcb565b005b610235610d99565b604051610242919061203c565b60405180910390f35b610253610dbd565b6040516102609190612477565b60405180910390f35b610271610de1565b60405161027e9190612477565b60405180910390f35b6102a1600480360381019061029c9190611bd4565b610de7565b6040516102ae9190612477565b60405180910390f35b6102bf610dff565b6040516102cc91906121a1565b60405180910390f35b6102ef60048036038101906102ea9190611bd4565b610e25565b6040516102fc9190612477565b60405180910390f35b61031f600480360381019061031a9190611bfd565b610e3d565b005b610329611337565b005b7f0000000000000000000000000000000000000000000000000000000000000000431161038d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610384906123dc565b60405180910390fd5b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900468ffffffffffffffffff1668ffffffffffffffffff1614610431576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104289061223c565b60405180910390fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054116104b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104aa9061241c565b60405180910390fd5b6000600254600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020547f000000000000000000000000000000000000000000000000000000000000000061052391906125a9565b61052d9190612578565b90506000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061057e338261172a565b50565b7f000000000000000000000000000000000000000000000000000000000000000081565b60006020528060005260406000206000915090508060000160009054906101000a900468ffffffffffffffffff16908060000160099054906101000a900462ffffff169080600001600c9054906101000a900463ffffffff16908060000160109054906101000a90046fffffffffffffffffffffffffffffffff16905084565b600073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156106b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ae9061237c565b60405180910390fd5b8062ffffff167f00000000000000000000000000000000000000000000000000000000000000006106e89190612603565b43111561072a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107219061227c565b60405180910390fd5b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900468ffffffffffffffffff1668ffffffffffffffffff16146107ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c59061229c565b60405180910390fd5b60006107da8383610b29565b9050600060405180608001604052808568ffffffffffffffffff1681526020018462ffffff1681526020014363ffffffff168152602001836fffffffffffffffffffffffffffffffff168152509050806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548168ffffffffffffffffff021916908368ffffffffffffffffff16021790555060208201518160000160096101000a81548162ffffff021916908362ffffff160217905550604082015181600001600c6101000a81548163ffffffff021916908363ffffffff16021790555060608201518160000160106101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff160217905550905050816fffffffffffffffffffffffffffffffff166002600082825461094b91906124e8565b92505081905550816fffffffffffffffffffffffffffffffff16600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546109b391906124e8565b92505081905550600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330876040518463ffffffff1660e01b8152600401610a19939291906120b7565b602060405180830381600087803b158015610a3357600080fd5b505af1158015610a47573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a6b9190611c39565b610aaa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aa19061239c565b60405180910390fd5b7fe7dbea143058f90be7a1644e539342c25ddc5379868fe922bab596de99debf4133858585604051610adf9493929190612117565b60405180910390a150505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60056020528060005260406000206000915090505481565b6000808262ffffff168362ffffff168568ffffffffffffffffff16610b4e91906125a9565b610b5891906125a9565b905060008111610b9d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b94906122dc565b60405180910390fd5b8091505092915050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000610bd63361185e565b905060008111610c1b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c12906121dc565b60405180910390fd5b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610c6a91906124e8565b925050819055507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610ccc9291906120ee565b602060405180830381600087803b158015610ce657600080fd5b505af1158015610cfa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d1e9190611c39565b610d5d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d54906121bc565b60405180910390fd5b7f769d4212c4fbfaa012a896b49e0f3bb14d32dd0d60ce1a13d357ee6b69db77c23382604051610d8e9291906120ee565b60405180910390a150565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b60025481565b60016020528060005260406000206000915090505481565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60046020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ecb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ec2906123bc565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610f5c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f539061243c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610fcc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fc39061233c565b60405180910390fd5b81600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231836040518263ffffffff1660e01b8152600401611087919061203c565b60206040518083038186803b15801561109f57600080fd5b505afa1580156110b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110d79190611c62565b1015611118576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161110f9061235c565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e83306040518363ffffffff1660e01b8152600401611194929190612057565b60206040518083038186803b1580156111ac57600080fd5b505afa1580156111c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111e49190611c62565b1015611225576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161121c9061231c565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd82307f00000000000000000000000000000000000000000000000000000000000000006040518463ffffffff1660e01b81526004016112a293929190612080565b602060405180830381600087803b1580156112bc57600080fd5b505af11580156112d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112f49190611c39565b611333576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161132a906123fc565b60405180910390fd5b5050565b600073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156113c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113c09061237c565b60405180910390fd5b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060800160405290816000820160009054906101000a900468ffffffffffffffffff1668ffffffffffffffffff1668ffffffffffffffffff1681526020016000820160099054906101000a900462ffffff1662ffffff1662ffffff16815260200160008201600c9054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016000820160109054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff168152505090506000816000015168ffffffffffffffffff1690506000811415611536576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161152d9061225c565b60405180910390fd5b816040015163ffffffff164311611582576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611579906122fc565b60405180910390fd5b61158b826118ba565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600080820160006101000a81549068ffffffffffffffffff02191690556000820160096101000a81549062ffffff021916905560008201600c6101000a81549063ffffffff02191690556000820160106101000a8154906fffffffffffffffffffffffffffffffff02191690555050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016116959291906120ee565b602060405180830381600087803b1580156116af57600080fd5b505af11580156116c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116e79190611c39565b611726576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161171d9061221c565b60405180910390fd5b5050565b6000811161176d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611764906122bc565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156117dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117d4906121fc565b60405180910390fd5b80600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f6e1afd29522b0aaf986597bcc53f5fb4daae2af7cfd41d00c384ab1bdf912b2382826040516118529291906120ee565b60405180910390a15050565b6000600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546118a983611a27565b6118b39190612603565b9050919050565b806020015162ffffff1681604001516118d3919061253e565b63ffffffff164310156119da5780606001516fffffffffffffffffffffffffffffffff16600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546119459190612603565b9250508190555080606001516fffffffffffffffffffffffffffffffff16600260008282546119749190612603565b925050819055507f6c6f3c7d8c87976393011cc962da12841024bc1d62d2de21716a6306ab314ef33382600001518360200151846040015163ffffffff16436119bd9190612603565b6040516119cd949392919061215c565b60405180910390a1611a24565b7f391930ab48e95a9040c849cc86e1b2f63c711a1f59d6e324ce775dc9a005105633826000015183602001518460600151604051611a1b9493929190612117565b60405180910390a15b50565b60007f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000611a7591906124e8565b4310611ac257600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050611b66565b7f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000043611b0f9190612603565b600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611b5991906125a9565b611b639190612578565b90505b919050565b600081359050611b7a81612cd2565b92915050565b600081519050611b8f81612ce9565b92915050565b600081359050611ba481612d00565b92915050565b600081519050611bb981612d17565b92915050565b600081359050611bce81612d2e565b92915050565b600060208284031215611be657600080fd5b6000611bf484828501611b6b565b91505092915050565b60008060408385031215611c1057600080fd5b6000611c1e85828601611b6b565b9250506020611c2f85828601611b6b565b9150509250929050565b600060208284031215611c4b57600080fd5b6000611c5984828501611b80565b91505092915050565b600060208284031215611c7457600080fd5b6000611c8284828501611baa565b91505092915050565b60008060408385031215611c9e57600080fd5b6000611cac85828601611bbf565b9250506020611cbd85828601611b95565b9150509250929050565b611cd081612637565b82525050565b611cdf816126cf565b82525050565b6000611cf2601d836124d7565b9150611cfd82612787565b602082019050919050565b6000611d156022836124d7565b9150611d20826127b0565b604082019050919050565b6000611d38602d836124d7565b9150611d43826127ff565b604082019050919050565b6000611d5b601a836124d7565b9150611d668261284e565b602082019050919050565b6000611d7e6050836124d7565b9150611d8982612877565b606082019050919050565b6000611da16020836124d7565b9150611dac826128ec565b602082019050919050565b6000611dc46031836124d7565b9150611dcf82612915565b604082019050919050565b6000611de7600f836124d7565b9150611df282612964565b602082019050919050565b6000611e0a6029836124d7565b9150611e158261298d565b604082019050919050565b6000611e2d6033836124d7565b9150611e38826129dc565b604082019050919050565b6000611e50603c836124d7565b9150611e5b82612a2b565b604082019050919050565b6000611e736029836124d7565b9150611e7e82612a7a565b604082019050919050565b6000611e966020836124d7565b9150611ea182612ac9565b602082019050919050565b6000611eb9602b836124d7565b9150611ec482612af2565b604082019050919050565b6000611edc6011836124d7565b9150611ee782612b41565b602082019050919050565b6000611eff6021836124d7565b9150611f0a82612b6a565b604082019050919050565b6000611f22601b836124d7565b9150611f2d82612bb9565b602082019050919050565b6000611f456033836124d7565b9150611f5082612be2565b604082019050919050565b6000611f68602b836124d7565b9150611f7382612c31565b604082019050919050565b6000611f8b601f836124d7565b9150611f9682612c80565b602082019050919050565b6000611fae6019836124d7565b9150611fb982612ca9565b602082019050919050565b611fcd81612655565b82525050565b611fdc816126f3565b82525050565b611feb81612691565b82525050565b611ffa81612705565b82525050565b612009816126a0565b82525050565b612018816126aa565b82525050565b61202781612717565b82525050565b612036816126ba565b82525050565b60006020820190506120516000830184611cc7565b92915050565b600060408201905061206c6000830185611cc7565b6120796020830184611cc7565b9392505050565b60006060820190506120956000830186611cc7565b6120a26020830185611cc7565b6120af6040830184612000565b949350505050565b60006060820190506120cc6000830186611cc7565b6120d96020830185611cc7565b6120e6604083018461201e565b949350505050565b60006040820190506121036000830185611cc7565b6121106020830184612000565b9392505050565b600060808201905061212c6000830187611cc7565b612139602083018661201e565b6121466040830185611ff1565b6121536060830184611fd3565b95945050505050565b60006080820190506121716000830187611cc7565b61217e602083018661201e565b61218b6040830185611ff1565b6121986060830184612000565b95945050505050565b60006020820190506121b66000830184611cd6565b92915050565b600060208201905081810360008301526121d581611ce5565b9050919050565b600060208201905081810360008301526121f581611d08565b9050919050565b6000602082019050818103600083015261221581611d2b565b9050919050565b6000602082019050818103600083015261223581611d4e565b9050919050565b6000602082019050818103600083015261225581611d71565b9050919050565b6000602082019050818103600083015261227581611d94565b9050919050565b6000602082019050818103600083015261229581611db7565b9050919050565b600060208201905081810360008301526122b581611dda565b9050919050565b600060208201905081810360008301526122d581611dfd565b9050919050565b600060208201905081810360008301526122f581611e20565b9050919050565b6000602082019050818103600083015261231581611e43565b9050919050565b6000602082019050818103600083015261233581611e66565b9050919050565b6000602082019050818103600083015261235581611e89565b9050919050565b6000602082019050818103600083015261237581611eac565b9050919050565b6000602082019050818103600083015261239581611ecf565b9050919050565b600060208201905081810360008301526123b581611ef2565b9050919050565b600060208201905081810360008301526123d581611f15565b9050919050565b600060208201905081810360008301526123f581611f38565b9050919050565b6000602082019050818103600083015261241581611f5b565b9050919050565b6000602082019050818103600083015261243581611f7e565b9050919050565b6000602082019050818103600083015261245581611fa1565b9050919050565b60006020820190506124716000830184611fc4565b92915050565b600060208201905061248c6000830184612000565b92915050565b60006080820190506124a7600083018761202d565b6124b46020830186611fe2565b6124c1604083018561200f565b6124ce6060830184611fc4565b95945050505050565b600082825260208201905092915050565b60006124f3826126a0565b91506124fe836126a0565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561253357612532612729565b5b828201905092915050565b6000612549826126aa565b9150612554836126aa565b92508263ffffffff0382111561256d5761256c612729565b5b828201905092915050565b6000612583826126a0565b915061258e836126a0565b92508261259e5761259d612758565b5b828204905092915050565b60006125b4826126a0565b91506125bf836126a0565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156125f8576125f7612729565b5b828202905092915050565b600061260e826126a0565b9150612619836126a0565b92508282101561262c5761262b612729565b5b828203905092915050565b600061264282612671565b9050919050565b60008115159050919050565b60006fffffffffffffffffffffffffffffffff82169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062ffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b600068ffffffffffffffffff82169050919050565b60006126da826126e1565b9050919050565b60006126ec82612671565b9050919050565b60006126fe82612655565b9050919050565b600061271082612691565b9050919050565b6000612722826126ba565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f526577617264206f696c657273207472616e73666572206661696c6564000000600082015250565b7f56657374696e672072656c656173653a206e6f20746f6b656e7320617265206460008201527f7565000000000000000000000000000000000000000000000000000000000000602082015250565b7f546f6b656e56657374696e673a2062656e65666963696172792069732074686560008201527f207a65726f206164647265737300000000000000000000000000000000000000602082015250565b7f506f6f6c20746f6b656e207472616e73666572206661696c6564000000000000600082015250565b7f596f75207374696c6c20686176652061207374616b65206c6f636b6564202d2060008201527f706c6561736520756e6c6f636b2066697273742c20646f6e2774206c6561766560208201527f2066726565206d6f6e6579206865726500000000000000000000000000000000604082015250565b7f596f7520646f6e277420686176652061207374616b6520746f20756e6c6f636b600082015250565b7f596f7572206c6f636b20706572696f642065786365656473205374616b696e6760008201527f2050726f6772616d206475726174696f6e000000000000000000000000000000602082015250565b7f416c7265616479207374616b696e670000000000000000000000000000000000600082015250565b7f596f75206469646e2774206561726e20616e7920696e746567657220616d6f7560008201527f6e74206f66207765690000000000000000000000000000000000000000000000602082015250565b7f4e65697468657220746f6b656e416d6f756e74206e6f72206c6f636b696e675060008201527f6572696f6420636f756c646e2774206265203000000000000000000000000000602082015250565b7f596f752063616e277420776974686472617720746865207374616b6520696e2060008201527f7468652073616d6520626c6f636b20697420776173206c6f636b656400000000602082015250565b7f5374616b696e6746756e6420646f65736e2774206861766520656e6f7567682060008201527f616c6c6f77616e63650000000000000000000000000000000000000000000000602082015250565b7f706f6f6c546f6b656e20616464726573732063616e6e6f74206265207a65726f600082015250565b7f5374616b696e6746756e6420646f65736e2774206861766520656e6f7567682060008201527f4f494c2062616c616e6365000000000000000000000000000000000000000000602082015250565b7f706f6f6c546f6b656e206e6f7420736574000000000000000000000000000000600082015250565b7f5472616e7366657246726f6d206f6620706f6f6c546f6b656e73206661696c6560008201527f6400000000000000000000000000000000000000000000000000000000000000602082015250565b7f43616e206f6e6c792062652063616c6c6564206279206f776e65720000000000600082015250565b7f596f752063616e206f6e6c79206765742052657761726473206166746572205360008201527f74616b696e672050726f6772616d20656e647300000000000000000000000000602082015250565b7f5472616e7366657246726f6d206f66204f494c2066726f6d205374616b696e6760008201527f46756e64206661696c6564000000000000000000000000000000000000000000602082015250565b7f596f7520646f6e2774206861766520616e7920726577617264506f696e747300600082015250565b7f706f6f6c546f6b656e2077617320616c72656164792073657400000000000000600082015250565b612cdb81612637565b8114612ce657600080fd5b50565b612cf281612649565b8114612cfd57600080fd5b50565b612d0981612691565b8114612d1457600080fd5b50565b612d20816126a0565b8114612d2b57600080fd5b50565b612d37816126ba565b8114612d4257600080fd5b5056fea26469706673582212203f20109eed4bb9ce5d17b0838ce18f043db97a4ec79d9ae90ea1334089c0736264736f6c63430008040033",
							"opcodes": "PUSH2 0x120 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x32B5 CODESIZE SUB DUP1 PUSH3 0x32B5 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x38 SWAP2 SWAP1 PUSH3 0x1EB JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH3 0xAB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xA2 SWAP1 PUSH3 0x2BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x100 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE POP POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH3 0x156 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x14D SWAP1 PUSH3 0x2DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE POP POP DUP4 NUMBER PUSH3 0x19B SWAP2 SWAP1 PUSH3 0x310 JUMP JUMPDEST PUSH1 0x80 DUP2 DUP2 MSTORE POP POP DUP2 PUSH1 0xE0 DUP2 DUP2 MSTORE POP POP DUP3 PUSH1 0xA0 DUP2 DUP2 MSTORE POP POP POP POP POP POP POP PUSH3 0x486 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1CE DUP2 PUSH3 0x452 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1E5 DUP2 PUSH3 0x46C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH3 0x204 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x214 DUP9 DUP3 DUP10 ADD PUSH3 0x1BD JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH3 0x227 DUP9 DUP3 DUP10 ADD PUSH3 0x1D4 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH3 0x23A DUP9 DUP3 DUP10 ADD PUSH3 0x1D4 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH3 0x24D DUP9 DUP3 DUP10 ADD PUSH3 0x1D4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH3 0x260 DUP9 DUP3 DUP10 ADD PUSH3 0x1BD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x27C PUSH1 0x1C DUP4 PUSH3 0x2FF JUMP JUMPDEST SWAP2 POP PUSH3 0x289 DUP3 PUSH3 0x3DA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2A3 PUSH1 0x21 DUP4 PUSH3 0x2FF JUMP JUMPDEST SWAP2 POP PUSH3 0x2B0 DUP3 PUSH3 0x403 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x2D6 DUP2 PUSH3 0x26D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x2F8 DUP2 PUSH3 0x294 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x31D DUP3 PUSH3 0x3A1 JUMP JUMPDEST SWAP2 POP PUSH3 0x32A DUP4 PUSH3 0x3A1 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH3 0x362 JUMPI PUSH3 0x361 PUSH3 0x3AB JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x37A DUP3 PUSH3 0x381 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4F776E657220616464726573732063616E6E6F74206265207A65726F00000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x6F696C6572546F6B656E20616464726573732063616E6E6F74206265207A6572 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH3 0x45D DUP2 PUSH3 0x36D JUMP JUMPDEST DUP2 EQ PUSH3 0x469 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x477 DUP2 PUSH3 0x3A1 JUMP JUMPDEST DUP2 EQ PUSH3 0x483 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0x60 SHR PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH1 0x60 SHR PUSH2 0x2D7B PUSH3 0x53A PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0xD9B ADD MSTORE PUSH2 0xE3F ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x583 ADD MSTORE DUP2 DUP2 PUSH2 0x1A2B ADD MSTORE PUSH2 0x1AC4 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0xBA9 ADD MSTORE DUP2 DUP2 PUSH2 0xC73 ADD MSTORE DUP2 DUP2 PUSH2 0x1030 ADD MSTORE DUP2 DUP2 PUSH2 0x113B ADD MSTORE PUSH2 0x1227 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x4FA ADD MSTORE DUP2 DUP2 PUSH2 0xAEF ADD MSTORE DUP2 DUP2 PUSH2 0x100F ADD MSTORE DUP2 DUP2 PUSH2 0x111A ADD MSTORE PUSH2 0x1265 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x32D ADD MSTORE DUP2 DUP2 PUSH2 0x6BF ADD MSTORE DUP2 DUP2 PUSH2 0xDBF ADD MSTORE DUP2 DUP2 PUSH2 0x1A4C ADD MSTORE PUSH2 0x1AE5 ADD MSTORE PUSH2 0x2D7B PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x10B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x86D1A69F GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xC959360B GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xC959360B EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0xCBDF382C EQ PUSH2 0x2B7 JUMPI DUP1 PUSH4 0xE0E4A722 EQ PUSH2 0x2D5 JUMPI DUP1 PUSH4 0xF6FFAB88 EQ PUSH2 0x305 JUMPI DUP1 PUSH4 0xF968F493 EQ PUSH2 0x321 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x86D1A69F EQ PUSH2 0x223 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x22D JUMPI DUP1 PUSH4 0xBC0925AE EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0xC2E8CAF6 EQ PUSH2 0x269 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x52946B04 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x52946B04 EQ PUSH2 0x187 JUMPI DUP1 PUSH4 0x70FF852B EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0x798633B9 EQ PUSH2 0x1D5 JUMPI DUP1 PUSH4 0x81E9207D EQ PUSH2 0x205 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x572B0CC EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x1514617E EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x16934FC4 EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0x378592C8 EQ PUSH2 0x16B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x118 PUSH2 0x32B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x122 PUSH2 0x581 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12F SWAP2 SWAP1 PUSH2 0x2477 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14D SWAP2 SWAP1 PUSH2 0x1BD4 JUMP JUMPDEST PUSH2 0x5A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x162 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2492 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x185 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x180 SWAP2 SWAP1 PUSH2 0x1C8B JUMP JUMPDEST PUSH2 0x625 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x18F PUSH2 0xAED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19C SWAP2 SWAP1 PUSH2 0x2477 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BA SWAP2 SWAP1 PUSH2 0x1BD4 JUMP JUMPDEST PUSH2 0xB11 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CC SWAP2 SWAP1 PUSH2 0x2477 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EA SWAP2 SWAP1 PUSH2 0x1C8B JUMP JUMPDEST PUSH2 0xB29 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FC SWAP2 SWAP1 PUSH2 0x245C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20D PUSH2 0xBA7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21A SWAP2 SWAP1 PUSH2 0x21A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22B PUSH2 0xBCB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x235 PUSH2 0xD99 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x242 SWAP2 SWAP1 PUSH2 0x203C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x253 PUSH2 0xDBD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x260 SWAP2 SWAP1 PUSH2 0x2477 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x271 PUSH2 0xDE1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27E SWAP2 SWAP1 PUSH2 0x2477 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29C SWAP2 SWAP1 PUSH2 0x1BD4 JUMP JUMPDEST PUSH2 0xDE7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AE SWAP2 SWAP1 PUSH2 0x2477 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BF PUSH2 0xDFF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CC SWAP2 SWAP1 PUSH2 0x21A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2EA SWAP2 SWAP1 PUSH2 0x1BD4 JUMP JUMPDEST PUSH2 0xE25 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FC SWAP2 SWAP1 PUSH2 0x2477 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31A SWAP2 SWAP1 PUSH2 0x1BFD JUMP JUMPDEST PUSH2 0xE3D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x329 PUSH2 0x1337 JUMP JUMPDEST STOP JUMPDEST PUSH32 0x0 NUMBER GT PUSH2 0x38D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x384 SWAP1 PUSH2 0x23DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH9 0xFFFFFFFFFFFFFFFFFF AND PUSH9 0xFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x431 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x428 SWAP1 PUSH2 0x223C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT PUSH2 0x4B3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4AA SWAP1 PUSH2 0x241C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH32 0x0 PUSH2 0x523 SWAP2 SWAP1 PUSH2 0x25A9 JUMP JUMPDEST PUSH2 0x52D SWAP2 SWAP1 PUSH2 0x2578 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x57E CALLER DUP3 PUSH2 0x172A JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH9 0xFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0x9 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH3 0xFFFFFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x6B7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AE SWAP1 PUSH2 0x237C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH3 0xFFFFFF AND PUSH32 0x0 PUSH2 0x6E8 SWAP2 SWAP1 PUSH2 0x2603 JUMP JUMPDEST NUMBER GT ISZERO PUSH2 0x72A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x721 SWAP1 PUSH2 0x227C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH9 0xFFFFFFFFFFFFFFFFFF AND PUSH9 0xFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7CE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7C5 SWAP1 PUSH2 0x229C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x7DA DUP4 DUP4 PUSH2 0xB29 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP6 PUSH9 0xFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD NUMBER PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP DUP1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH9 0xFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH9 0xFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x9 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH3 0xFFFFFF MUL NOT AND SWAP1 DUP4 PUSH3 0xFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0xC PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x10 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x94B SWAP2 SWAP1 PUSH2 0x24E8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x9B3 SWAP2 SWAP1 PUSH2 0x24E8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP8 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA19 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x20B7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA47 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA6B SWAP2 SWAP1 PUSH2 0x1C39 JUMP JUMPDEST PUSH2 0xAAA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAA1 SWAP1 PUSH2 0x239C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0xE7DBEA143058F90BE7A1644E539342C25DDC5379868FE922BAB596DE99DEBF41 CALLER DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0xADF SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2117 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH3 0xFFFFFF AND DUP4 PUSH3 0xFFFFFF AND DUP6 PUSH9 0xFFFFFFFFFFFFFFFFFF AND PUSH2 0xB4E SWAP2 SWAP1 PUSH2 0x25A9 JUMP JUMPDEST PUSH2 0xB58 SWAP2 SWAP1 PUSH2 0x25A9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0xB9D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB94 SWAP1 PUSH2 0x22DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBD6 CALLER PUSH2 0x185E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0xC1B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC12 SWAP1 PUSH2 0x21DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xC6A SWAP2 SWAP1 PUSH2 0x24E8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCCC SWAP3 SWAP2 SWAP1 PUSH2 0x20EE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCFA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD1E SWAP2 SWAP1 PUSH2 0x1C39 JUMP JUMPDEST PUSH2 0xD5D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD54 SWAP1 PUSH2 0x21BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x769D4212C4FBFAA012A896B49E0F3BB14D32DD0D60CE1A13D357EE6B69DB77C2 CALLER DUP3 PUSH1 0x40 MLOAD PUSH2 0xD8E SWAP3 SWAP2 SWAP1 PUSH2 0x20EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xECB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEC2 SWAP1 PUSH2 0x23BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF5C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF53 SWAP1 PUSH2 0x243C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xFCC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFC3 SWAP1 PUSH2 0x233C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1087 SWAP2 SWAP1 PUSH2 0x203C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x109F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10B3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10D7 SWAP2 SWAP1 PUSH2 0x1C62 JUMP JUMPDEST LT ISZERO PUSH2 0x1118 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x110F SWAP1 PUSH2 0x235C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E DUP4 ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1194 SWAP3 SWAP2 SWAP1 PUSH2 0x2057 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x11C0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11E4 SWAP2 SWAP1 PUSH2 0x1C62 JUMP JUMPDEST LT ISZERO PUSH2 0x1225 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121C SWAP1 PUSH2 0x231C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP3 ADDRESS PUSH32 0x0 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12A2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2080 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x12D0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12F4 SWAP2 SWAP1 PUSH2 0x1C39 JUMP JUMPDEST PUSH2 0x1333 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x132A SWAP1 PUSH2 0x23FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x13C9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13C0 SWAP1 PUSH2 0x237C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH9 0xFFFFFFFFFFFFFFFFFF AND PUSH9 0xFFFFFFFFFFFFFFFFFF AND PUSH9 0xFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x9 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH3 0xFFFFFF AND PUSH3 0xFFFFFF AND PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD MLOAD PUSH9 0xFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0x1536 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x152D SWAP1 PUSH2 0x225C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x40 ADD MLOAD PUSH4 0xFFFFFFFF AND NUMBER GT PUSH2 0x1582 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1579 SWAP1 PUSH2 0x22FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x158B DUP3 PUSH2 0x18BA JUMP JUMPDEST PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH9 0xFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x0 DUP3 ADD PUSH1 0x9 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH3 0xFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x0 DUP3 ADD PUSH1 0xC PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x0 DUP3 ADD PUSH1 0x10 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE POP POP PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1695 SWAP3 SWAP2 SWAP1 PUSH2 0x20EE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x16AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x16C3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x16E7 SWAP2 SWAP1 PUSH2 0x1C39 JUMP JUMPDEST PUSH2 0x1726 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x171D SWAP1 PUSH2 0x221C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x176D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1764 SWAP1 PUSH2 0x22BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x17DD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17D4 SWAP1 PUSH2 0x21FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH32 0x6E1AFD29522B0AAF986597BCC53F5FB4DAAE2AF7CFD41D00C384AB1BDF912B23 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1852 SWAP3 SWAP2 SWAP1 PUSH2 0x20EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x18A9 DUP4 PUSH2 0x1A27 JUMP JUMPDEST PUSH2 0x18B3 SWAP2 SWAP1 PUSH2 0x2603 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 PUSH1 0x20 ADD MLOAD PUSH3 0xFFFFFF AND DUP2 PUSH1 0x40 ADD MLOAD PUSH2 0x18D3 SWAP2 SWAP1 PUSH2 0x253E JUMP JUMPDEST PUSH4 0xFFFFFFFF AND NUMBER LT ISZERO PUSH2 0x19DA JUMPI DUP1 PUSH1 0x60 ADD MLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1945 SWAP2 SWAP1 PUSH2 0x2603 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x60 ADD MLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1974 SWAP2 SWAP1 PUSH2 0x2603 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0x6C6F3C7D8C87976393011CC962DA12841024BC1D62D2DE21716A6306AB314EF3 CALLER DUP3 PUSH1 0x0 ADD MLOAD DUP4 PUSH1 0x20 ADD MLOAD DUP5 PUSH1 0x40 ADD MLOAD PUSH4 0xFFFFFFFF AND NUMBER PUSH2 0x19BD SWAP2 SWAP1 PUSH2 0x2603 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19CD SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x215C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x1A24 JUMP JUMPDEST PUSH32 0x391930AB48E95A9040C849CC86E1B2F63C711A1F59D6E324CE775DC9A0051056 CALLER DUP3 PUSH1 0x0 ADD MLOAD DUP4 PUSH1 0x20 ADD MLOAD DUP5 PUSH1 0x60 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x1A1B SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2117 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH32 0x0 PUSH2 0x1A75 SWAP2 SWAP1 PUSH2 0x24E8 JUMP JUMPDEST NUMBER LT PUSH2 0x1AC2 JUMPI PUSH1 0x4 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH2 0x1B66 JUMP JUMPDEST PUSH32 0x0 PUSH32 0x0 NUMBER PUSH2 0x1B0F SWAP2 SWAP1 PUSH2 0x2603 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1B59 SWAP2 SWAP1 PUSH2 0x25A9 JUMP JUMPDEST PUSH2 0x1B63 SWAP2 SWAP1 PUSH2 0x2578 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B7A DUP2 PUSH2 0x2CD2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1B8F DUP2 PUSH2 0x2CE9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BA4 DUP2 PUSH2 0x2D00 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1BB9 DUP2 PUSH2 0x2D17 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BCE DUP2 PUSH2 0x2D2E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1BF4 DUP5 DUP3 DUP6 ADD PUSH2 0x1B6B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1C1E DUP6 DUP3 DUP7 ADD PUSH2 0x1B6B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1C2F DUP6 DUP3 DUP7 ADD PUSH2 0x1B6B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1C59 DUP5 DUP3 DUP6 ADD PUSH2 0x1B80 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C74 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1C82 DUP5 DUP3 DUP6 ADD PUSH2 0x1BAA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C9E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1CAC DUP6 DUP3 DUP7 ADD PUSH2 0x1BBF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1CBD DUP6 DUP3 DUP7 ADD PUSH2 0x1B95 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CD0 DUP2 PUSH2 0x2637 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1CDF DUP2 PUSH2 0x26CF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CF2 PUSH1 0x1D DUP4 PUSH2 0x24D7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CFD DUP3 PUSH2 0x2787 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D15 PUSH1 0x22 DUP4 PUSH2 0x24D7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D20 DUP3 PUSH2 0x27B0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D38 PUSH1 0x2D DUP4 PUSH2 0x24D7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D43 DUP3 PUSH2 0x27FF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D5B PUSH1 0x1A DUP4 PUSH2 0x24D7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D66 DUP3 PUSH2 0x284E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D7E PUSH1 0x50 DUP4 PUSH2 0x24D7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D89 DUP3 PUSH2 0x2877 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DA1 PUSH1 0x20 DUP4 PUSH2 0x24D7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DAC DUP3 PUSH2 0x28EC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DC4 PUSH1 0x31 DUP4 PUSH2 0x24D7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DCF DUP3 PUSH2 0x2915 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DE7 PUSH1 0xF DUP4 PUSH2 0x24D7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DF2 DUP3 PUSH2 0x2964 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E0A PUSH1 0x29 DUP4 PUSH2 0x24D7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E15 DUP3 PUSH2 0x298D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E2D PUSH1 0x33 DUP4 PUSH2 0x24D7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E38 DUP3 PUSH2 0x29DC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E50 PUSH1 0x3C DUP4 PUSH2 0x24D7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E5B DUP3 PUSH2 0x2A2B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E73 PUSH1 0x29 DUP4 PUSH2 0x24D7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E7E DUP3 PUSH2 0x2A7A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E96 PUSH1 0x20 DUP4 PUSH2 0x24D7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EA1 DUP3 PUSH2 0x2AC9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EB9 PUSH1 0x2B DUP4 PUSH2 0x24D7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EC4 DUP3 PUSH2 0x2AF2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EDC PUSH1 0x11 DUP4 PUSH2 0x24D7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EE7 DUP3 PUSH2 0x2B41 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EFF PUSH1 0x21 DUP4 PUSH2 0x24D7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F0A DUP3 PUSH2 0x2B6A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F22 PUSH1 0x1B DUP4 PUSH2 0x24D7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F2D DUP3 PUSH2 0x2BB9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F45 PUSH1 0x33 DUP4 PUSH2 0x24D7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F50 DUP3 PUSH2 0x2BE2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F68 PUSH1 0x2B DUP4 PUSH2 0x24D7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F73 DUP3 PUSH2 0x2C31 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F8B PUSH1 0x1F DUP4 PUSH2 0x24D7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F96 DUP3 PUSH2 0x2C80 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FAE PUSH1 0x19 DUP4 PUSH2 0x24D7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FB9 DUP3 PUSH2 0x2CA9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FCD DUP2 PUSH2 0x2655 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1FDC DUP2 PUSH2 0x26F3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1FEB DUP2 PUSH2 0x2691 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1FFA DUP2 PUSH2 0x2705 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2009 DUP2 PUSH2 0x26A0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2018 DUP2 PUSH2 0x26AA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2027 DUP2 PUSH2 0x2717 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2036 DUP2 PUSH2 0x26BA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2051 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1CC7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x206C PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1CC7 JUMP JUMPDEST PUSH2 0x2079 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1CC7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2095 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1CC7 JUMP JUMPDEST PUSH2 0x20A2 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1CC7 JUMP JUMPDEST PUSH2 0x20AF PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2000 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x20CC PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1CC7 JUMP JUMPDEST PUSH2 0x20D9 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1CC7 JUMP JUMPDEST PUSH2 0x20E6 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x201E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2103 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1CC7 JUMP JUMPDEST PUSH2 0x2110 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2000 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x212C PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1CC7 JUMP JUMPDEST PUSH2 0x2139 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x201E JUMP JUMPDEST PUSH2 0x2146 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1FF1 JUMP JUMPDEST PUSH2 0x2153 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1FD3 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2171 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1CC7 JUMP JUMPDEST PUSH2 0x217E PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x201E JUMP JUMPDEST PUSH2 0x218B PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1FF1 JUMP JUMPDEST PUSH2 0x2198 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x2000 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x21B6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1CD6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x21D5 DUP2 PUSH2 0x1CE5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x21F5 DUP2 PUSH2 0x1D08 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2215 DUP2 PUSH2 0x1D2B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2235 DUP2 PUSH2 0x1D4E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2255 DUP2 PUSH2 0x1D71 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2275 DUP2 PUSH2 0x1D94 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2295 DUP2 PUSH2 0x1DB7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x22B5 DUP2 PUSH2 0x1DDA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x22D5 DUP2 PUSH2 0x1DFD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x22F5 DUP2 PUSH2 0x1E20 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2315 DUP2 PUSH2 0x1E43 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2335 DUP2 PUSH2 0x1E66 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2355 DUP2 PUSH2 0x1E89 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2375 DUP2 PUSH2 0x1EAC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2395 DUP2 PUSH2 0x1ECF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x23B5 DUP2 PUSH2 0x1EF2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x23D5 DUP2 PUSH2 0x1F15 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x23F5 DUP2 PUSH2 0x1F38 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2415 DUP2 PUSH2 0x1F5B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2435 DUP2 PUSH2 0x1F7E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2455 DUP2 PUSH2 0x1FA1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2471 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1FC4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x248C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2000 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x24A7 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x202D JUMP JUMPDEST PUSH2 0x24B4 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1FE2 JUMP JUMPDEST PUSH2 0x24C1 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x200F JUMP JUMPDEST PUSH2 0x24CE PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1FC4 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24F3 DUP3 PUSH2 0x26A0 JUMP JUMPDEST SWAP2 POP PUSH2 0x24FE DUP4 PUSH2 0x26A0 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x2533 JUMPI PUSH2 0x2532 PUSH2 0x2729 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2549 DUP3 PUSH2 0x26AA JUMP JUMPDEST SWAP2 POP PUSH2 0x2554 DUP4 PUSH2 0x26AA JUMP JUMPDEST SWAP3 POP DUP3 PUSH4 0xFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x256D JUMPI PUSH2 0x256C PUSH2 0x2729 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2583 DUP3 PUSH2 0x26A0 JUMP JUMPDEST SWAP2 POP PUSH2 0x258E DUP4 PUSH2 0x26A0 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x259E JUMPI PUSH2 0x259D PUSH2 0x2758 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25B4 DUP3 PUSH2 0x26A0 JUMP JUMPDEST SWAP2 POP PUSH2 0x25BF DUP4 PUSH2 0x26A0 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x25F8 JUMPI PUSH2 0x25F7 PUSH2 0x2729 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x260E DUP3 PUSH2 0x26A0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2619 DUP4 PUSH2 0x26A0 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x262C JUMPI PUSH2 0x262B PUSH2 0x2729 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2642 DUP3 PUSH2 0x2671 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH9 0xFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26DA DUP3 PUSH2 0x26E1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26EC DUP3 PUSH2 0x2671 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26FE DUP3 PUSH2 0x2655 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2710 DUP3 PUSH2 0x2691 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2722 DUP3 PUSH2 0x26BA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x526577617264206F696C657273207472616E73666572206661696C6564000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x56657374696E672072656C656173653A206E6F20746F6B656E73206172652064 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7565000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x546F6B656E56657374696E673A2062656E656669636961727920697320746865 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F206164647265737300000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x506F6F6C20746F6B656E207472616E73666572206661696C6564000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x596F75207374696C6C20686176652061207374616B65206C6F636B6564202D20 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x706C6561736520756E6C6F636B2066697273742C20646F6E2774206C65617665 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x2066726565206D6F6E6579206865726500000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x596F7520646F6E277420686176652061207374616B6520746F20756E6C6F636B PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x596F7572206C6F636B20706572696F642065786365656473205374616B696E67 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x2050726F6772616D206475726174696F6E000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416C7265616479207374616B696E670000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x596F75206469646E2774206561726E20616E7920696E746567657220616D6F75 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E74206F66207765690000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4E65697468657220746F6B656E416D6F756E74206E6F72206C6F636B696E6750 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6572696F6420636F756C646E2774206265203000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x596F752063616E277420776974686472617720746865207374616B6520696E20 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7468652073616D6520626C6F636B20697420776173206C6F636B656400000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5374616B696E6746756E6420646F65736E2774206861766520656E6F75676820 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C6C6F77616E63650000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x706F6F6C546F6B656E20616464726573732063616E6E6F74206265207A65726F PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5374616B696E6746756E6420646F65736E2774206861766520656E6F75676820 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x4F494C2062616C616E6365000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x706F6F6C546F6B656E206E6F7420736574000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5472616E7366657246726F6D206F6620706F6F6C546F6B656E73206661696C65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6400000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x43616E206F6E6C792062652063616C6C6564206279206F776E65720000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x596F752063616E206F6E6C792067657420526577617264732061667465722053 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x74616B696E672050726F6772616D20656E647300000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5472616E7366657246726F6D206F66204F494C2066726F6D205374616B696E67 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x46756E64206661696C6564000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x596F7520646F6E2774206861766520616E7920726577617264506F696E747300 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x706F6F6C546F6B656E2077617320616C72656164792073657400000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x2CDB DUP2 PUSH2 0x2637 JUMP JUMPDEST DUP2 EQ PUSH2 0x2CE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2CF2 DUP2 PUSH2 0x2649 JUMP JUMPDEST DUP2 EQ PUSH2 0x2CFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2D09 DUP2 PUSH2 0x2691 JUMP JUMPDEST DUP2 EQ PUSH2 0x2D14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2D20 DUP2 PUSH2 0x26A0 JUMP JUMPDEST DUP2 EQ PUSH2 0x2D2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2D37 DUP2 PUSH2 0x26BA JUMP JUMPDEST DUP2 EQ PUSH2 0x2D42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODEHASH KECCAK256 LT SWAP15 0xED 0x4B 0xB9 0xCE 0x5D OR 0xB0 DUP4 DUP13 0xE1 DUP16 DIV RETURNDATASIZE 0xB9 PUSH27 0x4EC79D9AE90EA1334089C0736264736F6C63430008040033000000 ",
							"sourceMap": "2612:15215:0:-:0;;;7116:553;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7289:3;7271:22;;:6;:22;;;;7263:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;7344:6;7336:14;;;;;;;;;;;;7392:3;7369:27;;:11;:27;;;;7361:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;7464:11;7444:32;;;;;;;;;;;;7536:24;7521:12;:39;;;;:::i;:::-;7495:65;;;;;;7588:16;7570:34;;;;;;7644:18;7624:38;;;;;;7116:553;;;;;2612:15215;;7:143:2;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;70:80;;;;:::o;156:143::-;213:5;244:6;238:13;229:22;;260:33;287:5;260:33;:::i;:::-;219:80;;;;:::o;305:910::-;411:6;419;427;435;443;492:3;480:9;471:7;467:23;463:33;460:2;;;509:1;506;499:12;460:2;552:1;577:64;633:7;624:6;613:9;609:22;577:64;:::i;:::-;567:74;;523:128;690:2;716:64;772:7;763:6;752:9;748:22;716:64;:::i;:::-;706:74;;661:129;829:2;855:64;911:7;902:6;891:9;887:22;855:64;:::i;:::-;845:74;;800:129;968:2;994:64;1050:7;1041:6;1030:9;1026:22;994:64;:::i;:::-;984:74;;939:129;1107:3;1134:64;1190:7;1181:6;1170:9;1166:22;1134:64;:::i;:::-;1124:74;;1078:130;450:765;;;;;;;;:::o;1221:366::-;1363:3;1384:67;1448:2;1443:3;1384:67;:::i;:::-;1377:74;;1460:93;1549:3;1460:93;:::i;:::-;1578:2;1573:3;1569:12;1562:19;;1367:220;;;:::o;1593:366::-;1735:3;1756:67;1820:2;1815:3;1756:67;:::i;:::-;1749:74;;1832:93;1921:3;1832:93;:::i;:::-;1950:2;1945:3;1941:12;1934:19;;1739:220;;;:::o;1965:419::-;2131:4;2169:2;2158:9;2154:18;2146:26;;2218:9;2212:4;2208:20;2204:1;2193:9;2189:17;2182:47;2246:131;2372:4;2246:131;:::i;:::-;2238:139;;2136:248;;;:::o;2390:419::-;2556:4;2594:2;2583:9;2579:18;2571:26;;2643:9;2637:4;2633:20;2629:1;2618:9;2614:17;2607:47;2671:131;2797:4;2671:131;:::i;:::-;2663:139;;2561:248;;;:::o;2815:169::-;2899:11;2933:6;2928:3;2921:19;2973:4;2968:3;2964:14;2949:29;;2911:73;;;;:::o;2990:305::-;3030:3;3049:20;3067:1;3049:20;:::i;:::-;3044:25;;3083:20;3101:1;3083:20;:::i;:::-;3078:25;;3237:1;3169:66;3165:74;3162:1;3159:81;3156:2;;;3243:18;;:::i;:::-;3156:2;3287:1;3284;3280:9;3273:16;;3034:261;;;;:::o;3301:96::-;3338:7;3367:24;3385:5;3367:24;:::i;:::-;3356:35;;3346:51;;;:::o;3403:126::-;3440:7;3480:42;3473:5;3469:54;3458:65;;3448:81;;;:::o;3535:77::-;3572:7;3601:5;3590:16;;3580:32;;;:::o;3618:180::-;3666:77;3663:1;3656:88;3763:4;3760:1;3753:15;3787:4;3784:1;3777:15;3804:178;3944:30;3940:1;3932:6;3928:14;3921:54;3910:72;:::o;3988:220::-;4128:34;4124:1;4116:6;4112:14;4105:58;4197:3;4192:2;4184:6;4180:15;4173:28;4094:114;:::o;4214:122::-;4287:24;4305:5;4287:24;:::i;:::-;4280:5;4277:35;4267:2;;4326:1;4323;4316:12;4267:2;4257:79;:::o;4342:122::-;4415:24;4433:5;4415:24;:::i;:::-;4408:5;4405:35;4395:2;;4454:1;4451;4444:12;4395:2;4385:79;:::o;2612:15215:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:33134:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:2"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:2",
														"type": ""
													}
												],
												"src": "7:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "212:77:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "222:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "237:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "231:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "222:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "277:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "253:23:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "253:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "253:30:2"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "190:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "198:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "206:5:2",
														"type": ""
													}
												],
												"src": "152:137:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "346:86:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "356:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "378:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "365:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "365:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "356:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "420:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint24",
																	"nodeType": "YulIdentifier",
																	"src": "394:25:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "394:32:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "394:32:2"
														}
													]
												},
												"name": "abi_decode_t_uint24",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "324:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "332:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "340:5:2",
														"type": ""
													}
												],
												"src": "295:137:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "501:80:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "511:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "526:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "520:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "520:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "511:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "569:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "542:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "542:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "542:33:2"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "479:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "487:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "495:5:2",
														"type": ""
													}
												],
												"src": "438:143:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "638:86:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "648:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "670:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "657:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "657:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "648:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "712:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint72",
																	"nodeType": "YulIdentifier",
																	"src": "686:25:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "686:32:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "686:32:2"
														}
													]
												},
												"name": "abi_decode_t_uint72",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "616:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "624:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "632:5:2",
														"type": ""
													}
												],
												"src": "587:137:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "796:196:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "842:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "851:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "854:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "844:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "844:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "844:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "817:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "826:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "813:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "813:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "838:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "809:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "809:32:2"
															},
															"nodeType": "YulIf",
															"src": "806:2:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "868:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "883:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "897:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "887:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "912:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "947:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "958:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "943:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "943:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "967:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "922:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "922:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "912:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "766:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "777:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "789:6:2",
														"type": ""
													}
												],
												"src": "730:262:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1081:324:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1127:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1136:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1139:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1129:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1129:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1129:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1102:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1111:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1098:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1098:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1123:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1094:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1094:32:2"
															},
															"nodeType": "YulIf",
															"src": "1091:2:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "1153:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1168:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1182:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1172:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1197:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1232:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1243:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1228:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1228:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1252:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1207:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1207:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1197:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1280:118:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1295:16:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1309:2:2",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1299:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1325:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1360:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1371:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1356:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1356:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1380:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1335:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1335:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1325:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1043:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1054:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1066:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1074:6:2",
														"type": ""
													}
												],
												"src": "998:407:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1485:204:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1531:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1540:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1543:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1533:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1533:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1533:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1506:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1515:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1502:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1502:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1527:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1498:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1498:32:2"
															},
															"nodeType": "YulIf",
															"src": "1495:2:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "1557:125:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1572:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1586:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1576:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1601:71:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1644:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1655:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1640:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1640:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1664:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1611:28:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1611:61:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1601:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1455:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1466:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1478:6:2",
														"type": ""
													}
												],
												"src": "1411:278:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1772:207:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1818:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1827:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1830:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1820:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1820:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1820:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1793:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1802:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1789:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1789:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1814:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1785:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1785:32:2"
															},
															"nodeType": "YulIf",
															"src": "1782:2:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "1844:128:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1859:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1873:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1863:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1888:74:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1934:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1945:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1930:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1930:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1954:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1898:31:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1898:64:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1888:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1742:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1753:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1765:6:2",
														"type": ""
													}
												],
												"src": "1695:284:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2066:322:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2112:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2121:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2124:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2114:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2114:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2114:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2087:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2096:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2083:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2083:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2108:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2079:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2079:32:2"
															},
															"nodeType": "YulIf",
															"src": "2076:2:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "2138:116:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2153:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2167:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2157:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2182:62:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2216:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2227:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2212:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2212:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2236:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint72",
																			"nodeType": "YulIdentifier",
																			"src": "2192:19:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2192:52:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2182:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2264:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2279:16:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2293:2:2",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2283:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2309:62:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2343:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2354:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2339:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2339:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2363:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint24",
																			"nodeType": "YulIdentifier",
																			"src": "2319:19:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2319:52:2"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2309:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint72t_uint24",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2028:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2039:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2051:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2059:6:2",
														"type": ""
													}
												],
												"src": "1985:403:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2459:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2476:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2499:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2481:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2481:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2469:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2469:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2469:37:2"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2447:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2454:3:2",
														"type": ""
													}
												],
												"src": "2394:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2597:80:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2614:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2664:5:2"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$786_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2619:44:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2619:51:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2607:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2607:64:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2607:64:2"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$786_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2585:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2592:3:2",
														"type": ""
													}
												],
												"src": "2518:159:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2829:220:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2839:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2905:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2910:2:2",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2846:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2846:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2839:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3011:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1d084e2eca749984c089d1d9f64331c149c27c323008184a1491516501160a6b",
																	"nodeType": "YulIdentifier",
																	"src": "2922:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2922:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2922:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3024:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3035:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3040:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3031:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3031:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3024:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1d084e2eca749984c089d1d9f64331c149c27c323008184a1491516501160a6b_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2817:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2825:3:2",
														"type": ""
													}
												],
												"src": "2683:366:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3201:220:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3211:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3277:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3282:2:2",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3218:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3218:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3211:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3383:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_232d7994234e21dc0a46dcff0076032352d1b7b4d58ecc76ed88eec990d90098",
																	"nodeType": "YulIdentifier",
																	"src": "3294:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3294:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3294:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3396:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3407:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3412:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3403:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3403:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3396:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_232d7994234e21dc0a46dcff0076032352d1b7b4d58ecc76ed88eec990d90098_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3189:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3197:3:2",
														"type": ""
													}
												],
												"src": "3055:366:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3573:220:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3583:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3649:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3654:2:2",
																		"type": "",
																		"value": "45"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3590:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3590:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3583:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3755:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2418688d011b8e0830741b4ef5b95d25f3075f5a8407237c54796d2479ff21e5",
																	"nodeType": "YulIdentifier",
																	"src": "3666:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3666:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3666:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3768:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3779:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3784:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3775:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3775:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3768:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2418688d011b8e0830741b4ef5b95d25f3075f5a8407237c54796d2479ff21e5_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3561:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3569:3:2",
														"type": ""
													}
												],
												"src": "3427:366:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3945:220:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3955:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4021:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4026:2:2",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3962:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3962:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3955:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4127:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_33a0d73ef506feaebcf4cdd68c1a9783ad6fdd5367feedb0a0d58ce8d7b1ad1a",
																	"nodeType": "YulIdentifier",
																	"src": "4038:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4038:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4038:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4140:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4151:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4156:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4147:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4147:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4140:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_33a0d73ef506feaebcf4cdd68c1a9783ad6fdd5367feedb0a0d58ce8d7b1ad1a_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3933:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3941:3:2",
														"type": ""
													}
												],
												"src": "3799:366:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4317:220:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4327:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4393:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4398:2:2",
																		"type": "",
																		"value": "80"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4334:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4334:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4327:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4499:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4d2c35fe1a7df903955f64419a99f644f465f2a0aa959d96b99839301c2ef508",
																	"nodeType": "YulIdentifier",
																	"src": "4410:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4410:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4410:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4512:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4523:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4528:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4519:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4519:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4512:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4d2c35fe1a7df903955f64419a99f644f465f2a0aa959d96b99839301c2ef508_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4305:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4313:3:2",
														"type": ""
													}
												],
												"src": "4171:366:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4689:220:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4699:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4765:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4770:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4706:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4706:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4699:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4871:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_52ac77891b100190c173ca8db34c1090b0a3a5fd7fa47169c21476dd2c32bc2f",
																	"nodeType": "YulIdentifier",
																	"src": "4782:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4782:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4782:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4884:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4895:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4900:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4891:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4891:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4884:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_52ac77891b100190c173ca8db34c1090b0a3a5fd7fa47169c21476dd2c32bc2f_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4677:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4685:3:2",
														"type": ""
													}
												],
												"src": "4543:366:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5061:220:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5071:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5137:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5142:2:2",
																		"type": "",
																		"value": "49"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5078:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5078:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5071:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5243:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_5735093ee1c27da93975faba569ca18ca1f3facf35d6dfe2cae61f4fc1bf709a",
																	"nodeType": "YulIdentifier",
																	"src": "5154:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5154:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5154:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5256:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5267:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5272:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5263:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5263:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5256:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_5735093ee1c27da93975faba569ca18ca1f3facf35d6dfe2cae61f4fc1bf709a_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5049:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5057:3:2",
														"type": ""
													}
												],
												"src": "4915:366:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5433:220:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5443:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5509:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5514:2:2",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5450:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5450:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5443:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5615:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6484e2602344143d38b0f6044478ddd9128a019aabb51146650cc995fb45b4fe",
																	"nodeType": "YulIdentifier",
																	"src": "5526:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5526:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5526:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5628:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5639:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5644:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5635:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5635:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5628:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6484e2602344143d38b0f6044478ddd9128a019aabb51146650cc995fb45b4fe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5421:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5429:3:2",
														"type": ""
													}
												],
												"src": "5287:366:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5805:220:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5815:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5881:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5886:2:2",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5822:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5822:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5815:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5987:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6c4dd08c63778c1a28236bdb848c48062fa51b777ba1838c68276b07c98b172b",
																	"nodeType": "YulIdentifier",
																	"src": "5898:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5898:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5898:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6000:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6011:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6016:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6007:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6007:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6000:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6c4dd08c63778c1a28236bdb848c48062fa51b777ba1838c68276b07c98b172b_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5793:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5801:3:2",
														"type": ""
													}
												],
												"src": "5659:366:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6177:220:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6187:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6253:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6258:2:2",
																		"type": "",
																		"value": "51"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6194:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6194:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6187:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6359:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6e6a919188e639c6fec1ac974bcd532a51e7cb501fa68e5b2f08f294731a4b88",
																	"nodeType": "YulIdentifier",
																	"src": "6270:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6270:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6270:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6372:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6383:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6388:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6379:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6379:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6372:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6e6a919188e639c6fec1ac974bcd532a51e7cb501fa68e5b2f08f294731a4b88_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6165:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6173:3:2",
														"type": ""
													}
												],
												"src": "6031:366:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6549:220:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6559:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6625:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6630:2:2",
																		"type": "",
																		"value": "60"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6566:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6566:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6559:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6731:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_79dd45e51ab165bfcf7a14b5d794e1100e4f43c66e93d82a8f33a73acdace21c",
																	"nodeType": "YulIdentifier",
																	"src": "6642:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6642:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6642:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6744:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6755:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6760:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6751:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6751:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6744:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_79dd45e51ab165bfcf7a14b5d794e1100e4f43c66e93d82a8f33a73acdace21c_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6537:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6545:3:2",
														"type": ""
													}
												],
												"src": "6403:366:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6921:220:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6931:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6997:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7002:2:2",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6938:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6938:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6931:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7103:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8ec3e015200e1f9e6e0943e9e536de8fd2eccd7db3e2c39533b307d29bacc8bf",
																	"nodeType": "YulIdentifier",
																	"src": "7014:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7014:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7014:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7116:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7127:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7132:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7123:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7123:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7116:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8ec3e015200e1f9e6e0943e9e536de8fd2eccd7db3e2c39533b307d29bacc8bf_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6909:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6917:3:2",
														"type": ""
													}
												],
												"src": "6775:366:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7293:220:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7303:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7369:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7374:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7310:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7310:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7303:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7475:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_94bb83f969d01c78c03c2937a1d7cdba3c6b39448e0a8fec49f98ae3315b3426",
																	"nodeType": "YulIdentifier",
																	"src": "7386:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7386:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7386:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7488:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7499:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7504:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7495:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7495:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7488:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_94bb83f969d01c78c03c2937a1d7cdba3c6b39448e0a8fec49f98ae3315b3426_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7281:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7289:3:2",
														"type": ""
													}
												],
												"src": "7147:366:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7665:220:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7675:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7741:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7746:2:2",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7682:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7682:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7675:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7847:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b9edd99dd8d250815668679e6c075641f1995b1ddaf15ec4c0dabacd9db8c322",
																	"nodeType": "YulIdentifier",
																	"src": "7758:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7758:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7758:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7860:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7871:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7876:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7867:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7867:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7860:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b9edd99dd8d250815668679e6c075641f1995b1ddaf15ec4c0dabacd9db8c322_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7653:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7661:3:2",
														"type": ""
													}
												],
												"src": "7519:366:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8037:220:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8047:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8113:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8118:2:2",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8054:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8054:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8047:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8219:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_baaab41cf1af04b33672a25d6c62a56d368464d86a10d2970d4d31293d0db24a",
																	"nodeType": "YulIdentifier",
																	"src": "8130:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8130:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8130:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8232:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8243:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8248:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8239:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8239:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8232:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_baaab41cf1af04b33672a25d6c62a56d368464d86a10d2970d4d31293d0db24a_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8025:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8033:3:2",
														"type": ""
													}
												],
												"src": "7891:366:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8409:220:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8419:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8485:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8490:2:2",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8426:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8426:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8419:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8591:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_bd8bf05e4eeff98331c5d573ce3c5c39a2f1dfd162031e09da49c962885a911b",
																	"nodeType": "YulIdentifier",
																	"src": "8502:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8502:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8502:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8604:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8615:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8620:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8611:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8611:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8604:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_bd8bf05e4eeff98331c5d573ce3c5c39a2f1dfd162031e09da49c962885a911b_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8397:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8405:3:2",
														"type": ""
													}
												],
												"src": "8263:366:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8781:220:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8791:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8857:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8862:2:2",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8798:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8798:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8791:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8963:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c1afbdaa0ffb21f43f34bdebbd4895f3e6a5d4de4e77864bde1be59aa53542b2",
																	"nodeType": "YulIdentifier",
																	"src": "8874:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8874:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8874:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8976:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8987:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8992:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8983:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8983:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8976:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c1afbdaa0ffb21f43f34bdebbd4895f3e6a5d4de4e77864bde1be59aa53542b2_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8769:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8777:3:2",
														"type": ""
													}
												],
												"src": "8635:366:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9153:220:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9163:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9229:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9234:2:2",
																		"type": "",
																		"value": "51"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9170:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9170:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9163:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9335:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c3786129cca9bd92dcb42692167cb02d02ae8b030024a781b08e7dafd22bc2fb",
																	"nodeType": "YulIdentifier",
																	"src": "9246:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9246:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9246:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9348:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9359:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9364:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9355:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9355:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9348:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c3786129cca9bd92dcb42692167cb02d02ae8b030024a781b08e7dafd22bc2fb_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9141:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9149:3:2",
														"type": ""
													}
												],
												"src": "9007:366:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9525:220:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9535:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9601:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9606:2:2",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9542:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9542:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9535:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9707:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_dce7fcdf8c70b472dd9931854d7bcc019b46831d2b96b88b381e506bbb74c94f",
																	"nodeType": "YulIdentifier",
																	"src": "9618:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9618:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9618:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9720:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9731:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9736:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9727:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9727:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9720:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_dce7fcdf8c70b472dd9931854d7bcc019b46831d2b96b88b381e506bbb74c94f_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9513:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9521:3:2",
														"type": ""
													}
												],
												"src": "9379:366:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9897:220:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9907:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9973:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9978:2:2",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9914:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9914:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9907:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10079:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e5134b59355dcbbe2d4e436ec1b03c78c1275f34182c99b81e54de3ae327f5fc",
																	"nodeType": "YulIdentifier",
																	"src": "9990:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9990:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9990:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10092:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10103:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10108:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10099:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10099:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10092:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e5134b59355dcbbe2d4e436ec1b03c78c1275f34182c99b81e54de3ae327f5fc_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9885:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9893:3:2",
														"type": ""
													}
												],
												"src": "9751:366:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10269:220:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10279:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10345:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10350:2:2",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10286:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10286:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10279:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10451:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f49325f1961ffe577581956fc74c87e3c797c6d9a3bf9adf95b186a86eb8bca0",
																	"nodeType": "YulIdentifier",
																	"src": "10362:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10362:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10362:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10464:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10475:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10480:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10471:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10471:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10464:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f49325f1961ffe577581956fc74c87e3c797c6d9a3bf9adf95b186a86eb8bca0_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10257:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10265:3:2",
														"type": ""
													}
												],
												"src": "10123:366:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10560:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10577:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10600:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint128",
																			"nodeType": "YulIdentifier",
																			"src": "10582:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10582:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10570:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10570:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10570:37:2"
														}
													]
												},
												"name": "abi_encode_t_uint128_to_t_uint128_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10548:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10555:3:2",
														"type": ""
													}
												],
												"src": "10495:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10684:66:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10701:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10737:5:2"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_uint128_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "10706:30:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10706:37:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10694:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10694:50:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10694:50:2"
														}
													]
												},
												"name": "abi_encode_t_uint128_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10672:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10679:3:2",
														"type": ""
													}
												],
												"src": "10619:131:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10819:52:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10836:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10858:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint24",
																			"nodeType": "YulIdentifier",
																			"src": "10841:16:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10841:23:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10829:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10829:36:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10829:36:2"
														}
													]
												},
												"name": "abi_encode_t_uint24_to_t_uint24_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10807:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10814:3:2",
														"type": ""
													}
												],
												"src": "10756:115:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10941:65:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10958:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10993:5:2"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_uint24_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "10963:29:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10963:36:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10951:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10951:49:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10951:49:2"
														}
													]
												},
												"name": "abi_encode_t_uint24_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10929:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10936:3:2",
														"type": ""
													}
												],
												"src": "10877:129:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11077:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11094:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11117:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "11099:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11099:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11087:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11087:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11087:37:2"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11065:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11072:3:2",
														"type": ""
													}
												],
												"src": "11012:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11199:52:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11216:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11238:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint32",
																			"nodeType": "YulIdentifier",
																			"src": "11221:16:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11221:23:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11209:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11209:36:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11209:36:2"
														}
													]
												},
												"name": "abi_encode_t_uint32_to_t_uint32_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11187:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11194:3:2",
														"type": ""
													}
												],
												"src": "11136:115:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11321:65:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11338:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11373:5:2"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_uint72_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "11343:29:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11343:36:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11331:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11331:49:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11331:49:2"
														}
													]
												},
												"name": "abi_encode_t_uint72_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11309:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11316:3:2",
														"type": ""
													}
												],
												"src": "11257:129:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11455:52:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11472:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11494:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint72",
																			"nodeType": "YulIdentifier",
																			"src": "11477:16:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11477:23:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11465:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11465:36:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11465:36:2"
														}
													]
												},
												"name": "abi_encode_t_uint72_to_t_uint72_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11443:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11450:3:2",
														"type": ""
													}
												],
												"src": "11392:115:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11611:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11621:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11633:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11644:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11629:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11629:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11621:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11701:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11714:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11725:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11710:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11710:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11657:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11657:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11657:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11583:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11595:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11606:4:2",
														"type": ""
													}
												],
												"src": "11513:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11867:206:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11877:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11889:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11900:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11885:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11885:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11877:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11957:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11970:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11981:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11966:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11966:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11913:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11913:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11913:71:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "12038:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12051:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12062:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12047:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12047:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11994:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11994:72:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11994:72:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11831:9:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11843:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11851:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11862:4:2",
														"type": ""
													}
												],
												"src": "11741:332:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12233:288:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12243:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12255:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12266:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12251:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12251:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12243:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12323:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12336:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12347:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12332:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12332:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12279:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12279:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12279:71:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "12404:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12417:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12428:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12413:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12413:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12360:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12360:72:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12360:72:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "12486:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12499:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12510:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12495:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12495:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12442:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12442:72:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12442:72:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12189:9:2",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "12201:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12209:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12217:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12228:4:2",
														"type": ""
													}
												],
												"src": "12079:442:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12680:287:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12690:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12702:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12713:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12698:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12698:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12690:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12770:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12783:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12794:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12779:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12779:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12726:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12726:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12726:71:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "12851:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12864:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12875:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12860:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12860:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12807:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12807:72:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12807:72:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "12932:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12945:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12956:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12941:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12941:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint72_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12889:42:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12889:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12889:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint72__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12636:9:2",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "12648:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12656:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12664:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12675:4:2",
														"type": ""
													}
												],
												"src": "12527:440:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13099:206:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13109:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13121:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13132:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13117:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "13117:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13109:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13189:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13202:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13213:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13198:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13198:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13145:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "13145:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13145:71:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "13270:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13283:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13294:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13279:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13279:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13226:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "13226:72:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13226:72:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13063:9:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "13075:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13083:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13094:4:2",
														"type": ""
													}
												],
												"src": "12973:332:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13491:369:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13501:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13513:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13524:3:2",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13509:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "13509:19:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13501:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13582:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13595:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13606:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13591:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13591:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13538:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "13538:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13538:71:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "13662:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13675:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13686:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13671:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13671:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint72_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13619:42:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "13619:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13619:71:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "13743:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13756:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13767:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13752:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13752:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint24_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13700:42:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "13700:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13700:71:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "13825:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13838:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13849:2:2",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13834:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13834:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint128_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13781:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "13781:72:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13781:72:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint72_t_uint24_t_uint128__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13439:9:2",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "13451:6:2",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "13459:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "13467:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13475:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13486:4:2",
														"type": ""
													}
												],
												"src": "13311:549:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14046:369:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14056:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14068:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14079:3:2",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14064:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "14064:19:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14056:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "14137:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14150:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14161:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14146:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14146:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14093:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "14093:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14093:71:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "14217:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14230:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14241:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14226:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14226:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint72_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14174:42:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "14174:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14174:71:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "14298:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14311:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14322:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14307:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14307:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint24_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14255:42:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "14255:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14255:71:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "14380:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14393:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14404:2:2",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14389:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14389:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14336:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "14336:72:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14336:72:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint72_t_uint24_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13994:9:2",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "14006:6:2",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "14014:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "14022:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14030:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14041:4:2",
														"type": ""
													}
												],
												"src": "13866:549:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14533:138:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14543:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14555:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14566:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14551:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "14551:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14543:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "14637:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14650:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14661:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14646:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14646:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$786_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14579:57:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "14579:85:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14579:85:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$786__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14505:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14517:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14528:4:2",
														"type": ""
													}
												],
												"src": "14421:250:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14848:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14858:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14870:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14881:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14866:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "14866:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14858:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14905:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14916:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14901:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14901:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14924:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14930:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14920:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14920:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14894:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "14894:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14894:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14950:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15084:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1d084e2eca749984c089d1d9f64331c149c27c323008184a1491516501160a6b_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14958:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "14958:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14950:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1d084e2eca749984c089d1d9f64331c149c27c323008184a1491516501160a6b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14828:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14843:4:2",
														"type": ""
													}
												],
												"src": "14677:419:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15273:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15283:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15295:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15306:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15291:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "15291:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15283:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15330:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15341:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15326:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15326:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15349:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15355:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15345:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15345:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15319:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "15319:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15319:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15375:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15509:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_232d7994234e21dc0a46dcff0076032352d1b7b4d58ecc76ed88eec990d90098_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15383:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "15383:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15375:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_232d7994234e21dc0a46dcff0076032352d1b7b4d58ecc76ed88eec990d90098__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15253:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15268:4:2",
														"type": ""
													}
												],
												"src": "15102:419:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15698:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15708:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15720:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15731:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15716:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "15716:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15708:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15755:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15766:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15751:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15751:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15774:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15780:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15770:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15770:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15744:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "15744:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15744:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15800:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15934:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2418688d011b8e0830741b4ef5b95d25f3075f5a8407237c54796d2479ff21e5_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15808:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "15808:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15800:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2418688d011b8e0830741b4ef5b95d25f3075f5a8407237c54796d2479ff21e5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15678:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15693:4:2",
														"type": ""
													}
												],
												"src": "15527:419:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16123:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16133:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16145:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16156:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16141:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "16141:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16133:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16180:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16191:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16176:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16176:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "16199:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16205:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16195:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16195:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16169:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "16169:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16169:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16225:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16359:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_33a0d73ef506feaebcf4cdd68c1a9783ad6fdd5367feedb0a0d58ce8d7b1ad1a_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16233:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "16233:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16225:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_33a0d73ef506feaebcf4cdd68c1a9783ad6fdd5367feedb0a0d58ce8d7b1ad1a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16103:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16118:4:2",
														"type": ""
													}
												],
												"src": "15952:419:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16548:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16558:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16570:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16581:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16566:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "16566:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16558:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16605:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16616:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16601:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16601:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "16624:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16630:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16620:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16620:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16594:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "16594:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16594:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16650:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16784:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4d2c35fe1a7df903955f64419a99f644f465f2a0aa959d96b99839301c2ef508_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16658:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "16658:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16650:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4d2c35fe1a7df903955f64419a99f644f465f2a0aa959d96b99839301c2ef508__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16528:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16543:4:2",
														"type": ""
													}
												],
												"src": "16377:419:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16973:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16983:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16995:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17006:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16991:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "16991:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16983:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17030:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17041:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17026:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17026:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17049:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17055:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17045:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17045:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17019:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "17019:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17019:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17075:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "17209:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_52ac77891b100190c173ca8db34c1090b0a3a5fd7fa47169c21476dd2c32bc2f_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17083:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "17083:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17075:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_52ac77891b100190c173ca8db34c1090b0a3a5fd7fa47169c21476dd2c32bc2f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16953:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16968:4:2",
														"type": ""
													}
												],
												"src": "16802:419:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17398:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17408:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17420:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17431:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17416:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "17416:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17408:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17455:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17466:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17451:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17451:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17474:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17480:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17470:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17470:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17444:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "17444:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17444:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17500:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "17634:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_5735093ee1c27da93975faba569ca18ca1f3facf35d6dfe2cae61f4fc1bf709a_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17508:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "17508:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17500:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5735093ee1c27da93975faba569ca18ca1f3facf35d6dfe2cae61f4fc1bf709a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17378:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17393:4:2",
														"type": ""
													}
												],
												"src": "17227:419:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17823:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17833:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17845:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17856:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17841:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "17841:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17833:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17880:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17891:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17876:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17876:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17899:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17905:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17895:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17895:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17869:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "17869:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17869:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17925:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "18059:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6484e2602344143d38b0f6044478ddd9128a019aabb51146650cc995fb45b4fe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17933:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "17933:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17925:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6484e2602344143d38b0f6044478ddd9128a019aabb51146650cc995fb45b4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17803:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17818:4:2",
														"type": ""
													}
												],
												"src": "17652:419:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18248:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18258:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18270:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18281:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18266:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "18266:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18258:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18305:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18316:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18301:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18301:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "18324:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18330:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18320:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18320:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18294:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "18294:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18294:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18350:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "18484:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6c4dd08c63778c1a28236bdb848c48062fa51b777ba1838c68276b07c98b172b_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18358:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "18358:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18350:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6c4dd08c63778c1a28236bdb848c48062fa51b777ba1838c68276b07c98b172b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18228:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18243:4:2",
														"type": ""
													}
												],
												"src": "18077:419:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18673:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18683:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18695:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18706:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18691:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "18691:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18683:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18730:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18741:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18726:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18726:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "18749:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18755:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18745:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18745:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18719:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "18719:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18719:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18775:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "18909:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6e6a919188e639c6fec1ac974bcd532a51e7cb501fa68e5b2f08f294731a4b88_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18783:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "18783:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18775:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6e6a919188e639c6fec1ac974bcd532a51e7cb501fa68e5b2f08f294731a4b88__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18653:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18668:4:2",
														"type": ""
													}
												],
												"src": "18502:419:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19098:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19108:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19120:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19131:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19116:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "19116:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19108:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19155:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19166:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19151:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19151:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "19174:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19180:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19170:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19170:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19144:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "19144:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19144:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19200:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "19334:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_79dd45e51ab165bfcf7a14b5d794e1100e4f43c66e93d82a8f33a73acdace21c_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19208:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "19208:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19200:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_79dd45e51ab165bfcf7a14b5d794e1100e4f43c66e93d82a8f33a73acdace21c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19078:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19093:4:2",
														"type": ""
													}
												],
												"src": "18927:419:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19523:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19533:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19545:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19556:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19541:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "19541:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19533:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19580:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19591:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19576:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19576:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "19599:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19605:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19595:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19595:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19569:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "19569:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19569:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19625:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "19759:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8ec3e015200e1f9e6e0943e9e536de8fd2eccd7db3e2c39533b307d29bacc8bf_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19633:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "19633:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19625:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8ec3e015200e1f9e6e0943e9e536de8fd2eccd7db3e2c39533b307d29bacc8bf__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19503:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19518:4:2",
														"type": ""
													}
												],
												"src": "19352:419:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19948:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19958:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19970:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19981:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19966:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "19966:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19958:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20005:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20016:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20001:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20001:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "20024:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20030:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20020:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20020:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19994:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "19994:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19994:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20050:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "20184:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_94bb83f969d01c78c03c2937a1d7cdba3c6b39448e0a8fec49f98ae3315b3426_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20058:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "20058:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20050:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_94bb83f969d01c78c03c2937a1d7cdba3c6b39448e0a8fec49f98ae3315b3426__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19928:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19943:4:2",
														"type": ""
													}
												],
												"src": "19777:419:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20373:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20383:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20395:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20406:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20391:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "20391:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20383:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20430:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20441:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20426:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20426:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "20449:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20455:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20445:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20445:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20419:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "20419:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20419:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20475:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "20609:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b9edd99dd8d250815668679e6c075641f1995b1ddaf15ec4c0dabacd9db8c322_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20483:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "20483:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20475:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b9edd99dd8d250815668679e6c075641f1995b1ddaf15ec4c0dabacd9db8c322__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20353:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20368:4:2",
														"type": ""
													}
												],
												"src": "20202:419:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20798:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20808:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20820:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20831:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20816:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "20816:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20808:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20855:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20866:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20851:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20851:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "20874:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20880:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20870:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20870:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20844:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "20844:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20844:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20900:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "21034:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_baaab41cf1af04b33672a25d6c62a56d368464d86a10d2970d4d31293d0db24a_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20908:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "20908:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20900:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baaab41cf1af04b33672a25d6c62a56d368464d86a10d2970d4d31293d0db24a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20778:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20793:4:2",
														"type": ""
													}
												],
												"src": "20627:419:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21223:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21233:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21245:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21256:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21241:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "21241:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21233:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21280:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21291:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21276:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21276:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "21299:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21305:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "21295:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21295:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21269:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "21269:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21269:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21325:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "21459:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_bd8bf05e4eeff98331c5d573ce3c5c39a2f1dfd162031e09da49c962885a911b_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21333:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "21333:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21325:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_bd8bf05e4eeff98331c5d573ce3c5c39a2f1dfd162031e09da49c962885a911b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21203:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21218:4:2",
														"type": ""
													}
												],
												"src": "21052:419:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21648:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21658:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21670:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21681:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21666:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "21666:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21658:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21705:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21716:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21701:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21701:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "21724:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21730:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "21720:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21720:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21694:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "21694:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21694:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21750:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "21884:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c1afbdaa0ffb21f43f34bdebbd4895f3e6a5d4de4e77864bde1be59aa53542b2_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21758:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "21758:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21750:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c1afbdaa0ffb21f43f34bdebbd4895f3e6a5d4de4e77864bde1be59aa53542b2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21628:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21643:4:2",
														"type": ""
													}
												],
												"src": "21477:419:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22073:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22083:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22095:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22106:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22091:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "22091:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22083:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22130:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22141:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22126:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22126:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "22149:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22155:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "22145:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22145:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22119:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "22119:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22119:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22175:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "22309:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c3786129cca9bd92dcb42692167cb02d02ae8b030024a781b08e7dafd22bc2fb_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22183:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "22183:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22175:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c3786129cca9bd92dcb42692167cb02d02ae8b030024a781b08e7dafd22bc2fb__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22053:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "22068:4:2",
														"type": ""
													}
												],
												"src": "21902:419:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22498:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22508:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22520:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22531:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22516:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "22516:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22508:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22555:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22566:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22551:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22551:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "22574:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22580:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "22570:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22570:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22544:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "22544:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22544:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22600:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "22734:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_dce7fcdf8c70b472dd9931854d7bcc019b46831d2b96b88b381e506bbb74c94f_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22608:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "22608:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22600:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_dce7fcdf8c70b472dd9931854d7bcc019b46831d2b96b88b381e506bbb74c94f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22478:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "22493:4:2",
														"type": ""
													}
												],
												"src": "22327:419:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22923:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22933:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22945:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22956:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22941:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "22941:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22933:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22980:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22991:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22976:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22976:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "22999:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23005:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "22995:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22995:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22969:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "22969:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22969:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23025:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "23159:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e5134b59355dcbbe2d4e436ec1b03c78c1275f34182c99b81e54de3ae327f5fc_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23033:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "23033:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23025:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e5134b59355dcbbe2d4e436ec1b03c78c1275f34182c99b81e54de3ae327f5fc__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22903:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "22918:4:2",
														"type": ""
													}
												],
												"src": "22752:419:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23348:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23358:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "23370:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23381:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23366:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "23366:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23358:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23405:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23416:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23401:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23401:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "23424:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23430:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "23420:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23420:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23394:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "23394:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23394:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23450:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "23584:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f49325f1961ffe577581956fc74c87e3c797c6d9a3bf9adf95b186a86eb8bca0_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23458:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "23458:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23450:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f49325f1961ffe577581956fc74c87e3c797c6d9a3bf9adf95b186a86eb8bca0__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "23328:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "23343:4:2",
														"type": ""
													}
												],
												"src": "23177:419:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23700:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23710:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "23722:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23733:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23718:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "23718:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23710:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "23790:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23803:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23814:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23799:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23799:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint128_to_t_uint128_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23746:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "23746:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23746:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint128__to_t_uint128__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "23672:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "23684:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "23695:4:2",
														"type": ""
													}
												],
												"src": "23602:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23928:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23938:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "23950:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23961:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23946:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "23946:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23938:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "24018:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24031:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24042:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24027:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24027:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23974:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "23974:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23974:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "23900:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "23912:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "23923:4:2",
														"type": ""
													}
												],
												"src": "23830:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24234:365:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24244:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "24256:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24267:3:2",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24252:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "24252:19:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24244:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "24323:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24336:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24347:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24332:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24332:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint72_to_t_uint72_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24281:41:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "24281:69:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24281:69:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "24402:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24415:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24426:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24411:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24411:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint24_to_t_uint24_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24360:41:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "24360:70:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24360:70:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "24482:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24495:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24506:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24491:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24491:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint32_to_t_uint32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24440:41:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "24440:70:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24440:70:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "24564:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24577:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24588:2:2",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24573:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24573:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint128_to_t_uint128_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24520:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "24520:72:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24520:72:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint72_t_uint24_t_uint32_t_uint128__to_t_uint72_t_uint24_t_uint32_t_uint128__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "24182:9:2",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "24194:6:2",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "24202:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "24210:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "24218:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "24229:4:2",
														"type": ""
													}
												],
												"src": "24058:541:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24701:73:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24718:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "24723:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24711:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "24711:19:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24711:19:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24739:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24758:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24763:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24754:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "24754:14:2"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "24739:11:2"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "24673:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "24678:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "24689:11:2",
														"type": ""
													}
												],
												"src": "24605:169:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24824:261:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24834:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "24857:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "24839:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "24839:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "24834:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "24868:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "24891:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "24873:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "24873:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "24868:1:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "25031:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "25033:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "25033:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "25033:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "24952:1:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24959:66:2",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "25027:1:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "24955:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24955:74:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "24949:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "24949:81:2"
															},
															"nodeType": "YulIf",
															"src": "24946:2:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25063:16:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "25074:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "25077:1:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25070:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "25070:9:2"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "25063:3:2"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "24811:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "24814:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "24820:3:2",
														"type": ""
													}
												],
												"src": "24780:305:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25134:203:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25144:24:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "25166:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint32",
																	"nodeType": "YulIdentifier",
																	"src": "25149:16:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "25149:19:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "25144:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "25177:24:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "25199:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint32",
																	"nodeType": "YulIdentifier",
																	"src": "25182:16:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "25182:19:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "25177:1:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "25283:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "25285:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "25285:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "25285:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "25260:1:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25267:10:2",
																				"type": "",
																				"value": "0xffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "25279:1:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "25263:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25263:18:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "25257:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "25257:25:2"
															},
															"nodeType": "YulIf",
															"src": "25254:2:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25315:16:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "25326:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "25329:1:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25322:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "25322:9:2"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "25315:3:2"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "25121:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "25124:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "25130:3:2",
														"type": ""
													}
												],
												"src": "25091:246:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25385:143:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25395:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "25418:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "25400:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "25400:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "25395:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "25429:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "25452:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "25434:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "25434:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "25429:1:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "25476:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "25478:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "25478:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "25478:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "25473:1:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "25466:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "25466:9:2"
															},
															"nodeType": "YulIf",
															"src": "25463:2:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25508:14:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "25517:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "25520:1:2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "25513:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "25513:9:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "25508:1:2"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "25374:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "25377:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "25383:1:2",
														"type": ""
													}
												],
												"src": "25343:185:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25582:300:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25592:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "25615:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "25597:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "25597:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "25592:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "25626:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "25649:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "25631:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "25631:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "25626:1:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "25824:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "25826:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "25826:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "25826:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "25736:1:2"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "25729:6:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "25729:9:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "25722:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25722:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "25744:1:2"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "25751:66:2",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "25819:1:2"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "25747:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "25747:74:2"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "25741:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25741:81:2"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "25718:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "25718:105:2"
															},
															"nodeType": "YulIf",
															"src": "25715:2:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25856:20:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "25871:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "25874:1:2"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "25867:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "25867:9:2"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "25856:7:2"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "25565:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "25568:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "25574:7:2",
														"type": ""
													}
												],
												"src": "25534:348:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25933:146:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25943:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "25966:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "25948:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "25948:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "25943:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "25977:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "26000:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "25982:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "25982:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "25977:1:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "26024:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "26026:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "26026:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "26026:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "26018:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "26021:1:2"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "26015:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "26015:8:2"
															},
															"nodeType": "YulIf",
															"src": "26012:2:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "26056:17:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "26068:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "26071:1:2"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "26064:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "26064:9:2"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "26056:4:2"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "25919:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "25922:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "25928:4:2",
														"type": ""
													}
												],
												"src": "25888:191:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26130:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26140:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "26169:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "26151:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "26151:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "26140:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "26112:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "26122:7:2",
														"type": ""
													}
												],
												"src": "26085:96:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26229:48:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26239:32:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "26264:5:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "26257:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26257:13:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "26250:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "26250:21:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "26239:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "26211:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "26221:7:2",
														"type": ""
													}
												],
												"src": "26187:90:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26328:73:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26338:57:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "26353:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26360:34:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "26349:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "26349:46:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "26338:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint128",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "26310:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "26320:7:2",
														"type": ""
													}
												],
												"src": "26283:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26452:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26462:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "26477:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26484:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "26473:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "26473:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "26462:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "26434:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "26444:7:2",
														"type": ""
													}
												],
												"src": "26407:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26583:47:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26593:31:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "26608:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26615:8:2",
																		"type": "",
																		"value": "0xffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "26604:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "26604:20:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "26593:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint24",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "26565:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "26575:7:2",
														"type": ""
													}
												],
												"src": "26539:91:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26681:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26691:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "26702:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "26691:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "26663:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "26673:7:2",
														"type": ""
													}
												],
												"src": "26636:77:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26763:49:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26773:33:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "26788:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26795:10:2",
																		"type": "",
																		"value": "0xffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "26784:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "26784:22:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "26773:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "26745:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "26755:7:2",
														"type": ""
													}
												],
												"src": "26719:93:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26862:59:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26872:43:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "26887:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26894:20:2",
																		"type": "",
																		"value": "0xffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "26883:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "26883:32:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "26872:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint72",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "26844:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "26854:7:2",
														"type": ""
													}
												],
												"src": "26818:103:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27001:80:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27011:64:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "27069:5:2"
																	}
																],
																"functionName": {
																	"name": "convert_t_contract$_IERC20_$786_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "27024:44:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "27024:51:2"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "27011:9:2"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$786_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "26981:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "26991:9:2",
														"type": ""
													}
												],
												"src": "26927:154:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27161:53:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27171:37:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "27202:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "27184:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "27184:24:2"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "27171:9:2"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$786_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "27141:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "27151:9:2",
														"type": ""
													}
												],
												"src": "27087:127:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27280:53:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27290:37:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "27321:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint128",
																	"nodeType": "YulIdentifier",
																	"src": "27303:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "27303:24:2"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "27290:9:2"
																}
															]
														}
													]
												},
												"name": "convert_t_uint128_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "27260:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "27270:9:2",
														"type": ""
													}
												],
												"src": "27220:113:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27398:52:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27408:36:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "27438:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint24",
																	"nodeType": "YulIdentifier",
																	"src": "27421:16:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "27421:23:2"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "27408:9:2"
																}
															]
														}
													]
												},
												"name": "convert_t_uint24_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "27378:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "27388:9:2",
														"type": ""
													}
												],
												"src": "27339:111:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27515:52:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27525:36:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "27555:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint72",
																	"nodeType": "YulIdentifier",
																	"src": "27538:16:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "27538:23:2"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "27525:9:2"
																}
															]
														}
													]
												},
												"name": "convert_t_uint72_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "27495:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "27505:9:2",
														"type": ""
													}
												],
												"src": "27456:111:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27601:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27618:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27621:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27611:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "27611:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27611:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27715:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27718:4:2",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27708:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "27708:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27708:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27739:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27742:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "27732:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "27732:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27732:15:2"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "27573:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27787:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27804:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27807:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27797:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "27797:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27797:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27901:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27904:4:2",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27894:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "27894:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27894:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27925:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27928:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "27918:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "27918:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27918:15:2"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "27759:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28051:73:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "28073:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28081:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28069:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28069:14:2"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "28085:31:2",
																		"type": "",
																		"value": "Reward oilers transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28062:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "28062:55:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28062:55:2"
														}
													]
												},
												"name": "store_literal_in_memory_1d084e2eca749984c089d1d9f64331c149c27c323008184a1491516501160a6b",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "28043:6:2",
														"type": ""
													}
												],
												"src": "27945:179:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28236:115:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "28258:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28266:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28254:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28254:14:2"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "28270:34:2",
																		"type": "",
																		"value": "Vesting release: no tokens are d"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28247:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "28247:58:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28247:58:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "28326:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28334:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28322:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28322:15:2"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "28339:4:2",
																		"type": "",
																		"value": "ue"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28315:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "28315:29:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28315:29:2"
														}
													]
												},
												"name": "store_literal_in_memory_232d7994234e21dc0a46dcff0076032352d1b7b4d58ecc76ed88eec990d90098",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "28228:6:2",
														"type": ""
													}
												],
												"src": "28130:221:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28463:126:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "28485:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28493:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28481:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28481:14:2"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "28497:34:2",
																		"type": "",
																		"value": "TokenVesting: beneficiary is the"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28474:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "28474:58:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28474:58:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "28553:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28561:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28549:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28549:15:2"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "28566:15:2",
																		"type": "",
																		"value": " zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28542:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "28542:40:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28542:40:2"
														}
													]
												},
												"name": "store_literal_in_memory_2418688d011b8e0830741b4ef5b95d25f3075f5a8407237c54796d2479ff21e5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "28455:6:2",
														"type": ""
													}
												],
												"src": "28357:232:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28701:70:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "28723:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28731:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28719:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28719:14:2"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "28735:28:2",
																		"type": "",
																		"value": "Pool token transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28712:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "28712:52:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28712:52:2"
														}
													]
												},
												"name": "store_literal_in_memory_33a0d73ef506feaebcf4cdd68c1a9783ad6fdd5367feedb0a0d58ce8d7b1ad1a",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "28693:6:2",
														"type": ""
													}
												],
												"src": "28595:176:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28883:198:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "28905:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28913:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28901:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28901:14:2"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "28917:34:2",
																		"type": "",
																		"value": "You still have a stake locked - "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28894:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "28894:58:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28894:58:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "28973:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28981:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28969:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28969:15:2"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "28986:34:2",
																		"type": "",
																		"value": "please unlock first, don't leave"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28962:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "28962:59:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28962:59:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "29042:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29050:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29038:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29038:15:2"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "29055:18:2",
																		"type": "",
																		"value": " free money here"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29031:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "29031:43:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29031:43:2"
														}
													]
												},
												"name": "store_literal_in_memory_4d2c35fe1a7df903955f64419a99f644f465f2a0aa959d96b99839301c2ef508",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "28875:6:2",
														"type": ""
													}
												],
												"src": "28777:304:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29193:76:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "29215:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29223:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29211:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29211:14:2"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "29227:34:2",
																		"type": "",
																		"value": "You don't have a stake to unlock"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29204:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "29204:58:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29204:58:2"
														}
													]
												},
												"name": "store_literal_in_memory_52ac77891b100190c173ca8db34c1090b0a3a5fd7fa47169c21476dd2c32bc2f",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "29185:6:2",
														"type": ""
													}
												],
												"src": "29087:182:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29381:130:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "29403:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29411:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29399:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29399:14:2"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "29415:34:2",
																		"type": "",
																		"value": "Your lock period exceeds Staking"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29392:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "29392:58:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29392:58:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "29471:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29479:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29467:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29467:15:2"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "29484:19:2",
																		"type": "",
																		"value": " Program duration"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29460:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "29460:44:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29460:44:2"
														}
													]
												},
												"name": "store_literal_in_memory_5735093ee1c27da93975faba569ca18ca1f3facf35d6dfe2cae61f4fc1bf709a",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "29373:6:2",
														"type": ""
													}
												],
												"src": "29275:236:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29623:59:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "29645:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29653:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29641:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29641:14:2"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "29657:17:2",
																		"type": "",
																		"value": "Already staking"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29634:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "29634:41:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29634:41:2"
														}
													]
												},
												"name": "store_literal_in_memory_6484e2602344143d38b0f6044478ddd9128a019aabb51146650cc995fb45b4fe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "29615:6:2",
														"type": ""
													}
												],
												"src": "29517:165:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29794:122:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "29816:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29824:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29812:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29812:14:2"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "29828:34:2",
																		"type": "",
																		"value": "You didn't earn any integer amou"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29805:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "29805:58:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29805:58:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "29884:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29892:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29880:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29880:15:2"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "29897:11:2",
																		"type": "",
																		"value": "nt of wei"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29873:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "29873:36:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29873:36:2"
														}
													]
												},
												"name": "store_literal_in_memory_6c4dd08c63778c1a28236bdb848c48062fa51b777ba1838c68276b07c98b172b",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "29786:6:2",
														"type": ""
													}
												],
												"src": "29688:228:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30028:132:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "30050:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30058:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30046:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30046:14:2"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "30062:34:2",
																		"type": "",
																		"value": "Neither tokenAmount nor lockingP"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30039:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "30039:58:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30039:58:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "30118:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30126:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30114:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30114:15:2"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "30131:21:2",
																		"type": "",
																		"value": "eriod couldn't be 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30107:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "30107:46:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30107:46:2"
														}
													]
												},
												"name": "store_literal_in_memory_6e6a919188e639c6fec1ac974bcd532a51e7cb501fa68e5b2f08f294731a4b88",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "30020:6:2",
														"type": ""
													}
												],
												"src": "29922:238:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30272:141:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "30294:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30302:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30290:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30290:14:2"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "30306:34:2",
																		"type": "",
																		"value": "You can't withdraw the stake in "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30283:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "30283:58:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30283:58:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "30362:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30370:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30358:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30358:15:2"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "30375:30:2",
																		"type": "",
																		"value": "the same block it was locked"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30351:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "30351:55:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30351:55:2"
														}
													]
												},
												"name": "store_literal_in_memory_79dd45e51ab165bfcf7a14b5d794e1100e4f43c66e93d82a8f33a73acdace21c",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "30264:6:2",
														"type": ""
													}
												],
												"src": "30166:247:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30525:122:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "30547:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30555:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30543:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30543:14:2"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "30559:34:2",
																		"type": "",
																		"value": "StakingFund doesn't have enough "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30536:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "30536:58:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30536:58:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "30615:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30623:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30611:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30611:15:2"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "30628:11:2",
																		"type": "",
																		"value": "allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30604:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "30604:36:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30604:36:2"
														}
													]
												},
												"name": "store_literal_in_memory_8ec3e015200e1f9e6e0943e9e536de8fd2eccd7db3e2c39533b307d29bacc8bf",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "30517:6:2",
														"type": ""
													}
												],
												"src": "30419:228:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30759:76:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "30781:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30789:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30777:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30777:14:2"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "30793:34:2",
																		"type": "",
																		"value": "poolToken address cannot be zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30770:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "30770:58:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30770:58:2"
														}
													]
												},
												"name": "store_literal_in_memory_94bb83f969d01c78c03c2937a1d7cdba3c6b39448e0a8fec49f98ae3315b3426",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "30751:6:2",
														"type": ""
													}
												],
												"src": "30653:182:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30947:124:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "30969:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30977:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30965:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30965:14:2"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "30981:34:2",
																		"type": "",
																		"value": "StakingFund doesn't have enough "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30958:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "30958:58:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30958:58:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "31037:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "31045:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "31033:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31033:15:2"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "31050:13:2",
																		"type": "",
																		"value": "OIL balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "31026:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "31026:38:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31026:38:2"
														}
													]
												},
												"name": "store_literal_in_memory_b9edd99dd8d250815668679e6c075641f1995b1ddaf15ec4c0dabacd9db8c322",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "30939:6:2",
														"type": ""
													}
												],
												"src": "30841:230:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31183:61:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "31205:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "31213:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "31201:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31201:14:2"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "31217:19:2",
																		"type": "",
																		"value": "poolToken not set"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "31194:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "31194:43:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31194:43:2"
														}
													]
												},
												"name": "store_literal_in_memory_baaab41cf1af04b33672a25d6c62a56d368464d86a10d2970d4d31293d0db24a",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "31175:6:2",
														"type": ""
													}
												],
												"src": "31077:167:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31356:114:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "31378:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "31386:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "31374:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31374:14:2"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "31390:34:2",
																		"type": "",
																		"value": "TransferFrom of poolTokens faile"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "31367:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "31367:58:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31367:58:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "31446:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "31454:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "31442:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31442:15:2"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "31459:3:2",
																		"type": "",
																		"value": "d"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "31435:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "31435:28:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31435:28:2"
														}
													]
												},
												"name": "store_literal_in_memory_bd8bf05e4eeff98331c5d573ce3c5c39a2f1dfd162031e09da49c962885a911b",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "31348:6:2",
														"type": ""
													}
												],
												"src": "31250:220:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31582:71:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "31604:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "31612:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "31600:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31600:14:2"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "31616:29:2",
																		"type": "",
																		"value": "Can only be called by owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "31593:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "31593:53:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31593:53:2"
														}
													]
												},
												"name": "store_literal_in_memory_c1afbdaa0ffb21f43f34bdebbd4895f3e6a5d4de4e77864bde1be59aa53542b2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "31574:6:2",
														"type": ""
													}
												],
												"src": "31476:177:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31765:132:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "31787:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "31795:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "31783:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31783:14:2"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "31799:34:2",
																		"type": "",
																		"value": "You can only get Rewards after S"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "31776:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "31776:58:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31776:58:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "31855:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "31863:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "31851:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31851:15:2"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "31868:21:2",
																		"type": "",
																		"value": "taking Program ends"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "31844:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "31844:46:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31844:46:2"
														}
													]
												},
												"name": "store_literal_in_memory_c3786129cca9bd92dcb42692167cb02d02ae8b030024a781b08e7dafd22bc2fb",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "31757:6:2",
														"type": ""
													}
												],
												"src": "31659:238:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "32009:124:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "32031:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "32039:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "32027:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "32027:14:2"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "32043:34:2",
																		"type": "",
																		"value": "TransferFrom of OIL from Staking"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "32020:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "32020:58:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "32020:58:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "32099:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "32107:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "32095:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "32095:15:2"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "32112:13:2",
																		"type": "",
																		"value": "Fund failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "32088:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "32088:38:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "32088:38:2"
														}
													]
												},
												"name": "store_literal_in_memory_dce7fcdf8c70b472dd9931854d7bcc019b46831d2b96b88b381e506bbb74c94f",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "32001:6:2",
														"type": ""
													}
												],
												"src": "31903:230:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "32245:75:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "32267:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "32275:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "32263:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "32263:14:2"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "32279:33:2",
																		"type": "",
																		"value": "You don't have any rewardPoints"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "32256:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "32256:57:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "32256:57:2"
														}
													]
												},
												"name": "store_literal_in_memory_e5134b59355dcbbe2d4e436ec1b03c78c1275f34182c99b81e54de3ae327f5fc",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "32237:6:2",
														"type": ""
													}
												],
												"src": "32139:181:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "32432:69:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "32454:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "32462:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "32450:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "32450:14:2"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "32466:27:2",
																		"type": "",
																		"value": "poolToken was already set"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "32443:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "32443:51:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "32443:51:2"
														}
													]
												},
												"name": "store_literal_in_memory_f49325f1961ffe577581956fc74c87e3c797c6d9a3bf9adf95b186a86eb8bca0",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "32424:6:2",
														"type": ""
													}
												],
												"src": "32326:175:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "32550:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "32607:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "32616:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "32619:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "32609:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "32609:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "32609:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "32573:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "32598:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "32580:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "32580:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "32570:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "32570:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "32563:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "32563:43:2"
															},
															"nodeType": "YulIf",
															"src": "32560:2:2"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "32543:5:2",
														"type": ""
													}
												],
												"src": "32507:122:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "32675:76:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "32729:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "32738:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "32741:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "32731:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "32731:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "32731:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "32698:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "32720:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "32705:14:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "32705:21:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "32695:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "32695:32:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "32688:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "32688:40:2"
															},
															"nodeType": "YulIf",
															"src": "32685:2:2"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "32668:5:2",
														"type": ""
													}
												],
												"src": "32635:116:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "32799:78:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "32855:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "32864:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "32867:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "32857:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "32857:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "32857:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "32822:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "32846:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint24",
																					"nodeType": "YulIdentifier",
																					"src": "32829:16:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "32829:23:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "32819:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "32819:34:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "32812:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "32812:42:2"
															},
															"nodeType": "YulIf",
															"src": "32809:2:2"
														}
													]
												},
												"name": "validator_revert_t_uint24",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "32792:5:2",
														"type": ""
													}
												],
												"src": "32757:120:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "32926:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "32983:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "32992:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "32995:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "32985:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "32985:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "32985:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "32949:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "32974:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "32956:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "32956:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "32946:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "32946:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "32939:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "32939:43:2"
															},
															"nodeType": "YulIf",
															"src": "32936:2:2"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "32919:5:2",
														"type": ""
													}
												],
												"src": "32883:122:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "33053:78:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "33109:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "33118:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "33121:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "33111:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "33111:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "33111:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "33076:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "33100:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint72",
																					"nodeType": "YulIdentifier",
																					"src": "33083:16:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "33083:23:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "33073:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "33073:34:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "33066:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "33066:42:2"
															},
															"nodeType": "YulIf",
															"src": "33063:2:2"
														}
													]
												},
												"name": "validator_revert_t_uint72",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "33046:5:2",
														"type": ""
													}
												],
												"src": "33011:120:2"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_uint24(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint24(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint72(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint72(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint72t_uint24(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint72(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint24(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_contract$_IERC20_$786_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$786_to_t_address(value))\n    }\n\n    function abi_encode_t_stringliteral_1d084e2eca749984c089d1d9f64331c149c27c323008184a1491516501160a6b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_1d084e2eca749984c089d1d9f64331c149c27c323008184a1491516501160a6b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_232d7994234e21dc0a46dcff0076032352d1b7b4d58ecc76ed88eec990d90098_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_232d7994234e21dc0a46dcff0076032352d1b7b4d58ecc76ed88eec990d90098(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_2418688d011b8e0830741b4ef5b95d25f3075f5a8407237c54796d2479ff21e5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 45)\n        store_literal_in_memory_2418688d011b8e0830741b4ef5b95d25f3075f5a8407237c54796d2479ff21e5(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_33a0d73ef506feaebcf4cdd68c1a9783ad6fdd5367feedb0a0d58ce8d7b1ad1a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_33a0d73ef506feaebcf4cdd68c1a9783ad6fdd5367feedb0a0d58ce8d7b1ad1a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_4d2c35fe1a7df903955f64419a99f644f465f2a0aa959d96b99839301c2ef508_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 80)\n        store_literal_in_memory_4d2c35fe1a7df903955f64419a99f644f465f2a0aa959d96b99839301c2ef508(pos)\n        end := add(pos, 96)\n    }\n\n    function abi_encode_t_stringliteral_52ac77891b100190c173ca8db34c1090b0a3a5fd7fa47169c21476dd2c32bc2f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_52ac77891b100190c173ca8db34c1090b0a3a5fd7fa47169c21476dd2c32bc2f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_5735093ee1c27da93975faba569ca18ca1f3facf35d6dfe2cae61f4fc1bf709a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 49)\n        store_literal_in_memory_5735093ee1c27da93975faba569ca18ca1f3facf35d6dfe2cae61f4fc1bf709a(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_6484e2602344143d38b0f6044478ddd9128a019aabb51146650cc995fb45b4fe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_6484e2602344143d38b0f6044478ddd9128a019aabb51146650cc995fb45b4fe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_6c4dd08c63778c1a28236bdb848c48062fa51b777ba1838c68276b07c98b172b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_6c4dd08c63778c1a28236bdb848c48062fa51b777ba1838c68276b07c98b172b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_6e6a919188e639c6fec1ac974bcd532a51e7cb501fa68e5b2f08f294731a4b88_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 51)\n        store_literal_in_memory_6e6a919188e639c6fec1ac974bcd532a51e7cb501fa68e5b2f08f294731a4b88(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_79dd45e51ab165bfcf7a14b5d794e1100e4f43c66e93d82a8f33a73acdace21c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 60)\n        store_literal_in_memory_79dd45e51ab165bfcf7a14b5d794e1100e4f43c66e93d82a8f33a73acdace21c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_8ec3e015200e1f9e6e0943e9e536de8fd2eccd7db3e2c39533b307d29bacc8bf_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_8ec3e015200e1f9e6e0943e9e536de8fd2eccd7db3e2c39533b307d29bacc8bf(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_94bb83f969d01c78c03c2937a1d7cdba3c6b39448e0a8fec49f98ae3315b3426_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_94bb83f969d01c78c03c2937a1d7cdba3c6b39448e0a8fec49f98ae3315b3426(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_b9edd99dd8d250815668679e6c075641f1995b1ddaf15ec4c0dabacd9db8c322_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 43)\n        store_literal_in_memory_b9edd99dd8d250815668679e6c075641f1995b1ddaf15ec4c0dabacd9db8c322(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_baaab41cf1af04b33672a25d6c62a56d368464d86a10d2970d4d31293d0db24a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_baaab41cf1af04b33672a25d6c62a56d368464d86a10d2970d4d31293d0db24a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_bd8bf05e4eeff98331c5d573ce3c5c39a2f1dfd162031e09da49c962885a911b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_bd8bf05e4eeff98331c5d573ce3c5c39a2f1dfd162031e09da49c962885a911b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_c1afbdaa0ffb21f43f34bdebbd4895f3e6a5d4de4e77864bde1be59aa53542b2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_c1afbdaa0ffb21f43f34bdebbd4895f3e6a5d4de4e77864bde1be59aa53542b2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_c3786129cca9bd92dcb42692167cb02d02ae8b030024a781b08e7dafd22bc2fb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 51)\n        store_literal_in_memory_c3786129cca9bd92dcb42692167cb02d02ae8b030024a781b08e7dafd22bc2fb(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_dce7fcdf8c70b472dd9931854d7bcc019b46831d2b96b88b381e506bbb74c94f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 43)\n        store_literal_in_memory_dce7fcdf8c70b472dd9931854d7bcc019b46831d2b96b88b381e506bbb74c94f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_e5134b59355dcbbe2d4e436ec1b03c78c1275f34182c99b81e54de3ae327f5fc_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_e5134b59355dcbbe2d4e436ec1b03c78c1275f34182c99b81e54de3ae327f5fc(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_f49325f1961ffe577581956fc74c87e3c797c6d9a3bf9adf95b186a86eb8bca0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_f49325f1961ffe577581956fc74c87e3c797c6d9a3bf9adf95b186a86eb8bca0(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint128_to_t_uint128_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint128(value))\n    }\n\n    function abi_encode_t_uint128_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_uint128_to_t_uint256(value))\n    }\n\n    function abi_encode_t_uint24_to_t_uint24_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint24(value))\n    }\n\n    function abi_encode_t_uint24_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_uint24_to_t_uint256(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint32_to_t_uint32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function abi_encode_t_uint72_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_uint72_to_t_uint256(value))\n    }\n\n    function abi_encode_t_uint72_to_t_uint72_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint72(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint72__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint72_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint72_t_uint24_t_uint128__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint72_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint24_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint128_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint72_t_uint24_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint72_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint24_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$786__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$786_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_1d084e2eca749984c089d1d9f64331c149c27c323008184a1491516501160a6b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1d084e2eca749984c089d1d9f64331c149c27c323008184a1491516501160a6b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_232d7994234e21dc0a46dcff0076032352d1b7b4d58ecc76ed88eec990d90098__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_232d7994234e21dc0a46dcff0076032352d1b7b4d58ecc76ed88eec990d90098_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_2418688d011b8e0830741b4ef5b95d25f3075f5a8407237c54796d2479ff21e5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2418688d011b8e0830741b4ef5b95d25f3075f5a8407237c54796d2479ff21e5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_33a0d73ef506feaebcf4cdd68c1a9783ad6fdd5367feedb0a0d58ce8d7b1ad1a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_33a0d73ef506feaebcf4cdd68c1a9783ad6fdd5367feedb0a0d58ce8d7b1ad1a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_4d2c35fe1a7df903955f64419a99f644f465f2a0aa959d96b99839301c2ef508__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4d2c35fe1a7df903955f64419a99f644f465f2a0aa959d96b99839301c2ef508_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_52ac77891b100190c173ca8db34c1090b0a3a5fd7fa47169c21476dd2c32bc2f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_52ac77891b100190c173ca8db34c1090b0a3a5fd7fa47169c21476dd2c32bc2f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_5735093ee1c27da93975faba569ca18ca1f3facf35d6dfe2cae61f4fc1bf709a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5735093ee1c27da93975faba569ca18ca1f3facf35d6dfe2cae61f4fc1bf709a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_6484e2602344143d38b0f6044478ddd9128a019aabb51146650cc995fb45b4fe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6484e2602344143d38b0f6044478ddd9128a019aabb51146650cc995fb45b4fe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_6c4dd08c63778c1a28236bdb848c48062fa51b777ba1838c68276b07c98b172b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6c4dd08c63778c1a28236bdb848c48062fa51b777ba1838c68276b07c98b172b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_6e6a919188e639c6fec1ac974bcd532a51e7cb501fa68e5b2f08f294731a4b88__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6e6a919188e639c6fec1ac974bcd532a51e7cb501fa68e5b2f08f294731a4b88_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_79dd45e51ab165bfcf7a14b5d794e1100e4f43c66e93d82a8f33a73acdace21c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_79dd45e51ab165bfcf7a14b5d794e1100e4f43c66e93d82a8f33a73acdace21c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_8ec3e015200e1f9e6e0943e9e536de8fd2eccd7db3e2c39533b307d29bacc8bf__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8ec3e015200e1f9e6e0943e9e536de8fd2eccd7db3e2c39533b307d29bacc8bf_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_94bb83f969d01c78c03c2937a1d7cdba3c6b39448e0a8fec49f98ae3315b3426__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_94bb83f969d01c78c03c2937a1d7cdba3c6b39448e0a8fec49f98ae3315b3426_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_b9edd99dd8d250815668679e6c075641f1995b1ddaf15ec4c0dabacd9db8c322__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b9edd99dd8d250815668679e6c075641f1995b1ddaf15ec4c0dabacd9db8c322_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_baaab41cf1af04b33672a25d6c62a56d368464d86a10d2970d4d31293d0db24a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_baaab41cf1af04b33672a25d6c62a56d368464d86a10d2970d4d31293d0db24a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_bd8bf05e4eeff98331c5d573ce3c5c39a2f1dfd162031e09da49c962885a911b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_bd8bf05e4eeff98331c5d573ce3c5c39a2f1dfd162031e09da49c962885a911b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_c1afbdaa0ffb21f43f34bdebbd4895f3e6a5d4de4e77864bde1be59aa53542b2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c1afbdaa0ffb21f43f34bdebbd4895f3e6a5d4de4e77864bde1be59aa53542b2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_c3786129cca9bd92dcb42692167cb02d02ae8b030024a781b08e7dafd22bc2fb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c3786129cca9bd92dcb42692167cb02d02ae8b030024a781b08e7dafd22bc2fb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_dce7fcdf8c70b472dd9931854d7bcc019b46831d2b96b88b381e506bbb74c94f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_dce7fcdf8c70b472dd9931854d7bcc019b46831d2b96b88b381e506bbb74c94f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_e5134b59355dcbbe2d4e436ec1b03c78c1275f34182c99b81e54de3ae327f5fc__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e5134b59355dcbbe2d4e436ec1b03c78c1275f34182c99b81e54de3ae327f5fc_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_f49325f1961ffe577581956fc74c87e3c797c6d9a3bf9adf95b186a86eb8bca0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f49325f1961ffe577581956fc74c87e3c797c6d9a3bf9adf95b186a86eb8bca0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint128__to_t_uint128__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint128_to_t_uint128_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint72_t_uint24_t_uint32_t_uint128__to_t_uint72_t_uint24_t_uint32_t_uint128__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint72_to_t_uint72_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint24_to_t_uint24_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint128_to_t_uint128_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_add_t_uint32(x, y) -> sum {\n        x := cleanup_t_uint32(x)\n        y := cleanup_t_uint32(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint128(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint24(value) -> cleaned {\n        cleaned := and(value, 0xffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function cleanup_t_uint72(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffff)\n    }\n\n    function convert_t_contract$_IERC20_$786_to_t_address(value) -> converted {\n        converted := convert_t_contract$_IERC20_$786_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$786_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function convert_t_uint128_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint128(value)\n    }\n\n    function convert_t_uint24_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint24(value)\n    }\n\n    function convert_t_uint72_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint72(value)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_1d084e2eca749984c089d1d9f64331c149c27c323008184a1491516501160a6b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Reward oilers transfer failed\")\n\n    }\n\n    function store_literal_in_memory_232d7994234e21dc0a46dcff0076032352d1b7b4d58ecc76ed88eec990d90098(memPtr) {\n\n        mstore(add(memPtr, 0), \"Vesting release: no tokens are d\")\n\n        mstore(add(memPtr, 32), \"ue\")\n\n    }\n\n    function store_literal_in_memory_2418688d011b8e0830741b4ef5b95d25f3075f5a8407237c54796d2479ff21e5(memPtr) {\n\n        mstore(add(memPtr, 0), \"TokenVesting: beneficiary is the\")\n\n        mstore(add(memPtr, 32), \" zero address\")\n\n    }\n\n    function store_literal_in_memory_33a0d73ef506feaebcf4cdd68c1a9783ad6fdd5367feedb0a0d58ce8d7b1ad1a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pool token transfer failed\")\n\n    }\n\n    function store_literal_in_memory_4d2c35fe1a7df903955f64419a99f644f465f2a0aa959d96b99839301c2ef508(memPtr) {\n\n        mstore(add(memPtr, 0), \"You still have a stake locked - \")\n\n        mstore(add(memPtr, 32), \"please unlock first, don't leave\")\n\n        mstore(add(memPtr, 64), \" free money here\")\n\n    }\n\n    function store_literal_in_memory_52ac77891b100190c173ca8db34c1090b0a3a5fd7fa47169c21476dd2c32bc2f(memPtr) {\n\n        mstore(add(memPtr, 0), \"You don't have a stake to unlock\")\n\n    }\n\n    function store_literal_in_memory_5735093ee1c27da93975faba569ca18ca1f3facf35d6dfe2cae61f4fc1bf709a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Your lock period exceeds Staking\")\n\n        mstore(add(memPtr, 32), \" Program duration\")\n\n    }\n\n    function store_literal_in_memory_6484e2602344143d38b0f6044478ddd9128a019aabb51146650cc995fb45b4fe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Already staking\")\n\n    }\n\n    function store_literal_in_memory_6c4dd08c63778c1a28236bdb848c48062fa51b777ba1838c68276b07c98b172b(memPtr) {\n\n        mstore(add(memPtr, 0), \"You didn't earn any integer amou\")\n\n        mstore(add(memPtr, 32), \"nt of wei\")\n\n    }\n\n    function store_literal_in_memory_6e6a919188e639c6fec1ac974bcd532a51e7cb501fa68e5b2f08f294731a4b88(memPtr) {\n\n        mstore(add(memPtr, 0), \"Neither tokenAmount nor lockingP\")\n\n        mstore(add(memPtr, 32), \"eriod couldn't be 0\")\n\n    }\n\n    function store_literal_in_memory_79dd45e51ab165bfcf7a14b5d794e1100e4f43c66e93d82a8f33a73acdace21c(memPtr) {\n\n        mstore(add(memPtr, 0), \"You can't withdraw the stake in \")\n\n        mstore(add(memPtr, 32), \"the same block it was locked\")\n\n    }\n\n    function store_literal_in_memory_8ec3e015200e1f9e6e0943e9e536de8fd2eccd7db3e2c39533b307d29bacc8bf(memPtr) {\n\n        mstore(add(memPtr, 0), \"StakingFund doesn't have enough \")\n\n        mstore(add(memPtr, 32), \"allowance\")\n\n    }\n\n    function store_literal_in_memory_94bb83f969d01c78c03c2937a1d7cdba3c6b39448e0a8fec49f98ae3315b3426(memPtr) {\n\n        mstore(add(memPtr, 0), \"poolToken address cannot be zero\")\n\n    }\n\n    function store_literal_in_memory_b9edd99dd8d250815668679e6c075641f1995b1ddaf15ec4c0dabacd9db8c322(memPtr) {\n\n        mstore(add(memPtr, 0), \"StakingFund doesn't have enough \")\n\n        mstore(add(memPtr, 32), \"OIL balance\")\n\n    }\n\n    function store_literal_in_memory_baaab41cf1af04b33672a25d6c62a56d368464d86a10d2970d4d31293d0db24a(memPtr) {\n\n        mstore(add(memPtr, 0), \"poolToken not set\")\n\n    }\n\n    function store_literal_in_memory_bd8bf05e4eeff98331c5d573ce3c5c39a2f1dfd162031e09da49c962885a911b(memPtr) {\n\n        mstore(add(memPtr, 0), \"TransferFrom of poolTokens faile\")\n\n        mstore(add(memPtr, 32), \"d\")\n\n    }\n\n    function store_literal_in_memory_c1afbdaa0ffb21f43f34bdebbd4895f3e6a5d4de4e77864bde1be59aa53542b2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Can only be called by owner\")\n\n    }\n\n    function store_literal_in_memory_c3786129cca9bd92dcb42692167cb02d02ae8b030024a781b08e7dafd22bc2fb(memPtr) {\n\n        mstore(add(memPtr, 0), \"You can only get Rewards after S\")\n\n        mstore(add(memPtr, 32), \"taking Program ends\")\n\n    }\n\n    function store_literal_in_memory_dce7fcdf8c70b472dd9931854d7bcc019b46831d2b96b88b381e506bbb74c94f(memPtr) {\n\n        mstore(add(memPtr, 0), \"TransferFrom of OIL from Staking\")\n\n        mstore(add(memPtr, 32), \"Fund failed\")\n\n    }\n\n    function store_literal_in_memory_e5134b59355dcbbe2d4e436ec1b03c78c1275f34182c99b81e54de3ae327f5fc(memPtr) {\n\n        mstore(add(memPtr, 0), \"You don't have any rewardPoints\")\n\n    }\n\n    function store_literal_in_memory_f49325f1961ffe577581956fc74c87e3c797c6d9a3bf9adf95b186a86eb8bca0(memPtr) {\n\n        mstore(add(memPtr, 0), \"poolToken was already set\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint24(value) {\n        if iszero(eq(value, cleanup_t_uint24(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint72(value) {\n        if iszero(eq(value, cleanup_t_uint72(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"29": [
									{
										"length": 32,
										"start": 813
									},
									{
										"length": 32,
										"start": 1727
									},
									{
										"length": 32,
										"start": 3519
									},
									{
										"length": 32,
										"start": 6732
									},
									{
										"length": 32,
										"start": 6885
									}
								],
								"32": [
									{
										"length": 32,
										"start": 1274
									},
									{
										"length": 32,
										"start": 2799
									},
									{
										"length": 32,
										"start": 4111
									},
									{
										"length": 32,
										"start": 4378
									},
									{
										"length": 32,
										"start": 4709
									}
								],
								"40": [
									{
										"length": 32,
										"start": 2985
									},
									{
										"length": 32,
										"start": 3187
									},
									{
										"length": 32,
										"start": 4144
									},
									{
										"length": 32,
										"start": 4411
									},
									{
										"length": 32,
										"start": 4647
									}
								],
								"53": [
									{
										"length": 32,
										"start": 1411
									},
									{
										"length": 32,
										"start": 6699
									},
									{
										"length": 32,
										"start": 6852
									}
								],
								"74": [
									{
										"length": 32,
										"start": 3483
									},
									{
										"length": 32,
										"start": 3647
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061010b5760003560e01c806386d1a69f116100a2578063c959360b11610071578063c959360b14610287578063cbdf382c146102b7578063e0e4a722146102d5578063f6ffab8814610305578063f968f493146103215761010b565b806386d1a69f146102235780638da5cb5b1461022d578063bc0925ae1461024b578063c2e8caf6146102695761010b565b806352946b04116100de57806352946b041461018757806370ff852b146101a5578063798633b9146101d557806381e9207d146102055761010b565b80630572b0cc146101105780631514617e1461011a57806316934fc414610138578063378592c81461016b575b600080fd5b61011861032b565b005b610122610581565b60405161012f9190612477565b60405180910390f35b610152600480360381019061014d9190611bd4565b6105a5565b6040516101629493929190612492565b60405180910390f35b61018560048036038101906101809190611c8b565b610625565b005b61018f610aed565b60405161019c9190612477565b60405180910390f35b6101bf60048036038101906101ba9190611bd4565b610b11565b6040516101cc9190612477565b60405180910390f35b6101ef60048036038101906101ea9190611c8b565b610b29565b6040516101fc919061245c565b60405180910390f35b61020d610ba7565b60405161021a91906121a1565b60405180910390f35b61022b610bcb565b005b610235610d99565b604051610242919061203c565b60405180910390f35b610253610dbd565b6040516102609190612477565b60405180910390f35b610271610de1565b60405161027e9190612477565b60405180910390f35b6102a1600480360381019061029c9190611bd4565b610de7565b6040516102ae9190612477565b60405180910390f35b6102bf610dff565b6040516102cc91906121a1565b60405180910390f35b6102ef60048036038101906102ea9190611bd4565b610e25565b6040516102fc9190612477565b60405180910390f35b61031f600480360381019061031a9190611bfd565b610e3d565b005b610329611337565b005b7f0000000000000000000000000000000000000000000000000000000000000000431161038d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610384906123dc565b60405180910390fd5b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900468ffffffffffffffffff1668ffffffffffffffffff1614610431576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104289061223c565b60405180910390fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054116104b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104aa9061241c565b60405180910390fd5b6000600254600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020547f000000000000000000000000000000000000000000000000000000000000000061052391906125a9565b61052d9190612578565b90506000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061057e338261172a565b50565b7f000000000000000000000000000000000000000000000000000000000000000081565b60006020528060005260406000206000915090508060000160009054906101000a900468ffffffffffffffffff16908060000160099054906101000a900462ffffff169080600001600c9054906101000a900463ffffffff16908060000160109054906101000a90046fffffffffffffffffffffffffffffffff16905084565b600073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156106b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ae9061237c565b60405180910390fd5b8062ffffff167f00000000000000000000000000000000000000000000000000000000000000006106e89190612603565b43111561072a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107219061227c565b60405180910390fd5b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900468ffffffffffffffffff1668ffffffffffffffffff16146107ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c59061229c565b60405180910390fd5b60006107da8383610b29565b9050600060405180608001604052808568ffffffffffffffffff1681526020018462ffffff1681526020014363ffffffff168152602001836fffffffffffffffffffffffffffffffff168152509050806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548168ffffffffffffffffff021916908368ffffffffffffffffff16021790555060208201518160000160096101000a81548162ffffff021916908362ffffff160217905550604082015181600001600c6101000a81548163ffffffff021916908363ffffffff16021790555060608201518160000160106101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff160217905550905050816fffffffffffffffffffffffffffffffff166002600082825461094b91906124e8565b92505081905550816fffffffffffffffffffffffffffffffff16600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546109b391906124e8565b92505081905550600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330876040518463ffffffff1660e01b8152600401610a19939291906120b7565b602060405180830381600087803b158015610a3357600080fd5b505af1158015610a47573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a6b9190611c39565b610aaa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aa19061239c565b60405180910390fd5b7fe7dbea143058f90be7a1644e539342c25ddc5379868fe922bab596de99debf4133858585604051610adf9493929190612117565b60405180910390a150505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60056020528060005260406000206000915090505481565b6000808262ffffff168362ffffff168568ffffffffffffffffff16610b4e91906125a9565b610b5891906125a9565b905060008111610b9d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b94906122dc565b60405180910390fd5b8091505092915050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000610bd63361185e565b905060008111610c1b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c12906121dc565b60405180910390fd5b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610c6a91906124e8565b925050819055507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610ccc9291906120ee565b602060405180830381600087803b158015610ce657600080fd5b505af1158015610cfa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d1e9190611c39565b610d5d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d54906121bc565b60405180910390fd5b7f769d4212c4fbfaa012a896b49e0f3bb14d32dd0d60ce1a13d357ee6b69db77c23382604051610d8e9291906120ee565b60405180910390a150565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b60025481565b60016020528060005260406000206000915090505481565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60046020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ecb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ec2906123bc565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610f5c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f539061243c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610fcc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fc39061233c565b60405180910390fd5b81600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231836040518263ffffffff1660e01b8152600401611087919061203c565b60206040518083038186803b15801561109f57600080fd5b505afa1580156110b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110d79190611c62565b1015611118576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161110f9061235c565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e83306040518363ffffffff1660e01b8152600401611194929190612057565b60206040518083038186803b1580156111ac57600080fd5b505afa1580156111c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111e49190611c62565b1015611225576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161121c9061231c565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd82307f00000000000000000000000000000000000000000000000000000000000000006040518463ffffffff1660e01b81526004016112a293929190612080565b602060405180830381600087803b1580156112bc57600080fd5b505af11580156112d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112f49190611c39565b611333576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161132a906123fc565b60405180910390fd5b5050565b600073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156113c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113c09061237c565b60405180910390fd5b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060800160405290816000820160009054906101000a900468ffffffffffffffffff1668ffffffffffffffffff1668ffffffffffffffffff1681526020016000820160099054906101000a900462ffffff1662ffffff1662ffffff16815260200160008201600c9054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016000820160109054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff168152505090506000816000015168ffffffffffffffffff1690506000811415611536576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161152d9061225c565b60405180910390fd5b816040015163ffffffff164311611582576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611579906122fc565b60405180910390fd5b61158b826118ba565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600080820160006101000a81549068ffffffffffffffffff02191690556000820160096101000a81549062ffffff021916905560008201600c6101000a81549063ffffffff02191690556000820160106101000a8154906fffffffffffffffffffffffffffffffff02191690555050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016116959291906120ee565b602060405180830381600087803b1580156116af57600080fd5b505af11580156116c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116e79190611c39565b611726576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161171d9061221c565b60405180910390fd5b5050565b6000811161176d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611764906122bc565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156117dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117d4906121fc565b60405180910390fd5b80600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f6e1afd29522b0aaf986597bcc53f5fb4daae2af7cfd41d00c384ab1bdf912b2382826040516118529291906120ee565b60405180910390a15050565b6000600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546118a983611a27565b6118b39190612603565b9050919050565b806020015162ffffff1681604001516118d3919061253e565b63ffffffff164310156119da5780606001516fffffffffffffffffffffffffffffffff16600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546119459190612603565b9250508190555080606001516fffffffffffffffffffffffffffffffff16600260008282546119749190612603565b925050819055507f6c6f3c7d8c87976393011cc962da12841024bc1d62d2de21716a6306ab314ef33382600001518360200151846040015163ffffffff16436119bd9190612603565b6040516119cd949392919061215c565b60405180910390a1611a24565b7f391930ab48e95a9040c849cc86e1b2f63c711a1f59d6e324ce775dc9a005105633826000015183602001518460600151604051611a1b9493929190612117565b60405180910390a15b50565b60007f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000611a7591906124e8565b4310611ac257600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050611b66565b7f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000043611b0f9190612603565b600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611b5991906125a9565b611b639190612578565b90505b919050565b600081359050611b7a81612cd2565b92915050565b600081519050611b8f81612ce9565b92915050565b600081359050611ba481612d00565b92915050565b600081519050611bb981612d17565b92915050565b600081359050611bce81612d2e565b92915050565b600060208284031215611be657600080fd5b6000611bf484828501611b6b565b91505092915050565b60008060408385031215611c1057600080fd5b6000611c1e85828601611b6b565b9250506020611c2f85828601611b6b565b9150509250929050565b600060208284031215611c4b57600080fd5b6000611c5984828501611b80565b91505092915050565b600060208284031215611c7457600080fd5b6000611c8284828501611baa565b91505092915050565b60008060408385031215611c9e57600080fd5b6000611cac85828601611bbf565b9250506020611cbd85828601611b95565b9150509250929050565b611cd081612637565b82525050565b611cdf816126cf565b82525050565b6000611cf2601d836124d7565b9150611cfd82612787565b602082019050919050565b6000611d156022836124d7565b9150611d20826127b0565b604082019050919050565b6000611d38602d836124d7565b9150611d43826127ff565b604082019050919050565b6000611d5b601a836124d7565b9150611d668261284e565b602082019050919050565b6000611d7e6050836124d7565b9150611d8982612877565b606082019050919050565b6000611da16020836124d7565b9150611dac826128ec565b602082019050919050565b6000611dc46031836124d7565b9150611dcf82612915565b604082019050919050565b6000611de7600f836124d7565b9150611df282612964565b602082019050919050565b6000611e0a6029836124d7565b9150611e158261298d565b604082019050919050565b6000611e2d6033836124d7565b9150611e38826129dc565b604082019050919050565b6000611e50603c836124d7565b9150611e5b82612a2b565b604082019050919050565b6000611e736029836124d7565b9150611e7e82612a7a565b604082019050919050565b6000611e966020836124d7565b9150611ea182612ac9565b602082019050919050565b6000611eb9602b836124d7565b9150611ec482612af2565b604082019050919050565b6000611edc6011836124d7565b9150611ee782612b41565b602082019050919050565b6000611eff6021836124d7565b9150611f0a82612b6a565b604082019050919050565b6000611f22601b836124d7565b9150611f2d82612bb9565b602082019050919050565b6000611f456033836124d7565b9150611f5082612be2565b604082019050919050565b6000611f68602b836124d7565b9150611f7382612c31565b604082019050919050565b6000611f8b601f836124d7565b9150611f9682612c80565b602082019050919050565b6000611fae6019836124d7565b9150611fb982612ca9565b602082019050919050565b611fcd81612655565b82525050565b611fdc816126f3565b82525050565b611feb81612691565b82525050565b611ffa81612705565b82525050565b612009816126a0565b82525050565b612018816126aa565b82525050565b61202781612717565b82525050565b612036816126ba565b82525050565b60006020820190506120516000830184611cc7565b92915050565b600060408201905061206c6000830185611cc7565b6120796020830184611cc7565b9392505050565b60006060820190506120956000830186611cc7565b6120a26020830185611cc7565b6120af6040830184612000565b949350505050565b60006060820190506120cc6000830186611cc7565b6120d96020830185611cc7565b6120e6604083018461201e565b949350505050565b60006040820190506121036000830185611cc7565b6121106020830184612000565b9392505050565b600060808201905061212c6000830187611cc7565b612139602083018661201e565b6121466040830185611ff1565b6121536060830184611fd3565b95945050505050565b60006080820190506121716000830187611cc7565b61217e602083018661201e565b61218b6040830185611ff1565b6121986060830184612000565b95945050505050565b60006020820190506121b66000830184611cd6565b92915050565b600060208201905081810360008301526121d581611ce5565b9050919050565b600060208201905081810360008301526121f581611d08565b9050919050565b6000602082019050818103600083015261221581611d2b565b9050919050565b6000602082019050818103600083015261223581611d4e565b9050919050565b6000602082019050818103600083015261225581611d71565b9050919050565b6000602082019050818103600083015261227581611d94565b9050919050565b6000602082019050818103600083015261229581611db7565b9050919050565b600060208201905081810360008301526122b581611dda565b9050919050565b600060208201905081810360008301526122d581611dfd565b9050919050565b600060208201905081810360008301526122f581611e20565b9050919050565b6000602082019050818103600083015261231581611e43565b9050919050565b6000602082019050818103600083015261233581611e66565b9050919050565b6000602082019050818103600083015261235581611e89565b9050919050565b6000602082019050818103600083015261237581611eac565b9050919050565b6000602082019050818103600083015261239581611ecf565b9050919050565b600060208201905081810360008301526123b581611ef2565b9050919050565b600060208201905081810360008301526123d581611f15565b9050919050565b600060208201905081810360008301526123f581611f38565b9050919050565b6000602082019050818103600083015261241581611f5b565b9050919050565b6000602082019050818103600083015261243581611f7e565b9050919050565b6000602082019050818103600083015261245581611fa1565b9050919050565b60006020820190506124716000830184611fc4565b92915050565b600060208201905061248c6000830184612000565b92915050565b60006080820190506124a7600083018761202d565b6124b46020830186611fe2565b6124c1604083018561200f565b6124ce6060830184611fc4565b95945050505050565b600082825260208201905092915050565b60006124f3826126a0565b91506124fe836126a0565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561253357612532612729565b5b828201905092915050565b6000612549826126aa565b9150612554836126aa565b92508263ffffffff0382111561256d5761256c612729565b5b828201905092915050565b6000612583826126a0565b915061258e836126a0565b92508261259e5761259d612758565b5b828204905092915050565b60006125b4826126a0565b91506125bf836126a0565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156125f8576125f7612729565b5b828202905092915050565b600061260e826126a0565b9150612619836126a0565b92508282101561262c5761262b612729565b5b828203905092915050565b600061264282612671565b9050919050565b60008115159050919050565b60006fffffffffffffffffffffffffffffffff82169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062ffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b600068ffffffffffffffffff82169050919050565b60006126da826126e1565b9050919050565b60006126ec82612671565b9050919050565b60006126fe82612655565b9050919050565b600061271082612691565b9050919050565b6000612722826126ba565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f526577617264206f696c657273207472616e73666572206661696c6564000000600082015250565b7f56657374696e672072656c656173653a206e6f20746f6b656e7320617265206460008201527f7565000000000000000000000000000000000000000000000000000000000000602082015250565b7f546f6b656e56657374696e673a2062656e65666963696172792069732074686560008201527f207a65726f206164647265737300000000000000000000000000000000000000602082015250565b7f506f6f6c20746f6b656e207472616e73666572206661696c6564000000000000600082015250565b7f596f75207374696c6c20686176652061207374616b65206c6f636b6564202d2060008201527f706c6561736520756e6c6f636b2066697273742c20646f6e2774206c6561766560208201527f2066726565206d6f6e6579206865726500000000000000000000000000000000604082015250565b7f596f7520646f6e277420686176652061207374616b6520746f20756e6c6f636b600082015250565b7f596f7572206c6f636b20706572696f642065786365656473205374616b696e6760008201527f2050726f6772616d206475726174696f6e000000000000000000000000000000602082015250565b7f416c7265616479207374616b696e670000000000000000000000000000000000600082015250565b7f596f75206469646e2774206561726e20616e7920696e746567657220616d6f7560008201527f6e74206f66207765690000000000000000000000000000000000000000000000602082015250565b7f4e65697468657220746f6b656e416d6f756e74206e6f72206c6f636b696e675060008201527f6572696f6420636f756c646e2774206265203000000000000000000000000000602082015250565b7f596f752063616e277420776974686472617720746865207374616b6520696e2060008201527f7468652073616d6520626c6f636b20697420776173206c6f636b656400000000602082015250565b7f5374616b696e6746756e6420646f65736e2774206861766520656e6f7567682060008201527f616c6c6f77616e63650000000000000000000000000000000000000000000000602082015250565b7f706f6f6c546f6b656e20616464726573732063616e6e6f74206265207a65726f600082015250565b7f5374616b696e6746756e6420646f65736e2774206861766520656e6f7567682060008201527f4f494c2062616c616e6365000000000000000000000000000000000000000000602082015250565b7f706f6f6c546f6b656e206e6f7420736574000000000000000000000000000000600082015250565b7f5472616e7366657246726f6d206f6620706f6f6c546f6b656e73206661696c6560008201527f6400000000000000000000000000000000000000000000000000000000000000602082015250565b7f43616e206f6e6c792062652063616c6c6564206279206f776e65720000000000600082015250565b7f596f752063616e206f6e6c79206765742052657761726473206166746572205360008201527f74616b696e672050726f6772616d20656e647300000000000000000000000000602082015250565b7f5472616e7366657246726f6d206f66204f494c2066726f6d205374616b696e6760008201527f46756e64206661696c6564000000000000000000000000000000000000000000602082015250565b7f596f7520646f6e2774206861766520616e7920726577617264506f696e747300600082015250565b7f706f6f6c546f6b656e2077617320616c72656164792073657400000000000000600082015250565b612cdb81612637565b8114612ce657600080fd5b50565b612cf281612649565b8114612cfd57600080fd5b50565b612d0981612691565b8114612d1457600080fd5b50565b612d20816126a0565b8114612d2b57600080fd5b50565b612d37816126ba565b8114612d4257600080fd5b5056fea26469706673582212203f20109eed4bb9ce5d17b0838ce18f043db97a4ec79d9ae90ea1334089c0736264736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x10B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x86D1A69F GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xC959360B GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xC959360B EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0xCBDF382C EQ PUSH2 0x2B7 JUMPI DUP1 PUSH4 0xE0E4A722 EQ PUSH2 0x2D5 JUMPI DUP1 PUSH4 0xF6FFAB88 EQ PUSH2 0x305 JUMPI DUP1 PUSH4 0xF968F493 EQ PUSH2 0x321 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x86D1A69F EQ PUSH2 0x223 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x22D JUMPI DUP1 PUSH4 0xBC0925AE EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0xC2E8CAF6 EQ PUSH2 0x269 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x52946B04 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x52946B04 EQ PUSH2 0x187 JUMPI DUP1 PUSH4 0x70FF852B EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0x798633B9 EQ PUSH2 0x1D5 JUMPI DUP1 PUSH4 0x81E9207D EQ PUSH2 0x205 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x572B0CC EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x1514617E EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x16934FC4 EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0x378592C8 EQ PUSH2 0x16B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x118 PUSH2 0x32B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x122 PUSH2 0x581 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12F SWAP2 SWAP1 PUSH2 0x2477 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14D SWAP2 SWAP1 PUSH2 0x1BD4 JUMP JUMPDEST PUSH2 0x5A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x162 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2492 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x185 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x180 SWAP2 SWAP1 PUSH2 0x1C8B JUMP JUMPDEST PUSH2 0x625 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x18F PUSH2 0xAED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19C SWAP2 SWAP1 PUSH2 0x2477 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BA SWAP2 SWAP1 PUSH2 0x1BD4 JUMP JUMPDEST PUSH2 0xB11 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CC SWAP2 SWAP1 PUSH2 0x2477 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EA SWAP2 SWAP1 PUSH2 0x1C8B JUMP JUMPDEST PUSH2 0xB29 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FC SWAP2 SWAP1 PUSH2 0x245C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20D PUSH2 0xBA7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21A SWAP2 SWAP1 PUSH2 0x21A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22B PUSH2 0xBCB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x235 PUSH2 0xD99 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x242 SWAP2 SWAP1 PUSH2 0x203C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x253 PUSH2 0xDBD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x260 SWAP2 SWAP1 PUSH2 0x2477 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x271 PUSH2 0xDE1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27E SWAP2 SWAP1 PUSH2 0x2477 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29C SWAP2 SWAP1 PUSH2 0x1BD4 JUMP JUMPDEST PUSH2 0xDE7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AE SWAP2 SWAP1 PUSH2 0x2477 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BF PUSH2 0xDFF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CC SWAP2 SWAP1 PUSH2 0x21A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2EA SWAP2 SWAP1 PUSH2 0x1BD4 JUMP JUMPDEST PUSH2 0xE25 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FC SWAP2 SWAP1 PUSH2 0x2477 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31A SWAP2 SWAP1 PUSH2 0x1BFD JUMP JUMPDEST PUSH2 0xE3D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x329 PUSH2 0x1337 JUMP JUMPDEST STOP JUMPDEST PUSH32 0x0 NUMBER GT PUSH2 0x38D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x384 SWAP1 PUSH2 0x23DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH9 0xFFFFFFFFFFFFFFFFFF AND PUSH9 0xFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x431 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x428 SWAP1 PUSH2 0x223C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT PUSH2 0x4B3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4AA SWAP1 PUSH2 0x241C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH32 0x0 PUSH2 0x523 SWAP2 SWAP1 PUSH2 0x25A9 JUMP JUMPDEST PUSH2 0x52D SWAP2 SWAP1 PUSH2 0x2578 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x57E CALLER DUP3 PUSH2 0x172A JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH9 0xFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0x9 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH3 0xFFFFFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x6B7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AE SWAP1 PUSH2 0x237C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH3 0xFFFFFF AND PUSH32 0x0 PUSH2 0x6E8 SWAP2 SWAP1 PUSH2 0x2603 JUMP JUMPDEST NUMBER GT ISZERO PUSH2 0x72A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x721 SWAP1 PUSH2 0x227C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH9 0xFFFFFFFFFFFFFFFFFF AND PUSH9 0xFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7CE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7C5 SWAP1 PUSH2 0x229C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x7DA DUP4 DUP4 PUSH2 0xB29 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP6 PUSH9 0xFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD NUMBER PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP DUP1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH9 0xFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH9 0xFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x9 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH3 0xFFFFFF MUL NOT AND SWAP1 DUP4 PUSH3 0xFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0xC PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x10 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x94B SWAP2 SWAP1 PUSH2 0x24E8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x9B3 SWAP2 SWAP1 PUSH2 0x24E8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP8 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA19 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x20B7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA47 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA6B SWAP2 SWAP1 PUSH2 0x1C39 JUMP JUMPDEST PUSH2 0xAAA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAA1 SWAP1 PUSH2 0x239C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0xE7DBEA143058F90BE7A1644E539342C25DDC5379868FE922BAB596DE99DEBF41 CALLER DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0xADF SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2117 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH3 0xFFFFFF AND DUP4 PUSH3 0xFFFFFF AND DUP6 PUSH9 0xFFFFFFFFFFFFFFFFFF AND PUSH2 0xB4E SWAP2 SWAP1 PUSH2 0x25A9 JUMP JUMPDEST PUSH2 0xB58 SWAP2 SWAP1 PUSH2 0x25A9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0xB9D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB94 SWAP1 PUSH2 0x22DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBD6 CALLER PUSH2 0x185E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0xC1B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC12 SWAP1 PUSH2 0x21DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xC6A SWAP2 SWAP1 PUSH2 0x24E8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCCC SWAP3 SWAP2 SWAP1 PUSH2 0x20EE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCFA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD1E SWAP2 SWAP1 PUSH2 0x1C39 JUMP JUMPDEST PUSH2 0xD5D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD54 SWAP1 PUSH2 0x21BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x769D4212C4FBFAA012A896B49E0F3BB14D32DD0D60CE1A13D357EE6B69DB77C2 CALLER DUP3 PUSH1 0x40 MLOAD PUSH2 0xD8E SWAP3 SWAP2 SWAP1 PUSH2 0x20EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xECB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEC2 SWAP1 PUSH2 0x23BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF5C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF53 SWAP1 PUSH2 0x243C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xFCC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFC3 SWAP1 PUSH2 0x233C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1087 SWAP2 SWAP1 PUSH2 0x203C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x109F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10B3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10D7 SWAP2 SWAP1 PUSH2 0x1C62 JUMP JUMPDEST LT ISZERO PUSH2 0x1118 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x110F SWAP1 PUSH2 0x235C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E DUP4 ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1194 SWAP3 SWAP2 SWAP1 PUSH2 0x2057 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x11C0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11E4 SWAP2 SWAP1 PUSH2 0x1C62 JUMP JUMPDEST LT ISZERO PUSH2 0x1225 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121C SWAP1 PUSH2 0x231C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP3 ADDRESS PUSH32 0x0 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12A2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2080 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x12D0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12F4 SWAP2 SWAP1 PUSH2 0x1C39 JUMP JUMPDEST PUSH2 0x1333 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x132A SWAP1 PUSH2 0x23FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x13C9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13C0 SWAP1 PUSH2 0x237C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH9 0xFFFFFFFFFFFFFFFFFF AND PUSH9 0xFFFFFFFFFFFFFFFFFF AND PUSH9 0xFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x9 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH3 0xFFFFFF AND PUSH3 0xFFFFFF AND PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD MLOAD PUSH9 0xFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0x1536 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x152D SWAP1 PUSH2 0x225C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x40 ADD MLOAD PUSH4 0xFFFFFFFF AND NUMBER GT PUSH2 0x1582 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1579 SWAP1 PUSH2 0x22FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x158B DUP3 PUSH2 0x18BA JUMP JUMPDEST PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH9 0xFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x0 DUP3 ADD PUSH1 0x9 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH3 0xFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x0 DUP3 ADD PUSH1 0xC PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x0 DUP3 ADD PUSH1 0x10 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE POP POP PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1695 SWAP3 SWAP2 SWAP1 PUSH2 0x20EE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x16AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x16C3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x16E7 SWAP2 SWAP1 PUSH2 0x1C39 JUMP JUMPDEST PUSH2 0x1726 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x171D SWAP1 PUSH2 0x221C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x176D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1764 SWAP1 PUSH2 0x22BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x17DD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17D4 SWAP1 PUSH2 0x21FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH32 0x6E1AFD29522B0AAF986597BCC53F5FB4DAAE2AF7CFD41D00C384AB1BDF912B23 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1852 SWAP3 SWAP2 SWAP1 PUSH2 0x20EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x18A9 DUP4 PUSH2 0x1A27 JUMP JUMPDEST PUSH2 0x18B3 SWAP2 SWAP1 PUSH2 0x2603 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 PUSH1 0x20 ADD MLOAD PUSH3 0xFFFFFF AND DUP2 PUSH1 0x40 ADD MLOAD PUSH2 0x18D3 SWAP2 SWAP1 PUSH2 0x253E JUMP JUMPDEST PUSH4 0xFFFFFFFF AND NUMBER LT ISZERO PUSH2 0x19DA JUMPI DUP1 PUSH1 0x60 ADD MLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1945 SWAP2 SWAP1 PUSH2 0x2603 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x60 ADD MLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1974 SWAP2 SWAP1 PUSH2 0x2603 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0x6C6F3C7D8C87976393011CC962DA12841024BC1D62D2DE21716A6306AB314EF3 CALLER DUP3 PUSH1 0x0 ADD MLOAD DUP4 PUSH1 0x20 ADD MLOAD DUP5 PUSH1 0x40 ADD MLOAD PUSH4 0xFFFFFFFF AND NUMBER PUSH2 0x19BD SWAP2 SWAP1 PUSH2 0x2603 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19CD SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x215C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x1A24 JUMP JUMPDEST PUSH32 0x391930AB48E95A9040C849CC86E1B2F63C711A1F59D6E324CE775DC9A0051056 CALLER DUP3 PUSH1 0x0 ADD MLOAD DUP4 PUSH1 0x20 ADD MLOAD DUP5 PUSH1 0x60 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x1A1B SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2117 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH32 0x0 PUSH2 0x1A75 SWAP2 SWAP1 PUSH2 0x24E8 JUMP JUMPDEST NUMBER LT PUSH2 0x1AC2 JUMPI PUSH1 0x4 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH2 0x1B66 JUMP JUMPDEST PUSH32 0x0 PUSH32 0x0 NUMBER PUSH2 0x1B0F SWAP2 SWAP1 PUSH2 0x2603 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1B59 SWAP2 SWAP1 PUSH2 0x25A9 JUMP JUMPDEST PUSH2 0x1B63 SWAP2 SWAP1 PUSH2 0x2578 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B7A DUP2 PUSH2 0x2CD2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1B8F DUP2 PUSH2 0x2CE9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BA4 DUP2 PUSH2 0x2D00 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1BB9 DUP2 PUSH2 0x2D17 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BCE DUP2 PUSH2 0x2D2E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1BF4 DUP5 DUP3 DUP6 ADD PUSH2 0x1B6B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1C1E DUP6 DUP3 DUP7 ADD PUSH2 0x1B6B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1C2F DUP6 DUP3 DUP7 ADD PUSH2 0x1B6B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1C59 DUP5 DUP3 DUP6 ADD PUSH2 0x1B80 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C74 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1C82 DUP5 DUP3 DUP6 ADD PUSH2 0x1BAA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C9E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1CAC DUP6 DUP3 DUP7 ADD PUSH2 0x1BBF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1CBD DUP6 DUP3 DUP7 ADD PUSH2 0x1B95 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CD0 DUP2 PUSH2 0x2637 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1CDF DUP2 PUSH2 0x26CF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CF2 PUSH1 0x1D DUP4 PUSH2 0x24D7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CFD DUP3 PUSH2 0x2787 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D15 PUSH1 0x22 DUP4 PUSH2 0x24D7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D20 DUP3 PUSH2 0x27B0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D38 PUSH1 0x2D DUP4 PUSH2 0x24D7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D43 DUP3 PUSH2 0x27FF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D5B PUSH1 0x1A DUP4 PUSH2 0x24D7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D66 DUP3 PUSH2 0x284E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D7E PUSH1 0x50 DUP4 PUSH2 0x24D7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D89 DUP3 PUSH2 0x2877 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DA1 PUSH1 0x20 DUP4 PUSH2 0x24D7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DAC DUP3 PUSH2 0x28EC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DC4 PUSH1 0x31 DUP4 PUSH2 0x24D7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DCF DUP3 PUSH2 0x2915 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DE7 PUSH1 0xF DUP4 PUSH2 0x24D7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DF2 DUP3 PUSH2 0x2964 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E0A PUSH1 0x29 DUP4 PUSH2 0x24D7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E15 DUP3 PUSH2 0x298D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E2D PUSH1 0x33 DUP4 PUSH2 0x24D7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E38 DUP3 PUSH2 0x29DC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E50 PUSH1 0x3C DUP4 PUSH2 0x24D7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E5B DUP3 PUSH2 0x2A2B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E73 PUSH1 0x29 DUP4 PUSH2 0x24D7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E7E DUP3 PUSH2 0x2A7A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E96 PUSH1 0x20 DUP4 PUSH2 0x24D7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EA1 DUP3 PUSH2 0x2AC9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EB9 PUSH1 0x2B DUP4 PUSH2 0x24D7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EC4 DUP3 PUSH2 0x2AF2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EDC PUSH1 0x11 DUP4 PUSH2 0x24D7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EE7 DUP3 PUSH2 0x2B41 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EFF PUSH1 0x21 DUP4 PUSH2 0x24D7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F0A DUP3 PUSH2 0x2B6A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F22 PUSH1 0x1B DUP4 PUSH2 0x24D7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F2D DUP3 PUSH2 0x2BB9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F45 PUSH1 0x33 DUP4 PUSH2 0x24D7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F50 DUP3 PUSH2 0x2BE2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F68 PUSH1 0x2B DUP4 PUSH2 0x24D7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F73 DUP3 PUSH2 0x2C31 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F8B PUSH1 0x1F DUP4 PUSH2 0x24D7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F96 DUP3 PUSH2 0x2C80 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FAE PUSH1 0x19 DUP4 PUSH2 0x24D7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FB9 DUP3 PUSH2 0x2CA9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FCD DUP2 PUSH2 0x2655 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1FDC DUP2 PUSH2 0x26F3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1FEB DUP2 PUSH2 0x2691 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1FFA DUP2 PUSH2 0x2705 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2009 DUP2 PUSH2 0x26A0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2018 DUP2 PUSH2 0x26AA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2027 DUP2 PUSH2 0x2717 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2036 DUP2 PUSH2 0x26BA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2051 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1CC7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x206C PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1CC7 JUMP JUMPDEST PUSH2 0x2079 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1CC7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2095 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1CC7 JUMP JUMPDEST PUSH2 0x20A2 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1CC7 JUMP JUMPDEST PUSH2 0x20AF PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2000 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x20CC PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1CC7 JUMP JUMPDEST PUSH2 0x20D9 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1CC7 JUMP JUMPDEST PUSH2 0x20E6 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x201E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2103 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1CC7 JUMP JUMPDEST PUSH2 0x2110 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2000 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x212C PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1CC7 JUMP JUMPDEST PUSH2 0x2139 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x201E JUMP JUMPDEST PUSH2 0x2146 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1FF1 JUMP JUMPDEST PUSH2 0x2153 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1FD3 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2171 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1CC7 JUMP JUMPDEST PUSH2 0x217E PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x201E JUMP JUMPDEST PUSH2 0x218B PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1FF1 JUMP JUMPDEST PUSH2 0x2198 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x2000 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x21B6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1CD6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x21D5 DUP2 PUSH2 0x1CE5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x21F5 DUP2 PUSH2 0x1D08 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2215 DUP2 PUSH2 0x1D2B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2235 DUP2 PUSH2 0x1D4E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2255 DUP2 PUSH2 0x1D71 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2275 DUP2 PUSH2 0x1D94 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2295 DUP2 PUSH2 0x1DB7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x22B5 DUP2 PUSH2 0x1DDA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x22D5 DUP2 PUSH2 0x1DFD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x22F5 DUP2 PUSH2 0x1E20 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2315 DUP2 PUSH2 0x1E43 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2335 DUP2 PUSH2 0x1E66 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2355 DUP2 PUSH2 0x1E89 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2375 DUP2 PUSH2 0x1EAC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2395 DUP2 PUSH2 0x1ECF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x23B5 DUP2 PUSH2 0x1EF2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x23D5 DUP2 PUSH2 0x1F15 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x23F5 DUP2 PUSH2 0x1F38 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2415 DUP2 PUSH2 0x1F5B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2435 DUP2 PUSH2 0x1F7E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2455 DUP2 PUSH2 0x1FA1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2471 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1FC4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x248C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2000 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x24A7 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x202D JUMP JUMPDEST PUSH2 0x24B4 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1FE2 JUMP JUMPDEST PUSH2 0x24C1 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x200F JUMP JUMPDEST PUSH2 0x24CE PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1FC4 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24F3 DUP3 PUSH2 0x26A0 JUMP JUMPDEST SWAP2 POP PUSH2 0x24FE DUP4 PUSH2 0x26A0 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x2533 JUMPI PUSH2 0x2532 PUSH2 0x2729 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2549 DUP3 PUSH2 0x26AA JUMP JUMPDEST SWAP2 POP PUSH2 0x2554 DUP4 PUSH2 0x26AA JUMP JUMPDEST SWAP3 POP DUP3 PUSH4 0xFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x256D JUMPI PUSH2 0x256C PUSH2 0x2729 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2583 DUP3 PUSH2 0x26A0 JUMP JUMPDEST SWAP2 POP PUSH2 0x258E DUP4 PUSH2 0x26A0 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x259E JUMPI PUSH2 0x259D PUSH2 0x2758 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25B4 DUP3 PUSH2 0x26A0 JUMP JUMPDEST SWAP2 POP PUSH2 0x25BF DUP4 PUSH2 0x26A0 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x25F8 JUMPI PUSH2 0x25F7 PUSH2 0x2729 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x260E DUP3 PUSH2 0x26A0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2619 DUP4 PUSH2 0x26A0 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x262C JUMPI PUSH2 0x262B PUSH2 0x2729 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2642 DUP3 PUSH2 0x2671 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH9 0xFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26DA DUP3 PUSH2 0x26E1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26EC DUP3 PUSH2 0x2671 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26FE DUP3 PUSH2 0x2655 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2710 DUP3 PUSH2 0x2691 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2722 DUP3 PUSH2 0x26BA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x526577617264206F696C657273207472616E73666572206661696C6564000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x56657374696E672072656C656173653A206E6F20746F6B656E73206172652064 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7565000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x546F6B656E56657374696E673A2062656E656669636961727920697320746865 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F206164647265737300000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x506F6F6C20746F6B656E207472616E73666572206661696C6564000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x596F75207374696C6C20686176652061207374616B65206C6F636B6564202D20 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x706C6561736520756E6C6F636B2066697273742C20646F6E2774206C65617665 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x2066726565206D6F6E6579206865726500000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x596F7520646F6E277420686176652061207374616B6520746F20756E6C6F636B PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x596F7572206C6F636B20706572696F642065786365656473205374616B696E67 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x2050726F6772616D206475726174696F6E000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416C7265616479207374616B696E670000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x596F75206469646E2774206561726E20616E7920696E746567657220616D6F75 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E74206F66207765690000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4E65697468657220746F6B656E416D6F756E74206E6F72206C6F636B696E6750 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6572696F6420636F756C646E2774206265203000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x596F752063616E277420776974686472617720746865207374616B6520696E20 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7468652073616D6520626C6F636B20697420776173206C6F636B656400000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5374616B696E6746756E6420646F65736E2774206861766520656E6F75676820 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C6C6F77616E63650000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x706F6F6C546F6B656E20616464726573732063616E6E6F74206265207A65726F PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5374616B696E6746756E6420646F65736E2774206861766520656E6F75676820 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x4F494C2062616C616E6365000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x706F6F6C546F6B656E206E6F7420736574000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5472616E7366657246726F6D206F6620706F6F6C546F6B656E73206661696C65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6400000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x43616E206F6E6C792062652063616C6C6564206279206F776E65720000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x596F752063616E206F6E6C792067657420526577617264732061667465722053 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x74616B696E672050726F6772616D20656E647300000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5472616E7366657246726F6D206F66204F494C2066726F6D205374616B696E67 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x46756E64206661696C6564000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x596F7520646F6E2774206861766520616E7920726577617264506F696E747300 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x706F6F6C546F6B656E2077617320616C72656164792073657400000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x2CDB DUP2 PUSH2 0x2637 JUMP JUMPDEST DUP2 EQ PUSH2 0x2CE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2CF2 DUP2 PUSH2 0x2649 JUMP JUMPDEST DUP2 EQ PUSH2 0x2CFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2D09 DUP2 PUSH2 0x2691 JUMP JUMPDEST DUP2 EQ PUSH2 0x2D14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2D20 DUP2 PUSH2 0x26A0 JUMP JUMPDEST DUP2 EQ PUSH2 0x2D2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2D37 DUP2 PUSH2 0x26BA JUMP JUMPDEST DUP2 EQ PUSH2 0x2D42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODEHASH KECCAK256 LT SWAP15 0xED 0x4B 0xB9 0xCE 0x5D OR 0xB0 DUP4 DUP13 0xE1 DUP16 DIV RETURNDATASIZE 0xB9 PUSH27 0x4EC79D9AE90EA1334089C0736264736F6C63430008040033000000 ",
							"sourceMap": "2612:15215:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13821:1399;;;:::i;:::-;;5976:40;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4823;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;9998:1659;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5379:42;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5864:50;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8938:667;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5579:34;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;15941:371;;;:::i;:::-;;6243:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5198:48;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5102:32;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4982:54;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5491:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5719:49;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7753:808;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;11815:694;;;:::i;:::-;;13821:1399;13883:23;13868:12;:38;13860:102;;;;;;;;;;;;:::i;:::-;;;;;;;;;14014:1;13980:6;:18;13987:10;13980:18;;;;;;;;;;;;;;;:30;;;;;;;;;;;;:35;;;13972:128;;;;;;;;;;;;:::i;:::-;;;;;;;;;14151:1;14118:18;:30;14137:10;14118:30;;;;;;;;;;;;;;;;:34;14110:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;14864:20;14940:17;;14907:18;:30;14926:10;14907:30;;;;;;;;;;;;;;;;14887:17;:50;;;;:::i;:::-;:70;;;;:::i;:::-;14864:93;;15000:1;14967:18;:30;14986:10;14967:30;;;;;;;;;;;;;;;:34;;;;15095:38;15108:10;15120:12;15095;:38::i;:::-;13821:1399;:::o;5976:40::-;;;:::o;4823:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;9998:1659::-;6143:3;6113:34;;6121:9;;;;;;;;;;;6113:34;;;;6105:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;10290:22:::1;10264:48;;:23;:48;;;;:::i;:::-;10248:12;:64;;10240:126;;;;;;;;;;;;:::i;:::-;;;;;;;;;10418:1;10384:6:::0;:18:::1;10391:10;10384:18;;;;;;;;;;;;;;;:30;;;;;;;;;;;;:35;;;10376:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;10570:35;10608:66;10637:12;10651:22;10608:28;:66::i;:::-;10570:104;;10685:18;10706:94;;;;;;;;10712:12;10706:94;;;;;;10726:22;10706:94;;;;;;10757:12;10706:94;;;;;;10772:27;10706:94;;;;::::0;10685:115:::1;;10831:5;10810:6;:18:::0;10817:10:::1;10810:18;;;;;;;;;;;;;;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11117:27;11096:48;;:17;;:48;;;;;;;:::i;:::-;;;;;;;;11188:27;11154:61;;:18;:30;11173:10;11154:30;;;;;;;;;;;;;;;;:61;;;;;;;:::i;:::-;;;;;;;;11443:9;;;;;;;;;;;:22;;;11466:10;11486:4;11493:12;11443:63;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11435:109;;;;;;;;;;;;:::i;:::-;;;;;;;;;11560:90;11572:10;11584:12;11598:22;11622:27;11560:90;;;;;;;;;:::i;:::-;;;;;;;;6179:1;;9998:1659:::0;;:::o;5379:42::-;;;:::o;5864:50::-;;;;;;;;;;;;;;;;;:::o;8938:667::-;9049:7;9337:27;9433:22;9425:31;;9399:22;9391:31;;9375:12;9367:21;;:55;;;;:::i;:::-;:89;;;;:::i;:::-;9337:119;;9496:1;9474:19;:23;9466:87;;;;;;;;;;;;:::i;:::-;;;;;;;;;9578:19;9563:35;;;8938:667;;;;:::o;5579:34::-;;;:::o;15941:371::-;15977:18;15998:29;16016:10;15998:17;:29::i;:::-;15977:50;;16058:1;16045:10;:14;16037:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;16139:10;16109:14;:26;16124:10;16109:26;;;;;;;;;;;;;;;;:40;;;;;;;:::i;:::-;;;;;;;;16167:10;:19;;;16187:10;16199;16167:43;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16159:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;16260:45;16282:10;16294;16260:45;;;;;;;:::i;:::-;;;;;;;;15941:371;:::o;6243:30::-;;;:::o;5198:48::-;;;:::o;5102:32::-;;;;:::o;4982:54::-;;;;;;;;;;;;;;;;;:::o;5491:23::-;;;;;;;;;;;;;:::o;5719:49::-;;;;;;;;;;;;;;;;;:::o;7753:808::-;6374:5;6360:19;;:10;:19;;;6352:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;7889:3:::1;7859:34;;7867:9;;;;;;;;;;;7859:34;;;7851:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;7963:3;7941:26;;:10;:26;;;;7933:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;8033:10;8014:9;;:30;;;;;;;;;;;;;;;;;;8188:17;8142:10;8135:28;;;8164:19;8135:49;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:70;;8127:126;;;;;;;;;;;;:::i;:::-;;;;;;;;;8339:17;8278:10;8271:28;;;8300:19;8329:4;8271:64;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:85;;8263:139;;;;;;;;;;;;:::i;:::-;;;;;;;;;8427:10;8420:31;;;8452:19;8481:4;8488:17;8420:86;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8412:142;;;;;;;;;;;;:::i;:::-;;;;;;;;;7753:808:::0;;:::o;11815:694::-;6143:3;6113:34;;6121:9;;;;;;;;;;;6113:34;;;;6105:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;11869:18:::1;11890:6:::0;:18:::1;11897:10;11890:18;;;;;;;;;;;;;;;11869:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;11919:19;11941:5;:17;;;11919:39;;;;11992:1;11977:11;:16;;11969:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;12064:5;:16;;;12049:31;;:12;:31;12041:104;;;;;;;;;;;;:::i;:::-;;;;;;;;;12253:29;12276:5;12253:22;:29::i;:::-;12391:6;:18:::0;12398:10:::1;12391:18;;;;;;;;;;;;;;;;12384:25:::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12428:9;;;;;;;;;;;:18;;;12447:10;12459:11;12428:43;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12420:82;;;;;;;;;;;;:::i;:::-;;;;;;;;;6179:1;;11815:694::o:0;15531:360::-;15639:1;15623:13;:17;15615:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;15726:1;15704:24;;:10;:24;;;;15696:82;;;;;;;;;;;;:::i;:::-;;;;;;;;;15816:13;15788;:25;15802:10;15788:25;;;;;;;;;;;;;;;:41;;;;15844:40;15858:10;15870:13;15844:40;;;;;;;:::i;:::-;;;;;;;;15531:360;;:::o;16426:157::-;16496:7;16550:14;:26;16565:10;16550:26;;;;;;;;;;;;;;;;16522:25;16536:10;16522:13;:25::i;:::-;:54;;;;:::i;:::-;16515:61;;16426:157;;;:::o;12610:938::-;12991:6;:28;;;12971:48;;:6;:17;;;:48;;;;:::i;:::-;12955:65;;:12;:65;12951:591;;;13142:6;:34;;;13108:68;;:18;:30;13127:10;13108:30;;;;;;;;;;;;;;;;:68;;;;;;;:::i;:::-;;;;;;;;13211:6;:34;;;13190:55;;:17;;:55;;;;;;;:::i;:::-;;;;;;;;13264:120;13289:10;13301:6;:18;;;13321:6;:28;;;13366:6;:17;;;13351:32;;:12;:32;;;;:::i;:::-;13264:120;;;;;;;;;:::i;:::-;;;;;;;;12951:591;;;13420:111;13434:10;13446:6;:18;;;13466:6;:28;;;13496:6;:34;;;13420:111;;;;;;;;;:::i;:::-;;;;;;;;12951:591;12610:938;:::o;16807:486::-;16873:7;16938:15;16912:23;:41;;;;:::i;:::-;16896:12;:57;16892:395;;17048:13;:25;17062:10;17048:25;;;;;;;;;;;;;;;;17041:32;;;;16892:395;17261:15;17234:23;17219:12;:38;;;;:::i;:::-;17190:13;:25;17204:10;17190:25;;;;;;;;;;;;;;;;:68;;;;:::i;:::-;:86;;;;:::i;:::-;17183:93;;16807:486;;;;:::o;7:139:2:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:137::-;206:5;237:6;231:13;222:22;;253:30;277:5;253:30;:::i;:::-;212:77;;;;:::o;295:137::-;340:5;378:6;365:20;356:29;;394:32;420:5;394:32;:::i;:::-;346:86;;;;:::o;438:143::-;495:5;526:6;520:13;511:22;;542:33;569:5;542:33;:::i;:::-;501:80;;;;:::o;587:137::-;632:5;670:6;657:20;648:29;;686:32;712:5;686:32;:::i;:::-;638:86;;;;:::o;730:262::-;789:6;838:2;826:9;817:7;813:23;809:32;806:2;;;854:1;851;844:12;806:2;897:1;922:53;967:7;958:6;947:9;943:22;922:53;:::i;:::-;912:63;;868:117;796:196;;;;:::o;998:407::-;1066:6;1074;1123:2;1111:9;1102:7;1098:23;1094:32;1091:2;;;1139:1;1136;1129:12;1091:2;1182:1;1207:53;1252:7;1243:6;1232:9;1228:22;1207:53;:::i;:::-;1197:63;;1153:117;1309:2;1335:53;1380:7;1371:6;1360:9;1356:22;1335:53;:::i;:::-;1325:63;;1280:118;1081:324;;;;;:::o;1411:278::-;1478:6;1527:2;1515:9;1506:7;1502:23;1498:32;1495:2;;;1543:1;1540;1533:12;1495:2;1586:1;1611:61;1664:7;1655:6;1644:9;1640:22;1611:61;:::i;:::-;1601:71;;1557:125;1485:204;;;;:::o;1695:284::-;1765:6;1814:2;1802:9;1793:7;1789:23;1785:32;1782:2;;;1830:1;1827;1820:12;1782:2;1873:1;1898:64;1954:7;1945:6;1934:9;1930:22;1898:64;:::i;:::-;1888:74;;1844:128;1772:207;;;;:::o;1985:403::-;2051:6;2059;2108:2;2096:9;2087:7;2083:23;2079:32;2076:2;;;2124:1;2121;2114:12;2076:2;2167:1;2192:52;2236:7;2227:6;2216:9;2212:22;2192:52;:::i;:::-;2182:62;;2138:116;2293:2;2319:52;2363:7;2354:6;2343:9;2339:22;2319:52;:::i;:::-;2309:62;;2264:117;2066:322;;;;;:::o;2394:118::-;2481:24;2499:5;2481:24;:::i;:::-;2476:3;2469:37;2459:53;;:::o;2518:159::-;2619:51;2664:5;2619:51;:::i;:::-;2614:3;2607:64;2597:80;;:::o;2683:366::-;2825:3;2846:67;2910:2;2905:3;2846:67;:::i;:::-;2839:74;;2922:93;3011:3;2922:93;:::i;:::-;3040:2;3035:3;3031:12;3024:19;;2829:220;;;:::o;3055:366::-;3197:3;3218:67;3282:2;3277:3;3218:67;:::i;:::-;3211:74;;3294:93;3383:3;3294:93;:::i;:::-;3412:2;3407:3;3403:12;3396:19;;3201:220;;;:::o;3427:366::-;3569:3;3590:67;3654:2;3649:3;3590:67;:::i;:::-;3583:74;;3666:93;3755:3;3666:93;:::i;:::-;3784:2;3779:3;3775:12;3768:19;;3573:220;;;:::o;3799:366::-;3941:3;3962:67;4026:2;4021:3;3962:67;:::i;:::-;3955:74;;4038:93;4127:3;4038:93;:::i;:::-;4156:2;4151:3;4147:12;4140:19;;3945:220;;;:::o;4171:366::-;4313:3;4334:67;4398:2;4393:3;4334:67;:::i;:::-;4327:74;;4410:93;4499:3;4410:93;:::i;:::-;4528:2;4523:3;4519:12;4512:19;;4317:220;;;:::o;4543:366::-;4685:3;4706:67;4770:2;4765:3;4706:67;:::i;:::-;4699:74;;4782:93;4871:3;4782:93;:::i;:::-;4900:2;4895:3;4891:12;4884:19;;4689:220;;;:::o;4915:366::-;5057:3;5078:67;5142:2;5137:3;5078:67;:::i;:::-;5071:74;;5154:93;5243:3;5154:93;:::i;:::-;5272:2;5267:3;5263:12;5256:19;;5061:220;;;:::o;5287:366::-;5429:3;5450:67;5514:2;5509:3;5450:67;:::i;:::-;5443:74;;5526:93;5615:3;5526:93;:::i;:::-;5644:2;5639:3;5635:12;5628:19;;5433:220;;;:::o;5659:366::-;5801:3;5822:67;5886:2;5881:3;5822:67;:::i;:::-;5815:74;;5898:93;5987:3;5898:93;:::i;:::-;6016:2;6011:3;6007:12;6000:19;;5805:220;;;:::o;6031:366::-;6173:3;6194:67;6258:2;6253:3;6194:67;:::i;:::-;6187:74;;6270:93;6359:3;6270:93;:::i;:::-;6388:2;6383:3;6379:12;6372:19;;6177:220;;;:::o;6403:366::-;6545:3;6566:67;6630:2;6625:3;6566:67;:::i;:::-;6559:74;;6642:93;6731:3;6642:93;:::i;:::-;6760:2;6755:3;6751:12;6744:19;;6549:220;;;:::o;6775:366::-;6917:3;6938:67;7002:2;6997:3;6938:67;:::i;:::-;6931:74;;7014:93;7103:3;7014:93;:::i;:::-;7132:2;7127:3;7123:12;7116:19;;6921:220;;;:::o;7147:366::-;7289:3;7310:67;7374:2;7369:3;7310:67;:::i;:::-;7303:74;;7386:93;7475:3;7386:93;:::i;:::-;7504:2;7499:3;7495:12;7488:19;;7293:220;;;:::o;7519:366::-;7661:3;7682:67;7746:2;7741:3;7682:67;:::i;:::-;7675:74;;7758:93;7847:3;7758:93;:::i;:::-;7876:2;7871:3;7867:12;7860:19;;7665:220;;;:::o;7891:366::-;8033:3;8054:67;8118:2;8113:3;8054:67;:::i;:::-;8047:74;;8130:93;8219:3;8130:93;:::i;:::-;8248:2;8243:3;8239:12;8232:19;;8037:220;;;:::o;8263:366::-;8405:3;8426:67;8490:2;8485:3;8426:67;:::i;:::-;8419:74;;8502:93;8591:3;8502:93;:::i;:::-;8620:2;8615:3;8611:12;8604:19;;8409:220;;;:::o;8635:366::-;8777:3;8798:67;8862:2;8857:3;8798:67;:::i;:::-;8791:74;;8874:93;8963:3;8874:93;:::i;:::-;8992:2;8987:3;8983:12;8976:19;;8781:220;;;:::o;9007:366::-;9149:3;9170:67;9234:2;9229:3;9170:67;:::i;:::-;9163:74;;9246:93;9335:3;9246:93;:::i;:::-;9364:2;9359:3;9355:12;9348:19;;9153:220;;;:::o;9379:366::-;9521:3;9542:67;9606:2;9601:3;9542:67;:::i;:::-;9535:74;;9618:93;9707:3;9618:93;:::i;:::-;9736:2;9731:3;9727:12;9720:19;;9525:220;;;:::o;9751:366::-;9893:3;9914:67;9978:2;9973:3;9914:67;:::i;:::-;9907:74;;9990:93;10079:3;9990:93;:::i;:::-;10108:2;10103:3;10099:12;10092:19;;9897:220;;;:::o;10123:366::-;10265:3;10286:67;10350:2;10345:3;10286:67;:::i;:::-;10279:74;;10362:93;10451:3;10362:93;:::i;:::-;10480:2;10475:3;10471:12;10464:19;;10269:220;;;:::o;10495:118::-;10582:24;10600:5;10582:24;:::i;:::-;10577:3;10570:37;10560:53;;:::o;10619:131::-;10706:37;10737:5;10706:37;:::i;:::-;10701:3;10694:50;10684:66;;:::o;10756:115::-;10841:23;10858:5;10841:23;:::i;:::-;10836:3;10829:36;10819:52;;:::o;10877:129::-;10963:36;10993:5;10963:36;:::i;:::-;10958:3;10951:49;10941:65;;:::o;11012:118::-;11099:24;11117:5;11099:24;:::i;:::-;11094:3;11087:37;11077:53;;:::o;11136:115::-;11221:23;11238:5;11221:23;:::i;:::-;11216:3;11209:36;11199:52;;:::o;11257:129::-;11343:36;11373:5;11343:36;:::i;:::-;11338:3;11331:49;11321:65;;:::o;11392:115::-;11477:23;11494:5;11477:23;:::i;:::-;11472:3;11465:36;11455:52;;:::o;11513:222::-;11606:4;11644:2;11633:9;11629:18;11621:26;;11657:71;11725:1;11714:9;11710:17;11701:6;11657:71;:::i;:::-;11611:124;;;;:::o;11741:332::-;11862:4;11900:2;11889:9;11885:18;11877:26;;11913:71;11981:1;11970:9;11966:17;11957:6;11913:71;:::i;:::-;11994:72;12062:2;12051:9;12047:18;12038:6;11994:72;:::i;:::-;11867:206;;;;;:::o;12079:442::-;12228:4;12266:2;12255:9;12251:18;12243:26;;12279:71;12347:1;12336:9;12332:17;12323:6;12279:71;:::i;:::-;12360:72;12428:2;12417:9;12413:18;12404:6;12360:72;:::i;:::-;12442;12510:2;12499:9;12495:18;12486:6;12442:72;:::i;:::-;12233:288;;;;;;:::o;12527:440::-;12675:4;12713:2;12702:9;12698:18;12690:26;;12726:71;12794:1;12783:9;12779:17;12770:6;12726:71;:::i;:::-;12807:72;12875:2;12864:9;12860:18;12851:6;12807:72;:::i;:::-;12889:71;12956:2;12945:9;12941:18;12932:6;12889:71;:::i;:::-;12680:287;;;;;;:::o;12973:332::-;13094:4;13132:2;13121:9;13117:18;13109:26;;13145:71;13213:1;13202:9;13198:17;13189:6;13145:71;:::i;:::-;13226:72;13294:2;13283:9;13279:18;13270:6;13226:72;:::i;:::-;13099:206;;;;;:::o;13311:549::-;13486:4;13524:3;13513:9;13509:19;13501:27;;13538:71;13606:1;13595:9;13591:17;13582:6;13538:71;:::i;:::-;13619;13686:2;13675:9;13671:18;13662:6;13619:71;:::i;:::-;13700;13767:2;13756:9;13752:18;13743:6;13700:71;:::i;:::-;13781:72;13849:2;13838:9;13834:18;13825:6;13781:72;:::i;:::-;13491:369;;;;;;;:::o;13866:549::-;14041:4;14079:3;14068:9;14064:19;14056:27;;14093:71;14161:1;14150:9;14146:17;14137:6;14093:71;:::i;:::-;14174;14241:2;14230:9;14226:18;14217:6;14174:71;:::i;:::-;14255;14322:2;14311:9;14307:18;14298:6;14255:71;:::i;:::-;14336:72;14404:2;14393:9;14389:18;14380:6;14336:72;:::i;:::-;14046:369;;;;;;;:::o;14421:250::-;14528:4;14566:2;14555:9;14551:18;14543:26;;14579:85;14661:1;14650:9;14646:17;14637:6;14579:85;:::i;:::-;14533:138;;;;:::o;14677:419::-;14843:4;14881:2;14870:9;14866:18;14858:26;;14930:9;14924:4;14920:20;14916:1;14905:9;14901:17;14894:47;14958:131;15084:4;14958:131;:::i;:::-;14950:139;;14848:248;;;:::o;15102:419::-;15268:4;15306:2;15295:9;15291:18;15283:26;;15355:9;15349:4;15345:20;15341:1;15330:9;15326:17;15319:47;15383:131;15509:4;15383:131;:::i;:::-;15375:139;;15273:248;;;:::o;15527:419::-;15693:4;15731:2;15720:9;15716:18;15708:26;;15780:9;15774:4;15770:20;15766:1;15755:9;15751:17;15744:47;15808:131;15934:4;15808:131;:::i;:::-;15800:139;;15698:248;;;:::o;15952:419::-;16118:4;16156:2;16145:9;16141:18;16133:26;;16205:9;16199:4;16195:20;16191:1;16180:9;16176:17;16169:47;16233:131;16359:4;16233:131;:::i;:::-;16225:139;;16123:248;;;:::o;16377:419::-;16543:4;16581:2;16570:9;16566:18;16558:26;;16630:9;16624:4;16620:20;16616:1;16605:9;16601:17;16594:47;16658:131;16784:4;16658:131;:::i;:::-;16650:139;;16548:248;;;:::o;16802:419::-;16968:4;17006:2;16995:9;16991:18;16983:26;;17055:9;17049:4;17045:20;17041:1;17030:9;17026:17;17019:47;17083:131;17209:4;17083:131;:::i;:::-;17075:139;;16973:248;;;:::o;17227:419::-;17393:4;17431:2;17420:9;17416:18;17408:26;;17480:9;17474:4;17470:20;17466:1;17455:9;17451:17;17444:47;17508:131;17634:4;17508:131;:::i;:::-;17500:139;;17398:248;;;:::o;17652:419::-;17818:4;17856:2;17845:9;17841:18;17833:26;;17905:9;17899:4;17895:20;17891:1;17880:9;17876:17;17869:47;17933:131;18059:4;17933:131;:::i;:::-;17925:139;;17823:248;;;:::o;18077:419::-;18243:4;18281:2;18270:9;18266:18;18258:26;;18330:9;18324:4;18320:20;18316:1;18305:9;18301:17;18294:47;18358:131;18484:4;18358:131;:::i;:::-;18350:139;;18248:248;;;:::o;18502:419::-;18668:4;18706:2;18695:9;18691:18;18683:26;;18755:9;18749:4;18745:20;18741:1;18730:9;18726:17;18719:47;18783:131;18909:4;18783:131;:::i;:::-;18775:139;;18673:248;;;:::o;18927:419::-;19093:4;19131:2;19120:9;19116:18;19108:26;;19180:9;19174:4;19170:20;19166:1;19155:9;19151:17;19144:47;19208:131;19334:4;19208:131;:::i;:::-;19200:139;;19098:248;;;:::o;19352:419::-;19518:4;19556:2;19545:9;19541:18;19533:26;;19605:9;19599:4;19595:20;19591:1;19580:9;19576:17;19569:47;19633:131;19759:4;19633:131;:::i;:::-;19625:139;;19523:248;;;:::o;19777:419::-;19943:4;19981:2;19970:9;19966:18;19958:26;;20030:9;20024:4;20020:20;20016:1;20005:9;20001:17;19994:47;20058:131;20184:4;20058:131;:::i;:::-;20050:139;;19948:248;;;:::o;20202:419::-;20368:4;20406:2;20395:9;20391:18;20383:26;;20455:9;20449:4;20445:20;20441:1;20430:9;20426:17;20419:47;20483:131;20609:4;20483:131;:::i;:::-;20475:139;;20373:248;;;:::o;20627:419::-;20793:4;20831:2;20820:9;20816:18;20808:26;;20880:9;20874:4;20870:20;20866:1;20855:9;20851:17;20844:47;20908:131;21034:4;20908:131;:::i;:::-;20900:139;;20798:248;;;:::o;21052:419::-;21218:4;21256:2;21245:9;21241:18;21233:26;;21305:9;21299:4;21295:20;21291:1;21280:9;21276:17;21269:47;21333:131;21459:4;21333:131;:::i;:::-;21325:139;;21223:248;;;:::o;21477:419::-;21643:4;21681:2;21670:9;21666:18;21658:26;;21730:9;21724:4;21720:20;21716:1;21705:9;21701:17;21694:47;21758:131;21884:4;21758:131;:::i;:::-;21750:139;;21648:248;;;:::o;21902:419::-;22068:4;22106:2;22095:9;22091:18;22083:26;;22155:9;22149:4;22145:20;22141:1;22130:9;22126:17;22119:47;22183:131;22309:4;22183:131;:::i;:::-;22175:139;;22073:248;;;:::o;22327:419::-;22493:4;22531:2;22520:9;22516:18;22508:26;;22580:9;22574:4;22570:20;22566:1;22555:9;22551:17;22544:47;22608:131;22734:4;22608:131;:::i;:::-;22600:139;;22498:248;;;:::o;22752:419::-;22918:4;22956:2;22945:9;22941:18;22933:26;;23005:9;22999:4;22995:20;22991:1;22980:9;22976:17;22969:47;23033:131;23159:4;23033:131;:::i;:::-;23025:139;;22923:248;;;:::o;23177:419::-;23343:4;23381:2;23370:9;23366:18;23358:26;;23430:9;23424:4;23420:20;23416:1;23405:9;23401:17;23394:47;23458:131;23584:4;23458:131;:::i;:::-;23450:139;;23348:248;;;:::o;23602:222::-;23695:4;23733:2;23722:9;23718:18;23710:26;;23746:71;23814:1;23803:9;23799:17;23790:6;23746:71;:::i;:::-;23700:124;;;;:::o;23830:222::-;23923:4;23961:2;23950:9;23946:18;23938:26;;23974:71;24042:1;24031:9;24027:17;24018:6;23974:71;:::i;:::-;23928:124;;;;:::o;24058:541::-;24229:4;24267:3;24256:9;24252:19;24244:27;;24281:69;24347:1;24336:9;24332:17;24323:6;24281:69;:::i;:::-;24360:70;24426:2;24415:9;24411:18;24402:6;24360:70;:::i;:::-;24440;24506:2;24495:9;24491:18;24482:6;24440:70;:::i;:::-;24520:72;24588:2;24577:9;24573:18;24564:6;24520:72;:::i;:::-;24234:365;;;;;;;:::o;24605:169::-;24689:11;24723:6;24718:3;24711:19;24763:4;24758:3;24754:14;24739:29;;24701:73;;;;:::o;24780:305::-;24820:3;24839:20;24857:1;24839:20;:::i;:::-;24834:25;;24873:20;24891:1;24873:20;:::i;:::-;24868:25;;25027:1;24959:66;24955:74;24952:1;24949:81;24946:2;;;25033:18;;:::i;:::-;24946:2;25077:1;25074;25070:9;25063:16;;24824:261;;;;:::o;25091:246::-;25130:3;25149:19;25166:1;25149:19;:::i;:::-;25144:24;;25182:19;25199:1;25182:19;:::i;:::-;25177:24;;25279:1;25267:10;25263:18;25260:1;25257:25;25254:2;;;25285:18;;:::i;:::-;25254:2;25329:1;25326;25322:9;25315:16;;25134:203;;;;:::o;25343:185::-;25383:1;25400:20;25418:1;25400:20;:::i;:::-;25395:25;;25434:20;25452:1;25434:20;:::i;:::-;25429:25;;25473:1;25463:2;;25478:18;;:::i;:::-;25463:2;25520:1;25517;25513:9;25508:14;;25385:143;;;;:::o;25534:348::-;25574:7;25597:20;25615:1;25597:20;:::i;:::-;25592:25;;25631:20;25649:1;25631:20;:::i;:::-;25626:25;;25819:1;25751:66;25747:74;25744:1;25741:81;25736:1;25729:9;25722:17;25718:105;25715:2;;;25826:18;;:::i;:::-;25715:2;25874:1;25871;25867:9;25856:20;;25582:300;;;;:::o;25888:191::-;25928:4;25948:20;25966:1;25948:20;:::i;:::-;25943:25;;25982:20;26000:1;25982:20;:::i;:::-;25977:25;;26021:1;26018;26015:8;26012:2;;;26026:18;;:::i;:::-;26012:2;26071:1;26068;26064:9;26056:17;;25933:146;;;;:::o;26085:96::-;26122:7;26151:24;26169:5;26151:24;:::i;:::-;26140:35;;26130:51;;;:::o;26187:90::-;26221:7;26264:5;26257:13;26250:21;26239:32;;26229:48;;;:::o;26283:118::-;26320:7;26360:34;26353:5;26349:46;26338:57;;26328:73;;;:::o;26407:126::-;26444:7;26484:42;26477:5;26473:54;26462:65;;26452:81;;;:::o;26539:91::-;26575:7;26615:8;26608:5;26604:20;26593:31;;26583:47;;;:::o;26636:77::-;26673:7;26702:5;26691:16;;26681:32;;;:::o;26719:93::-;26755:7;26795:10;26788:5;26784:22;26773:33;;26763:49;;;:::o;26818:103::-;26854:7;26894:20;26887:5;26883:32;26872:43;;26862:59;;;:::o;26927:154::-;26991:9;27024:51;27069:5;27024:51;:::i;:::-;27011:64;;27001:80;;;:::o;27087:127::-;27151:9;27184:24;27202:5;27184:24;:::i;:::-;27171:37;;27161:53;;;:::o;27220:113::-;27270:9;27303:24;27321:5;27303:24;:::i;:::-;27290:37;;27280:53;;;:::o;27339:111::-;27388:9;27421:23;27438:5;27421:23;:::i;:::-;27408:36;;27398:52;;;:::o;27456:111::-;27505:9;27538:23;27555:5;27538:23;:::i;:::-;27525:36;;27515:52;;;:::o;27573:180::-;27621:77;27618:1;27611:88;27718:4;27715:1;27708:15;27742:4;27739:1;27732:15;27759:180;27807:77;27804:1;27797:88;27904:4;27901:1;27894:15;27928:4;27925:1;27918:15;27945:179;28085:31;28081:1;28073:6;28069:14;28062:55;28051:73;:::o;28130:221::-;28270:34;28266:1;28258:6;28254:14;28247:58;28339:4;28334:2;28326:6;28322:15;28315:29;28236:115;:::o;28357:232::-;28497:34;28493:1;28485:6;28481:14;28474:58;28566:15;28561:2;28553:6;28549:15;28542:40;28463:126;:::o;28595:176::-;28735:28;28731:1;28723:6;28719:14;28712:52;28701:70;:::o;28777:304::-;28917:34;28913:1;28905:6;28901:14;28894:58;28986:34;28981:2;28973:6;28969:15;28962:59;29055:18;29050:2;29042:6;29038:15;29031:43;28883:198;:::o;29087:182::-;29227:34;29223:1;29215:6;29211:14;29204:58;29193:76;:::o;29275:236::-;29415:34;29411:1;29403:6;29399:14;29392:58;29484:19;29479:2;29471:6;29467:15;29460:44;29381:130;:::o;29517:165::-;29657:17;29653:1;29645:6;29641:14;29634:41;29623:59;:::o;29688:228::-;29828:34;29824:1;29816:6;29812:14;29805:58;29897:11;29892:2;29884:6;29880:15;29873:36;29794:122;:::o;29922:238::-;30062:34;30058:1;30050:6;30046:14;30039:58;30131:21;30126:2;30118:6;30114:15;30107:46;30028:132;:::o;30166:247::-;30306:34;30302:1;30294:6;30290:14;30283:58;30375:30;30370:2;30362:6;30358:15;30351:55;30272:141;:::o;30419:228::-;30559:34;30555:1;30547:6;30543:14;30536:58;30628:11;30623:2;30615:6;30611:15;30604:36;30525:122;:::o;30653:182::-;30793:34;30789:1;30781:6;30777:14;30770:58;30759:76;:::o;30841:230::-;30981:34;30977:1;30969:6;30965:14;30958:58;31050:13;31045:2;31037:6;31033:15;31026:38;30947:124;:::o;31077:167::-;31217:19;31213:1;31205:6;31201:14;31194:43;31183:61;:::o;31250:220::-;31390:34;31386:1;31378:6;31374:14;31367:58;31459:3;31454:2;31446:6;31442:15;31435:28;31356:114;:::o;31476:177::-;31616:29;31612:1;31604:6;31600:14;31593:53;31582:71;:::o;31659:238::-;31799:34;31795:1;31787:6;31783:14;31776:58;31868:21;31863:2;31855:6;31851:15;31844:46;31765:132;:::o;31903:230::-;32043:34;32039:1;32031:6;32027:14;32020:58;32112:13;32107:2;32099:6;32095:15;32088:38;32009:124;:::o;32139:181::-;32279:33;32275:1;32267:6;32263:14;32256:57;32245:75;:::o;32326:175::-;32466:27;32462:1;32454:6;32450:14;32443:51;32432:69;:::o;32507:122::-;32580:24;32598:5;32580:24;:::i;:::-;32573:5;32570:35;32560:2;;32619:1;32616;32609:12;32560:2;32550:79;:::o;32635:116::-;32705:21;32720:5;32705:21;:::i;:::-;32698:5;32695:32;32685:2;;32741:1;32738;32731:12;32685:2;32675:76;:::o;32757:120::-;32829:23;32846:5;32829:23;:::i;:::-;32822:5;32819:34;32809:2;;32867:1;32864;32857:12;32809:2;32799:78;:::o;32883:122::-;32956:24;32974:5;32956:24;:::i;:::-;32949:5;32946:35;32936:2;;32995:1;32992;32985:12;32936:2;32926:79;:::o;33011:120::-;33083:23;33100:5;33083:23;:::i;:::-;33076:5;33073:34;33063:2;;33121:1;33118;33111:12;33063:2;33053:78;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2328600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"calculateStakingRewardPoints(uint72,uint24)": "infinite",
								"getRewards()": "infinite",
								"grantedTokens(address)": "1580",
								"lockTokens(uint72,uint24)": "infinite",
								"oilerToken()": "infinite",
								"owner()": "infinite",
								"poolToken()": "1301",
								"release()": "infinite",
								"releasedTokens(address)": "1559",
								"rewardPointsEarned(address)": "1536",
								"setPoolToken(address,address)": "infinite",
								"stakes(address)": "4650",
								"stakingFundAmount()": "infinite",
								"stakingProgramEndsBlock()": "infinite",
								"totalRewardPoints()": "1218",
								"unlockTokens()": "infinite",
								"vestingDuration()": "infinite"
							},
							"internal": {
								"_grantTokens(address,uint256)": "infinite",
								"_punishEarlyWithdrawal(struct Staking.Stake memory)": "infinite",
								"_releasableAmount(address)": "infinite",
								"_vestedAmount(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 2612,
									"end": 17827,
									"name": "PUSH",
									"source": 0,
									"value": "120"
								},
								{
									"begin": 2612,
									"end": 17827,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2612,
									"end": 17827,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7116,
									"end": 7669,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 7116,
									"end": 7669,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7116,
									"end": 7669,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 7116,
									"end": 7669,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 7116,
									"end": 7669,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 7116,
									"end": 7669,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7116,
									"end": 7669,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7116,
									"end": 7669,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 7116,
									"end": 7669,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 7116,
									"end": 7669,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7116,
									"end": 7669,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7116,
									"end": 7669,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 7116,
									"end": 7669,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 7116,
									"end": 7669,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 7116,
									"end": 7669,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 7116,
									"end": 7669,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 7116,
									"end": 7669,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7116,
									"end": 7669,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 7116,
									"end": 7669,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 7116,
									"end": 7669,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 7116,
									"end": 7669,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7116,
									"end": 7669,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7116,
									"end": 7669,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 7116,
									"end": 7669,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 7116,
									"end": 7669,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7116,
									"end": 7669,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7116,
									"end": 7669,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 7116,
									"end": 7669,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7116,
									"end": 7669,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 7116,
									"end": 7669,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 7116,
									"end": 7669,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7116,
									"end": 7669,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 7116,
									"end": 7669,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 7116,
									"end": 7669,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 7116,
									"end": 7669,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7289,
									"end": 7292,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7271,
									"end": 7293,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7271,
									"end": 7293,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7271,
									"end": 7277,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7271,
									"end": 7293,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7271,
									"end": 7293,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7271,
									"end": 7293,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 7271,
									"end": 7293,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 7263,
									"end": 7326,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 7263,
									"end": 7326,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 7263,
									"end": 7326,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 7263,
									"end": 7326,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 7263,
									"end": 7326,
									"name": "PUSH",
									"source": 0,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7263,
									"end": 7326,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7263,
									"end": 7326,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7263,
									"end": 7326,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 7263,
									"end": 7326,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 7263,
									"end": 7326,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 7263,
									"end": 7326,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7263,
									"end": 7326,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 7263,
									"end": 7326,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 7263,
									"end": 7326,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 7263,
									"end": 7326,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7263,
									"end": 7326,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 7263,
									"end": 7326,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 7263,
									"end": 7326,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7263,
									"end": 7326,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 7263,
									"end": 7326,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 7263,
									"end": 7326,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7263,
									"end": 7326,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 7263,
									"end": 7326,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 7263,
									"end": 7326,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7344,
									"end": 7350,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7336,
									"end": 7350,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7336,
									"end": 7350,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7336,
									"end": 7350,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 7336,
									"end": 7350,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7336,
									"end": 7350,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7336,
									"end": 7350,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7336,
									"end": 7350,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 7336,
									"end": 7350,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 7336,
									"end": 7350,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7336,
									"end": 7350,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7336,
									"end": 7350,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7336,
									"end": 7350,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7392,
									"end": 7395,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7369,
									"end": 7396,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7369,
									"end": 7396,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7369,
									"end": 7380,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 7369,
									"end": 7396,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7369,
									"end": 7396,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7369,
									"end": 7396,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 7369,
									"end": 7396,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 7361,
									"end": 7434,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 7361,
									"end": 7434,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 7361,
									"end": 7434,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 7361,
									"end": 7434,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 7361,
									"end": 7434,
									"name": "PUSH",
									"source": 0,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7361,
									"end": 7434,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7361,
									"end": 7434,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7361,
									"end": 7434,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 7361,
									"end": 7434,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 7361,
									"end": 7434,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 7361,
									"end": 7434,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7361,
									"end": 7434,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 7361,
									"end": 7434,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 7361,
									"end": 7434,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 7361,
									"end": 7434,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7361,
									"end": 7434,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 7361,
									"end": 7434,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 7361,
									"end": 7434,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7361,
									"end": 7434,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 7361,
									"end": 7434,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 7361,
									"end": 7434,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7361,
									"end": 7434,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 7361,
									"end": 7434,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 7361,
									"end": 7434,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7464,
									"end": 7475,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 7444,
									"end": 7476,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7444,
									"end": 7476,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7444,
									"end": 7476,
									"name": "PUSH",
									"source": 0,
									"value": "C0"
								},
								{
									"begin": 7444,
									"end": 7476,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7444,
									"end": 7476,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7444,
									"end": 7476,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7444,
									"end": 7476,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 7444,
									"end": 7476,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 7444,
									"end": 7476,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7444,
									"end": 7476,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7444,
									"end": 7476,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7444,
									"end": 7476,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7536,
									"end": 7560,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 7521,
									"end": 7533,
									"name": "NUMBER",
									"source": 0
								},
								{
									"begin": 7521,
									"end": 7560,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 7521,
									"end": 7560,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 7521,
									"end": 7560,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7521,
									"end": 7560,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 7521,
									"end": 7560,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 7521,
									"end": 7560,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 7521,
									"end": 7560,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7495,
									"end": 7560,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 7495,
									"end": 7560,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7495,
									"end": 7560,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7495,
									"end": 7560,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7495,
									"end": 7560,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7495,
									"end": 7560,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7588,
									"end": 7604,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7570,
									"end": 7604,
									"name": "PUSH",
									"source": 0,
									"value": "E0"
								},
								{
									"begin": 7570,
									"end": 7604,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7570,
									"end": 7604,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7570,
									"end": 7604,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7570,
									"end": 7604,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7570,
									"end": 7604,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7644,
									"end": 7662,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7624,
									"end": 7662,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 7624,
									"end": 7662,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7624,
									"end": 7662,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7624,
									"end": 7662,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7624,
									"end": 7662,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7624,
									"end": 7662,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7116,
									"end": 7669,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7116,
									"end": 7669,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7116,
									"end": 7669,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7116,
									"end": 7669,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7116,
									"end": 7669,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2612,
									"end": 17827,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 2612,
									"end": 17827,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 150,
									"name": "tag",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 64,
									"end": 69,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 95,
									"end": 101,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 89,
									"end": 102,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 80,
									"end": 102,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 80,
									"end": 102,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 138,
									"end": 143,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "tag",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 70,
									"end": 150,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 70,
									"end": 150,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 70,
									"end": 150,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 70,
									"end": 150,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 70,
									"end": 150,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 156,
									"end": 299,
									"name": "tag",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 156,
									"end": 299,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 213,
									"end": 218,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 244,
									"end": 250,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 238,
									"end": 251,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 229,
									"end": 251,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 229,
									"end": 251,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 260,
									"end": 293,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 287,
									"end": 292,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 260,
									"end": 293,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 260,
									"end": 293,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 260,
									"end": 293,
									"name": "tag",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 260,
									"end": 293,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 219,
									"end": 299,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 219,
									"end": 299,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 219,
									"end": 299,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 219,
									"end": 299,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 219,
									"end": 299,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 305,
									"end": 1215,
									"name": "tag",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 305,
									"end": 1215,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 411,
									"end": 417,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 419,
									"end": 425,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 427,
									"end": 433,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 435,
									"end": 441,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 443,
									"end": 449,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 492,
									"end": 495,
									"name": "PUSH",
									"source": 2,
									"value": "A0"
								},
								{
									"begin": 480,
									"end": 489,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 471,
									"end": 478,
									"name": "DUP9",
									"source": 2
								},
								{
									"begin": 467,
									"end": 490,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 463,
									"end": 496,
									"name": "SLT",
									"source": 2
								},
								{
									"begin": 460,
									"end": 462,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 460,
									"end": 462,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 460,
									"end": 462,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 509,
									"end": 510,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 506,
									"end": 507,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 499,
									"end": 511,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 460,
									"end": 462,
									"name": "tag",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 460,
									"end": 462,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 552,
									"end": 553,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 577,
									"end": 641,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 633,
									"end": 640,
									"name": "DUP9",
									"source": 2
								},
								{
									"begin": 624,
									"end": 630,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 613,
									"end": 622,
									"name": "DUP10",
									"source": 2
								},
								{
									"begin": 609,
									"end": 631,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 577,
									"end": 641,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 577,
									"end": 641,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 577,
									"end": 641,
									"name": "tag",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 577,
									"end": 641,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 567,
									"end": 641,
									"name": "SWAP6",
									"source": 2
								},
								{
									"begin": 567,
									"end": 641,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 523,
									"end": 651,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 690,
									"end": 692,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 716,
									"end": 780,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 772,
									"end": 779,
									"name": "DUP9",
									"source": 2
								},
								{
									"begin": 763,
									"end": 769,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 752,
									"end": 761,
									"name": "DUP10",
									"source": 2
								},
								{
									"begin": 748,
									"end": 770,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 716,
									"end": 780,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 716,
									"end": 780,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 716,
									"end": 780,
									"name": "tag",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 716,
									"end": 780,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 706,
									"end": 780,
									"name": "SWAP5",
									"source": 2
								},
								{
									"begin": 706,
									"end": 780,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 661,
									"end": 790,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 829,
									"end": 831,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 855,
									"end": 919,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 911,
									"end": 918,
									"name": "DUP9",
									"source": 2
								},
								{
									"begin": 902,
									"end": 908,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 891,
									"end": 900,
									"name": "DUP10",
									"source": 2
								},
								{
									"begin": 887,
									"end": 909,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 855,
									"end": 919,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 855,
									"end": 919,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 855,
									"end": 919,
									"name": "tag",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 855,
									"end": 919,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 845,
									"end": 919,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 845,
									"end": 919,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 800,
									"end": 929,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 968,
									"end": 970,
									"name": "PUSH",
									"source": 2,
									"value": "60"
								},
								{
									"begin": 994,
									"end": 1058,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 1050,
									"end": 1057,
									"name": "DUP9",
									"source": 2
								},
								{
									"begin": 1041,
									"end": 1047,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1030,
									"end": 1039,
									"name": "DUP10",
									"source": 2
								},
								{
									"begin": 1026,
									"end": 1048,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 994,
									"end": 1058,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 994,
									"end": 1058,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 994,
									"end": 1058,
									"name": "tag",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 994,
									"end": 1058,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 984,
									"end": 1058,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 984,
									"end": 1058,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 939,
									"end": 1068,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1107,
									"end": 1110,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 1134,
									"end": 1198,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 1190,
									"end": 1197,
									"name": "DUP9",
									"source": 2
								},
								{
									"begin": 1181,
									"end": 1187,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1170,
									"end": 1179,
									"name": "DUP10",
									"source": 2
								},
								{
									"begin": 1166,
									"end": 1188,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1134,
									"end": 1198,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 1134,
									"end": 1198,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1134,
									"end": 1198,
									"name": "tag",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 1134,
									"end": 1198,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1124,
									"end": 1198,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1124,
									"end": 1198,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1078,
									"end": 1208,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 450,
									"end": 1215,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 450,
									"end": 1215,
									"name": "SWAP6",
									"source": 2
								},
								{
									"begin": 450,
									"end": 1215,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 450,
									"end": 1215,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 450,
									"end": 1215,
									"name": "SWAP6",
									"source": 2
								},
								{
									"begin": 450,
									"end": 1215,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 450,
									"end": 1215,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 450,
									"end": 1215,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 450,
									"end": 1215,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 1221,
									"end": 1587,
									"name": "tag",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 1221,
									"end": 1587,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1363,
									"end": 1366,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1384,
									"end": 1451,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 1448,
									"end": 1450,
									"name": "PUSH",
									"source": 2,
									"value": "1C"
								},
								{
									"begin": 1443,
									"end": 1446,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1384,
									"end": 1451,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "34"
								},
								{
									"begin": 1384,
									"end": 1451,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1384,
									"end": 1451,
									"name": "tag",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 1384,
									"end": 1451,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1377,
									"end": 1451,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1377,
									"end": 1451,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1460,
									"end": 1553,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 1549,
									"end": 1552,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1460,
									"end": 1553,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 1460,
									"end": 1553,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1460,
									"end": 1553,
									"name": "tag",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 1460,
									"end": 1553,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1578,
									"end": 1580,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1573,
									"end": 1576,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1569,
									"end": 1581,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1562,
									"end": 1581,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1562,
									"end": 1581,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1367,
									"end": 1587,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1367,
									"end": 1587,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1367,
									"end": 1587,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1367,
									"end": 1587,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 1593,
									"end": 1959,
									"name": "tag",
									"source": 2,
									"value": "37"
								},
								{
									"begin": 1593,
									"end": 1959,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1735,
									"end": 1738,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1756,
									"end": 1823,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "39"
								},
								{
									"begin": 1820,
									"end": 1822,
									"name": "PUSH",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 1815,
									"end": 1818,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1756,
									"end": 1823,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "34"
								},
								{
									"begin": 1756,
									"end": 1823,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1756,
									"end": 1823,
									"name": "tag",
									"source": 2,
									"value": "39"
								},
								{
									"begin": 1756,
									"end": 1823,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1749,
									"end": 1823,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1749,
									"end": 1823,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1832,
									"end": 1925,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1921,
									"end": 1924,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1832,
									"end": 1925,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "41"
								},
								{
									"begin": 1832,
									"end": 1925,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1832,
									"end": 1925,
									"name": "tag",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1832,
									"end": 1925,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1950,
									"end": 1952,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1945,
									"end": 1948,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1941,
									"end": 1953,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1934,
									"end": 1953,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1934,
									"end": 1953,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1739,
									"end": 1959,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1739,
									"end": 1959,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1739,
									"end": 1959,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1739,
									"end": 1959,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 1965,
									"end": 2384,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1965,
									"end": 2384,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2131,
									"end": 2135,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2169,
									"end": 2171,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 2158,
									"end": 2167,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2154,
									"end": 2172,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2146,
									"end": 2172,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2146,
									"end": 2172,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2218,
									"end": 2227,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2212,
									"end": 2216,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2208,
									"end": 2228,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 2204,
									"end": 2205,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2193,
									"end": 2202,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 2189,
									"end": 2206,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2182,
									"end": 2229,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 2246,
									"end": 2377,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "43"
								},
								{
									"begin": 2372,
									"end": 2376,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2246,
									"end": 2377,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 2246,
									"end": 2377,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 2246,
									"end": 2377,
									"name": "tag",
									"source": 2,
									"value": "43"
								},
								{
									"begin": 2246,
									"end": 2377,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2238,
									"end": 2377,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2238,
									"end": 2377,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2136,
									"end": 2384,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2136,
									"end": 2384,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2136,
									"end": 2384,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2136,
									"end": 2384,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 2390,
									"end": 2809,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 2390,
									"end": 2809,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2556,
									"end": 2560,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2594,
									"end": 2596,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 2583,
									"end": 2592,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2579,
									"end": 2597,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2571,
									"end": 2597,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2571,
									"end": 2597,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2643,
									"end": 2652,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2637,
									"end": 2641,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2633,
									"end": 2653,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 2629,
									"end": 2630,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2618,
									"end": 2627,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 2614,
									"end": 2631,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2607,
									"end": 2654,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 2671,
									"end": 2802,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "45"
								},
								{
									"begin": 2797,
									"end": 2801,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2671,
									"end": 2802,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "37"
								},
								{
									"begin": 2671,
									"end": 2802,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 2671,
									"end": 2802,
									"name": "tag",
									"source": 2,
									"value": "45"
								},
								{
									"begin": 2671,
									"end": 2802,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2663,
									"end": 2802,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2663,
									"end": 2802,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2561,
									"end": 2809,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2561,
									"end": 2809,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2561,
									"end": 2809,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2561,
									"end": 2809,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 2815,
									"end": 2984,
									"name": "tag",
									"source": 2,
									"value": "34"
								},
								{
									"begin": 2815,
									"end": 2984,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2899,
									"end": 2910,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2933,
									"end": 2939,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2928,
									"end": 2931,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2921,
									"end": 2940,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 2973,
									"end": 2977,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 2968,
									"end": 2971,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2964,
									"end": 2978,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2949,
									"end": 2978,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2949,
									"end": 2978,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2911,
									"end": 2984,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 2911,
									"end": 2984,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2911,
									"end": 2984,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2911,
									"end": 2984,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2911,
									"end": 2984,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 2990,
									"end": 3295,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 2990,
									"end": 3295,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3030,
									"end": 3033,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3049,
									"end": 3069,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "48"
								},
								{
									"begin": 3067,
									"end": 3068,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 3049,
									"end": 3069,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "49"
								},
								{
									"begin": 3049,
									"end": 3069,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 3049,
									"end": 3069,
									"name": "tag",
									"source": 2,
									"value": "48"
								},
								{
									"begin": 3049,
									"end": 3069,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3044,
									"end": 3069,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 3044,
									"end": 3069,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3083,
									"end": 3103,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "50"
								},
								{
									"begin": 3101,
									"end": 3102,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 3083,
									"end": 3103,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "49"
								},
								{
									"begin": 3083,
									"end": 3103,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 3083,
									"end": 3103,
									"name": "tag",
									"source": 2,
									"value": "50"
								},
								{
									"begin": 3083,
									"end": 3103,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3078,
									"end": 3103,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 3078,
									"end": 3103,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3237,
									"end": 3238,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 3169,
									"end": 3235,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3165,
									"end": 3239,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 3162,
									"end": 3163,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 3159,
									"end": 3240,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 3156,
									"end": 3158,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 3156,
									"end": 3158,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "51"
								},
								{
									"begin": 3156,
									"end": 3158,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 3243,
									"end": 3261,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "52"
								},
								{
									"begin": 3243,
									"end": 3261,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "53"
								},
								{
									"begin": 3243,
									"end": 3261,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 3243,
									"end": 3261,
									"name": "tag",
									"source": 2,
									"value": "52"
								},
								{
									"begin": 3243,
									"end": 3261,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3156,
									"end": 3158,
									"name": "tag",
									"source": 2,
									"value": "51"
								},
								{
									"begin": 3156,
									"end": 3158,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3287,
									"end": 3288,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 3284,
									"end": 3285,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 3280,
									"end": 3289,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 3273,
									"end": 3289,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3273,
									"end": 3289,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3034,
									"end": 3295,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 3034,
									"end": 3295,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 3034,
									"end": 3295,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3034,
									"end": 3295,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3034,
									"end": 3295,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 3301,
									"end": 3397,
									"name": "tag",
									"source": 2,
									"value": "54"
								},
								{
									"begin": 3301,
									"end": 3397,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3338,
									"end": 3345,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3367,
									"end": 3391,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "56"
								},
								{
									"begin": 3385,
									"end": 3390,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 3367,
									"end": 3391,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "57"
								},
								{
									"begin": 3367,
									"end": 3391,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 3367,
									"end": 3391,
									"name": "tag",
									"source": 2,
									"value": "56"
								},
								{
									"begin": 3367,
									"end": 3391,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3356,
									"end": 3391,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3356,
									"end": 3391,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3346,
									"end": 3397,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 3346,
									"end": 3397,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3346,
									"end": 3397,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3346,
									"end": 3397,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 3403,
									"end": 3529,
									"name": "tag",
									"source": 2,
									"value": "57"
								},
								{
									"begin": 3403,
									"end": 3529,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3440,
									"end": 3447,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3480,
									"end": 3522,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3473,
									"end": 3478,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 3469,
									"end": 3523,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 3458,
									"end": 3523,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3458,
									"end": 3523,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3448,
									"end": 3529,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 3448,
									"end": 3529,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3448,
									"end": 3529,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3448,
									"end": 3529,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 3535,
									"end": 3612,
									"name": "tag",
									"source": 2,
									"value": "49"
								},
								{
									"begin": 3535,
									"end": 3612,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3572,
									"end": 3579,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3601,
									"end": 3606,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3590,
									"end": 3606,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3590,
									"end": 3606,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3580,
									"end": 3612,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 3580,
									"end": 3612,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3580,
									"end": 3612,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3580,
									"end": 3612,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 3618,
									"end": 3798,
									"name": "tag",
									"source": 2,
									"value": "53"
								},
								{
									"begin": 3618,
									"end": 3798,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3666,
									"end": 3743,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3663,
									"end": 3664,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3656,
									"end": 3744,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 3763,
									"end": 3767,
									"name": "PUSH",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 3760,
									"end": 3761,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 3753,
									"end": 3768,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 3787,
									"end": 3791,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 3784,
									"end": 3785,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3777,
									"end": 3792,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 3804,
									"end": 3982,
									"name": "tag",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 3804,
									"end": 3982,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3944,
									"end": 3974,
									"name": "PUSH",
									"source": 2,
									"value": "4F776E657220616464726573732063616E6E6F74206265207A65726F00000000"
								},
								{
									"begin": 3940,
									"end": 3941,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3932,
									"end": 3938,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 3928,
									"end": 3942,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 3921,
									"end": 3975,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 3910,
									"end": 3982,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3910,
									"end": 3982,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 3988,
									"end": 4208,
									"name": "tag",
									"source": 2,
									"value": "41"
								},
								{
									"begin": 3988,
									"end": 4208,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4128,
									"end": 4162,
									"name": "PUSH",
									"source": 2,
									"value": "6F696C6572546F6B656E20616464726573732063616E6E6F74206265207A6572"
								},
								{
									"begin": 4124,
									"end": 4125,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 4116,
									"end": 4122,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 4112,
									"end": 4126,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 4105,
									"end": 4163,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 4197,
									"end": 4200,
									"name": "PUSH",
									"source": 2,
									"value": "6F00000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4192,
									"end": 4194,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 4184,
									"end": 4190,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 4180,
									"end": 4195,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 4173,
									"end": 4201,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 4094,
									"end": 4208,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4094,
									"end": 4208,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 4214,
									"end": 4336,
									"name": "tag",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 4214,
									"end": 4336,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4287,
									"end": 4311,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "64"
								},
								{
									"begin": 4305,
									"end": 4310,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 4287,
									"end": 4311,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "54"
								},
								{
									"begin": 4287,
									"end": 4311,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 4287,
									"end": 4311,
									"name": "tag",
									"source": 2,
									"value": "64"
								},
								{
									"begin": 4287,
									"end": 4311,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4280,
									"end": 4285,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 4277,
									"end": 4312,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 4267,
									"end": 4269,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "65"
								},
								{
									"begin": 4267,
									"end": 4269,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 4326,
									"end": 4327,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 4323,
									"end": 4324,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 4316,
									"end": 4328,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 4267,
									"end": 4269,
									"name": "tag",
									"source": 2,
									"value": "65"
								},
								{
									"begin": 4267,
									"end": 4269,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4257,
									"end": 4336,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4257,
									"end": 4336,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 4342,
									"end": 4464,
									"name": "tag",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 4342,
									"end": 4464,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4415,
									"end": 4439,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "67"
								},
								{
									"begin": 4433,
									"end": 4438,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 4415,
									"end": 4439,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "49"
								},
								{
									"begin": 4415,
									"end": 4439,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 4415,
									"end": 4439,
									"name": "tag",
									"source": 2,
									"value": "67"
								},
								{
									"begin": 4415,
									"end": 4439,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4408,
									"end": 4413,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 4405,
									"end": 4440,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 4395,
									"end": 4397,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "68"
								},
								{
									"begin": 4395,
									"end": 4397,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 4454,
									"end": 4455,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 4451,
									"end": 4452,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 4444,
									"end": 4456,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 4395,
									"end": 4397,
									"name": "tag",
									"source": 2,
									"value": "68"
								},
								{
									"begin": 4395,
									"end": 4397,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4385,
									"end": 4464,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4385,
									"end": 4464,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 2612,
									"end": 17827,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 2612,
									"end": 17827,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2612,
									"end": 17827,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 2612,
									"end": 17827,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2612,
									"end": 17827,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 2612,
									"end": 17827,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2612,
									"end": 17827,
									"name": "PUSH",
									"source": 0,
									"value": "C0"
								},
								{
									"begin": 2612,
									"end": 17827,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2612,
									"end": 17827,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 2612,
									"end": 17827,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 2612,
									"end": 17827,
									"name": "PUSH",
									"source": 0,
									"value": "E0"
								},
								{
									"begin": 2612,
									"end": 17827,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2612,
									"end": 17827,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2612,
									"end": 17827,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2612,
									"end": 17827,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 2612,
									"end": 17827,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 2612,
									"end": 17827,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2612,
									"end": 17827,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2612,
									"end": 17827,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2612,
									"end": 17827,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 2612,
									"end": 17827,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2612,
									"end": 17827,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "74"
								},
								{
									"begin": 2612,
									"end": 17827,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2612,
									"end": 17827,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "53"
								},
								{
									"begin": 2612,
									"end": 17827,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2612,
									"end": 17827,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2612,
									"end": 17827,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2612,
									"end": 17827,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 2612,
									"end": 17827,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2612,
									"end": 17827,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 2612,
									"end": 17827,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2612,
									"end": 17827,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2612,
									"end": 17827,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203f20109eed4bb9ce5d17b0838ce18f043db97a4ec79d9ae90ea1334089c0736264736f6c63430008040033",
									".code": [
										{
											"begin": 2612,
											"end": 17827,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "PUSH",
											"source": 0,
											"value": "86D1A69F"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "PUSH",
											"source": 0,
											"value": "C959360B"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "PUSH",
											"source": 0,
											"value": "C959360B"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "PUSH",
											"source": 0,
											"value": "CBDF382C"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "PUSH",
											"source": 0,
											"value": "E0E4A722"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "PUSH",
											"source": 0,
											"value": "F6FFAB88"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "PUSH",
											"source": 0,
											"value": "F968F493"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "PUSH",
											"source": 0,
											"value": "86D1A69F"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "PUSH",
											"source": 0,
											"value": "BC0925AE"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "PUSH",
											"source": 0,
											"value": "C2E8CAF6"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "PUSH",
											"source": 0,
											"value": "52946B04"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "PUSH",
											"source": 0,
											"value": "52946B04"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "PUSH",
											"source": 0,
											"value": "70FF852B"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "PUSH",
											"source": 0,
											"value": "798633B9"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "PUSH",
											"source": 0,
											"value": "81E9207D"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "PUSH",
											"source": 0,
											"value": "572B0CC"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "PUSH",
											"source": 0,
											"value": "1514617E"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "PUSH",
											"source": 0,
											"value": "16934FC4"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "PUSH",
											"source": 0,
											"value": "378592C8"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13821,
											"end": 15220,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 13821,
											"end": 15220,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13821,
											"end": 15220,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 13821,
											"end": 15220,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 13821,
											"end": 15220,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13821,
											"end": 15220,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 13821,
											"end": 15220,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13821,
											"end": 15220,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 5976,
											"end": 6016,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5976,
											"end": 6016,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5976,
											"end": 6016,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 5976,
											"end": 6016,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 5976,
											"end": 6016,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5976,
											"end": 6016,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 5976,
											"end": 6016,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5976,
											"end": 6016,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5976,
											"end": 6016,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5976,
											"end": 6016,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 5976,
											"end": 6016,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5976,
											"end": 6016,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5976,
											"end": 6016,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 5976,
											"end": 6016,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5976,
											"end": 6016,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 5976,
											"end": 6016,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5976,
											"end": 6016,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5976,
											"end": 6016,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5976,
											"end": 6016,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5976,
											"end": 6016,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5976,
											"end": 6016,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5976,
											"end": 6016,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5976,
											"end": 6016,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 9998,
											"end": 11657,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 9998,
											"end": 11657,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9998,
											"end": 11657,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 9998,
											"end": 11657,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9998,
											"end": 11657,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9998,
											"end": 11657,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9998,
											"end": 11657,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9998,
											"end": 11657,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9998,
											"end": 11657,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9998,
											"end": 11657,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9998,
											"end": 11657,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 9998,
											"end": 11657,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9998,
											"end": 11657,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9998,
											"end": 11657,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 9998,
											"end": 11657,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9998,
											"end": 11657,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 9998,
											"end": 11657,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9998,
											"end": 11657,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 9998,
											"end": 11657,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9998,
											"end": 11657,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 9998,
											"end": 11657,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9998,
											"end": 11657,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 5379,
											"end": 5421,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 5379,
											"end": 5421,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5379,
											"end": 5421,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 5379,
											"end": 5421,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5379,
											"end": 5421,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5379,
											"end": 5421,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 5379,
											"end": 5421,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5379,
											"end": 5421,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5379,
											"end": 5421,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5379,
											"end": 5421,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 5379,
											"end": 5421,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5379,
											"end": 5421,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5379,
											"end": 5421,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 5379,
											"end": 5421,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5379,
											"end": 5421,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 5379,
											"end": 5421,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5379,
											"end": 5421,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5379,
											"end": 5421,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5379,
											"end": 5421,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5379,
											"end": 5421,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5379,
											"end": 5421,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5379,
											"end": 5421,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5379,
											"end": 5421,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 5864,
											"end": 5914,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 5864,
											"end": 5914,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5864,
											"end": 5914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 5864,
											"end": 5914,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5864,
											"end": 5914,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5864,
											"end": 5914,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5864,
											"end": 5914,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5864,
											"end": 5914,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5864,
											"end": 5914,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5864,
											"end": 5914,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5864,
											"end": 5914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 5864,
											"end": 5914,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5864,
											"end": 5914,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5864,
											"end": 5914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 5864,
											"end": 5914,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5864,
											"end": 5914,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 5864,
											"end": 5914,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5864,
											"end": 5914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 5864,
											"end": 5914,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5864,
											"end": 5914,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 5864,
											"end": 5914,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5864,
											"end": 5914,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5864,
											"end": 5914,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5864,
											"end": 5914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 5864,
											"end": 5914,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5864,
											"end": 5914,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5864,
											"end": 5914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 5864,
											"end": 5914,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5864,
											"end": 5914,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 5864,
											"end": 5914,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5864,
											"end": 5914,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5864,
											"end": 5914,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5864,
											"end": 5914,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5864,
											"end": 5914,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5864,
											"end": 5914,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5864,
											"end": 5914,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5864,
											"end": 5914,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 8938,
											"end": 9605,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 8938,
											"end": 9605,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8938,
											"end": 9605,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 8938,
											"end": 9605,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8938,
											"end": 9605,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8938,
											"end": 9605,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8938,
											"end": 9605,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8938,
											"end": 9605,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8938,
											"end": 9605,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8938,
											"end": 9605,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8938,
											"end": 9605,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 8938,
											"end": 9605,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8938,
											"end": 9605,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8938,
											"end": 9605,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 8938,
											"end": 9605,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8938,
											"end": 9605,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 8938,
											"end": 9605,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8938,
											"end": 9605,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 8938,
											"end": 9605,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8938,
											"end": 9605,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 8938,
											"end": 9605,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8938,
											"end": 9605,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8938,
											"end": 9605,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8938,
											"end": 9605,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 8938,
											"end": 9605,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8938,
											"end": 9605,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8938,
											"end": 9605,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 8938,
											"end": 9605,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8938,
											"end": 9605,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 8938,
											"end": 9605,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8938,
											"end": 9605,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8938,
											"end": 9605,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8938,
											"end": 9605,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8938,
											"end": 9605,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8938,
											"end": 9605,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8938,
											"end": 9605,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8938,
											"end": 9605,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 5579,
											"end": 5613,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 5579,
											"end": 5613,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5579,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 5579,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 5579,
											"end": 5613,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5579,
											"end": 5613,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 5579,
											"end": 5613,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5579,
											"end": 5613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5579,
											"end": 5613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5579,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 5579,
											"end": 5613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5579,
											"end": 5613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5579,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 5579,
											"end": 5613,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5579,
											"end": 5613,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 5579,
											"end": 5613,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5579,
											"end": 5613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5579,
											"end": 5613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5579,
											"end": 5613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5579,
											"end": 5613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5579,
											"end": 5613,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5579,
											"end": 5613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5579,
											"end": 5613,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 15941,
											"end": 16312,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 15941,
											"end": 16312,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15941,
											"end": 16312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 15941,
											"end": 16312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 15941,
											"end": 16312,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15941,
											"end": 16312,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 15941,
											"end": 16312,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15941,
											"end": 16312,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 6243,
											"end": 6273,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 6243,
											"end": 6273,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6243,
											"end": 6273,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 6243,
											"end": 6273,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 6243,
											"end": 6273,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6243,
											"end": 6273,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 6243,
											"end": 6273,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6243,
											"end": 6273,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6243,
											"end": 6273,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6243,
											"end": 6273,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 6243,
											"end": 6273,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6243,
											"end": 6273,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6243,
											"end": 6273,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 6243,
											"end": 6273,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6243,
											"end": 6273,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 6243,
											"end": 6273,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6243,
											"end": 6273,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6243,
											"end": 6273,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6243,
											"end": 6273,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6243,
											"end": 6273,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6243,
											"end": 6273,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6243,
											"end": 6273,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6243,
											"end": 6273,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 5198,
											"end": 5246,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 5198,
											"end": 5246,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5198,
											"end": 5246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 5198,
											"end": 5246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 5198,
											"end": 5246,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5198,
											"end": 5246,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 5198,
											"end": 5246,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5198,
											"end": 5246,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5198,
											"end": 5246,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5198,
											"end": 5246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 5198,
											"end": 5246,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5198,
											"end": 5246,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5198,
											"end": 5246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 5198,
											"end": 5246,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5198,
											"end": 5246,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 5198,
											"end": 5246,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5198,
											"end": 5246,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5198,
											"end": 5246,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5198,
											"end": 5246,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5198,
											"end": 5246,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5198,
											"end": 5246,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5198,
											"end": 5246,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5198,
											"end": 5246,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 5102,
											"end": 5134,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 5102,
											"end": 5134,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5102,
											"end": 5134,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 5102,
											"end": 5134,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 5102,
											"end": 5134,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5102,
											"end": 5134,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 5102,
											"end": 5134,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5102,
											"end": 5134,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5102,
											"end": 5134,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5102,
											"end": 5134,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 5102,
											"end": 5134,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5102,
											"end": 5134,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5102,
											"end": 5134,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 5102,
											"end": 5134,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5102,
											"end": 5134,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 5102,
											"end": 5134,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5102,
											"end": 5134,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5102,
											"end": 5134,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5102,
											"end": 5134,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5102,
											"end": 5134,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5102,
											"end": 5134,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5102,
											"end": 5134,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5102,
											"end": 5134,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4982,
											"end": 5036,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 4982,
											"end": 5036,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4982,
											"end": 5036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 4982,
											"end": 5036,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4982,
											"end": 5036,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4982,
											"end": 5036,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4982,
											"end": 5036,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4982,
											"end": 5036,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4982,
											"end": 5036,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4982,
											"end": 5036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4982,
											"end": 5036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 4982,
											"end": 5036,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4982,
											"end": 5036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4982,
											"end": 5036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 4982,
											"end": 5036,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4982,
											"end": 5036,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 4982,
											"end": 5036,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4982,
											"end": 5036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 4982,
											"end": 5036,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4982,
											"end": 5036,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 4982,
											"end": 5036,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4982,
											"end": 5036,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4982,
											"end": 5036,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4982,
											"end": 5036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 4982,
											"end": 5036,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4982,
											"end": 5036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4982,
											"end": 5036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 4982,
											"end": 5036,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4982,
											"end": 5036,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 4982,
											"end": 5036,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4982,
											"end": 5036,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4982,
											"end": 5036,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4982,
											"end": 5036,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4982,
											"end": 5036,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4982,
											"end": 5036,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4982,
											"end": 5036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4982,
											"end": 5036,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 5491,
											"end": 5514,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 5491,
											"end": 5514,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5491,
											"end": 5514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 5491,
											"end": 5514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 5491,
											"end": 5514,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5491,
											"end": 5514,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 5491,
											"end": 5514,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5491,
											"end": 5514,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5491,
											"end": 5514,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5491,
											"end": 5514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 5491,
											"end": 5514,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5491,
											"end": 5514,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5491,
											"end": 5514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 5491,
											"end": 5514,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5491,
											"end": 5514,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 5491,
											"end": 5514,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5491,
											"end": 5514,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5491,
											"end": 5514,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5491,
											"end": 5514,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5491,
											"end": 5514,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5491,
											"end": 5514,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5491,
											"end": 5514,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5491,
											"end": 5514,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 5719,
											"end": 5768,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 5719,
											"end": 5768,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5719,
											"end": 5768,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 5719,
											"end": 5768,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5719,
											"end": 5768,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5719,
											"end": 5768,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5719,
											"end": 5768,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5719,
											"end": 5768,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5719,
											"end": 5768,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5719,
											"end": 5768,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5719,
											"end": 5768,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 5719,
											"end": 5768,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5719,
											"end": 5768,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5719,
											"end": 5768,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 5719,
											"end": 5768,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5719,
											"end": 5768,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 5719,
											"end": 5768,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5719,
											"end": 5768,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 5719,
											"end": 5768,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5719,
											"end": 5768,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 5719,
											"end": 5768,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5719,
											"end": 5768,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5719,
											"end": 5768,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5719,
											"end": 5768,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 5719,
											"end": 5768,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5719,
											"end": 5768,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5719,
											"end": 5768,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 5719,
											"end": 5768,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5719,
											"end": 5768,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 5719,
											"end": 5768,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5719,
											"end": 5768,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5719,
											"end": 5768,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5719,
											"end": 5768,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5719,
											"end": 5768,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5719,
											"end": 5768,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5719,
											"end": 5768,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5719,
											"end": 5768,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 7753,
											"end": 8561,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 7753,
											"end": 8561,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7753,
											"end": 8561,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 7753,
											"end": 8561,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7753,
											"end": 8561,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7753,
											"end": 8561,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7753,
											"end": 8561,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7753,
											"end": 8561,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7753,
											"end": 8561,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7753,
											"end": 8561,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7753,
											"end": 8561,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 7753,
											"end": 8561,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7753,
											"end": 8561,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7753,
											"end": 8561,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 7753,
											"end": 8561,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7753,
											"end": 8561,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 7753,
											"end": 8561,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7753,
											"end": 8561,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 7753,
											"end": 8561,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7753,
											"end": 8561,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 7753,
											"end": 8561,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7753,
											"end": 8561,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 11815,
											"end": 12509,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 11815,
											"end": 12509,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11815,
											"end": 12509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 11815,
											"end": 12509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 11815,
											"end": 12509,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11815,
											"end": 12509,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 11815,
											"end": 12509,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11815,
											"end": 12509,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 13821,
											"end": 15220,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 13821,
											"end": 15220,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13883,
											"end": 13906,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 13868,
											"end": 13880,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 13868,
											"end": 13906,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 13860,
											"end": 13962,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 13860,
											"end": 13962,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13860,
											"end": 13962,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13860,
											"end": 13962,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13860,
											"end": 13962,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13860,
											"end": 13962,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13860,
											"end": 13962,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13860,
											"end": 13962,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13860,
											"end": 13962,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13860,
											"end": 13962,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 13860,
											"end": 13962,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13860,
											"end": 13962,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 13860,
											"end": 13962,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13860,
											"end": 13962,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 13860,
											"end": 13962,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13860,
											"end": 13962,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13860,
											"end": 13962,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13860,
											"end": 13962,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13860,
											"end": 13962,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13860,
											"end": 13962,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13860,
											"end": 13962,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13860,
											"end": 13962,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13860,
											"end": 13962,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 13860,
											"end": 13962,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14014,
											"end": 14015,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13980,
											"end": 13986,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13980,
											"end": 13998,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13987,
											"end": 13997,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 13980,
											"end": 13998,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13980,
											"end": 13998,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13980,
											"end": 13998,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13980,
											"end": 13998,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13980,
											"end": 13998,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13980,
											"end": 13998,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13980,
											"end": 13998,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13980,
											"end": 13998,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13980,
											"end": 13998,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13980,
											"end": 13998,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13980,
											"end": 13998,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13980,
											"end": 13998,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13980,
											"end": 13998,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13980,
											"end": 13998,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13980,
											"end": 13998,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13980,
											"end": 14010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13980,
											"end": 14010,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13980,
											"end": 14010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13980,
											"end": 14010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13980,
											"end": 14010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13980,
											"end": 14010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13980,
											"end": 14010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 13980,
											"end": 14010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 13980,
											"end": 14010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13980,
											"end": 14010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 13980,
											"end": 14010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13980,
											"end": 14010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13980,
											"end": 14015,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13980,
											"end": 14015,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13980,
											"end": 14015,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13972,
											"end": 14100,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 13972,
											"end": 14100,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13972,
											"end": 14100,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13972,
											"end": 14100,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13972,
											"end": 14100,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13972,
											"end": 14100,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13972,
											"end": 14100,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13972,
											"end": 14100,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13972,
											"end": 14100,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13972,
											"end": 14100,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 13972,
											"end": 14100,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13972,
											"end": 14100,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 13972,
											"end": 14100,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13972,
											"end": 14100,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 13972,
											"end": 14100,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13972,
											"end": 14100,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13972,
											"end": 14100,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13972,
											"end": 14100,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13972,
											"end": 14100,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13972,
											"end": 14100,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13972,
											"end": 14100,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13972,
											"end": 14100,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13972,
											"end": 14100,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 13972,
											"end": 14100,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14151,
											"end": 14152,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14118,
											"end": 14136,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14118,
											"end": 14148,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14137,
											"end": 14147,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 14118,
											"end": 14148,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14118,
											"end": 14148,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14118,
											"end": 14148,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14118,
											"end": 14148,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14118,
											"end": 14148,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14118,
											"end": 14148,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14118,
											"end": 14148,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14118,
											"end": 14148,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14118,
											"end": 14148,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14118,
											"end": 14148,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14118,
											"end": 14148,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14118,
											"end": 14148,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14118,
											"end": 14148,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14118,
											"end": 14148,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14118,
											"end": 14148,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14118,
											"end": 14148,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14118,
											"end": 14152,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 14110,
											"end": 14188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 14110,
											"end": 14188,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14110,
											"end": 14188,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14110,
											"end": 14188,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14110,
											"end": 14188,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14110,
											"end": 14188,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14110,
											"end": 14188,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14110,
											"end": 14188,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14110,
											"end": 14188,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14110,
											"end": 14188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 14110,
											"end": 14188,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14110,
											"end": 14188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 14110,
											"end": 14188,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14110,
											"end": 14188,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 14110,
											"end": 14188,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14110,
											"end": 14188,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14110,
											"end": 14188,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14110,
											"end": 14188,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14110,
											"end": 14188,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14110,
											"end": 14188,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14110,
											"end": 14188,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14110,
											"end": 14188,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14110,
											"end": 14188,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 14110,
											"end": 14188,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14864,
											"end": 14884,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14940,
											"end": 14957,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 14940,
											"end": 14957,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14907,
											"end": 14925,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14907,
											"end": 14937,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14926,
											"end": 14936,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 14907,
											"end": 14937,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14907,
											"end": 14937,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14907,
											"end": 14937,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14907,
											"end": 14937,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14907,
											"end": 14937,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14907,
											"end": 14937,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14907,
											"end": 14937,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14907,
											"end": 14937,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14907,
											"end": 14937,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14907,
											"end": 14937,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14907,
											"end": 14937,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14907,
											"end": 14937,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14907,
											"end": 14937,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14907,
											"end": 14937,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14907,
											"end": 14937,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14907,
											"end": 14937,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14904,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 14887,
											"end": 14937,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 14887,
											"end": 14937,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14937,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14937,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 14887,
											"end": 14937,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14887,
											"end": 14937,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 14887,
											"end": 14937,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14957,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 14887,
											"end": 14957,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14957,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14957,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 14887,
											"end": 14957,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14887,
											"end": 14957,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 14887,
											"end": 14957,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14864,
											"end": 14957,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14864,
											"end": 14957,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15000,
											"end": 15001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14967,
											"end": 14985,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14967,
											"end": 14997,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14986,
											"end": 14996,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 14967,
											"end": 14997,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14967,
											"end": 14997,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14967,
											"end": 14997,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14967,
											"end": 14997,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14967,
											"end": 14997,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14967,
											"end": 14997,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14967,
											"end": 14997,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14967,
											"end": 14997,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14967,
											"end": 14997,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14967,
											"end": 14997,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14967,
											"end": 14997,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14967,
											"end": 14997,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14967,
											"end": 14997,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14967,
											"end": 14997,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14967,
											"end": 14997,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14967,
											"end": 15001,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14967,
											"end": 15001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14967,
											"end": 15001,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14967,
											"end": 15001,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15095,
											"end": 15133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 15108,
											"end": 15118,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 15120,
											"end": 15132,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15095,
											"end": 15107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 15095,
											"end": 15133,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15095,
											"end": 15133,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 15095,
											"end": 15133,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13821,
											"end": 15220,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13821,
											"end": 15220,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5976,
											"end": 6016,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 5976,
											"end": 6016,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5976,
											"end": 6016,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 5976,
											"end": 6016,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5976,
											"end": 6016,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFF"
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9998,
											"end": 11657,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 9998,
											"end": 11657,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6143,
											"end": 6146,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6113,
											"end": 6147,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6113,
											"end": 6147,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6121,
											"end": 6130,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 6121,
											"end": 6130,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6121,
											"end": 6130,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6121,
											"end": 6130,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6121,
											"end": 6130,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6121,
											"end": 6130,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6121,
											"end": 6130,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6121,
											"end": 6130,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6121,
											"end": 6130,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6121,
											"end": 6130,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6121,
											"end": 6130,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6113,
											"end": 6147,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6113,
											"end": 6147,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6113,
											"end": 6147,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6113,
											"end": 6147,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6105,
											"end": 6169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 6105,
											"end": 6169,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6105,
											"end": 6169,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6105,
											"end": 6169,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6105,
											"end": 6169,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6105,
											"end": 6169,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6105,
											"end": 6169,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6105,
											"end": 6169,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6105,
											"end": 6169,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6105,
											"end": 6169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 6105,
											"end": 6169,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6105,
											"end": 6169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 6105,
											"end": 6169,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6105,
											"end": 6169,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 6105,
											"end": 6169,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6105,
											"end": 6169,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6105,
											"end": 6169,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6105,
											"end": 6169,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6105,
											"end": 6169,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6105,
											"end": 6169,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6105,
											"end": 6169,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6105,
											"end": 6169,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6105,
											"end": 6169,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 6105,
											"end": 6169,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10290,
											"end": 10312,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10264,
											"end": 10312,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFF"
										},
										{
											"begin": 10264,
											"end": 10312,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10264,
											"end": 10287,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 10264,
											"end": 10312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 10264,
											"end": 10312,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10264,
											"end": 10312,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10264,
											"end": 10312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 10264,
											"end": 10312,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10264,
											"end": 10312,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 10264,
											"end": 10312,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10248,
											"end": 10260,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 10248,
											"end": 10312,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 10248,
											"end": 10312,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10240,
											"end": 10366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 10240,
											"end": 10366,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10240,
											"end": 10366,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10240,
											"end": 10366,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10240,
											"end": 10366,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10240,
											"end": 10366,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10240,
											"end": 10366,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10240,
											"end": 10366,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10240,
											"end": 10366,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10240,
											"end": 10366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 10240,
											"end": 10366,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10240,
											"end": 10366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 10240,
											"end": 10366,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10240,
											"end": 10366,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 10240,
											"end": 10366,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10240,
											"end": 10366,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10240,
											"end": 10366,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10240,
											"end": 10366,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10240,
											"end": 10366,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10240,
											"end": 10366,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10240,
											"end": 10366,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10240,
											"end": 10366,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10240,
											"end": 10366,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 10240,
											"end": 10366,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10418,
											"end": 10419,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10384,
											"end": 10390,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10384,
											"end": 10402,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10391,
											"end": 10401,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10384,
											"end": 10402,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10384,
											"end": 10402,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10384,
											"end": 10402,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10384,
											"end": 10402,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10384,
											"end": 10402,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10384,
											"end": 10402,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10384,
											"end": 10402,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10384,
											"end": 10402,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10384,
											"end": 10402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10384,
											"end": 10402,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10384,
											"end": 10402,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10384,
											"end": 10402,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10384,
											"end": 10402,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10384,
											"end": 10402,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10384,
											"end": 10402,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10384,
											"end": 10414,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10384,
											"end": 10414,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10384,
											"end": 10414,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10384,
											"end": 10414,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10384,
											"end": 10414,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10384,
											"end": 10414,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10384,
											"end": 10414,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 10384,
											"end": 10414,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 10384,
											"end": 10414,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10384,
											"end": 10414,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 10384,
											"end": 10414,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10384,
											"end": 10414,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10384,
											"end": 10419,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10384,
											"end": 10419,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10384,
											"end": 10419,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10376,
											"end": 10439,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 10376,
											"end": 10439,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10376,
											"end": 10439,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10376,
											"end": 10439,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10376,
											"end": 10439,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10376,
											"end": 10439,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10376,
											"end": 10439,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10376,
											"end": 10439,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10376,
											"end": 10439,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10376,
											"end": 10439,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 10376,
											"end": 10439,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10376,
											"end": 10439,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 10376,
											"end": 10439,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10376,
											"end": 10439,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 10376,
											"end": 10439,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10376,
											"end": 10439,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10376,
											"end": 10439,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10376,
											"end": 10439,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10376,
											"end": 10439,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10376,
											"end": 10439,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10376,
											"end": 10439,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10376,
											"end": 10439,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10376,
											"end": 10439,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 10376,
											"end": 10439,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10570,
											"end": 10605,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10608,
											"end": 10674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 10637,
											"end": 10649,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10651,
											"end": 10673,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10608,
											"end": 10636,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 10608,
											"end": 10674,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10608,
											"end": 10674,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 10608,
											"end": 10674,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10570,
											"end": 10674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10570,
											"end": 10674,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10685,
											"end": 10703,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10706,
											"end": 10800,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10706,
											"end": 10800,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10706,
											"end": 10800,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10706,
											"end": 10800,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 10706,
											"end": 10800,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10706,
											"end": 10800,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10706,
											"end": 10800,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10706,
											"end": 10800,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10712,
											"end": 10724,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10706,
											"end": 10800,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10706,
											"end": 10800,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10706,
											"end": 10800,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10706,
											"end": 10800,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10706,
											"end": 10800,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10706,
											"end": 10800,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10726,
											"end": 10748,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10706,
											"end": 10800,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFF"
										},
										{
											"begin": 10706,
											"end": 10800,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10706,
											"end": 10800,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10706,
											"end": 10800,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10706,
											"end": 10800,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10706,
											"end": 10800,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10757,
											"end": 10769,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 10706,
											"end": 10800,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10706,
											"end": 10800,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10706,
											"end": 10800,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10706,
											"end": 10800,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10706,
											"end": 10800,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10706,
											"end": 10800,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10772,
											"end": 10799,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10706,
											"end": 10800,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10706,
											"end": 10800,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10706,
											"end": 10800,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10706,
											"end": 10800,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10706,
											"end": 10800,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10685,
											"end": 10800,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10685,
											"end": 10800,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10831,
											"end": 10836,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10816,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10810,
											"end": 10828,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10817,
											"end": 10827,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10828,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10810,
											"end": 10828,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10828,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10810,
											"end": 10828,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10828,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10828,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10828,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10810,
											"end": 10828,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10828,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10828,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10828,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10828,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10810,
											"end": 10828,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10828,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10810,
											"end": 10828,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFF"
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFF"
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11117,
											"end": 11144,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11096,
											"end": 11144,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11096,
											"end": 11144,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11096,
											"end": 11113,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 11096,
											"end": 11113,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11096,
											"end": 11144,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11096,
											"end": 11144,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11096,
											"end": 11144,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11096,
											"end": 11144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 11096,
											"end": 11144,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11096,
											"end": 11144,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11096,
											"end": 11144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 11096,
											"end": 11144,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11096,
											"end": 11144,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 11096,
											"end": 11144,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11096,
											"end": 11144,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11096,
											"end": 11144,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11096,
											"end": 11144,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11096,
											"end": 11144,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11096,
											"end": 11144,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11096,
											"end": 11144,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 11096,
											"end": 11144,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11188,
											"end": 11215,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11154,
											"end": 11215,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11154,
											"end": 11215,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11154,
											"end": 11172,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11154,
											"end": 11184,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11173,
											"end": 11183,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 11154,
											"end": 11184,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11154,
											"end": 11184,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11154,
											"end": 11184,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11154,
											"end": 11184,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11154,
											"end": 11184,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11154,
											"end": 11184,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11154,
											"end": 11184,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11154,
											"end": 11184,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11154,
											"end": 11184,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11154,
											"end": 11184,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11154,
											"end": 11184,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11154,
											"end": 11184,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11154,
											"end": 11184,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11154,
											"end": 11184,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11154,
											"end": 11184,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11154,
											"end": 11184,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11154,
											"end": 11215,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11154,
											"end": 11215,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11154,
											"end": 11215,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11154,
											"end": 11215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 11154,
											"end": 11215,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11154,
											"end": 11215,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11154,
											"end": 11215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 11154,
											"end": 11215,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11154,
											"end": 11215,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 11154,
											"end": 11215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11154,
											"end": 11215,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11154,
											"end": 11215,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11154,
											"end": 11215,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11154,
											"end": 11215,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11154,
											"end": 11215,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11154,
											"end": 11215,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 11154,
											"end": 11215,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11452,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 11443,
											"end": 11452,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11443,
											"end": 11452,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11452,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11452,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11452,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 11443,
											"end": 11452,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11452,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11452,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11452,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11443,
											"end": 11452,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11465,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11443,
											"end": 11465,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11465,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 11466,
											"end": 11476,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11490,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 11493,
											"end": 11505,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11435,
											"end": 11544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 11435,
											"end": 11544,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11435,
											"end": 11544,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11435,
											"end": 11544,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11435,
											"end": 11544,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11435,
											"end": 11544,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11435,
											"end": 11544,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11435,
											"end": 11544,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11435,
											"end": 11544,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11435,
											"end": 11544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 11435,
											"end": 11544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11435,
											"end": 11544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 11435,
											"end": 11544,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11435,
											"end": 11544,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 11435,
											"end": 11544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11435,
											"end": 11544,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11435,
											"end": 11544,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11435,
											"end": 11544,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11435,
											"end": 11544,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11435,
											"end": 11544,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11435,
											"end": 11544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11435,
											"end": 11544,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11435,
											"end": 11544,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 11435,
											"end": 11544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11560,
											"end": 11650,
											"name": "PUSH",
											"source": 0,
											"value": "E7DBEA143058F90BE7A1644E539342C25DDC5379868FE922BAB596DE99DEBF41"
										},
										{
											"begin": 11572,
											"end": 11582,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 11584,
											"end": 11596,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11598,
											"end": 11620,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11622,
											"end": 11649,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11560,
											"end": 11650,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11560,
											"end": 11650,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11560,
											"end": 11650,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 11560,
											"end": 11650,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 11560,
											"end": 11650,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 11560,
											"end": 11650,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11560,
											"end": 11650,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11560,
											"end": 11650,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11560,
											"end": 11650,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 11560,
											"end": 11650,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11560,
											"end": 11650,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 11560,
											"end": 11650,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11560,
											"end": 11650,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11560,
											"end": 11650,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11560,
											"end": 11650,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11560,
											"end": 11650,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11560,
											"end": 11650,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11560,
											"end": 11650,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11560,
											"end": 11650,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6180,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6180,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9998,
											"end": 11657,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9998,
											"end": 11657,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9998,
											"end": 11657,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5379,
											"end": 5421,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5379,
											"end": 5421,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5379,
											"end": 5421,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 5379,
											"end": 5421,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5379,
											"end": 5421,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5864,
											"end": 5914,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 5864,
											"end": 5914,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5864,
											"end": 5914,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 5864,
											"end": 5914,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5864,
											"end": 5914,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5864,
											"end": 5914,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5864,
											"end": 5914,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5864,
											"end": 5914,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5864,
											"end": 5914,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5864,
											"end": 5914,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5864,
											"end": 5914,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5864,
											"end": 5914,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5864,
											"end": 5914,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5864,
											"end": 5914,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5864,
											"end": 5914,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5864,
											"end": 5914,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5864,
											"end": 5914,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5864,
											"end": 5914,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5864,
											"end": 5914,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8938,
											"end": 9605,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 8938,
											"end": 9605,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9049,
											"end": 9056,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9337,
											"end": 9364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9433,
											"end": 9455,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9425,
											"end": 9456,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFF"
										},
										{
											"begin": 9425,
											"end": 9456,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9399,
											"end": 9421,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9391,
											"end": 9422,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFF"
										},
										{
											"begin": 9391,
											"end": 9422,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9375,
											"end": 9387,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9367,
											"end": 9388,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9367,
											"end": 9388,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9367,
											"end": 9422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 9367,
											"end": 9422,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9367,
											"end": 9422,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9367,
											"end": 9422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 9367,
											"end": 9422,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9367,
											"end": 9422,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 9367,
											"end": 9422,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9367,
											"end": 9456,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 9367,
											"end": 9456,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9367,
											"end": 9456,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9367,
											"end": 9456,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 9367,
											"end": 9456,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9367,
											"end": 9456,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 9367,
											"end": 9456,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9337,
											"end": 9456,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9337,
											"end": 9456,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9496,
											"end": 9497,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9474,
											"end": 9493,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9474,
											"end": 9497,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 9466,
											"end": 9553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 9466,
											"end": 9553,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9466,
											"end": 9553,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9466,
											"end": 9553,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9466,
											"end": 9553,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9466,
											"end": 9553,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9466,
											"end": 9553,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9466,
											"end": 9553,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9466,
											"end": 9553,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9466,
											"end": 9553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 9466,
											"end": 9553,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9466,
											"end": 9553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 9466,
											"end": 9553,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9466,
											"end": 9553,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 9466,
											"end": 9553,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9466,
											"end": 9553,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9466,
											"end": 9553,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9466,
											"end": 9553,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9466,
											"end": 9553,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9466,
											"end": 9553,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9466,
											"end": 9553,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9466,
											"end": 9553,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9466,
											"end": 9553,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 9466,
											"end": 9553,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9578,
											"end": 9597,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9563,
											"end": 9598,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9563,
											"end": 9598,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9563,
											"end": 9598,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8938,
											"end": 9605,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8938,
											"end": 9605,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8938,
											"end": 9605,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8938,
											"end": 9605,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8938,
											"end": 9605,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5579,
											"end": 5613,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 5579,
											"end": 5613,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5579,
											"end": 5613,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5579,
											"end": 5613,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5579,
											"end": 5613,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 15941,
											"end": 16312,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 15941,
											"end": 16312,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15977,
											"end": 15995,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15998,
											"end": 16027,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 16016,
											"end": 16026,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 15998,
											"end": 16015,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 15998,
											"end": 16027,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15998,
											"end": 16027,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 15998,
											"end": 16027,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15977,
											"end": 16027,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15977,
											"end": 16027,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16058,
											"end": 16059,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16045,
											"end": 16055,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16059,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 16037,
											"end": 16098,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 16037,
											"end": 16098,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16037,
											"end": 16098,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16037,
											"end": 16098,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16037,
											"end": 16098,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16037,
											"end": 16098,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16037,
											"end": 16098,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16037,
											"end": 16098,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16037,
											"end": 16098,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16037,
											"end": 16098,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 16037,
											"end": 16098,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16037,
											"end": 16098,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 16037,
											"end": 16098,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16037,
											"end": 16098,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 16037,
											"end": 16098,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16037,
											"end": 16098,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16037,
											"end": 16098,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16037,
											"end": 16098,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16037,
											"end": 16098,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16037,
											"end": 16098,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16037,
											"end": 16098,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16037,
											"end": 16098,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16037,
											"end": 16098,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 16037,
											"end": 16098,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16139,
											"end": 16149,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16109,
											"end": 16123,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 16109,
											"end": 16135,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16124,
											"end": 16134,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 16109,
											"end": 16135,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16109,
											"end": 16135,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16109,
											"end": 16135,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16109,
											"end": 16135,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16109,
											"end": 16135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16109,
											"end": 16135,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16109,
											"end": 16135,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16109,
											"end": 16135,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16109,
											"end": 16135,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16109,
											"end": 16135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16109,
											"end": 16135,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16109,
											"end": 16135,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16109,
											"end": 16135,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16109,
											"end": 16135,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16109,
											"end": 16135,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16109,
											"end": 16135,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16109,
											"end": 16149,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16109,
											"end": 16149,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16109,
											"end": 16149,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16109,
											"end": 16149,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 16109,
											"end": 16149,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16109,
											"end": 16149,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16109,
											"end": 16149,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 16109,
											"end": 16149,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16109,
											"end": 16149,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 16109,
											"end": 16149,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16109,
											"end": 16149,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16109,
											"end": 16149,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16109,
											"end": 16149,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16109,
											"end": 16149,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16109,
											"end": 16149,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16109,
											"end": 16149,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 16109,
											"end": 16149,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16177,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16167,
											"end": 16186,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16167,
											"end": 16186,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16186,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 16187,
											"end": 16197,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 16199,
											"end": 16209,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16159,
											"end": 16244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 16159,
											"end": 16244,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16159,
											"end": 16244,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16159,
											"end": 16244,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16159,
											"end": 16244,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16159,
											"end": 16244,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16159,
											"end": 16244,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16159,
											"end": 16244,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16159,
											"end": 16244,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16159,
											"end": 16244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 16159,
											"end": 16244,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16159,
											"end": 16244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 16159,
											"end": 16244,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16159,
											"end": 16244,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 16159,
											"end": 16244,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16159,
											"end": 16244,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16159,
											"end": 16244,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16159,
											"end": 16244,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16159,
											"end": 16244,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16159,
											"end": 16244,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16159,
											"end": 16244,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16159,
											"end": 16244,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16159,
											"end": 16244,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 16159,
											"end": 16244,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16260,
											"end": 16305,
											"name": "PUSH",
											"source": 0,
											"value": "769D4212C4FBFAA012A896B49E0F3BB14D32DD0D60CE1A13D357EE6B69DB77C2"
										},
										{
											"begin": 16282,
											"end": 16292,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16304,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16260,
											"end": 16305,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16260,
											"end": 16305,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16260,
											"end": 16305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 16260,
											"end": 16305,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16260,
											"end": 16305,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16260,
											"end": 16305,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16260,
											"end": 16305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 16260,
											"end": 16305,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16260,
											"end": 16305,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 16260,
											"end": 16305,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16260,
											"end": 16305,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16260,
											"end": 16305,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16260,
											"end": 16305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16260,
											"end": 16305,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16260,
											"end": 16305,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16260,
											"end": 16305,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16260,
											"end": 16305,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 15941,
											"end": 16312,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15941,
											"end": 16312,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6243,
											"end": 6273,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 6243,
											"end": 6273,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6243,
											"end": 6273,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 6243,
											"end": 6273,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6243,
											"end": 6273,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5198,
											"end": 5246,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 5198,
											"end": 5246,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5198,
											"end": 5246,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 5198,
											"end": 5246,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5198,
											"end": 5246,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5102,
											"end": 5134,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 5102,
											"end": 5134,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5102,
											"end": 5134,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 5102,
											"end": 5134,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5102,
											"end": 5134,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5102,
											"end": 5134,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4982,
											"end": 5036,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 4982,
											"end": 5036,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4982,
											"end": 5036,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4982,
											"end": 5036,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4982,
											"end": 5036,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4982,
											"end": 5036,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4982,
											"end": 5036,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4982,
											"end": 5036,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4982,
											"end": 5036,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4982,
											"end": 5036,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4982,
											"end": 5036,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4982,
											"end": 5036,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4982,
											"end": 5036,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4982,
											"end": 5036,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4982,
											"end": 5036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4982,
											"end": 5036,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4982,
											"end": 5036,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4982,
											"end": 5036,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4982,
											"end": 5036,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5491,
											"end": 5514,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 5491,
											"end": 5514,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5491,
											"end": 5514,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 5491,
											"end": 5514,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5491,
											"end": 5514,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5491,
											"end": 5514,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5491,
											"end": 5514,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5491,
											"end": 5514,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5491,
											"end": 5514,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 5491,
											"end": 5514,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5491,
											"end": 5514,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 5491,
											"end": 5514,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5491,
											"end": 5514,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5491,
											"end": 5514,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5491,
											"end": 5514,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5719,
											"end": 5768,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 5719,
											"end": 5768,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5719,
											"end": 5768,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5719,
											"end": 5768,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5719,
											"end": 5768,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5719,
											"end": 5768,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5719,
											"end": 5768,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5719,
											"end": 5768,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5719,
											"end": 5768,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5719,
											"end": 5768,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5719,
											"end": 5768,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5719,
											"end": 5768,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5719,
											"end": 5768,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5719,
											"end": 5768,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5719,
											"end": 5768,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5719,
											"end": 5768,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5719,
											"end": 5768,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5719,
											"end": 5768,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5719,
											"end": 5768,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7753,
											"end": 8561,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 7753,
											"end": 8561,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6374,
											"end": 6379,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 6360,
											"end": 6379,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6379,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6360,
											"end": 6370,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 6360,
											"end": 6379,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6379,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6360,
											"end": 6379,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6352,
											"end": 6411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 6352,
											"end": 6411,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6352,
											"end": 6411,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6352,
											"end": 6411,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6352,
											"end": 6411,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6352,
											"end": 6411,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6352,
											"end": 6411,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6352,
											"end": 6411,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6352,
											"end": 6411,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6352,
											"end": 6411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 6352,
											"end": 6411,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6352,
											"end": 6411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 6352,
											"end": 6411,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6352,
											"end": 6411,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 6352,
											"end": 6411,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6352,
											"end": 6411,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6352,
											"end": 6411,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6352,
											"end": 6411,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6352,
											"end": 6411,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6352,
											"end": 6411,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6352,
											"end": 6411,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6352,
											"end": 6411,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6352,
											"end": 6411,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 6352,
											"end": 6411,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7889,
											"end": 7892,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7859,
											"end": 7893,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7859,
											"end": 7893,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7867,
											"end": 7876,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 7867,
											"end": 7876,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7867,
											"end": 7876,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7867,
											"end": 7876,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7867,
											"end": 7876,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7867,
											"end": 7876,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7867,
											"end": 7876,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 7867,
											"end": 7876,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7867,
											"end": 7876,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 7867,
											"end": 7876,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7867,
											"end": 7876,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7859,
											"end": 7893,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7859,
											"end": 7893,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7859,
											"end": 7893,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7851,
											"end": 7923,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 7851,
											"end": 7923,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7851,
											"end": 7923,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7851,
											"end": 7923,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7851,
											"end": 7923,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7851,
											"end": 7923,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7851,
											"end": 7923,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7851,
											"end": 7923,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7851,
											"end": 7923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7851,
											"end": 7923,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 7851,
											"end": 7923,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7851,
											"end": 7923,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 7851,
											"end": 7923,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7851,
											"end": 7923,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 7851,
											"end": 7923,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7851,
											"end": 7923,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7851,
											"end": 7923,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7851,
											"end": 7923,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7851,
											"end": 7923,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7851,
											"end": 7923,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7851,
											"end": 7923,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7851,
											"end": 7923,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7851,
											"end": 7923,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 7851,
											"end": 7923,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7963,
											"end": 7966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7941,
											"end": 7967,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7941,
											"end": 7967,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7941,
											"end": 7951,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7941,
											"end": 7967,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7941,
											"end": 7967,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7941,
											"end": 7967,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7941,
											"end": 7967,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7933,
											"end": 8004,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 7933,
											"end": 8004,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7933,
											"end": 8004,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7933,
											"end": 8004,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7933,
											"end": 8004,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7933,
											"end": 8004,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7933,
											"end": 8004,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7933,
											"end": 8004,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7933,
											"end": 8004,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7933,
											"end": 8004,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 7933,
											"end": 8004,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7933,
											"end": 8004,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 7933,
											"end": 8004,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7933,
											"end": 8004,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 7933,
											"end": 8004,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7933,
											"end": 8004,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7933,
											"end": 8004,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7933,
											"end": 8004,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7933,
											"end": 8004,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7933,
											"end": 8004,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7933,
											"end": 8004,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7933,
											"end": 8004,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7933,
											"end": 8004,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 7933,
											"end": 8004,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8033,
											"end": 8043,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8014,
											"end": 8023,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 8014,
											"end": 8023,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8014,
											"end": 8044,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8014,
											"end": 8044,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 8014,
											"end": 8044,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8014,
											"end": 8044,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8014,
											"end": 8044,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8014,
											"end": 8044,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8014,
											"end": 8044,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 8014,
											"end": 8044,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 8014,
											"end": 8044,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8014,
											"end": 8044,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8014,
											"end": 8044,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8014,
											"end": 8044,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8014,
											"end": 8044,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8014,
											"end": 8044,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 8014,
											"end": 8044,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 8014,
											"end": 8044,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8014,
											"end": 8044,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8014,
											"end": 8044,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8188,
											"end": 8205,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 8142,
											"end": 8152,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8135,
											"end": 8163,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8135,
											"end": 8163,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8163,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 8164,
											"end": 8183,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8205,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8205,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8127,
											"end": 8253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 8127,
											"end": 8253,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8127,
											"end": 8253,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8127,
											"end": 8253,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8127,
											"end": 8253,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8127,
											"end": 8253,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8127,
											"end": 8253,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8127,
											"end": 8253,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8127,
											"end": 8253,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8127,
											"end": 8253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 8127,
											"end": 8253,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8127,
											"end": 8253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 8127,
											"end": 8253,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8127,
											"end": 8253,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 8127,
											"end": 8253,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8127,
											"end": 8253,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8127,
											"end": 8253,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8127,
											"end": 8253,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8127,
											"end": 8253,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8127,
											"end": 8253,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8127,
											"end": 8253,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8127,
											"end": 8253,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8127,
											"end": 8253,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 8127,
											"end": 8253,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8339,
											"end": 8356,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 8278,
											"end": 8288,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8271,
											"end": 8299,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8271,
											"end": 8299,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8299,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 8300,
											"end": 8319,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8329,
											"end": 8333,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8356,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8356,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8263,
											"end": 8402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 8263,
											"end": 8402,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8263,
											"end": 8402,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8263,
											"end": 8402,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8263,
											"end": 8402,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8263,
											"end": 8402,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8263,
											"end": 8402,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8263,
											"end": 8402,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8263,
											"end": 8402,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8263,
											"end": 8402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 8263,
											"end": 8402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8263,
											"end": 8402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 8263,
											"end": 8402,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8263,
											"end": 8402,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 8263,
											"end": 8402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8263,
											"end": 8402,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8263,
											"end": 8402,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8263,
											"end": 8402,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8263,
											"end": 8402,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8263,
											"end": 8402,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8263,
											"end": 8402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8263,
											"end": 8402,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8263,
											"end": 8402,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 8263,
											"end": 8402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8427,
											"end": 8437,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8420,
											"end": 8451,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8420,
											"end": 8451,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8451,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 8452,
											"end": 8471,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8481,
											"end": 8485,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 8488,
											"end": 8505,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8412,
											"end": 8554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 8412,
											"end": 8554,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8412,
											"end": 8554,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8412,
											"end": 8554,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8412,
											"end": 8554,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8412,
											"end": 8554,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8412,
											"end": 8554,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8412,
											"end": 8554,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8412,
											"end": 8554,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8412,
											"end": 8554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 8412,
											"end": 8554,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8412,
											"end": 8554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 8412,
											"end": 8554,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8412,
											"end": 8554,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 8412,
											"end": 8554,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8412,
											"end": 8554,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8412,
											"end": 8554,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8412,
											"end": 8554,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8412,
											"end": 8554,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8412,
											"end": 8554,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8412,
											"end": 8554,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8412,
											"end": 8554,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8412,
											"end": 8554,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 8412,
											"end": 8554,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7753,
											"end": 8561,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7753,
											"end": 8561,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7753,
											"end": 8561,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 11815,
											"end": 12509,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 11815,
											"end": 12509,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6143,
											"end": 6146,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6113,
											"end": 6147,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6113,
											"end": 6147,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6121,
											"end": 6130,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 6121,
											"end": 6130,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6121,
											"end": 6130,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6121,
											"end": 6130,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6121,
											"end": 6130,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6121,
											"end": 6130,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6121,
											"end": 6130,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6121,
											"end": 6130,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6121,
											"end": 6130,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6121,
											"end": 6130,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6121,
											"end": 6130,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6113,
											"end": 6147,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6113,
											"end": 6147,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6113,
											"end": 6147,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6113,
											"end": 6147,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6105,
											"end": 6169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 6105,
											"end": 6169,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6105,
											"end": 6169,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6105,
											"end": 6169,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6105,
											"end": 6169,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6105,
											"end": 6169,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6105,
											"end": 6169,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6105,
											"end": 6169,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6105,
											"end": 6169,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6105,
											"end": 6169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 6105,
											"end": 6169,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6105,
											"end": 6169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 6105,
											"end": 6169,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6105,
											"end": 6169,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 6105,
											"end": 6169,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6105,
											"end": 6169,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6105,
											"end": 6169,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6105,
											"end": 6169,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6105,
											"end": 6169,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6105,
											"end": 6169,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6105,
											"end": 6169,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6105,
											"end": 6169,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6105,
											"end": 6169,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 6105,
											"end": 6169,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11869,
											"end": 11887,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11890,
											"end": 11896,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11890,
											"end": 11908,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11897,
											"end": 11907,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 11890,
											"end": 11908,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11890,
											"end": 11908,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11890,
											"end": 11908,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11890,
											"end": 11908,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11890,
											"end": 11908,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11890,
											"end": 11908,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11890,
											"end": 11908,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11890,
											"end": 11908,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11890,
											"end": 11908,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11890,
											"end": 11908,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11890,
											"end": 11908,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11890,
											"end": 11908,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11890,
											"end": 11908,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11890,
											"end": 11908,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11890,
											"end": 11908,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFF"
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFF"
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFF"
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11919,
											"end": 11938,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11941,
											"end": 11946,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11941,
											"end": 11958,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11941,
											"end": 11958,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11941,
											"end": 11958,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11919,
											"end": 11958,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11919,
											"end": 11958,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11919,
											"end": 11958,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11919,
											"end": 11958,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11992,
											"end": 11993,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11977,
											"end": 11988,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11977,
											"end": 11993,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11977,
											"end": 11993,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11969,
											"end": 12030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 11969,
											"end": 12030,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11969,
											"end": 12030,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11969,
											"end": 12030,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11969,
											"end": 12030,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11969,
											"end": 12030,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11969,
											"end": 12030,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11969,
											"end": 12030,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11969,
											"end": 12030,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11969,
											"end": 12030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 11969,
											"end": 12030,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11969,
											"end": 12030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 11969,
											"end": 12030,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11969,
											"end": 12030,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 11969,
											"end": 12030,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11969,
											"end": 12030,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11969,
											"end": 12030,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11969,
											"end": 12030,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11969,
											"end": 12030,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11969,
											"end": 12030,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11969,
											"end": 12030,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11969,
											"end": 12030,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11969,
											"end": 12030,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 11969,
											"end": 12030,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12064,
											"end": 12069,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12064,
											"end": 12080,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12064,
											"end": 12080,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12064,
											"end": 12080,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12049,
											"end": 12080,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 12049,
											"end": 12080,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12049,
											"end": 12061,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 12049,
											"end": 12080,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 12041,
											"end": 12145,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 12041,
											"end": 12145,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12041,
											"end": 12145,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12041,
											"end": 12145,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12041,
											"end": 12145,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12041,
											"end": 12145,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12041,
											"end": 12145,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12041,
											"end": 12145,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12041,
											"end": 12145,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12041,
											"end": 12145,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 12041,
											"end": 12145,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12041,
											"end": 12145,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 12041,
											"end": 12145,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12041,
											"end": 12145,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 12041,
											"end": 12145,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12041,
											"end": 12145,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12041,
											"end": 12145,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12041,
											"end": 12145,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12041,
											"end": 12145,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12041,
											"end": 12145,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12041,
											"end": 12145,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12041,
											"end": 12145,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12041,
											"end": 12145,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 12041,
											"end": 12145,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12253,
											"end": 12282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 12276,
											"end": 12281,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12253,
											"end": 12275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 12253,
											"end": 12282,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12253,
											"end": 12282,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 12253,
											"end": 12282,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12391,
											"end": 12397,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12391,
											"end": 12409,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12398,
											"end": 12408,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 12391,
											"end": 12409,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12391,
											"end": 12409,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12391,
											"end": 12409,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12391,
											"end": 12409,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12391,
											"end": 12409,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12391,
											"end": 12409,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12391,
											"end": 12409,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12391,
											"end": 12409,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12391,
											"end": 12409,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12391,
											"end": 12409,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12391,
											"end": 12409,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12391,
											"end": 12409,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12391,
											"end": 12409,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12391,
											"end": 12409,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12391,
											"end": 12409,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12391,
											"end": 12409,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12384,
											"end": 12409,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12409,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12409,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12409,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12384,
											"end": 12409,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 12384,
											"end": 12409,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12409,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12409,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12409,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12409,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12384,
											"end": 12409,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12409,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12409,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12409,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12409,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12409,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12384,
											"end": 12409,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12409,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12409,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 12384,
											"end": 12409,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 12384,
											"end": 12409,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12409,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12409,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12409,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12409,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFF"
										},
										{
											"begin": 12384,
											"end": 12409,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12409,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12409,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12409,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12409,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12409,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12384,
											"end": 12409,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12409,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12409,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 12384,
											"end": 12409,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 12384,
											"end": 12409,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12409,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12409,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12409,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12409,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 12384,
											"end": 12409,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12409,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12409,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12409,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12409,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12409,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12384,
											"end": 12409,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12409,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12409,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 12384,
											"end": 12409,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 12384,
											"end": 12409,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12409,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12409,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12409,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12409,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12384,
											"end": 12409,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12409,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12409,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12409,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12409,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12409,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12409,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12437,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 12428,
											"end": 12437,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12428,
											"end": 12437,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12437,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12437,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12437,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 12428,
											"end": 12437,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12437,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12437,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12437,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12428,
											"end": 12437,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12446,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12428,
											"end": 12446,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12446,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 12447,
											"end": 12457,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 12459,
											"end": 12470,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12420,
											"end": 12502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 12420,
											"end": 12502,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12420,
											"end": 12502,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12420,
											"end": 12502,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12420,
											"end": 12502,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12420,
											"end": 12502,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12420,
											"end": 12502,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12420,
											"end": 12502,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12420,
											"end": 12502,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12420,
											"end": 12502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 12420,
											"end": 12502,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12420,
											"end": 12502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 12420,
											"end": 12502,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12420,
											"end": 12502,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 12420,
											"end": 12502,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12420,
											"end": 12502,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12420,
											"end": 12502,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12420,
											"end": 12502,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12420,
											"end": 12502,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12420,
											"end": 12502,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12420,
											"end": 12502,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12420,
											"end": 12502,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12420,
											"end": 12502,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 12420,
											"end": 12502,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6180,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6180,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11815,
											"end": 12509,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 15531,
											"end": 15891,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 15531,
											"end": 15891,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15639,
											"end": 15640,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15623,
											"end": 15636,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15623,
											"end": 15640,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 15615,
											"end": 15686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 15615,
											"end": 15686,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15615,
											"end": 15686,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15615,
											"end": 15686,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15615,
											"end": 15686,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15615,
											"end": 15686,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15615,
											"end": 15686,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15615,
											"end": 15686,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15615,
											"end": 15686,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15615,
											"end": 15686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 15615,
											"end": 15686,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15615,
											"end": 15686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 15615,
											"end": 15686,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15615,
											"end": 15686,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 15615,
											"end": 15686,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15615,
											"end": 15686,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15615,
											"end": 15686,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15615,
											"end": 15686,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15615,
											"end": 15686,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15615,
											"end": 15686,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15615,
											"end": 15686,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15615,
											"end": 15686,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15615,
											"end": 15686,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 15615,
											"end": 15686,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15726,
											"end": 15727,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15704,
											"end": 15728,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15704,
											"end": 15728,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15704,
											"end": 15714,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15704,
											"end": 15728,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15704,
											"end": 15728,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15704,
											"end": 15728,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15704,
											"end": 15728,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15696,
											"end": 15778,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 15696,
											"end": 15778,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15696,
											"end": 15778,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15696,
											"end": 15778,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15696,
											"end": 15778,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15696,
											"end": 15778,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15696,
											"end": 15778,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15696,
											"end": 15778,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15696,
											"end": 15778,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15696,
											"end": 15778,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 15696,
											"end": 15778,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15696,
											"end": 15778,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 15696,
											"end": 15778,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15696,
											"end": 15778,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 15696,
											"end": 15778,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15696,
											"end": 15778,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15696,
											"end": 15778,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15696,
											"end": 15778,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15696,
											"end": 15778,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15696,
											"end": 15778,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15696,
											"end": 15778,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15696,
											"end": 15778,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15696,
											"end": 15778,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 15696,
											"end": 15778,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15816,
											"end": 15829,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15788,
											"end": 15801,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15788,
											"end": 15813,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15802,
											"end": 15812,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15788,
											"end": 15813,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15788,
											"end": 15813,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15788,
											"end": 15813,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15788,
											"end": 15813,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15788,
											"end": 15813,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15788,
											"end": 15813,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15788,
											"end": 15813,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15788,
											"end": 15813,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15788,
											"end": 15813,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15788,
											"end": 15813,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15788,
											"end": 15813,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15788,
											"end": 15813,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15788,
											"end": 15813,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15788,
											"end": 15813,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15788,
											"end": 15813,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15788,
											"end": 15829,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15788,
											"end": 15829,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15788,
											"end": 15829,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 15788,
											"end": 15829,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15844,
											"end": 15884,
											"name": "PUSH",
											"source": 0,
											"value": "6E1AFD29522B0AAF986597BCC53F5FB4DAAE2AF7CFD41D00C384AB1BDF912B23"
										},
										{
											"begin": 15858,
											"end": 15868,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15870,
											"end": 15883,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15844,
											"end": 15884,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15844,
											"end": 15884,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15844,
											"end": 15884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 15844,
											"end": 15884,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15844,
											"end": 15884,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15844,
											"end": 15884,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15844,
											"end": 15884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 15844,
											"end": 15884,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15844,
											"end": 15884,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 15844,
											"end": 15884,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15844,
											"end": 15884,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15844,
											"end": 15884,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15844,
											"end": 15884,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15844,
											"end": 15884,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15844,
											"end": 15884,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15844,
											"end": 15884,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15844,
											"end": 15884,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 15531,
											"end": 15891,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15531,
											"end": 15891,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15531,
											"end": 15891,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 16426,
											"end": 16583,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 16426,
											"end": 16583,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16496,
											"end": 16503,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16550,
											"end": 16564,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 16550,
											"end": 16576,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16565,
											"end": 16575,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16550,
											"end": 16576,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16550,
											"end": 16576,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16550,
											"end": 16576,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16550,
											"end": 16576,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16550,
											"end": 16576,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16550,
											"end": 16576,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16550,
											"end": 16576,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16550,
											"end": 16576,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16550,
											"end": 16576,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16550,
											"end": 16576,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16550,
											"end": 16576,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16550,
											"end": 16576,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16550,
											"end": 16576,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16550,
											"end": 16576,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16550,
											"end": 16576,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16550,
											"end": 16576,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16522,
											"end": 16547,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 16536,
											"end": 16546,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16522,
											"end": 16535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 16522,
											"end": 16547,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16522,
											"end": 16547,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 16522,
											"end": 16547,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16522,
											"end": 16576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 16522,
											"end": 16576,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16522,
											"end": 16576,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16522,
											"end": 16576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 16522,
											"end": 16576,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16522,
											"end": 16576,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 16522,
											"end": 16576,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16515,
											"end": 16576,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16515,
											"end": 16576,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16426,
											"end": 16583,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16426,
											"end": 16583,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16426,
											"end": 16583,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16426,
											"end": 16583,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 12610,
											"end": 13548,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 12610,
											"end": 13548,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12991,
											"end": 12997,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12991,
											"end": 13019,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12991,
											"end": 13019,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12991,
											"end": 13019,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12971,
											"end": 13019,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFF"
										},
										{
											"begin": 12971,
											"end": 13019,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12971,
											"end": 12977,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12971,
											"end": 12988,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12971,
											"end": 12988,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12971,
											"end": 12988,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12971,
											"end": 13019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 12971,
											"end": 13019,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12971,
											"end": 13019,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12971,
											"end": 13019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 12971,
											"end": 13019,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12971,
											"end": 13019,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 12971,
											"end": 13019,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12955,
											"end": 13020,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 12955,
											"end": 13020,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12955,
											"end": 12967,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 12955,
											"end": 13020,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12951,
											"end": 13542,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12951,
											"end": 13542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 12951,
											"end": 13542,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13142,
											"end": 13148,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13142,
											"end": 13176,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 13142,
											"end": 13176,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13142,
											"end": 13176,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13108,
											"end": 13176,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13108,
											"end": 13176,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13108,
											"end": 13126,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13108,
											"end": 13138,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13127,
											"end": 13137,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 13108,
											"end": 13138,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13108,
											"end": 13138,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13108,
											"end": 13138,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13108,
											"end": 13138,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13108,
											"end": 13138,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13108,
											"end": 13138,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13108,
											"end": 13138,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13108,
											"end": 13138,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13108,
											"end": 13138,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13108,
											"end": 13138,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13108,
											"end": 13138,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13108,
											"end": 13138,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13108,
											"end": 13138,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13108,
											"end": 13138,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13108,
											"end": 13138,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13108,
											"end": 13138,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13108,
											"end": 13176,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13108,
											"end": 13176,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13108,
											"end": 13176,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13108,
											"end": 13176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 13108,
											"end": 13176,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13108,
											"end": 13176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13108,
											"end": 13176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 13108,
											"end": 13176,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13108,
											"end": 13176,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 13108,
											"end": 13176,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13108,
											"end": 13176,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13108,
											"end": 13176,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13108,
											"end": 13176,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13108,
											"end": 13176,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13108,
											"end": 13176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13108,
											"end": 13176,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 13108,
											"end": 13176,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13211,
											"end": 13217,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13211,
											"end": 13245,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 13211,
											"end": 13245,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13211,
											"end": 13245,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13190,
											"end": 13245,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13190,
											"end": 13245,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13190,
											"end": 13207,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 13190,
											"end": 13207,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13190,
											"end": 13245,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13190,
											"end": 13245,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13190,
											"end": 13245,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13190,
											"end": 13245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 13190,
											"end": 13245,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13190,
											"end": 13245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13190,
											"end": 13245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 13190,
											"end": 13245,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13190,
											"end": 13245,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 13190,
											"end": 13245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13190,
											"end": 13245,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13190,
											"end": 13245,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13190,
											"end": 13245,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13190,
											"end": 13245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13190,
											"end": 13245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13190,
											"end": 13245,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 13190,
											"end": 13245,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13264,
											"end": 13384,
											"name": "PUSH",
											"source": 0,
											"value": "6C6F3C7D8C87976393011CC962DA12841024BC1D62D2DE21716A6306AB314EF3"
										},
										{
											"begin": 13289,
											"end": 13299,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 13301,
											"end": 13307,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13301,
											"end": 13319,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13301,
											"end": 13319,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13301,
											"end": 13319,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13321,
											"end": 13327,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13321,
											"end": 13349,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13321,
											"end": 13349,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13321,
											"end": 13349,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13366,
											"end": 13372,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13366,
											"end": 13383,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13366,
											"end": 13383,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13366,
											"end": 13383,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13351,
											"end": 13383,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 13351,
											"end": 13383,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13351,
											"end": 13363,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 13351,
											"end": 13383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 13351,
											"end": 13383,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13351,
											"end": 13383,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13351,
											"end": 13383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 13351,
											"end": 13383,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13351,
											"end": 13383,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 13351,
											"end": 13383,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13264,
											"end": 13384,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13264,
											"end": 13384,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13264,
											"end": 13384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 13264,
											"end": 13384,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 13264,
											"end": 13384,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 13264,
											"end": 13384,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13264,
											"end": 13384,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13264,
											"end": 13384,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13264,
											"end": 13384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 13264,
											"end": 13384,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13264,
											"end": 13384,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 13264,
											"end": 13384,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13264,
											"end": 13384,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13264,
											"end": 13384,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13264,
											"end": 13384,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13264,
											"end": 13384,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13264,
											"end": 13384,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13264,
											"end": 13384,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13264,
											"end": 13384,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 12951,
											"end": 13542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 12951,
											"end": 13542,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12951,
											"end": 13542,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 12951,
											"end": 13542,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13420,
											"end": 13531,
											"name": "PUSH",
											"source": 0,
											"value": "391930AB48E95A9040C849CC86E1B2F63C711A1F59D6E324CE775DC9A0051056"
										},
										{
											"begin": 13434,
											"end": 13444,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 13446,
											"end": 13452,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13446,
											"end": 13464,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13446,
											"end": 13464,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13446,
											"end": 13464,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13466,
											"end": 13472,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13466,
											"end": 13494,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13466,
											"end": 13494,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13466,
											"end": 13494,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13496,
											"end": 13502,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13496,
											"end": 13530,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 13496,
											"end": 13530,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13496,
											"end": 13530,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13420,
											"end": 13531,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13420,
											"end": 13531,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13420,
											"end": 13531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 13420,
											"end": 13531,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 13420,
											"end": 13531,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 13420,
											"end": 13531,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13420,
											"end": 13531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13420,
											"end": 13531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13420,
											"end": 13531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 13420,
											"end": 13531,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13420,
											"end": 13531,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 13420,
											"end": 13531,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13420,
											"end": 13531,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13420,
											"end": 13531,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13420,
											"end": 13531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13420,
											"end": 13531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13420,
											"end": 13531,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13420,
											"end": 13531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13420,
											"end": 13531,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 12951,
											"end": 13542,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 12951,
											"end": 13542,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12610,
											"end": 13548,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12610,
											"end": 13548,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 16807,
											"end": 17293,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 16807,
											"end": 17293,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16873,
											"end": 16880,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16938,
											"end": 16953,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 16912,
											"end": 16935,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 16912,
											"end": 16953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 16912,
											"end": 16953,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16912,
											"end": 16953,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16912,
											"end": 16953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 16912,
											"end": 16953,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16912,
											"end": 16953,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 16912,
											"end": 16953,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16896,
											"end": 16908,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 16896,
											"end": 16953,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 16892,
											"end": 17287,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 16892,
											"end": 17287,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17048,
											"end": 17061,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17048,
											"end": 17073,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17062,
											"end": 17072,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17048,
											"end": 17073,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17048,
											"end": 17073,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17048,
											"end": 17073,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17048,
											"end": 17073,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17048,
											"end": 17073,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17048,
											"end": 17073,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17048,
											"end": 17073,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17048,
											"end": 17073,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17048,
											"end": 17073,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17048,
											"end": 17073,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17048,
											"end": 17073,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17048,
											"end": 17073,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17048,
											"end": 17073,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17048,
											"end": 17073,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17048,
											"end": 17073,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17048,
											"end": 17073,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17041,
											"end": 17073,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17041,
											"end": 17073,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17041,
											"end": 17073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 17041,
											"end": 17073,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16892,
											"end": 17287,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 16892,
											"end": 17287,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17261,
											"end": 17276,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 17234,
											"end": 17257,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 17219,
											"end": 17231,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 17219,
											"end": 17257,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 17219,
											"end": 17257,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17219,
											"end": 17257,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17219,
											"end": 17257,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 17219,
											"end": 17257,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17219,
											"end": 17257,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 17219,
											"end": 17257,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17190,
											"end": 17203,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17190,
											"end": 17215,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17204,
											"end": 17214,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 17190,
											"end": 17215,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17190,
											"end": 17215,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17190,
											"end": 17215,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17190,
											"end": 17215,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17190,
											"end": 17215,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17190,
											"end": 17215,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17190,
											"end": 17215,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17190,
											"end": 17215,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17190,
											"end": 17215,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17190,
											"end": 17215,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17190,
											"end": 17215,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17190,
											"end": 17215,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17190,
											"end": 17215,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17190,
											"end": 17215,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17190,
											"end": 17215,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17190,
											"end": 17215,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17190,
											"end": 17258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 17190,
											"end": 17258,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17190,
											"end": 17258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17190,
											"end": 17258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 17190,
											"end": 17258,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17190,
											"end": 17258,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 17190,
											"end": 17258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17190,
											"end": 17276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 17190,
											"end": 17276,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17190,
											"end": 17276,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17190,
											"end": 17276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 17190,
											"end": 17276,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17190,
											"end": 17276,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 17190,
											"end": 17276,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17183,
											"end": 17276,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17183,
											"end": 17276,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16807,
											"end": 17293,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 16807,
											"end": 17293,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16807,
											"end": 17293,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16807,
											"end": 17293,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16807,
											"end": 17293,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16807,
											"end": 17293,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 59,
											"end": 146,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 59,
											"end": 146,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 59,
											"end": 146,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 59,
											"end": 146,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 59,
											"end": 146,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 289,
											"name": "tag",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 152,
											"end": 289,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 206,
											"end": 211,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 237,
											"end": 243,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 231,
											"end": 244,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 222,
											"end": 244,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 222,
											"end": 244,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 253,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 277,
											"end": 282,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 253,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "tag",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 212,
											"end": 289,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 212,
											"end": 289,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 212,
											"end": 289,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 212,
											"end": 289,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 212,
											"end": 289,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 295,
											"end": 432,
											"name": "tag",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 295,
											"end": 432,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 340,
											"end": 345,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 384,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 365,
											"end": 385,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 356,
											"end": 385,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 356,
											"end": 385,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 394,
											"end": 426,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 420,
											"end": 425,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 394,
											"end": 426,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "252"
										},
										{
											"begin": 394,
											"end": 426,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 394,
											"end": 426,
											"name": "tag",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 394,
											"end": 426,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 346,
											"end": 432,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 346,
											"end": 432,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 346,
											"end": 432,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 346,
											"end": 432,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 346,
											"end": 432,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 438,
											"end": 581,
											"name": "tag",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 438,
											"end": 581,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 495,
											"end": 500,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 532,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 520,
											"end": 533,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 511,
											"end": 533,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 511,
											"end": 533,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 542,
											"end": 575,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 569,
											"end": 574,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 542,
											"end": 575,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 542,
											"end": 575,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 542,
											"end": 575,
											"name": "tag",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 542,
											"end": 575,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 501,
											"end": 581,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 501,
											"end": 581,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 501,
											"end": 581,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 501,
											"end": 581,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 501,
											"end": 581,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 587,
											"end": 724,
											"name": "tag",
											"source": 2,
											"value": "257"
										},
										{
											"begin": 587,
											"end": 724,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 632,
											"end": 637,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 670,
											"end": 676,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 657,
											"end": 677,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 648,
											"end": 677,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 648,
											"end": 677,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 686,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 712,
											"end": 717,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 686,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "260"
										},
										{
											"begin": 686,
											"end": 718,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 686,
											"end": 718,
											"name": "tag",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 686,
											"end": 718,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 638,
											"end": 724,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 638,
											"end": 724,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 638,
											"end": 724,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 638,
											"end": 724,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 638,
											"end": 724,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 730,
											"end": 992,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 730,
											"end": 992,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 789,
											"end": 795,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 838,
											"end": 840,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 826,
											"end": 835,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 817,
											"end": 824,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 813,
											"end": 836,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 809,
											"end": 841,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 806,
											"end": 808,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 806,
											"end": 808,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 806,
											"end": 808,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 854,
											"end": 855,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 851,
											"end": 852,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 844,
											"end": 856,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 806,
											"end": 808,
											"name": "tag",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 806,
											"end": 808,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 897,
											"end": 898,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 922,
											"end": 975,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 967,
											"end": 974,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 958,
											"end": 964,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 947,
											"end": 956,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 943,
											"end": 965,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 922,
											"end": 975,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 922,
											"end": 975,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 922,
											"end": 975,
											"name": "tag",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 922,
											"end": 975,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 912,
											"end": 975,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 912,
											"end": 975,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 868,
											"end": 985,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 796,
											"end": 992,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 796,
											"end": 992,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 796,
											"end": 992,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 796,
											"end": 992,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 796,
											"end": 992,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 998,
											"end": 1405,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 998,
											"end": 1405,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1066,
											"end": 1072,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1080,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1125,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1111,
											"end": 1120,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1102,
											"end": 1109,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1121,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1094,
											"end": 1126,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 1091,
											"end": 1093,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1091,
											"end": 1093,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 1091,
											"end": 1093,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1140,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1137,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1129,
											"end": 1141,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1091,
											"end": 1093,
											"name": "tag",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 1091,
											"end": 1093,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1182,
											"end": 1183,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 1260,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 1252,
											"end": 1259,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1243,
											"end": 1249,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1232,
											"end": 1241,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1250,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1207,
											"end": 1260,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 1207,
											"end": 1260,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1207,
											"end": 1260,
											"name": "tag",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 1207,
											"end": 1260,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1260,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1260,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1153,
											"end": 1270,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1309,
											"end": 1311,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1335,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 1380,
											"end": 1387,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1371,
											"end": 1377,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1360,
											"end": 1369,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1356,
											"end": 1378,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1335,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 1335,
											"end": 1388,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1335,
											"end": 1388,
											"name": "tag",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 1335,
											"end": 1388,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1325,
											"end": 1388,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1325,
											"end": 1388,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1280,
											"end": 1398,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1081,
											"end": 1405,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1081,
											"end": 1405,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1081,
											"end": 1405,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1081,
											"end": 1405,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1081,
											"end": 1405,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1081,
											"end": 1405,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1411,
											"end": 1689,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 1411,
											"end": 1689,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1527,
											"end": 1529,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1515,
											"end": 1524,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1506,
											"end": 1513,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1502,
											"end": 1525,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1498,
											"end": 1530,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 1497,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 1497,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 1495,
											"end": 1497,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1543,
											"end": 1544,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1540,
											"end": 1541,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1533,
											"end": 1545,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 1497,
											"name": "tag",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 1495,
											"end": 1497,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1586,
											"end": 1587,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1611,
											"end": 1672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 1664,
											"end": 1671,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1655,
											"end": 1661,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1644,
											"end": 1653,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1640,
											"end": 1662,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1611,
											"end": 1672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 1611,
											"end": 1672,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1611,
											"end": 1672,
											"name": "tag",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 1611,
											"end": 1672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1601,
											"end": 1672,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1601,
											"end": 1672,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1557,
											"end": 1682,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1485,
											"end": 1689,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1485,
											"end": 1689,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1485,
											"end": 1689,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1485,
											"end": 1689,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1485,
											"end": 1689,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1695,
											"end": 1979,
											"name": "tag",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 1695,
											"end": 1979,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1765,
											"end": 1771,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1814,
											"end": 1816,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1802,
											"end": 1811,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1793,
											"end": 1800,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1789,
											"end": 1812,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1785,
											"end": 1817,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 1782,
											"end": 1784,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1782,
											"end": 1784,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "272"
										},
										{
											"begin": 1782,
											"end": 1784,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1831,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1827,
											"end": 1828,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1820,
											"end": 1832,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1782,
											"end": 1784,
											"name": "tag",
											"source": 2,
											"value": "272"
										},
										{
											"begin": 1782,
											"end": 1784,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1873,
											"end": 1874,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1898,
											"end": 1962,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 1954,
											"end": 1961,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1945,
											"end": 1951,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1934,
											"end": 1943,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1930,
											"end": 1952,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1898,
											"end": 1962,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 1898,
											"end": 1962,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1898,
											"end": 1962,
											"name": "tag",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 1898,
											"end": 1962,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1888,
											"end": 1962,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1888,
											"end": 1962,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1844,
											"end": 1972,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1772,
											"end": 1979,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1772,
											"end": 1979,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1772,
											"end": 1979,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1772,
											"end": 1979,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1772,
											"end": 1979,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1985,
											"end": 2388,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1985,
											"end": 2388,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2051,
											"end": 2057,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2059,
											"end": 2065,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2108,
											"end": 2110,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2096,
											"end": 2105,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2087,
											"end": 2094,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2083,
											"end": 2106,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2079,
											"end": 2111,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 2076,
											"end": 2078,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2076,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "275"
										},
										{
											"begin": 2076,
											"end": 2078,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2124,
											"end": 2125,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2121,
											"end": 2122,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2114,
											"end": 2126,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2076,
											"end": 2078,
											"name": "tag",
											"source": 2,
											"value": "275"
										},
										{
											"begin": 2076,
											"end": 2078,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2167,
											"end": 2168,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2192,
											"end": 2244,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "276"
										},
										{
											"begin": 2236,
											"end": 2243,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2227,
											"end": 2233,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2216,
											"end": 2225,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2212,
											"end": 2234,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2192,
											"end": 2244,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "257"
										},
										{
											"begin": 2192,
											"end": 2244,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2192,
											"end": 2244,
											"name": "tag",
											"source": 2,
											"value": "276"
										},
										{
											"begin": 2192,
											"end": 2244,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2182,
											"end": 2244,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2182,
											"end": 2244,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2138,
											"end": 2254,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2295,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2319,
											"end": 2371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 2363,
											"end": 2370,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2354,
											"end": 2360,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2343,
											"end": 2352,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2339,
											"end": 2361,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2319,
											"end": 2371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 2319,
											"end": 2371,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2319,
											"end": 2371,
											"name": "tag",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 2319,
											"end": 2371,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2371,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2371,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2264,
											"end": 2381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2066,
											"end": 2388,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2066,
											"end": 2388,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2066,
											"end": 2388,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2066,
											"end": 2388,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2066,
											"end": 2388,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2066,
											"end": 2388,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2394,
											"end": 2512,
											"name": "tag",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 2394,
											"end": 2512,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2481,
											"end": 2505,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "280"
										},
										{
											"begin": 2499,
											"end": 2504,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2481,
											"end": 2505,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "281"
										},
										{
											"begin": 2481,
											"end": 2505,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2481,
											"end": 2505,
											"name": "tag",
											"source": 2,
											"value": "280"
										},
										{
											"begin": 2481,
											"end": 2505,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2476,
											"end": 2479,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2469,
											"end": 2506,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2459,
											"end": 2512,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2459,
											"end": 2512,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2459,
											"end": 2512,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2518,
											"end": 2677,
											"name": "tag",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 2518,
											"end": 2677,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2619,
											"end": 2670,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 2664,
											"end": 2669,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2619,
											"end": 2670,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "285"
										},
										{
											"begin": 2619,
											"end": 2670,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2619,
											"end": 2670,
											"name": "tag",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 2619,
											"end": 2670,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2614,
											"end": 2617,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2607,
											"end": 2671,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2597,
											"end": 2677,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2597,
											"end": 2677,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2597,
											"end": 2677,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2683,
											"end": 3049,
											"name": "tag",
											"source": 2,
											"value": "286"
										},
										{
											"begin": 2683,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2825,
											"end": 2828,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2846,
											"end": 2913,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "288"
										},
										{
											"begin": 2910,
											"end": 2912,
											"name": "PUSH",
											"source": 2,
											"value": "1D"
										},
										{
											"begin": 2905,
											"end": 2908,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2846,
											"end": 2913,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 2846,
											"end": 2913,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2846,
											"end": 2913,
											"name": "tag",
											"source": 2,
											"value": "288"
										},
										{
											"begin": 2846,
											"end": 2913,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2913,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2913,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2922,
											"end": 3015,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "290"
										},
										{
											"begin": 3011,
											"end": 3014,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2922,
											"end": 3015,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "291"
										},
										{
											"begin": 2922,
											"end": 3015,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2922,
											"end": 3015,
											"name": "tag",
											"source": 2,
											"value": "290"
										},
										{
											"begin": 2922,
											"end": 3015,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3040,
											"end": 3042,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3035,
											"end": 3038,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3031,
											"end": 3043,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3024,
											"end": 3043,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3024,
											"end": 3043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2829,
											"end": 3049,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2829,
											"end": 3049,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2829,
											"end": 3049,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2829,
											"end": 3049,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3055,
											"end": 3421,
											"name": "tag",
											"source": 2,
											"value": "292"
										},
										{
											"begin": 3055,
											"end": 3421,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3197,
											"end": 3200,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3218,
											"end": 3285,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "294"
										},
										{
											"begin": 3282,
											"end": 3284,
											"name": "PUSH",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 3277,
											"end": 3280,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3218,
											"end": 3285,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 3218,
											"end": 3285,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3218,
											"end": 3285,
											"name": "tag",
											"source": 2,
											"value": "294"
										},
										{
											"begin": 3218,
											"end": 3285,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3211,
											"end": 3285,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3211,
											"end": 3285,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3294,
											"end": 3387,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "295"
										},
										{
											"begin": 3383,
											"end": 3386,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3294,
											"end": 3387,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "296"
										},
										{
											"begin": 3294,
											"end": 3387,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3294,
											"end": 3387,
											"name": "tag",
											"source": 2,
											"value": "295"
										},
										{
											"begin": 3294,
											"end": 3387,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3412,
											"end": 3414,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3407,
											"end": 3410,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3403,
											"end": 3415,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3396,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3396,
											"end": 3415,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3201,
											"end": 3421,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3201,
											"end": 3421,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3201,
											"end": 3421,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3201,
											"end": 3421,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3427,
											"end": 3793,
											"name": "tag",
											"source": 2,
											"value": "297"
										},
										{
											"begin": 3427,
											"end": 3793,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3569,
											"end": 3572,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3590,
											"end": 3657,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "299"
										},
										{
											"begin": 3654,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "2D"
										},
										{
											"begin": 3649,
											"end": 3652,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3590,
											"end": 3657,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 3590,
											"end": 3657,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3590,
											"end": 3657,
											"name": "tag",
											"source": 2,
											"value": "299"
										},
										{
											"begin": 3590,
											"end": 3657,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3657,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3657,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3666,
											"end": 3759,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "300"
										},
										{
											"begin": 3755,
											"end": 3758,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3666,
											"end": 3759,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "301"
										},
										{
											"begin": 3666,
											"end": 3759,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3666,
											"end": 3759,
											"name": "tag",
											"source": 2,
											"value": "300"
										},
										{
											"begin": 3666,
											"end": 3759,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3784,
											"end": 3786,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3779,
											"end": 3782,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3775,
											"end": 3787,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3768,
											"end": 3787,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3768,
											"end": 3787,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3573,
											"end": 3793,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3573,
											"end": 3793,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3573,
											"end": 3793,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3573,
											"end": 3793,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3799,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "302"
										},
										{
											"begin": 3799,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3944,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3962,
											"end": 4029,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "304"
										},
										{
											"begin": 4026,
											"end": 4028,
											"name": "PUSH",
											"source": 2,
											"value": "1A"
										},
										{
											"begin": 4021,
											"end": 4024,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3962,
											"end": 4029,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 3962,
											"end": 4029,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3962,
											"end": 4029,
											"name": "tag",
											"source": 2,
											"value": "304"
										},
										{
											"begin": 3962,
											"end": 4029,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3955,
											"end": 4029,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3955,
											"end": 4029,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4038,
											"end": 4131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "305"
										},
										{
											"begin": 4127,
											"end": 4130,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4038,
											"end": 4131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "306"
										},
										{
											"begin": 4038,
											"end": 4131,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4038,
											"end": 4131,
											"name": "tag",
											"source": 2,
											"value": "305"
										},
										{
											"begin": 4038,
											"end": 4131,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4156,
											"end": 4158,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4151,
											"end": 4154,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4147,
											"end": 4159,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4140,
											"end": 4159,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4140,
											"end": 4159,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3945,
											"end": 4165,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3945,
											"end": 4165,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3945,
											"end": 4165,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3945,
											"end": 4165,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4171,
											"end": 4537,
											"name": "tag",
											"source": 2,
											"value": "307"
										},
										{
											"begin": 4171,
											"end": 4537,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4313,
											"end": 4316,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4334,
											"end": 4401,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "309"
										},
										{
											"begin": 4398,
											"end": 4400,
											"name": "PUSH",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 4393,
											"end": 4396,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4334,
											"end": 4401,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 4334,
											"end": 4401,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4334,
											"end": 4401,
											"name": "tag",
											"source": 2,
											"value": "309"
										},
										{
											"begin": 4334,
											"end": 4401,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4327,
											"end": 4401,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4327,
											"end": 4401,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4410,
											"end": 4503,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "310"
										},
										{
											"begin": 4499,
											"end": 4502,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4410,
											"end": 4503,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "311"
										},
										{
											"begin": 4410,
											"end": 4503,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4410,
											"end": 4503,
											"name": "tag",
											"source": 2,
											"value": "310"
										},
										{
											"begin": 4410,
											"end": 4503,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4528,
											"end": 4530,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 4523,
											"end": 4526,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4519,
											"end": 4531,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4512,
											"end": 4531,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4512,
											"end": 4531,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4317,
											"end": 4537,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4317,
											"end": 4537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4317,
											"end": 4537,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4317,
											"end": 4537,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4543,
											"end": 4909,
											"name": "tag",
											"source": 2,
											"value": "312"
										},
										{
											"begin": 4543,
											"end": 4909,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4685,
											"end": 4688,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4706,
											"end": 4773,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "314"
										},
										{
											"begin": 4770,
											"end": 4772,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4765,
											"end": 4768,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4706,
											"end": 4773,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 4706,
											"end": 4773,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4706,
											"end": 4773,
											"name": "tag",
											"source": 2,
											"value": "314"
										},
										{
											"begin": 4706,
											"end": 4773,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4699,
											"end": 4773,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4699,
											"end": 4773,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4782,
											"end": 4875,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "315"
										},
										{
											"begin": 4871,
											"end": 4874,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4782,
											"end": 4875,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "316"
										},
										{
											"begin": 4782,
											"end": 4875,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4782,
											"end": 4875,
											"name": "tag",
											"source": 2,
											"value": "315"
										},
										{
											"begin": 4782,
											"end": 4875,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4900,
											"end": 4902,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4895,
											"end": 4898,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4891,
											"end": 4903,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4884,
											"end": 4903,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4884,
											"end": 4903,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4689,
											"end": 4909,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4689,
											"end": 4909,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4689,
											"end": 4909,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4689,
											"end": 4909,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4915,
											"end": 5281,
											"name": "tag",
											"source": 2,
											"value": "317"
										},
										{
											"begin": 4915,
											"end": 5281,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5057,
											"end": 5060,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5078,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "319"
										},
										{
											"begin": 5142,
											"end": 5144,
											"name": "PUSH",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 5137,
											"end": 5140,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5078,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 5078,
											"end": 5145,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5078,
											"end": 5145,
											"name": "tag",
											"source": 2,
											"value": "319"
										},
										{
											"begin": 5078,
											"end": 5145,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5071,
											"end": 5145,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5071,
											"end": 5145,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5154,
											"end": 5247,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "320"
										},
										{
											"begin": 5243,
											"end": 5246,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5154,
											"end": 5247,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "321"
										},
										{
											"begin": 5154,
											"end": 5247,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5154,
											"end": 5247,
											"name": "tag",
											"source": 2,
											"value": "320"
										},
										{
											"begin": 5154,
											"end": 5247,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5272,
											"end": 5274,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5267,
											"end": 5270,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5263,
											"end": 5275,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5256,
											"end": 5275,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5256,
											"end": 5275,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5061,
											"end": 5281,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5061,
											"end": 5281,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5061,
											"end": 5281,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5061,
											"end": 5281,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5287,
											"end": 5653,
											"name": "tag",
											"source": 2,
											"value": "322"
										},
										{
											"begin": 5287,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5429,
											"end": 5432,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5450,
											"end": 5517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "324"
										},
										{
											"begin": 5514,
											"end": 5516,
											"name": "PUSH",
											"source": 2,
											"value": "F"
										},
										{
											"begin": 5509,
											"end": 5512,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5450,
											"end": 5517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 5450,
											"end": 5517,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5450,
											"end": 5517,
											"name": "tag",
											"source": 2,
											"value": "324"
										},
										{
											"begin": 5450,
											"end": 5517,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5443,
											"end": 5517,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5443,
											"end": 5517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5526,
											"end": 5619,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "325"
										},
										{
											"begin": 5615,
											"end": 5618,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5526,
											"end": 5619,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "326"
										},
										{
											"begin": 5526,
											"end": 5619,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5526,
											"end": 5619,
											"name": "tag",
											"source": 2,
											"value": "325"
										},
										{
											"begin": 5526,
											"end": 5619,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5644,
											"end": 5646,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5639,
											"end": 5642,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5635,
											"end": 5647,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5628,
											"end": 5647,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5628,
											"end": 5647,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5433,
											"end": 5653,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5433,
											"end": 5653,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5433,
											"end": 5653,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5433,
											"end": 5653,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5659,
											"end": 6025,
											"name": "tag",
											"source": 2,
											"value": "327"
										},
										{
											"begin": 5659,
											"end": 6025,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5801,
											"end": 5804,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5822,
											"end": 5889,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "329"
										},
										{
											"begin": 5886,
											"end": 5888,
											"name": "PUSH",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 5881,
											"end": 5884,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5822,
											"end": 5889,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 5822,
											"end": 5889,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5822,
											"end": 5889,
											"name": "tag",
											"source": 2,
											"value": "329"
										},
										{
											"begin": 5822,
											"end": 5889,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5815,
											"end": 5889,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5815,
											"end": 5889,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5898,
											"end": 5991,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "330"
										},
										{
											"begin": 5987,
											"end": 5990,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5898,
											"end": 5991,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "331"
										},
										{
											"begin": 5898,
											"end": 5991,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5898,
											"end": 5991,
											"name": "tag",
											"source": 2,
											"value": "330"
										},
										{
											"begin": 5898,
											"end": 5991,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6016,
											"end": 6018,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6011,
											"end": 6014,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6007,
											"end": 6019,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6000,
											"end": 6019,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6000,
											"end": 6019,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5805,
											"end": 6025,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5805,
											"end": 6025,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5805,
											"end": 6025,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5805,
											"end": 6025,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 6031,
											"end": 6397,
											"name": "tag",
											"source": 2,
											"value": "332"
										},
										{
											"begin": 6031,
											"end": 6397,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6173,
											"end": 6176,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6194,
											"end": 6261,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "334"
										},
										{
											"begin": 6258,
											"end": 6260,
											"name": "PUSH",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 6253,
											"end": 6256,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6194,
											"end": 6261,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 6194,
											"end": 6261,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6194,
											"end": 6261,
											"name": "tag",
											"source": 2,
											"value": "334"
										},
										{
											"begin": 6194,
											"end": 6261,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6187,
											"end": 6261,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6187,
											"end": 6261,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6270,
											"end": 6363,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "335"
										},
										{
											"begin": 6359,
											"end": 6362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6270,
											"end": 6363,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "336"
										},
										{
											"begin": 6270,
											"end": 6363,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6270,
											"end": 6363,
											"name": "tag",
											"source": 2,
											"value": "335"
										},
										{
											"begin": 6270,
											"end": 6363,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6388,
											"end": 6390,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6383,
											"end": 6386,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6379,
											"end": 6391,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6372,
											"end": 6391,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6372,
											"end": 6391,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6177,
											"end": 6397,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6177,
											"end": 6397,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6177,
											"end": 6397,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6177,
											"end": 6397,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 6403,
											"end": 6769,
											"name": "tag",
											"source": 2,
											"value": "337"
										},
										{
											"begin": 6403,
											"end": 6769,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6545,
											"end": 6548,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6566,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "339"
										},
										{
											"begin": 6630,
											"end": 6632,
											"name": "PUSH",
											"source": 2,
											"value": "3C"
										},
										{
											"begin": 6625,
											"end": 6628,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6566,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 6566,
											"end": 6633,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6566,
											"end": 6633,
											"name": "tag",
											"source": 2,
											"value": "339"
										},
										{
											"begin": 6566,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6559,
											"end": 6633,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6559,
											"end": 6633,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6642,
											"end": 6735,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "340"
										},
										{
											"begin": 6731,
											"end": 6734,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6642,
											"end": 6735,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "341"
										},
										{
											"begin": 6642,
											"end": 6735,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6642,
											"end": 6735,
											"name": "tag",
											"source": 2,
											"value": "340"
										},
										{
											"begin": 6642,
											"end": 6735,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6760,
											"end": 6762,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6755,
											"end": 6758,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6751,
											"end": 6763,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6744,
											"end": 6763,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6744,
											"end": 6763,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6549,
											"end": 6769,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6549,
											"end": 6769,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6549,
											"end": 6769,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6549,
											"end": 6769,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 6775,
											"end": 7141,
											"name": "tag",
											"source": 2,
											"value": "342"
										},
										{
											"begin": 6775,
											"end": 7141,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6917,
											"end": 6920,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6938,
											"end": 7005,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "344"
										},
										{
											"begin": 7002,
											"end": 7004,
											"name": "PUSH",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 6997,
											"end": 7000,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6938,
											"end": 7005,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 6938,
											"end": 7005,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6938,
											"end": 7005,
											"name": "tag",
											"source": 2,
											"value": "344"
										},
										{
											"begin": 6938,
											"end": 7005,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6931,
											"end": 7005,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6931,
											"end": 7005,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7014,
											"end": 7107,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "345"
										},
										{
											"begin": 7103,
											"end": 7106,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7014,
											"end": 7107,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "346"
										},
										{
											"begin": 7014,
											"end": 7107,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7014,
											"end": 7107,
											"name": "tag",
											"source": 2,
											"value": "345"
										},
										{
											"begin": 7014,
											"end": 7107,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7132,
											"end": 7134,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7127,
											"end": 7130,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7123,
											"end": 7135,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7116,
											"end": 7135,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7116,
											"end": 7135,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6921,
											"end": 7141,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6921,
											"end": 7141,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6921,
											"end": 7141,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6921,
											"end": 7141,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7147,
											"end": 7513,
											"name": "tag",
											"source": 2,
											"value": "347"
										},
										{
											"begin": 7147,
											"end": 7513,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7289,
											"end": 7292,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7310,
											"end": 7377,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "349"
										},
										{
											"begin": 7374,
											"end": 7376,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7369,
											"end": 7372,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7310,
											"end": 7377,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 7310,
											"end": 7377,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7310,
											"end": 7377,
											"name": "tag",
											"source": 2,
											"value": "349"
										},
										{
											"begin": 7310,
											"end": 7377,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7303,
											"end": 7377,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7303,
											"end": 7377,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7386,
											"end": 7479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "350"
										},
										{
											"begin": 7475,
											"end": 7478,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7386,
											"end": 7479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "351"
										},
										{
											"begin": 7386,
											"end": 7479,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7386,
											"end": 7479,
											"name": "tag",
											"source": 2,
											"value": "350"
										},
										{
											"begin": 7386,
											"end": 7479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7504,
											"end": 7506,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7499,
											"end": 7502,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7495,
											"end": 7507,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7488,
											"end": 7507,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7488,
											"end": 7507,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7293,
											"end": 7513,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7293,
											"end": 7513,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7293,
											"end": 7513,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7293,
											"end": 7513,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7519,
											"end": 7885,
											"name": "tag",
											"source": 2,
											"value": "352"
										},
										{
											"begin": 7519,
											"end": 7885,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7661,
											"end": 7664,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7682,
											"end": 7749,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "354"
										},
										{
											"begin": 7746,
											"end": 7748,
											"name": "PUSH",
											"source": 2,
											"value": "2B"
										},
										{
											"begin": 7741,
											"end": 7744,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7682,
											"end": 7749,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 7682,
											"end": 7749,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7682,
											"end": 7749,
											"name": "tag",
											"source": 2,
											"value": "354"
										},
										{
											"begin": 7682,
											"end": 7749,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7675,
											"end": 7749,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7675,
											"end": 7749,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7758,
											"end": 7851,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "355"
										},
										{
											"begin": 7847,
											"end": 7850,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7758,
											"end": 7851,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "356"
										},
										{
											"begin": 7758,
											"end": 7851,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7758,
											"end": 7851,
											"name": "tag",
											"source": 2,
											"value": "355"
										},
										{
											"begin": 7758,
											"end": 7851,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7876,
											"end": 7878,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7871,
											"end": 7874,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7867,
											"end": 7879,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7860,
											"end": 7879,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7860,
											"end": 7879,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7665,
											"end": 7885,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7665,
											"end": 7885,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7665,
											"end": 7885,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7665,
											"end": 7885,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7891,
											"end": 8257,
											"name": "tag",
											"source": 2,
											"value": "357"
										},
										{
											"begin": 7891,
											"end": 8257,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8033,
											"end": 8036,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8054,
											"end": 8121,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "359"
										},
										{
											"begin": 8118,
											"end": 8120,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 8113,
											"end": 8116,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8054,
											"end": 8121,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 8054,
											"end": 8121,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8054,
											"end": 8121,
											"name": "tag",
											"source": 2,
											"value": "359"
										},
										{
											"begin": 8054,
											"end": 8121,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8047,
											"end": 8121,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8047,
											"end": 8121,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8130,
											"end": 8223,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "360"
										},
										{
											"begin": 8219,
											"end": 8222,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8130,
											"end": 8223,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "361"
										},
										{
											"begin": 8130,
											"end": 8223,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8130,
											"end": 8223,
											"name": "tag",
											"source": 2,
											"value": "360"
										},
										{
											"begin": 8130,
											"end": 8223,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8248,
											"end": 8250,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8243,
											"end": 8246,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8239,
											"end": 8251,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8232,
											"end": 8251,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8232,
											"end": 8251,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8037,
											"end": 8257,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8037,
											"end": 8257,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8037,
											"end": 8257,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8037,
											"end": 8257,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 8263,
											"end": 8629,
											"name": "tag",
											"source": 2,
											"value": "362"
										},
										{
											"begin": 8263,
											"end": 8629,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8405,
											"end": 8408,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8426,
											"end": 8493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "364"
										},
										{
											"begin": 8490,
											"end": 8492,
											"name": "PUSH",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 8485,
											"end": 8488,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8426,
											"end": 8493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 8426,
											"end": 8493,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8426,
											"end": 8493,
											"name": "tag",
											"source": 2,
											"value": "364"
										},
										{
											"begin": 8426,
											"end": 8493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8419,
											"end": 8493,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8419,
											"end": 8493,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8502,
											"end": 8595,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "365"
										},
										{
											"begin": 8591,
											"end": 8594,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8502,
											"end": 8595,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "366"
										},
										{
											"begin": 8502,
											"end": 8595,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8502,
											"end": 8595,
											"name": "tag",
											"source": 2,
											"value": "365"
										},
										{
											"begin": 8502,
											"end": 8595,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8620,
											"end": 8622,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8615,
											"end": 8618,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8611,
											"end": 8623,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8604,
											"end": 8623,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8604,
											"end": 8623,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8409,
											"end": 8629,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8409,
											"end": 8629,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8409,
											"end": 8629,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8409,
											"end": 8629,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 8635,
											"end": 9001,
											"name": "tag",
											"source": 2,
											"value": "367"
										},
										{
											"begin": 8635,
											"end": 9001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8777,
											"end": 8780,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8798,
											"end": 8865,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "369"
										},
										{
											"begin": 8862,
											"end": 8864,
											"name": "PUSH",
											"source": 2,
											"value": "1B"
										},
										{
											"begin": 8857,
											"end": 8860,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8798,
											"end": 8865,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 8798,
											"end": 8865,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8798,
											"end": 8865,
											"name": "tag",
											"source": 2,
											"value": "369"
										},
										{
											"begin": 8798,
											"end": 8865,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8791,
											"end": 8865,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8791,
											"end": 8865,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8874,
											"end": 8967,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "370"
										},
										{
											"begin": 8963,
											"end": 8966,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8874,
											"end": 8967,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "371"
										},
										{
											"begin": 8874,
											"end": 8967,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8874,
											"end": 8967,
											"name": "tag",
											"source": 2,
											"value": "370"
										},
										{
											"begin": 8874,
											"end": 8967,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8992,
											"end": 8994,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8987,
											"end": 8990,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8983,
											"end": 8995,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8976,
											"end": 8995,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8976,
											"end": 8995,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8781,
											"end": 9001,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8781,
											"end": 9001,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8781,
											"end": 9001,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8781,
											"end": 9001,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 9007,
											"end": 9373,
											"name": "tag",
											"source": 2,
											"value": "372"
										},
										{
											"begin": 9007,
											"end": 9373,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9149,
											"end": 9152,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9170,
											"end": 9237,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "374"
										},
										{
											"begin": 9234,
											"end": 9236,
											"name": "PUSH",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 9229,
											"end": 9232,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9170,
											"end": 9237,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 9170,
											"end": 9237,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9170,
											"end": 9237,
											"name": "tag",
											"source": 2,
											"value": "374"
										},
										{
											"begin": 9170,
											"end": 9237,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9163,
											"end": 9237,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9163,
											"end": 9237,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9246,
											"end": 9339,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "375"
										},
										{
											"begin": 9335,
											"end": 9338,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9246,
											"end": 9339,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "376"
										},
										{
											"begin": 9246,
											"end": 9339,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9246,
											"end": 9339,
											"name": "tag",
											"source": 2,
											"value": "375"
										},
										{
											"begin": 9246,
											"end": 9339,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9364,
											"end": 9366,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9359,
											"end": 9362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9355,
											"end": 9367,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9348,
											"end": 9367,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9348,
											"end": 9367,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9153,
											"end": 9373,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9153,
											"end": 9373,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9153,
											"end": 9373,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9153,
											"end": 9373,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 9379,
											"end": 9745,
											"name": "tag",
											"source": 2,
											"value": "377"
										},
										{
											"begin": 9379,
											"end": 9745,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9521,
											"end": 9524,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9542,
											"end": 9609,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "379"
										},
										{
											"begin": 9606,
											"end": 9608,
											"name": "PUSH",
											"source": 2,
											"value": "2B"
										},
										{
											"begin": 9601,
											"end": 9604,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9542,
											"end": 9609,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 9542,
											"end": 9609,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9542,
											"end": 9609,
											"name": "tag",
											"source": 2,
											"value": "379"
										},
										{
											"begin": 9542,
											"end": 9609,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9535,
											"end": 9609,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9535,
											"end": 9609,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9618,
											"end": 9711,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "380"
										},
										{
											"begin": 9707,
											"end": 9710,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9618,
											"end": 9711,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "381"
										},
										{
											"begin": 9618,
											"end": 9711,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9618,
											"end": 9711,
											"name": "tag",
											"source": 2,
											"value": "380"
										},
										{
											"begin": 9618,
											"end": 9711,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9736,
											"end": 9738,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9731,
											"end": 9734,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9727,
											"end": 9739,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9720,
											"end": 9739,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9720,
											"end": 9739,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9525,
											"end": 9745,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9525,
											"end": 9745,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9525,
											"end": 9745,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9525,
											"end": 9745,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 9751,
											"end": 10117,
											"name": "tag",
											"source": 2,
											"value": "382"
										},
										{
											"begin": 9751,
											"end": 10117,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9893,
											"end": 9896,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9914,
											"end": 9981,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "384"
										},
										{
											"begin": 9978,
											"end": 9980,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 9973,
											"end": 9976,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9914,
											"end": 9981,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 9914,
											"end": 9981,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9914,
											"end": 9981,
											"name": "tag",
											"source": 2,
											"value": "384"
										},
										{
											"begin": 9914,
											"end": 9981,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9907,
											"end": 9981,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9907,
											"end": 9981,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9990,
											"end": 10083,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "385"
										},
										{
											"begin": 10079,
											"end": 10082,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9990,
											"end": 10083,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "386"
										},
										{
											"begin": 9990,
											"end": 10083,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9990,
											"end": 10083,
											"name": "tag",
											"source": 2,
											"value": "385"
										},
										{
											"begin": 9990,
											"end": 10083,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10108,
											"end": 10110,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10103,
											"end": 10106,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10099,
											"end": 10111,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10092,
											"end": 10111,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10092,
											"end": 10111,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9897,
											"end": 10117,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9897,
											"end": 10117,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9897,
											"end": 10117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9897,
											"end": 10117,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 10123,
											"end": 10489,
											"name": "tag",
											"source": 2,
											"value": "387"
										},
										{
											"begin": 10123,
											"end": 10489,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10265,
											"end": 10268,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10286,
											"end": 10353,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "389"
										},
										{
											"begin": 10350,
											"end": 10352,
											"name": "PUSH",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 10345,
											"end": 10348,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10286,
											"end": 10353,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 10286,
											"end": 10353,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10286,
											"end": 10353,
											"name": "tag",
											"source": 2,
											"value": "389"
										},
										{
											"begin": 10286,
											"end": 10353,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10279,
											"end": 10353,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10279,
											"end": 10353,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10362,
											"end": 10455,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "390"
										},
										{
											"begin": 10451,
											"end": 10454,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10362,
											"end": 10455,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "391"
										},
										{
											"begin": 10362,
											"end": 10455,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10362,
											"end": 10455,
											"name": "tag",
											"source": 2,
											"value": "390"
										},
										{
											"begin": 10362,
											"end": 10455,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10480,
											"end": 10482,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10475,
											"end": 10478,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10471,
											"end": 10483,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10464,
											"end": 10483,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10464,
											"end": 10483,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10269,
											"end": 10489,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10269,
											"end": 10489,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10269,
											"end": 10489,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10269,
											"end": 10489,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 10495,
											"end": 10613,
											"name": "tag",
											"source": 2,
											"value": "392"
										},
										{
											"begin": 10495,
											"end": 10613,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10582,
											"end": 10606,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "394"
										},
										{
											"begin": 10600,
											"end": 10605,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10582,
											"end": 10606,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "395"
										},
										{
											"begin": 10582,
											"end": 10606,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10582,
											"end": 10606,
											"name": "tag",
											"source": 2,
											"value": "394"
										},
										{
											"begin": 10582,
											"end": 10606,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10577,
											"end": 10580,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10570,
											"end": 10607,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10560,
											"end": 10613,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10560,
											"end": 10613,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10560,
											"end": 10613,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 10619,
											"end": 10750,
											"name": "tag",
											"source": 2,
											"value": "396"
										},
										{
											"begin": 10619,
											"end": 10750,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10706,
											"end": 10743,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "398"
										},
										{
											"begin": 10737,
											"end": 10742,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10706,
											"end": 10743,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "399"
										},
										{
											"begin": 10706,
											"end": 10743,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10706,
											"end": 10743,
											"name": "tag",
											"source": 2,
											"value": "398"
										},
										{
											"begin": 10706,
											"end": 10743,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10701,
											"end": 10704,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10694,
											"end": 10744,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10684,
											"end": 10750,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10684,
											"end": 10750,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10684,
											"end": 10750,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 10756,
											"end": 10871,
											"name": "tag",
											"source": 2,
											"value": "400"
										},
										{
											"begin": 10756,
											"end": 10871,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10841,
											"end": 10864,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "402"
										},
										{
											"begin": 10858,
											"end": 10863,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10841,
											"end": 10864,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "403"
										},
										{
											"begin": 10841,
											"end": 10864,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10841,
											"end": 10864,
											"name": "tag",
											"source": 2,
											"value": "402"
										},
										{
											"begin": 10841,
											"end": 10864,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10836,
											"end": 10839,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10829,
											"end": 10865,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10819,
											"end": 10871,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10819,
											"end": 10871,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10819,
											"end": 10871,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 10877,
											"end": 11006,
											"name": "tag",
											"source": 2,
											"value": "404"
										},
										{
											"begin": 10877,
											"end": 11006,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10963,
											"end": 10999,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "406"
										},
										{
											"begin": 10993,
											"end": 10998,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10963,
											"end": 10999,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "407"
										},
										{
											"begin": 10963,
											"end": 10999,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10963,
											"end": 10999,
											"name": "tag",
											"source": 2,
											"value": "406"
										},
										{
											"begin": 10963,
											"end": 10999,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10958,
											"end": 10961,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10951,
											"end": 11000,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10941,
											"end": 11006,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10941,
											"end": 11006,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10941,
											"end": 11006,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 11012,
											"end": 11130,
											"name": "tag",
											"source": 2,
											"value": "408"
										},
										{
											"begin": 11012,
											"end": 11130,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11099,
											"end": 11123,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "410"
										},
										{
											"begin": 11117,
											"end": 11122,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11099,
											"end": 11123,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "411"
										},
										{
											"begin": 11099,
											"end": 11123,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 11099,
											"end": 11123,
											"name": "tag",
											"source": 2,
											"value": "410"
										},
										{
											"begin": 11099,
											"end": 11123,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11094,
											"end": 11097,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11087,
											"end": 11124,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11077,
											"end": 11130,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11077,
											"end": 11130,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11077,
											"end": 11130,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 11136,
											"end": 11251,
											"name": "tag",
											"source": 2,
											"value": "412"
										},
										{
											"begin": 11136,
											"end": 11251,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11221,
											"end": 11244,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "414"
										},
										{
											"begin": 11238,
											"end": 11243,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11221,
											"end": 11244,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "415"
										},
										{
											"begin": 11221,
											"end": 11244,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 11221,
											"end": 11244,
											"name": "tag",
											"source": 2,
											"value": "414"
										},
										{
											"begin": 11221,
											"end": 11244,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11216,
											"end": 11219,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11209,
											"end": 11245,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11199,
											"end": 11251,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11199,
											"end": 11251,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11199,
											"end": 11251,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 11257,
											"end": 11386,
											"name": "tag",
											"source": 2,
											"value": "416"
										},
										{
											"begin": 11257,
											"end": 11386,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11343,
											"end": 11379,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "418"
										},
										{
											"begin": 11373,
											"end": 11378,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11343,
											"end": 11379,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "419"
										},
										{
											"begin": 11343,
											"end": 11379,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 11343,
											"end": 11379,
											"name": "tag",
											"source": 2,
											"value": "418"
										},
										{
											"begin": 11343,
											"end": 11379,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11338,
											"end": 11341,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11331,
											"end": 11380,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11321,
											"end": 11386,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11321,
											"end": 11386,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11321,
											"end": 11386,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 11392,
											"end": 11507,
											"name": "tag",
											"source": 2,
											"value": "420"
										},
										{
											"begin": 11392,
											"end": 11507,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11477,
											"end": 11500,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "422"
										},
										{
											"begin": 11494,
											"end": 11499,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11477,
											"end": 11500,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "423"
										},
										{
											"begin": 11477,
											"end": 11500,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 11477,
											"end": 11500,
											"name": "tag",
											"source": 2,
											"value": "422"
										},
										{
											"begin": 11477,
											"end": 11500,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11472,
											"end": 11475,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11465,
											"end": 11501,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11455,
											"end": 11507,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11455,
											"end": 11507,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11455,
											"end": 11507,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 11513,
											"end": 11735,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 11513,
											"end": 11735,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11606,
											"end": 11610,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11644,
											"end": 11646,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11633,
											"end": 11642,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11629,
											"end": 11647,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11621,
											"end": 11647,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11621,
											"end": 11647,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11657,
											"end": 11728,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "425"
										},
										{
											"begin": 11725,
											"end": 11726,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11714,
											"end": 11723,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11710,
											"end": 11727,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11701,
											"end": 11707,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11657,
											"end": 11728,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 11657,
											"end": 11728,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 11657,
											"end": 11728,
											"name": "tag",
											"source": 2,
											"value": "425"
										},
										{
											"begin": 11657,
											"end": 11728,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11611,
											"end": 11735,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 11611,
											"end": 11735,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11611,
											"end": 11735,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11611,
											"end": 11735,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11611,
											"end": 11735,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 11741,
											"end": 12073,
											"name": "tag",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 11741,
											"end": 12073,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11862,
											"end": 11866,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11900,
											"end": 11902,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11889,
											"end": 11898,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11885,
											"end": 11903,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11877,
											"end": 11903,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11877,
											"end": 11903,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11913,
											"end": 11984,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "427"
										},
										{
											"begin": 11981,
											"end": 11982,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11970,
											"end": 11979,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11966,
											"end": 11983,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11957,
											"end": 11963,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 11913,
											"end": 11984,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 11913,
											"end": 11984,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 11913,
											"end": 11984,
											"name": "tag",
											"source": 2,
											"value": "427"
										},
										{
											"begin": 11913,
											"end": 11984,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11994,
											"end": 12066,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "428"
										},
										{
											"begin": 12062,
											"end": 12064,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12051,
											"end": 12060,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12047,
											"end": 12065,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12038,
											"end": 12044,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11994,
											"end": 12066,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 11994,
											"end": 12066,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 11994,
											"end": 12066,
											"name": "tag",
											"source": 2,
											"value": "428"
										},
										{
											"begin": 11994,
											"end": 12066,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11867,
											"end": 12073,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 11867,
											"end": 12073,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 11867,
											"end": 12073,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11867,
											"end": 12073,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11867,
											"end": 12073,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11867,
											"end": 12073,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 12079,
											"end": 12521,
											"name": "tag",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 12079,
											"end": 12521,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12228,
											"end": 12232,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12266,
											"end": 12268,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 12255,
											"end": 12264,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12251,
											"end": 12269,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12243,
											"end": 12269,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12243,
											"end": 12269,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12279,
											"end": 12350,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "430"
										},
										{
											"begin": 12347,
											"end": 12348,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12336,
											"end": 12345,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12332,
											"end": 12349,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12323,
											"end": 12329,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 12279,
											"end": 12350,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 12279,
											"end": 12350,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 12279,
											"end": 12350,
											"name": "tag",
											"source": 2,
											"value": "430"
										},
										{
											"begin": 12279,
											"end": 12350,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12360,
											"end": 12432,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "431"
										},
										{
											"begin": 12428,
											"end": 12430,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12417,
											"end": 12426,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12413,
											"end": 12431,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12404,
											"end": 12410,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 12360,
											"end": 12432,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 12360,
											"end": 12432,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 12360,
											"end": 12432,
											"name": "tag",
											"source": 2,
											"value": "431"
										},
										{
											"begin": 12360,
											"end": 12432,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12442,
											"end": 12514,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "432"
										},
										{
											"begin": 12510,
											"end": 12512,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12499,
											"end": 12508,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12495,
											"end": 12513,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12486,
											"end": 12492,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12442,
											"end": 12514,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "408"
										},
										{
											"begin": 12442,
											"end": 12514,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 12442,
											"end": 12514,
											"name": "tag",
											"source": 2,
											"value": "432"
										},
										{
											"begin": 12442,
											"end": 12514,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12233,
											"end": 12521,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 12233,
											"end": 12521,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 12233,
											"end": 12521,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12233,
											"end": 12521,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12233,
											"end": 12521,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12233,
											"end": 12521,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12233,
											"end": 12521,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 12527,
											"end": 12967,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 12527,
											"end": 12967,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12675,
											"end": 12679,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12713,
											"end": 12715,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 12702,
											"end": 12711,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12698,
											"end": 12716,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12690,
											"end": 12716,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12690,
											"end": 12716,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12726,
											"end": 12797,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "434"
										},
										{
											"begin": 12794,
											"end": 12795,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12783,
											"end": 12792,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12779,
											"end": 12796,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12770,
											"end": 12776,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 12726,
											"end": 12797,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 12726,
											"end": 12797,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 12726,
											"end": 12797,
											"name": "tag",
											"source": 2,
											"value": "434"
										},
										{
											"begin": 12726,
											"end": 12797,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12807,
											"end": 12879,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "435"
										},
										{
											"begin": 12875,
											"end": 12877,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12864,
											"end": 12873,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12860,
											"end": 12878,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12851,
											"end": 12857,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 12807,
											"end": 12879,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 12807,
											"end": 12879,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 12807,
											"end": 12879,
											"name": "tag",
											"source": 2,
											"value": "435"
										},
										{
											"begin": 12807,
											"end": 12879,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12889,
											"end": 12960,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "436"
										},
										{
											"begin": 12956,
											"end": 12958,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12945,
											"end": 12954,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12941,
											"end": 12959,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12932,
											"end": 12938,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12889,
											"end": 12960,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "416"
										},
										{
											"begin": 12889,
											"end": 12960,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 12889,
											"end": 12960,
											"name": "tag",
											"source": 2,
											"value": "436"
										},
										{
											"begin": 12889,
											"end": 12960,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12680,
											"end": 12967,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 12680,
											"end": 12967,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 12680,
											"end": 12967,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12680,
											"end": 12967,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12680,
											"end": 12967,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12680,
											"end": 12967,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12680,
											"end": 12967,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 12973,
											"end": 13305,
											"name": "tag",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 12973,
											"end": 13305,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13094,
											"end": 13098,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13132,
											"end": 13134,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13121,
											"end": 13130,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13117,
											"end": 13135,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13109,
											"end": 13135,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13109,
											"end": 13135,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13145,
											"end": 13216,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "438"
										},
										{
											"begin": 13213,
											"end": 13214,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13202,
											"end": 13211,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13198,
											"end": 13215,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13189,
											"end": 13195,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 13145,
											"end": 13216,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 13145,
											"end": 13216,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 13145,
											"end": 13216,
											"name": "tag",
											"source": 2,
											"value": "438"
										},
										{
											"begin": 13145,
											"end": 13216,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13226,
											"end": 13298,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "439"
										},
										{
											"begin": 13294,
											"end": 13296,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13283,
											"end": 13292,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13279,
											"end": 13297,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13270,
											"end": 13276,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 13226,
											"end": 13298,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "408"
										},
										{
											"begin": 13226,
											"end": 13298,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 13226,
											"end": 13298,
											"name": "tag",
											"source": 2,
											"value": "439"
										},
										{
											"begin": 13226,
											"end": 13298,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13099,
											"end": 13305,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 13099,
											"end": 13305,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 13099,
											"end": 13305,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13099,
											"end": 13305,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13099,
											"end": 13305,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13099,
											"end": 13305,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 13311,
											"end": 13860,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 13311,
											"end": 13860,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13486,
											"end": 13490,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13524,
											"end": 13527,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 13513,
											"end": 13522,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13509,
											"end": 13528,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13501,
											"end": 13528,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13501,
											"end": 13528,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13538,
											"end": 13609,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "441"
										},
										{
											"begin": 13606,
											"end": 13607,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13595,
											"end": 13604,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13591,
											"end": 13608,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13582,
											"end": 13588,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 13538,
											"end": 13609,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 13538,
											"end": 13609,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 13538,
											"end": 13609,
											"name": "tag",
											"source": 2,
											"value": "441"
										},
										{
											"begin": 13538,
											"end": 13609,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13619,
											"end": 13690,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "442"
										},
										{
											"begin": 13686,
											"end": 13688,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13675,
											"end": 13684,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13671,
											"end": 13689,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13662,
											"end": 13668,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 13619,
											"end": 13690,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "416"
										},
										{
											"begin": 13619,
											"end": 13690,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 13619,
											"end": 13690,
											"name": "tag",
											"source": 2,
											"value": "442"
										},
										{
											"begin": 13619,
											"end": 13690,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13700,
											"end": 13771,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "443"
										},
										{
											"begin": 13767,
											"end": 13769,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13756,
											"end": 13765,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13752,
											"end": 13770,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13743,
											"end": 13749,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 13700,
											"end": 13771,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "404"
										},
										{
											"begin": 13700,
											"end": 13771,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 13700,
											"end": 13771,
											"name": "tag",
											"source": 2,
											"value": "443"
										},
										{
											"begin": 13700,
											"end": 13771,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13781,
											"end": 13853,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "444"
										},
										{
											"begin": 13849,
											"end": 13851,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 13838,
											"end": 13847,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13834,
											"end": 13852,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13825,
											"end": 13831,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 13781,
											"end": 13853,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "396"
										},
										{
											"begin": 13781,
											"end": 13853,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 13781,
											"end": 13853,
											"name": "tag",
											"source": 2,
											"value": "444"
										},
										{
											"begin": 13781,
											"end": 13853,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13491,
											"end": 13860,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 13491,
											"end": 13860,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 13491,
											"end": 13860,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13491,
											"end": 13860,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13491,
											"end": 13860,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13491,
											"end": 13860,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13491,
											"end": 13860,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13491,
											"end": 13860,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 13866,
											"end": 14415,
											"name": "tag",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 13866,
											"end": 14415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14041,
											"end": 14045,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14079,
											"end": 14082,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 14068,
											"end": 14077,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14064,
											"end": 14083,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14056,
											"end": 14083,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14056,
											"end": 14083,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14093,
											"end": 14164,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "446"
										},
										{
											"begin": 14161,
											"end": 14162,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14150,
											"end": 14159,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14146,
											"end": 14163,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14137,
											"end": 14143,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 14093,
											"end": 14164,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 14093,
											"end": 14164,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14093,
											"end": 14164,
											"name": "tag",
											"source": 2,
											"value": "446"
										},
										{
											"begin": 14093,
											"end": 14164,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14174,
											"end": 14245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "447"
										},
										{
											"begin": 14241,
											"end": 14243,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14230,
											"end": 14239,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14226,
											"end": 14244,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14217,
											"end": 14223,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 14174,
											"end": 14245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "416"
										},
										{
											"begin": 14174,
											"end": 14245,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14174,
											"end": 14245,
											"name": "tag",
											"source": 2,
											"value": "447"
										},
										{
											"begin": 14174,
											"end": 14245,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14255,
											"end": 14326,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "448"
										},
										{
											"begin": 14322,
											"end": 14324,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14311,
											"end": 14320,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14307,
											"end": 14325,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14298,
											"end": 14304,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 14255,
											"end": 14326,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "404"
										},
										{
											"begin": 14255,
											"end": 14326,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14255,
											"end": 14326,
											"name": "tag",
											"source": 2,
											"value": "448"
										},
										{
											"begin": 14255,
											"end": 14326,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14336,
											"end": 14408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "449"
										},
										{
											"begin": 14404,
											"end": 14406,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 14393,
											"end": 14402,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14389,
											"end": 14407,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14380,
											"end": 14386,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 14336,
											"end": 14408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "408"
										},
										{
											"begin": 14336,
											"end": 14408,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14336,
											"end": 14408,
											"name": "tag",
											"source": 2,
											"value": "449"
										},
										{
											"begin": 14336,
											"end": 14408,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14046,
											"end": 14415,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 14046,
											"end": 14415,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 14046,
											"end": 14415,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14046,
											"end": 14415,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14046,
											"end": 14415,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14046,
											"end": 14415,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14046,
											"end": 14415,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14046,
											"end": 14415,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 14421,
											"end": 14671,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 14421,
											"end": 14671,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14528,
											"end": 14532,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14566,
											"end": 14568,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14555,
											"end": 14564,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14551,
											"end": 14569,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14543,
											"end": 14569,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14543,
											"end": 14569,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14579,
											"end": 14664,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "451"
										},
										{
											"begin": 14661,
											"end": 14662,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14650,
											"end": 14659,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14646,
											"end": 14663,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14637,
											"end": 14643,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 14579,
											"end": 14664,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 14579,
											"end": 14664,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14579,
											"end": 14664,
											"name": "tag",
											"source": 2,
											"value": "451"
										},
										{
											"begin": 14579,
											"end": 14664,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14533,
											"end": 14671,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 14533,
											"end": 14671,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14533,
											"end": 14671,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14533,
											"end": 14671,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14533,
											"end": 14671,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 14677,
											"end": 15096,
											"name": "tag",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 14677,
											"end": 15096,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14843,
											"end": 14847,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14881,
											"end": 14883,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14870,
											"end": 14879,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14866,
											"end": 14884,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14858,
											"end": 14884,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14858,
											"end": 14884,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14930,
											"end": 14939,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14924,
											"end": 14928,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14920,
											"end": 14940,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 14916,
											"end": 14917,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14905,
											"end": 14914,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14901,
											"end": 14918,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14894,
											"end": 14941,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14958,
											"end": 15089,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "453"
										},
										{
											"begin": 15084,
											"end": 15088,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14958,
											"end": 15089,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "286"
										},
										{
											"begin": 14958,
											"end": 15089,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14958,
											"end": 15089,
											"name": "tag",
											"source": 2,
											"value": "453"
										},
										{
											"begin": 14958,
											"end": 15089,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14950,
											"end": 15089,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14950,
											"end": 15089,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14848,
											"end": 15096,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14848,
											"end": 15096,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14848,
											"end": 15096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14848,
											"end": 15096,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 15102,
											"end": 15521,
											"name": "tag",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 15102,
											"end": 15521,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15268,
											"end": 15272,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15306,
											"end": 15308,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15295,
											"end": 15304,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15291,
											"end": 15309,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15283,
											"end": 15309,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15283,
											"end": 15309,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15355,
											"end": 15364,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15349,
											"end": 15353,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15345,
											"end": 15365,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15341,
											"end": 15342,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15330,
											"end": 15339,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15326,
											"end": 15343,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15319,
											"end": 15366,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15383,
											"end": 15514,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "455"
										},
										{
											"begin": 15509,
											"end": 15513,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15383,
											"end": 15514,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "292"
										},
										{
											"begin": 15383,
											"end": 15514,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 15383,
											"end": 15514,
											"name": "tag",
											"source": 2,
											"value": "455"
										},
										{
											"begin": 15383,
											"end": 15514,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15375,
											"end": 15514,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15375,
											"end": 15514,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15273,
											"end": 15521,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15273,
											"end": 15521,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15273,
											"end": 15521,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15273,
											"end": 15521,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 15527,
											"end": 15946,
											"name": "tag",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 15527,
											"end": 15946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15693,
											"end": 15697,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15731,
											"end": 15733,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15720,
											"end": 15729,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15716,
											"end": 15734,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15708,
											"end": 15734,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15708,
											"end": 15734,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15780,
											"end": 15789,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15774,
											"end": 15778,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15770,
											"end": 15790,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15766,
											"end": 15767,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15755,
											"end": 15764,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15751,
											"end": 15768,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15744,
											"end": 15791,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15808,
											"end": 15939,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "457"
										},
										{
											"begin": 15934,
											"end": 15938,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15808,
											"end": 15939,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "297"
										},
										{
											"begin": 15808,
											"end": 15939,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 15808,
											"end": 15939,
											"name": "tag",
											"source": 2,
											"value": "457"
										},
										{
											"begin": 15808,
											"end": 15939,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15800,
											"end": 15939,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15800,
											"end": 15939,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15698,
											"end": 15946,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15698,
											"end": 15946,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15698,
											"end": 15946,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15698,
											"end": 15946,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 15952,
											"end": 16371,
											"name": "tag",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 15952,
											"end": 16371,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16118,
											"end": 16122,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16156,
											"end": 16158,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 16145,
											"end": 16154,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 16141,
											"end": 16159,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16133,
											"end": 16159,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16133,
											"end": 16159,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16205,
											"end": 16214,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16199,
											"end": 16203,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16195,
											"end": 16215,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 16191,
											"end": 16192,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16180,
											"end": 16189,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 16176,
											"end": 16193,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16169,
											"end": 16216,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16233,
											"end": 16364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "459"
										},
										{
											"begin": 16359,
											"end": 16363,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16233,
											"end": 16364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "302"
										},
										{
											"begin": 16233,
											"end": 16364,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 16233,
											"end": 16364,
											"name": "tag",
											"source": 2,
											"value": "459"
										},
										{
											"begin": 16233,
											"end": 16364,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16225,
											"end": 16364,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16225,
											"end": 16364,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16123,
											"end": 16371,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16123,
											"end": 16371,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16123,
											"end": 16371,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16123,
											"end": 16371,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 16377,
											"end": 16796,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 16377,
											"end": 16796,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16543,
											"end": 16547,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16581,
											"end": 16583,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 16570,
											"end": 16579,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 16566,
											"end": 16584,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16558,
											"end": 16584,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16558,
											"end": 16584,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16630,
											"end": 16639,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16624,
											"end": 16628,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16620,
											"end": 16640,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 16616,
											"end": 16617,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16605,
											"end": 16614,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 16601,
											"end": 16618,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16594,
											"end": 16641,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16658,
											"end": 16789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "461"
										},
										{
											"begin": 16784,
											"end": 16788,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16658,
											"end": 16789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "307"
										},
										{
											"begin": 16658,
											"end": 16789,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 16658,
											"end": 16789,
											"name": "tag",
											"source": 2,
											"value": "461"
										},
										{
											"begin": 16658,
											"end": 16789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16650,
											"end": 16789,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16650,
											"end": 16789,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16548,
											"end": 16796,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16548,
											"end": 16796,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16548,
											"end": 16796,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16548,
											"end": 16796,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 16802,
											"end": 17221,
											"name": "tag",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 16802,
											"end": 17221,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16968,
											"end": 16972,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17006,
											"end": 17008,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 16995,
											"end": 17004,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 16991,
											"end": 17009,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16983,
											"end": 17009,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16983,
											"end": 17009,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17055,
											"end": 17064,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17049,
											"end": 17053,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17045,
											"end": 17065,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 17041,
											"end": 17042,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17030,
											"end": 17039,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 17026,
											"end": 17043,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17019,
											"end": 17066,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17083,
											"end": 17214,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "463"
										},
										{
											"begin": 17209,
											"end": 17213,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17083,
											"end": 17214,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "312"
										},
										{
											"begin": 17083,
											"end": 17214,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 17083,
											"end": 17214,
											"name": "tag",
											"source": 2,
											"value": "463"
										},
										{
											"begin": 17083,
											"end": 17214,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17075,
											"end": 17214,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17075,
											"end": 17214,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16973,
											"end": 17221,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16973,
											"end": 17221,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16973,
											"end": 17221,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16973,
											"end": 17221,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 17227,
											"end": 17646,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 17227,
											"end": 17646,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17393,
											"end": 17397,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17431,
											"end": 17433,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 17420,
											"end": 17429,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17416,
											"end": 17434,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17408,
											"end": 17434,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17408,
											"end": 17434,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17480,
											"end": 17489,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17474,
											"end": 17478,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17470,
											"end": 17490,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 17466,
											"end": 17467,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17455,
											"end": 17464,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 17451,
											"end": 17468,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17444,
											"end": 17491,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17508,
											"end": 17639,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "465"
										},
										{
											"begin": 17634,
											"end": 17638,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17508,
											"end": 17639,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "317"
										},
										{
											"begin": 17508,
											"end": 17639,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 17508,
											"end": 17639,
											"name": "tag",
											"source": 2,
											"value": "465"
										},
										{
											"begin": 17508,
											"end": 17639,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17500,
											"end": 17639,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17500,
											"end": 17639,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17398,
											"end": 17646,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17398,
											"end": 17646,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17398,
											"end": 17646,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17398,
											"end": 17646,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 17652,
											"end": 18071,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 17652,
											"end": 18071,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17818,
											"end": 17822,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17856,
											"end": 17858,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 17845,
											"end": 17854,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17841,
											"end": 17859,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17833,
											"end": 17859,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17833,
											"end": 17859,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17905,
											"end": 17914,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17899,
											"end": 17903,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17895,
											"end": 17915,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 17891,
											"end": 17892,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17880,
											"end": 17889,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 17876,
											"end": 17893,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17869,
											"end": 17916,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17933,
											"end": 18064,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "467"
										},
										{
											"begin": 18059,
											"end": 18063,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17933,
											"end": 18064,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "322"
										},
										{
											"begin": 17933,
											"end": 18064,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 17933,
											"end": 18064,
											"name": "tag",
											"source": 2,
											"value": "467"
										},
										{
											"begin": 17933,
											"end": 18064,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17925,
											"end": 18064,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17925,
											"end": 18064,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17823,
											"end": 18071,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17823,
											"end": 18071,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17823,
											"end": 18071,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17823,
											"end": 18071,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 18077,
											"end": 18496,
											"name": "tag",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 18077,
											"end": 18496,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18243,
											"end": 18247,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 18281,
											"end": 18283,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 18270,
											"end": 18279,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 18266,
											"end": 18284,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 18258,
											"end": 18284,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18258,
											"end": 18284,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 18330,
											"end": 18339,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18324,
											"end": 18328,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18320,
											"end": 18340,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 18316,
											"end": 18317,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 18305,
											"end": 18314,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 18301,
											"end": 18318,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 18294,
											"end": 18341,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 18358,
											"end": 18489,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "469"
										},
										{
											"begin": 18484,
											"end": 18488,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18358,
											"end": 18489,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "327"
										},
										{
											"begin": 18358,
											"end": 18489,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 18358,
											"end": 18489,
											"name": "tag",
											"source": 2,
											"value": "469"
										},
										{
											"begin": 18358,
											"end": 18489,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18350,
											"end": 18489,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18350,
											"end": 18489,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 18248,
											"end": 18496,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 18248,
											"end": 18496,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18248,
											"end": 18496,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 18248,
											"end": 18496,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 18502,
											"end": 18921,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 18502,
											"end": 18921,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18668,
											"end": 18672,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 18706,
											"end": 18708,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 18695,
											"end": 18704,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 18691,
											"end": 18709,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 18683,
											"end": 18709,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18683,
											"end": 18709,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 18755,
											"end": 18764,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18749,
											"end": 18753,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18745,
											"end": 18765,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 18741,
											"end": 18742,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 18730,
											"end": 18739,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 18726,
											"end": 18743,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 18719,
											"end": 18766,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 18783,
											"end": 18914,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "471"
										},
										{
											"begin": 18909,
											"end": 18913,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18783,
											"end": 18914,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "332"
										},
										{
											"begin": 18783,
											"end": 18914,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 18783,
											"end": 18914,
											"name": "tag",
											"source": 2,
											"value": "471"
										},
										{
											"begin": 18783,
											"end": 18914,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18775,
											"end": 18914,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18775,
											"end": 18914,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 18673,
											"end": 18921,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 18673,
											"end": 18921,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18673,
											"end": 18921,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 18673,
											"end": 18921,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 18927,
											"end": 19346,
											"name": "tag",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 18927,
											"end": 19346,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19093,
											"end": 19097,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 19131,
											"end": 19133,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 19120,
											"end": 19129,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 19116,
											"end": 19134,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 19108,
											"end": 19134,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19108,
											"end": 19134,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 19180,
											"end": 19189,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19174,
											"end": 19178,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19170,
											"end": 19190,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 19166,
											"end": 19167,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 19155,
											"end": 19164,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 19151,
											"end": 19168,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 19144,
											"end": 19191,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 19208,
											"end": 19339,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "473"
										},
										{
											"begin": 19334,
											"end": 19338,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19208,
											"end": 19339,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "337"
										},
										{
											"begin": 19208,
											"end": 19339,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 19208,
											"end": 19339,
											"name": "tag",
											"source": 2,
											"value": "473"
										},
										{
											"begin": 19208,
											"end": 19339,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19200,
											"end": 19339,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19200,
											"end": 19339,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 19098,
											"end": 19346,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 19098,
											"end": 19346,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19098,
											"end": 19346,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 19098,
											"end": 19346,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 19352,
											"end": 19771,
											"name": "tag",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 19352,
											"end": 19771,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19518,
											"end": 19522,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 19556,
											"end": 19558,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 19545,
											"end": 19554,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 19541,
											"end": 19559,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 19533,
											"end": 19559,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19533,
											"end": 19559,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 19605,
											"end": 19614,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19599,
											"end": 19603,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19595,
											"end": 19615,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 19591,
											"end": 19592,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 19580,
											"end": 19589,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 19576,
											"end": 19593,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 19569,
											"end": 19616,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 19633,
											"end": 19764,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "475"
										},
										{
											"begin": 19759,
											"end": 19763,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19633,
											"end": 19764,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "342"
										},
										{
											"begin": 19633,
											"end": 19764,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 19633,
											"end": 19764,
											"name": "tag",
											"source": 2,
											"value": "475"
										},
										{
											"begin": 19633,
											"end": 19764,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19625,
											"end": 19764,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19625,
											"end": 19764,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 19523,
											"end": 19771,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 19523,
											"end": 19771,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19523,
											"end": 19771,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 19523,
											"end": 19771,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 19777,
											"end": 20196,
											"name": "tag",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 19777,
											"end": 20196,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19943,
											"end": 19947,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 19981,
											"end": 19983,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 19970,
											"end": 19979,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 19966,
											"end": 19984,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 19958,
											"end": 19984,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19958,
											"end": 19984,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 20030,
											"end": 20039,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 20024,
											"end": 20028,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 20020,
											"end": 20040,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 20016,
											"end": 20017,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 20005,
											"end": 20014,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 20001,
											"end": 20018,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 19994,
											"end": 20041,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 20058,
											"end": 20189,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "477"
										},
										{
											"begin": 20184,
											"end": 20188,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 20058,
											"end": 20189,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "347"
										},
										{
											"begin": 20058,
											"end": 20189,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 20058,
											"end": 20189,
											"name": "tag",
											"source": 2,
											"value": "477"
										},
										{
											"begin": 20058,
											"end": 20189,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 20050,
											"end": 20189,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20050,
											"end": 20189,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 19948,
											"end": 20196,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 19948,
											"end": 20196,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19948,
											"end": 20196,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 19948,
											"end": 20196,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 20202,
											"end": 20621,
											"name": "tag",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 20202,
											"end": 20621,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 20368,
											"end": 20372,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 20406,
											"end": 20408,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 20395,
											"end": 20404,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 20391,
											"end": 20409,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 20383,
											"end": 20409,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20383,
											"end": 20409,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 20455,
											"end": 20464,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 20449,
											"end": 20453,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 20445,
											"end": 20465,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 20441,
											"end": 20442,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 20430,
											"end": 20439,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 20426,
											"end": 20443,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 20419,
											"end": 20466,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 20483,
											"end": 20614,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "479"
										},
										{
											"begin": 20609,
											"end": 20613,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 20483,
											"end": 20614,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "352"
										},
										{
											"begin": 20483,
											"end": 20614,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 20483,
											"end": 20614,
											"name": "tag",
											"source": 2,
											"value": "479"
										},
										{
											"begin": 20483,
											"end": 20614,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 20475,
											"end": 20614,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20475,
											"end": 20614,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 20373,
											"end": 20621,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 20373,
											"end": 20621,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20373,
											"end": 20621,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 20373,
											"end": 20621,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 20627,
											"end": 21046,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 20627,
											"end": 21046,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 20793,
											"end": 20797,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 20831,
											"end": 20833,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 20820,
											"end": 20829,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 20816,
											"end": 20834,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 20808,
											"end": 20834,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20808,
											"end": 20834,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 20880,
											"end": 20889,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 20874,
											"end": 20878,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 20870,
											"end": 20890,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 20866,
											"end": 20867,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 20855,
											"end": 20864,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 20851,
											"end": 20868,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 20844,
											"end": 20891,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 20908,
											"end": 21039,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "481"
										},
										{
											"begin": 21034,
											"end": 21038,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 20908,
											"end": 21039,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "357"
										},
										{
											"begin": 20908,
											"end": 21039,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 20908,
											"end": 21039,
											"name": "tag",
											"source": 2,
											"value": "481"
										},
										{
											"begin": 20908,
											"end": 21039,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 20900,
											"end": 21039,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20900,
											"end": 21039,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 20798,
											"end": 21046,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 20798,
											"end": 21046,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20798,
											"end": 21046,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 20798,
											"end": 21046,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 21052,
											"end": 21471,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 21052,
											"end": 21471,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 21218,
											"end": 21222,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 21256,
											"end": 21258,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 21245,
											"end": 21254,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 21241,
											"end": 21259,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 21233,
											"end": 21259,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 21233,
											"end": 21259,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 21305,
											"end": 21314,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 21299,
											"end": 21303,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 21295,
											"end": 21315,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 21291,
											"end": 21292,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 21280,
											"end": 21289,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 21276,
											"end": 21293,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 21269,
											"end": 21316,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 21333,
											"end": 21464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "483"
										},
										{
											"begin": 21459,
											"end": 21463,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 21333,
											"end": 21464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "362"
										},
										{
											"begin": 21333,
											"end": 21464,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 21333,
											"end": 21464,
											"name": "tag",
											"source": 2,
											"value": "483"
										},
										{
											"begin": 21333,
											"end": 21464,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 21325,
											"end": 21464,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 21325,
											"end": 21464,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 21223,
											"end": 21471,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 21223,
											"end": 21471,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 21223,
											"end": 21471,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 21223,
											"end": 21471,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 21477,
											"end": 21896,
											"name": "tag",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 21477,
											"end": 21896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 21643,
											"end": 21647,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 21681,
											"end": 21683,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 21670,
											"end": 21679,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 21666,
											"end": 21684,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 21658,
											"end": 21684,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 21658,
											"end": 21684,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 21730,
											"end": 21739,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 21724,
											"end": 21728,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 21720,
											"end": 21740,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 21716,
											"end": 21717,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 21705,
											"end": 21714,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 21701,
											"end": 21718,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 21694,
											"end": 21741,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 21758,
											"end": 21889,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "485"
										},
										{
											"begin": 21884,
											"end": 21888,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 21758,
											"end": 21889,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "367"
										},
										{
											"begin": 21758,
											"end": 21889,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 21758,
											"end": 21889,
											"name": "tag",
											"source": 2,
											"value": "485"
										},
										{
											"begin": 21758,
											"end": 21889,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 21750,
											"end": 21889,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 21750,
											"end": 21889,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 21648,
											"end": 21896,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 21648,
											"end": 21896,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 21648,
											"end": 21896,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 21648,
											"end": 21896,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 21902,
											"end": 22321,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 21902,
											"end": 22321,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 22068,
											"end": 22072,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 22106,
											"end": 22108,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 22095,
											"end": 22104,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 22091,
											"end": 22109,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 22083,
											"end": 22109,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 22083,
											"end": 22109,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 22155,
											"end": 22164,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 22149,
											"end": 22153,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 22145,
											"end": 22165,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 22141,
											"end": 22142,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 22130,
											"end": 22139,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 22126,
											"end": 22143,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 22119,
											"end": 22166,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 22183,
											"end": 22314,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "487"
										},
										{
											"begin": 22309,
											"end": 22313,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 22183,
											"end": 22314,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "372"
										},
										{
											"begin": 22183,
											"end": 22314,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 22183,
											"end": 22314,
											"name": "tag",
											"source": 2,
											"value": "487"
										},
										{
											"begin": 22183,
											"end": 22314,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 22175,
											"end": 22314,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 22175,
											"end": 22314,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 22073,
											"end": 22321,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 22073,
											"end": 22321,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 22073,
											"end": 22321,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 22073,
											"end": 22321,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 22327,
											"end": 22746,
											"name": "tag",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 22327,
											"end": 22746,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 22493,
											"end": 22497,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 22531,
											"end": 22533,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 22520,
											"end": 22529,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 22516,
											"end": 22534,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 22508,
											"end": 22534,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 22508,
											"end": 22534,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 22580,
											"end": 22589,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 22574,
											"end": 22578,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 22570,
											"end": 22590,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 22566,
											"end": 22567,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 22555,
											"end": 22564,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 22551,
											"end": 22568,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 22544,
											"end": 22591,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 22608,
											"end": 22739,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "489"
										},
										{
											"begin": 22734,
											"end": 22738,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 22608,
											"end": 22739,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "377"
										},
										{
											"begin": 22608,
											"end": 22739,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 22608,
											"end": 22739,
											"name": "tag",
											"source": 2,
											"value": "489"
										},
										{
											"begin": 22608,
											"end": 22739,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 22600,
											"end": 22739,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 22600,
											"end": 22739,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 22498,
											"end": 22746,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 22498,
											"end": 22746,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 22498,
											"end": 22746,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 22498,
											"end": 22746,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 22752,
											"end": 23171,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 22752,
											"end": 23171,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 22918,
											"end": 22922,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 22956,
											"end": 22958,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 22945,
											"end": 22954,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 22941,
											"end": 22959,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 22933,
											"end": 22959,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 22933,
											"end": 22959,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 23005,
											"end": 23014,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 22999,
											"end": 23003,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 22995,
											"end": 23015,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 22991,
											"end": 22992,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 22980,
											"end": 22989,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 22976,
											"end": 22993,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 22969,
											"end": 23016,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 23033,
											"end": 23164,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "491"
										},
										{
											"begin": 23159,
											"end": 23163,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 23033,
											"end": 23164,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "382"
										},
										{
											"begin": 23033,
											"end": 23164,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 23033,
											"end": 23164,
											"name": "tag",
											"source": 2,
											"value": "491"
										},
										{
											"begin": 23033,
											"end": 23164,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 23025,
											"end": 23164,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 23025,
											"end": 23164,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 22923,
											"end": 23171,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 22923,
											"end": 23171,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 22923,
											"end": 23171,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 22923,
											"end": 23171,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 23177,
											"end": 23596,
											"name": "tag",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 23177,
											"end": 23596,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 23343,
											"end": 23347,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 23381,
											"end": 23383,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 23370,
											"end": 23379,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 23366,
											"end": 23384,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 23358,
											"end": 23384,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 23358,
											"end": 23384,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 23430,
											"end": 23439,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 23424,
											"end": 23428,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 23420,
											"end": 23440,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 23416,
											"end": 23417,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 23405,
											"end": 23414,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 23401,
											"end": 23418,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 23394,
											"end": 23441,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 23458,
											"end": 23589,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "493"
										},
										{
											"begin": 23584,
											"end": 23588,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 23458,
											"end": 23589,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "387"
										},
										{
											"begin": 23458,
											"end": 23589,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 23458,
											"end": 23589,
											"name": "tag",
											"source": 2,
											"value": "493"
										},
										{
											"begin": 23458,
											"end": 23589,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 23450,
											"end": 23589,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 23450,
											"end": 23589,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 23348,
											"end": 23596,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 23348,
											"end": 23596,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 23348,
											"end": 23596,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 23348,
											"end": 23596,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 23602,
											"end": 23824,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 23602,
											"end": 23824,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 23695,
											"end": 23699,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 23733,
											"end": 23735,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 23722,
											"end": 23731,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 23718,
											"end": 23736,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 23710,
											"end": 23736,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 23710,
											"end": 23736,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 23746,
											"end": 23817,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "495"
										},
										{
											"begin": 23814,
											"end": 23815,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 23803,
											"end": 23812,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 23799,
											"end": 23816,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 23790,
											"end": 23796,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 23746,
											"end": 23817,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "392"
										},
										{
											"begin": 23746,
											"end": 23817,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 23746,
											"end": 23817,
											"name": "tag",
											"source": 2,
											"value": "495"
										},
										{
											"begin": 23746,
											"end": 23817,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 23700,
											"end": 23824,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 23700,
											"end": 23824,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 23700,
											"end": 23824,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 23700,
											"end": 23824,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 23700,
											"end": 23824,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 23830,
											"end": 24052,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 23830,
											"end": 24052,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 23923,
											"end": 23927,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 23961,
											"end": 23963,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 23950,
											"end": 23959,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 23946,
											"end": 23964,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 23938,
											"end": 23964,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 23938,
											"end": 23964,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 23974,
											"end": 24045,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "497"
										},
										{
											"begin": 24042,
											"end": 24043,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 24031,
											"end": 24040,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 24027,
											"end": 24044,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 24018,
											"end": 24024,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 23974,
											"end": 24045,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "408"
										},
										{
											"begin": 23974,
											"end": 24045,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 23974,
											"end": 24045,
											"name": "tag",
											"source": 2,
											"value": "497"
										},
										{
											"begin": 23974,
											"end": 24045,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 23928,
											"end": 24052,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 23928,
											"end": 24052,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 23928,
											"end": 24052,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 23928,
											"end": 24052,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 23928,
											"end": 24052,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 24058,
											"end": 24599,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 24058,
											"end": 24599,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 24229,
											"end": 24233,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 24267,
											"end": 24270,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 24256,
											"end": 24265,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 24252,
											"end": 24271,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 24244,
											"end": 24271,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 24244,
											"end": 24271,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 24281,
											"end": 24350,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "499"
										},
										{
											"begin": 24347,
											"end": 24348,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 24336,
											"end": 24345,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 24332,
											"end": 24349,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 24323,
											"end": 24329,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 24281,
											"end": 24350,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "420"
										},
										{
											"begin": 24281,
											"end": 24350,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 24281,
											"end": 24350,
											"name": "tag",
											"source": 2,
											"value": "499"
										},
										{
											"begin": 24281,
											"end": 24350,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 24360,
											"end": 24430,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "500"
										},
										{
											"begin": 24426,
											"end": 24428,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 24415,
											"end": 24424,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 24411,
											"end": 24429,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 24402,
											"end": 24408,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 24360,
											"end": 24430,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "400"
										},
										{
											"begin": 24360,
											"end": 24430,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 24360,
											"end": 24430,
											"name": "tag",
											"source": 2,
											"value": "500"
										},
										{
											"begin": 24360,
											"end": 24430,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 24440,
											"end": 24510,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "501"
										},
										{
											"begin": 24506,
											"end": 24508,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 24495,
											"end": 24504,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 24491,
											"end": 24509,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 24482,
											"end": 24488,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 24440,
											"end": 24510,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "412"
										},
										{
											"begin": 24440,
											"end": 24510,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 24440,
											"end": 24510,
											"name": "tag",
											"source": 2,
											"value": "501"
										},
										{
											"begin": 24440,
											"end": 24510,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 24520,
											"end": 24592,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "502"
										},
										{
											"begin": 24588,
											"end": 24590,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 24577,
											"end": 24586,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 24573,
											"end": 24591,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 24564,
											"end": 24570,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 24520,
											"end": 24592,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "392"
										},
										{
											"begin": 24520,
											"end": 24592,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 24520,
											"end": 24592,
											"name": "tag",
											"source": 2,
											"value": "502"
										},
										{
											"begin": 24520,
											"end": 24592,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 24234,
											"end": 24599,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 24234,
											"end": 24599,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 24234,
											"end": 24599,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 24234,
											"end": 24599,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 24234,
											"end": 24599,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 24234,
											"end": 24599,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 24234,
											"end": 24599,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 24234,
											"end": 24599,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 24605,
											"end": 24774,
											"name": "tag",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 24605,
											"end": 24774,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 24689,
											"end": 24700,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 24723,
											"end": 24729,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 24718,
											"end": 24721,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 24711,
											"end": 24730,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 24763,
											"end": 24767,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 24758,
											"end": 24761,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 24754,
											"end": 24768,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 24739,
											"end": 24768,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 24739,
											"end": 24768,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 24701,
											"end": 24774,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 24701,
											"end": 24774,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 24701,
											"end": 24774,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 24701,
											"end": 24774,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 24701,
											"end": 24774,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 24780,
											"end": 25085,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 24780,
											"end": 25085,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 24820,
											"end": 24823,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 24839,
											"end": 24859,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "505"
										},
										{
											"begin": 24857,
											"end": 24858,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 24839,
											"end": 24859,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "411"
										},
										{
											"begin": 24839,
											"end": 24859,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 24839,
											"end": 24859,
											"name": "tag",
											"source": 2,
											"value": "505"
										},
										{
											"begin": 24839,
											"end": 24859,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 24834,
											"end": 24859,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 24834,
											"end": 24859,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 24873,
											"end": 24893,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "506"
										},
										{
											"begin": 24891,
											"end": 24892,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 24873,
											"end": 24893,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "411"
										},
										{
											"begin": 24873,
											"end": 24893,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 24873,
											"end": 24893,
											"name": "tag",
											"source": 2,
											"value": "506"
										},
										{
											"begin": 24873,
											"end": 24893,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 24868,
											"end": 24893,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 24868,
											"end": 24893,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 25027,
											"end": 25028,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 24959,
											"end": 25025,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24955,
											"end": 25029,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 24952,
											"end": 24953,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 24949,
											"end": 25030,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 24946,
											"end": 24948,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 24946,
											"end": 24948,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "507"
										},
										{
											"begin": 24946,
											"end": 24948,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 25033,
											"end": 25051,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "508"
										},
										{
											"begin": 25033,
											"end": 25051,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "509"
										},
										{
											"begin": 25033,
											"end": 25051,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 25033,
											"end": 25051,
											"name": "tag",
											"source": 2,
											"value": "508"
										},
										{
											"begin": 25033,
											"end": 25051,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 24946,
											"end": 24948,
											"name": "tag",
											"source": 2,
											"value": "507"
										},
										{
											"begin": 24946,
											"end": 24948,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 25077,
											"end": 25078,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 25074,
											"end": 25075,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 25070,
											"end": 25079,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 25063,
											"end": 25079,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 25063,
											"end": 25079,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 24824,
											"end": 25085,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 24824,
											"end": 25085,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 24824,
											"end": 25085,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 24824,
											"end": 25085,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 24824,
											"end": 25085,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 25091,
											"end": 25337,
											"name": "tag",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 25091,
											"end": 25337,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 25130,
											"end": 25133,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 25149,
											"end": 25168,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "511"
										},
										{
											"begin": 25166,
											"end": 25167,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 25149,
											"end": 25168,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "415"
										},
										{
											"begin": 25149,
											"end": 25168,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 25149,
											"end": 25168,
											"name": "tag",
											"source": 2,
											"value": "511"
										},
										{
											"begin": 25149,
											"end": 25168,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 25144,
											"end": 25168,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 25144,
											"end": 25168,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 25182,
											"end": 25201,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "512"
										},
										{
											"begin": 25199,
											"end": 25200,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 25182,
											"end": 25201,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "415"
										},
										{
											"begin": 25182,
											"end": 25201,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 25182,
											"end": 25201,
											"name": "tag",
											"source": 2,
											"value": "512"
										},
										{
											"begin": 25182,
											"end": 25201,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 25177,
											"end": 25201,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 25177,
											"end": 25201,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 25279,
											"end": 25280,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 25267,
											"end": 25277,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 25263,
											"end": 25281,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 25260,
											"end": 25261,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 25257,
											"end": 25282,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 25254,
											"end": 25256,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 25254,
											"end": 25256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "513"
										},
										{
											"begin": 25254,
											"end": 25256,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 25285,
											"end": 25303,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "514"
										},
										{
											"begin": 25285,
											"end": 25303,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "509"
										},
										{
											"begin": 25285,
											"end": 25303,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 25285,
											"end": 25303,
											"name": "tag",
											"source": 2,
											"value": "514"
										},
										{
											"begin": 25285,
											"end": 25303,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 25254,
											"end": 25256,
											"name": "tag",
											"source": 2,
											"value": "513"
										},
										{
											"begin": 25254,
											"end": 25256,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 25329,
											"end": 25330,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 25326,
											"end": 25327,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 25322,
											"end": 25331,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 25315,
											"end": 25331,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 25315,
											"end": 25331,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 25134,
											"end": 25337,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 25134,
											"end": 25337,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 25134,
											"end": 25337,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 25134,
											"end": 25337,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 25134,
											"end": 25337,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 25343,
											"end": 25528,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 25343,
											"end": 25528,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 25383,
											"end": 25384,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 25400,
											"end": 25420,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "516"
										},
										{
											"begin": 25418,
											"end": 25419,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 25400,
											"end": 25420,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "411"
										},
										{
											"begin": 25400,
											"end": 25420,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 25400,
											"end": 25420,
											"name": "tag",
											"source": 2,
											"value": "516"
										},
										{
											"begin": 25400,
											"end": 25420,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 25395,
											"end": 25420,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 25395,
											"end": 25420,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 25434,
											"end": 25454,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "517"
										},
										{
											"begin": 25452,
											"end": 25453,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 25434,
											"end": 25454,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "411"
										},
										{
											"begin": 25434,
											"end": 25454,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 25434,
											"end": 25454,
											"name": "tag",
											"source": 2,
											"value": "517"
										},
										{
											"begin": 25434,
											"end": 25454,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 25429,
											"end": 25454,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 25429,
											"end": 25454,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 25473,
											"end": 25474,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 25463,
											"end": 25465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "518"
										},
										{
											"begin": 25463,
											"end": 25465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 25478,
											"end": 25496,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "519"
										},
										{
											"begin": 25478,
											"end": 25496,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "520"
										},
										{
											"begin": 25478,
											"end": 25496,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 25478,
											"end": 25496,
											"name": "tag",
											"source": 2,
											"value": "519"
										},
										{
											"begin": 25478,
											"end": 25496,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 25463,
											"end": 25465,
											"name": "tag",
											"source": 2,
											"value": "518"
										},
										{
											"begin": 25463,
											"end": 25465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 25520,
											"end": 25521,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 25517,
											"end": 25518,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 25513,
											"end": 25522,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 25508,
											"end": 25522,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 25508,
											"end": 25522,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 25385,
											"end": 25528,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 25385,
											"end": 25528,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 25385,
											"end": 25528,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 25385,
											"end": 25528,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 25385,
											"end": 25528,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 25534,
											"end": 25882,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 25534,
											"end": 25882,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 25574,
											"end": 25581,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 25597,
											"end": 25617,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "522"
										},
										{
											"begin": 25615,
											"end": 25616,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 25597,
											"end": 25617,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "411"
										},
										{
											"begin": 25597,
											"end": 25617,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 25597,
											"end": 25617,
											"name": "tag",
											"source": 2,
											"value": "522"
										},
										{
											"begin": 25597,
											"end": 25617,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 25592,
											"end": 25617,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 25592,
											"end": 25617,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 25631,
											"end": 25651,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "523"
										},
										{
											"begin": 25649,
											"end": 25650,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 25631,
											"end": 25651,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "411"
										},
										{
											"begin": 25631,
											"end": 25651,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 25631,
											"end": 25651,
											"name": "tag",
											"source": 2,
											"value": "523"
										},
										{
											"begin": 25631,
											"end": 25651,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 25626,
											"end": 25651,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 25626,
											"end": 25651,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 25819,
											"end": 25820,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 25751,
											"end": 25817,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25747,
											"end": 25821,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 25744,
											"end": 25745,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 25741,
											"end": 25822,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 25736,
											"end": 25737,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 25729,
											"end": 25738,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 25722,
											"end": 25739,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 25718,
											"end": 25823,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 25715,
											"end": 25717,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 25715,
											"end": 25717,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "524"
										},
										{
											"begin": 25715,
											"end": 25717,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 25826,
											"end": 25844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "525"
										},
										{
											"begin": 25826,
											"end": 25844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "509"
										},
										{
											"begin": 25826,
											"end": 25844,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 25826,
											"end": 25844,
											"name": "tag",
											"source": 2,
											"value": "525"
										},
										{
											"begin": 25826,
											"end": 25844,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 25715,
											"end": 25717,
											"name": "tag",
											"source": 2,
											"value": "524"
										},
										{
											"begin": 25715,
											"end": 25717,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 25874,
											"end": 25875,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 25871,
											"end": 25872,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 25867,
											"end": 25876,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 25856,
											"end": 25876,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 25856,
											"end": 25876,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 25582,
											"end": 25882,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 25582,
											"end": 25882,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 25582,
											"end": 25882,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 25582,
											"end": 25882,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 25582,
											"end": 25882,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 25888,
											"end": 26079,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 25888,
											"end": 26079,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 25928,
											"end": 25932,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 25948,
											"end": 25968,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "527"
										},
										{
											"begin": 25966,
											"end": 25967,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 25948,
											"end": 25968,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "411"
										},
										{
											"begin": 25948,
											"end": 25968,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 25948,
											"end": 25968,
											"name": "tag",
											"source": 2,
											"value": "527"
										},
										{
											"begin": 25948,
											"end": 25968,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 25943,
											"end": 25968,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 25943,
											"end": 25968,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 25982,
											"end": 26002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "528"
										},
										{
											"begin": 26000,
											"end": 26001,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 25982,
											"end": 26002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "411"
										},
										{
											"begin": 25982,
											"end": 26002,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 25982,
											"end": 26002,
											"name": "tag",
											"source": 2,
											"value": "528"
										},
										{
											"begin": 25982,
											"end": 26002,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 25977,
											"end": 26002,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 25977,
											"end": 26002,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 26021,
											"end": 26022,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 26018,
											"end": 26019,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 26015,
											"end": 26023,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 26012,
											"end": 26014,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 26012,
											"end": 26014,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "529"
										},
										{
											"begin": 26012,
											"end": 26014,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 26026,
											"end": 26044,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "530"
										},
										{
											"begin": 26026,
											"end": 26044,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "509"
										},
										{
											"begin": 26026,
											"end": 26044,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 26026,
											"end": 26044,
											"name": "tag",
											"source": 2,
											"value": "530"
										},
										{
											"begin": 26026,
											"end": 26044,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 26012,
											"end": 26014,
											"name": "tag",
											"source": 2,
											"value": "529"
										},
										{
											"begin": 26012,
											"end": 26014,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 26071,
											"end": 26072,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 26068,
											"end": 26069,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 26064,
											"end": 26073,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 26056,
											"end": 26073,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 26056,
											"end": 26073,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 25933,
											"end": 26079,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 25933,
											"end": 26079,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 25933,
											"end": 26079,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 25933,
											"end": 26079,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 25933,
											"end": 26079,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 26085,
											"end": 26181,
											"name": "tag",
											"source": 2,
											"value": "281"
										},
										{
											"begin": 26085,
											"end": 26181,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 26122,
											"end": 26129,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 26151,
											"end": 26175,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "532"
										},
										{
											"begin": 26169,
											"end": 26174,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 26151,
											"end": 26175,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "533"
										},
										{
											"begin": 26151,
											"end": 26175,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 26151,
											"end": 26175,
											"name": "tag",
											"source": 2,
											"value": "532"
										},
										{
											"begin": 26151,
											"end": 26175,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 26140,
											"end": 26175,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 26140,
											"end": 26175,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 26130,
											"end": 26181,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 26130,
											"end": 26181,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 26130,
											"end": 26181,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 26130,
											"end": 26181,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 26187,
											"end": 26277,
											"name": "tag",
											"source": 2,
											"value": "534"
										},
										{
											"begin": 26187,
											"end": 26277,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 26221,
											"end": 26228,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 26264,
											"end": 26269,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 26257,
											"end": 26270,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 26250,
											"end": 26271,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 26239,
											"end": 26271,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 26239,
											"end": 26271,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 26229,
											"end": 26277,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 26229,
											"end": 26277,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 26229,
											"end": 26277,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 26229,
											"end": 26277,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 26283,
											"end": 26401,
											"name": "tag",
											"source": 2,
											"value": "395"
										},
										{
											"begin": 26283,
											"end": 26401,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 26320,
											"end": 26327,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 26360,
											"end": 26394,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26353,
											"end": 26358,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 26349,
											"end": 26395,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 26338,
											"end": 26395,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 26338,
											"end": 26395,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 26328,
											"end": 26401,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 26328,
											"end": 26401,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 26328,
											"end": 26401,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 26328,
											"end": 26401,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 26407,
											"end": 26533,
											"name": "tag",
											"source": 2,
											"value": "533"
										},
										{
											"begin": 26407,
											"end": 26533,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 26444,
											"end": 26451,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 26484,
											"end": 26526,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26477,
											"end": 26482,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 26473,
											"end": 26527,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 26462,
											"end": 26527,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 26462,
											"end": 26527,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 26452,
											"end": 26533,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 26452,
											"end": 26533,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 26452,
											"end": 26533,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 26452,
											"end": 26533,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 26539,
											"end": 26630,
											"name": "tag",
											"source": 2,
											"value": "403"
										},
										{
											"begin": 26539,
											"end": 26630,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 26575,
											"end": 26582,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 26615,
											"end": 26623,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFF"
										},
										{
											"begin": 26608,
											"end": 26613,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 26604,
											"end": 26624,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 26593,
											"end": 26624,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 26593,
											"end": 26624,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 26583,
											"end": 26630,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 26583,
											"end": 26630,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 26583,
											"end": 26630,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 26583,
											"end": 26630,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 26636,
											"end": 26713,
											"name": "tag",
											"source": 2,
											"value": "411"
										},
										{
											"begin": 26636,
											"end": 26713,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 26673,
											"end": 26680,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 26702,
											"end": 26707,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 26691,
											"end": 26707,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 26691,
											"end": 26707,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 26681,
											"end": 26713,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 26681,
											"end": 26713,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 26681,
											"end": 26713,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 26681,
											"end": 26713,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 26719,
											"end": 26812,
											"name": "tag",
											"source": 2,
											"value": "415"
										},
										{
											"begin": 26719,
											"end": 26812,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 26755,
											"end": 26762,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 26795,
											"end": 26805,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 26788,
											"end": 26793,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 26784,
											"end": 26806,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 26773,
											"end": 26806,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 26773,
											"end": 26806,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 26763,
											"end": 26812,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 26763,
											"end": 26812,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 26763,
											"end": 26812,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 26763,
											"end": 26812,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 26818,
											"end": 26921,
											"name": "tag",
											"source": 2,
											"value": "423"
										},
										{
											"begin": 26818,
											"end": 26921,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 26854,
											"end": 26861,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 26894,
											"end": 26914,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26887,
											"end": 26892,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 26883,
											"end": 26915,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 26872,
											"end": 26915,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 26872,
											"end": 26915,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 26862,
											"end": 26921,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 26862,
											"end": 26921,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 26862,
											"end": 26921,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 26862,
											"end": 26921,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 26927,
											"end": 27081,
											"name": "tag",
											"source": 2,
											"value": "285"
										},
										{
											"begin": 26927,
											"end": 27081,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 26991,
											"end": 27000,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 27024,
											"end": 27075,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "543"
										},
										{
											"begin": 27069,
											"end": 27074,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 27024,
											"end": 27075,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "544"
										},
										{
											"begin": 27024,
											"end": 27075,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 27024,
											"end": 27075,
											"name": "tag",
											"source": 2,
											"value": "543"
										},
										{
											"begin": 27024,
											"end": 27075,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 27011,
											"end": 27075,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 27011,
											"end": 27075,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 27001,
											"end": 27081,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 27001,
											"end": 27081,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 27001,
											"end": 27081,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 27001,
											"end": 27081,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 27087,
											"end": 27214,
											"name": "tag",
											"source": 2,
											"value": "544"
										},
										{
											"begin": 27087,
											"end": 27214,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 27151,
											"end": 27160,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 27184,
											"end": 27208,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "546"
										},
										{
											"begin": 27202,
											"end": 27207,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 27184,
											"end": 27208,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "533"
										},
										{
											"begin": 27184,
											"end": 27208,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 27184,
											"end": 27208,
											"name": "tag",
											"source": 2,
											"value": "546"
										},
										{
											"begin": 27184,
											"end": 27208,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 27171,
											"end": 27208,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 27171,
											"end": 27208,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 27161,
											"end": 27214,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 27161,
											"end": 27214,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 27161,
											"end": 27214,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 27161,
											"end": 27214,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 27220,
											"end": 27333,
											"name": "tag",
											"source": 2,
											"value": "399"
										},
										{
											"begin": 27220,
											"end": 27333,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 27270,
											"end": 27279,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 27303,
											"end": 27327,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "548"
										},
										{
											"begin": 27321,
											"end": 27326,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 27303,
											"end": 27327,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "395"
										},
										{
											"begin": 27303,
											"end": 27327,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 27303,
											"end": 27327,
											"name": "tag",
											"source": 2,
											"value": "548"
										},
										{
											"begin": 27303,
											"end": 27327,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 27290,
											"end": 27327,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 27290,
											"end": 27327,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 27280,
											"end": 27333,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 27280,
											"end": 27333,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 27280,
											"end": 27333,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 27280,
											"end": 27333,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 27339,
											"end": 27450,
											"name": "tag",
											"source": 2,
											"value": "407"
										},
										{
											"begin": 27339,
											"end": 27450,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 27388,
											"end": 27397,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 27421,
											"end": 27444,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "550"
										},
										{
											"begin": 27438,
											"end": 27443,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 27421,
											"end": 27444,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "403"
										},
										{
											"begin": 27421,
											"end": 27444,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 27421,
											"end": 27444,
											"name": "tag",
											"source": 2,
											"value": "550"
										},
										{
											"begin": 27421,
											"end": 27444,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 27408,
											"end": 27444,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 27408,
											"end": 27444,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 27398,
											"end": 27450,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 27398,
											"end": 27450,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 27398,
											"end": 27450,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 27398,
											"end": 27450,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 27456,
											"end": 27567,
											"name": "tag",
											"source": 2,
											"value": "419"
										},
										{
											"begin": 27456,
											"end": 27567,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 27505,
											"end": 27514,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 27538,
											"end": 27561,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "552"
										},
										{
											"begin": 27555,
											"end": 27560,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 27538,
											"end": 27561,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "423"
										},
										{
											"begin": 27538,
											"end": 27561,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 27538,
											"end": 27561,
											"name": "tag",
											"source": 2,
											"value": "552"
										},
										{
											"begin": 27538,
											"end": 27561,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 27525,
											"end": 27561,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 27525,
											"end": 27561,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 27515,
											"end": 27567,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 27515,
											"end": 27567,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 27515,
											"end": 27567,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 27515,
											"end": 27567,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 27573,
											"end": 27753,
											"name": "tag",
											"source": 2,
											"value": "509"
										},
										{
											"begin": 27573,
											"end": 27753,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 27621,
											"end": 27698,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 27618,
											"end": 27619,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 27611,
											"end": 27699,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 27718,
											"end": 27722,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 27715,
											"end": 27716,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 27708,
											"end": 27723,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 27742,
											"end": 27746,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 27739,
											"end": 27740,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 27732,
											"end": 27747,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 27759,
											"end": 27939,
											"name": "tag",
											"source": 2,
											"value": "520"
										},
										{
											"begin": 27759,
											"end": 27939,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 27807,
											"end": 27884,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 27804,
											"end": 27805,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 27797,
											"end": 27885,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 27904,
											"end": 27908,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 27901,
											"end": 27902,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 27894,
											"end": 27909,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 27928,
											"end": 27932,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 27925,
											"end": 27926,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 27918,
											"end": 27933,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 27945,
											"end": 28124,
											"name": "tag",
											"source": 2,
											"value": "291"
										},
										{
											"begin": 27945,
											"end": 28124,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 28085,
											"end": 28116,
											"name": "PUSH",
											"source": 2,
											"value": "526577617264206F696C657273207472616E73666572206661696C6564000000"
										},
										{
											"begin": 28081,
											"end": 28082,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 28073,
											"end": 28079,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 28069,
											"end": 28083,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 28062,
											"end": 28117,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 28051,
											"end": 28124,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 28051,
											"end": 28124,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 28130,
											"end": 28351,
											"name": "tag",
											"source": 2,
											"value": "296"
										},
										{
											"begin": 28130,
											"end": 28351,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 28270,
											"end": 28304,
											"name": "PUSH",
											"source": 2,
											"value": "56657374696E672072656C656173653A206E6F20746F6B656E73206172652064"
										},
										{
											"begin": 28266,
											"end": 28267,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 28258,
											"end": 28264,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 28254,
											"end": 28268,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 28247,
											"end": 28305,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 28339,
											"end": 28343,
											"name": "PUSH",
											"source": 2,
											"value": "7565000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 28334,
											"end": 28336,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 28326,
											"end": 28332,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 28322,
											"end": 28337,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 28315,
											"end": 28344,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 28236,
											"end": 28351,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 28236,
											"end": 28351,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 28357,
											"end": 28589,
											"name": "tag",
											"source": 2,
											"value": "301"
										},
										{
											"begin": 28357,
											"end": 28589,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 28497,
											"end": 28531,
											"name": "PUSH",
											"source": 2,
											"value": "546F6B656E56657374696E673A2062656E656669636961727920697320746865"
										},
										{
											"begin": 28493,
											"end": 28494,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 28485,
											"end": 28491,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 28481,
											"end": 28495,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 28474,
											"end": 28532,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 28566,
											"end": 28581,
											"name": "PUSH",
											"source": 2,
											"value": "207A65726F206164647265737300000000000000000000000000000000000000"
										},
										{
											"begin": 28561,
											"end": 28563,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 28553,
											"end": 28559,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 28549,
											"end": 28564,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 28542,
											"end": 28582,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 28463,
											"end": 28589,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 28463,
											"end": 28589,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 28595,
											"end": 28771,
											"name": "tag",
											"source": 2,
											"value": "306"
										},
										{
											"begin": 28595,
											"end": 28771,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 28735,
											"end": 28763,
											"name": "PUSH",
											"source": 2,
											"value": "506F6F6C20746F6B656E207472616E73666572206661696C6564000000000000"
										},
										{
											"begin": 28731,
											"end": 28732,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 28723,
											"end": 28729,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 28719,
											"end": 28733,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 28712,
											"end": 28764,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 28701,
											"end": 28771,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 28701,
											"end": 28771,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 28777,
											"end": 29081,
											"name": "tag",
											"source": 2,
											"value": "311"
										},
										{
											"begin": 28777,
											"end": 29081,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 28917,
											"end": 28951,
											"name": "PUSH",
											"source": 2,
											"value": "596F75207374696C6C20686176652061207374616B65206C6F636B6564202D20"
										},
										{
											"begin": 28913,
											"end": 28914,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 28905,
											"end": 28911,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 28901,
											"end": 28915,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 28894,
											"end": 28952,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 28986,
											"end": 29020,
											"name": "PUSH",
											"source": 2,
											"value": "706C6561736520756E6C6F636B2066697273742C20646F6E2774206C65617665"
										},
										{
											"begin": 28981,
											"end": 28983,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 28973,
											"end": 28979,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 28969,
											"end": 28984,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 28962,
											"end": 29021,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 29055,
											"end": 29073,
											"name": "PUSH",
											"source": 2,
											"value": "2066726565206D6F6E6579206865726500000000000000000000000000000000"
										},
										{
											"begin": 29050,
											"end": 29052,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 29042,
											"end": 29048,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 29038,
											"end": 29053,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 29031,
											"end": 29074,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 28883,
											"end": 29081,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 28883,
											"end": 29081,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 29087,
											"end": 29269,
											"name": "tag",
											"source": 2,
											"value": "316"
										},
										{
											"begin": 29087,
											"end": 29269,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 29227,
											"end": 29261,
											"name": "PUSH",
											"source": 2,
											"value": "596F7520646F6E277420686176652061207374616B6520746F20756E6C6F636B"
										},
										{
											"begin": 29223,
											"end": 29224,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 29215,
											"end": 29221,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 29211,
											"end": 29225,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 29204,
											"end": 29262,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 29193,
											"end": 29269,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 29193,
											"end": 29269,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 29275,
											"end": 29511,
											"name": "tag",
											"source": 2,
											"value": "321"
										},
										{
											"begin": 29275,
											"end": 29511,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 29415,
											"end": 29449,
											"name": "PUSH",
											"source": 2,
											"value": "596F7572206C6F636B20706572696F642065786365656473205374616B696E67"
										},
										{
											"begin": 29411,
											"end": 29412,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 29403,
											"end": 29409,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 29399,
											"end": 29413,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 29392,
											"end": 29450,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 29484,
											"end": 29503,
											"name": "PUSH",
											"source": 2,
											"value": "2050726F6772616D206475726174696F6E000000000000000000000000000000"
										},
										{
											"begin": 29479,
											"end": 29481,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 29471,
											"end": 29477,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 29467,
											"end": 29482,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 29460,
											"end": 29504,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 29381,
											"end": 29511,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 29381,
											"end": 29511,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 29517,
											"end": 29682,
											"name": "tag",
											"source": 2,
											"value": "326"
										},
										{
											"begin": 29517,
											"end": 29682,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 29657,
											"end": 29674,
											"name": "PUSH",
											"source": 2,
											"value": "416C7265616479207374616B696E670000000000000000000000000000000000"
										},
										{
											"begin": 29653,
											"end": 29654,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 29645,
											"end": 29651,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 29641,
											"end": 29655,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 29634,
											"end": 29675,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 29623,
											"end": 29682,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 29623,
											"end": 29682,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 29688,
											"end": 29916,
											"name": "tag",
											"source": 2,
											"value": "331"
										},
										{
											"begin": 29688,
											"end": 29916,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 29828,
											"end": 29862,
											"name": "PUSH",
											"source": 2,
											"value": "596F75206469646E2774206561726E20616E7920696E746567657220616D6F75"
										},
										{
											"begin": 29824,
											"end": 29825,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 29816,
											"end": 29822,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 29812,
											"end": 29826,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 29805,
											"end": 29863,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 29897,
											"end": 29908,
											"name": "PUSH",
											"source": 2,
											"value": "6E74206F66207765690000000000000000000000000000000000000000000000"
										},
										{
											"begin": 29892,
											"end": 29894,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 29884,
											"end": 29890,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 29880,
											"end": 29895,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 29873,
											"end": 29909,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 29794,
											"end": 29916,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 29794,
											"end": 29916,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 29922,
											"end": 30160,
											"name": "tag",
											"source": 2,
											"value": "336"
										},
										{
											"begin": 29922,
											"end": 30160,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 30062,
											"end": 30096,
											"name": "PUSH",
											"source": 2,
											"value": "4E65697468657220746F6B656E416D6F756E74206E6F72206C6F636B696E6750"
										},
										{
											"begin": 30058,
											"end": 30059,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 30050,
											"end": 30056,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 30046,
											"end": 30060,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 30039,
											"end": 30097,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 30131,
											"end": 30152,
											"name": "PUSH",
											"source": 2,
											"value": "6572696F6420636F756C646E2774206265203000000000000000000000000000"
										},
										{
											"begin": 30126,
											"end": 30128,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 30118,
											"end": 30124,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 30114,
											"end": 30129,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 30107,
											"end": 30153,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 30028,
											"end": 30160,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 30028,
											"end": 30160,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 30166,
											"end": 30413,
											"name": "tag",
											"source": 2,
											"value": "341"
										},
										{
											"begin": 30166,
											"end": 30413,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 30306,
											"end": 30340,
											"name": "PUSH",
											"source": 2,
											"value": "596F752063616E277420776974686472617720746865207374616B6520696E20"
										},
										{
											"begin": 30302,
											"end": 30303,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 30294,
											"end": 30300,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 30290,
											"end": 30304,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 30283,
											"end": 30341,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 30375,
											"end": 30405,
											"name": "PUSH",
											"source": 2,
											"value": "7468652073616D6520626C6F636B20697420776173206C6F636B656400000000"
										},
										{
											"begin": 30370,
											"end": 30372,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 30362,
											"end": 30368,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 30358,
											"end": 30373,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 30351,
											"end": 30406,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 30272,
											"end": 30413,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 30272,
											"end": 30413,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 30419,
											"end": 30647,
											"name": "tag",
											"source": 2,
											"value": "346"
										},
										{
											"begin": 30419,
											"end": 30647,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 30559,
											"end": 30593,
											"name": "PUSH",
											"source": 2,
											"value": "5374616B696E6746756E6420646F65736E2774206861766520656E6F75676820"
										},
										{
											"begin": 30555,
											"end": 30556,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 30547,
											"end": 30553,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 30543,
											"end": 30557,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 30536,
											"end": 30594,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 30628,
											"end": 30639,
											"name": "PUSH",
											"source": 2,
											"value": "616C6C6F77616E63650000000000000000000000000000000000000000000000"
										},
										{
											"begin": 30623,
											"end": 30625,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 30615,
											"end": 30621,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 30611,
											"end": 30626,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 30604,
											"end": 30640,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 30525,
											"end": 30647,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 30525,
											"end": 30647,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 30653,
											"end": 30835,
											"name": "tag",
											"source": 2,
											"value": "351"
										},
										{
											"begin": 30653,
											"end": 30835,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 30793,
											"end": 30827,
											"name": "PUSH",
											"source": 2,
											"value": "706F6F6C546F6B656E20616464726573732063616E6E6F74206265207A65726F"
										},
										{
											"begin": 30789,
											"end": 30790,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 30781,
											"end": 30787,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 30777,
											"end": 30791,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 30770,
											"end": 30828,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 30759,
											"end": 30835,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 30759,
											"end": 30835,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 30841,
											"end": 31071,
											"name": "tag",
											"source": 2,
											"value": "356"
										},
										{
											"begin": 30841,
											"end": 31071,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 30981,
											"end": 31015,
											"name": "PUSH",
											"source": 2,
											"value": "5374616B696E6746756E6420646F65736E2774206861766520656E6F75676820"
										},
										{
											"begin": 30977,
											"end": 30978,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 30969,
											"end": 30975,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 30965,
											"end": 30979,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 30958,
											"end": 31016,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 31050,
											"end": 31063,
											"name": "PUSH",
											"source": 2,
											"value": "4F494C2062616C616E6365000000000000000000000000000000000000000000"
										},
										{
											"begin": 31045,
											"end": 31047,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 31037,
											"end": 31043,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 31033,
											"end": 31048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 31026,
											"end": 31064,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 30947,
											"end": 31071,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 30947,
											"end": 31071,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 31077,
											"end": 31244,
											"name": "tag",
											"source": 2,
											"value": "361"
										},
										{
											"begin": 31077,
											"end": 31244,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 31217,
											"end": 31236,
											"name": "PUSH",
											"source": 2,
											"value": "706F6F6C546F6B656E206E6F7420736574000000000000000000000000000000"
										},
										{
											"begin": 31213,
											"end": 31214,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 31205,
											"end": 31211,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 31201,
											"end": 31215,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 31194,
											"end": 31237,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 31183,
											"end": 31244,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 31183,
											"end": 31244,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 31250,
											"end": 31470,
											"name": "tag",
											"source": 2,
											"value": "366"
										},
										{
											"begin": 31250,
											"end": 31470,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 31390,
											"end": 31424,
											"name": "PUSH",
											"source": 2,
											"value": "5472616E7366657246726F6D206F6620706F6F6C546F6B656E73206661696C65"
										},
										{
											"begin": 31386,
											"end": 31387,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 31378,
											"end": 31384,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 31374,
											"end": 31388,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 31367,
											"end": 31425,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 31459,
											"end": 31462,
											"name": "PUSH",
											"source": 2,
											"value": "6400000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 31454,
											"end": 31456,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 31446,
											"end": 31452,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 31442,
											"end": 31457,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 31435,
											"end": 31463,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 31356,
											"end": 31470,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 31356,
											"end": 31470,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 31476,
											"end": 31653,
											"name": "tag",
											"source": 2,
											"value": "371"
										},
										{
											"begin": 31476,
											"end": 31653,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 31616,
											"end": 31645,
											"name": "PUSH",
											"source": 2,
											"value": "43616E206F6E6C792062652063616C6C6564206279206F776E65720000000000"
										},
										{
											"begin": 31612,
											"end": 31613,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 31604,
											"end": 31610,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 31600,
											"end": 31614,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 31593,
											"end": 31646,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 31582,
											"end": 31653,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 31582,
											"end": 31653,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 31659,
											"end": 31897,
											"name": "tag",
											"source": 2,
											"value": "376"
										},
										{
											"begin": 31659,
											"end": 31897,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 31799,
											"end": 31833,
											"name": "PUSH",
											"source": 2,
											"value": "596F752063616E206F6E6C792067657420526577617264732061667465722053"
										},
										{
											"begin": 31795,
											"end": 31796,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 31787,
											"end": 31793,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 31783,
											"end": 31797,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 31776,
											"end": 31834,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 31868,
											"end": 31889,
											"name": "PUSH",
											"source": 2,
											"value": "74616B696E672050726F6772616D20656E647300000000000000000000000000"
										},
										{
											"begin": 31863,
											"end": 31865,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 31855,
											"end": 31861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 31851,
											"end": 31866,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 31844,
											"end": 31890,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 31765,
											"end": 31897,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 31765,
											"end": 31897,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 31903,
											"end": 32133,
											"name": "tag",
											"source": 2,
											"value": "381"
										},
										{
											"begin": 31903,
											"end": 32133,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 32043,
											"end": 32077,
											"name": "PUSH",
											"source": 2,
											"value": "5472616E7366657246726F6D206F66204F494C2066726F6D205374616B696E67"
										},
										{
											"begin": 32039,
											"end": 32040,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 32031,
											"end": 32037,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 32027,
											"end": 32041,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 32020,
											"end": 32078,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 32112,
											"end": 32125,
											"name": "PUSH",
											"source": 2,
											"value": "46756E64206661696C6564000000000000000000000000000000000000000000"
										},
										{
											"begin": 32107,
											"end": 32109,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 32099,
											"end": 32105,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 32095,
											"end": 32110,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 32088,
											"end": 32126,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 32009,
											"end": 32133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 32009,
											"end": 32133,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 32139,
											"end": 32320,
											"name": "tag",
											"source": 2,
											"value": "386"
										},
										{
											"begin": 32139,
											"end": 32320,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 32279,
											"end": 32312,
											"name": "PUSH",
											"source": 2,
											"value": "596F7520646F6E2774206861766520616E7920726577617264506F696E747300"
										},
										{
											"begin": 32275,
											"end": 32276,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 32267,
											"end": 32273,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 32263,
											"end": 32277,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 32256,
											"end": 32313,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 32245,
											"end": 32320,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 32245,
											"end": 32320,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 32326,
											"end": 32501,
											"name": "tag",
											"source": 2,
											"value": "391"
										},
										{
											"begin": 32326,
											"end": 32501,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 32466,
											"end": 32493,
											"name": "PUSH",
											"source": 2,
											"value": "706F6F6C546F6B656E2077617320616C72656164792073657400000000000000"
										},
										{
											"begin": 32462,
											"end": 32463,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 32454,
											"end": 32460,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 32450,
											"end": 32464,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 32443,
											"end": 32494,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 32432,
											"end": 32501,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 32432,
											"end": 32501,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 32507,
											"end": 32629,
											"name": "tag",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 32507,
											"end": 32629,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 32580,
											"end": 32604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "577"
										},
										{
											"begin": 32598,
											"end": 32603,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 32580,
											"end": 32604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "281"
										},
										{
											"begin": 32580,
											"end": 32604,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 32580,
											"end": 32604,
											"name": "tag",
											"source": 2,
											"value": "577"
										},
										{
											"begin": 32580,
											"end": 32604,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 32573,
											"end": 32578,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 32570,
											"end": 32605,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 32560,
											"end": 32562,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "578"
										},
										{
											"begin": 32560,
											"end": 32562,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 32619,
											"end": 32620,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 32616,
											"end": 32617,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 32609,
											"end": 32621,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 32560,
											"end": 32562,
											"name": "tag",
											"source": 2,
											"value": "578"
										},
										{
											"begin": 32560,
											"end": 32562,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 32550,
											"end": 32629,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 32550,
											"end": 32629,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 32635,
											"end": 32751,
											"name": "tag",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 32635,
											"end": 32751,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 32705,
											"end": 32726,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "580"
										},
										{
											"begin": 32720,
											"end": 32725,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 32705,
											"end": 32726,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "534"
										},
										{
											"begin": 32705,
											"end": 32726,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 32705,
											"end": 32726,
											"name": "tag",
											"source": 2,
											"value": "580"
										},
										{
											"begin": 32705,
											"end": 32726,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 32698,
											"end": 32703,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 32695,
											"end": 32727,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 32685,
											"end": 32687,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "581"
										},
										{
											"begin": 32685,
											"end": 32687,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 32741,
											"end": 32742,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 32738,
											"end": 32739,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 32731,
											"end": 32743,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 32685,
											"end": 32687,
											"name": "tag",
											"source": 2,
											"value": "581"
										},
										{
											"begin": 32685,
											"end": 32687,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 32675,
											"end": 32751,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 32675,
											"end": 32751,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 32757,
											"end": 32877,
											"name": "tag",
											"source": 2,
											"value": "252"
										},
										{
											"begin": 32757,
											"end": 32877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 32829,
											"end": 32852,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "583"
										},
										{
											"begin": 32846,
											"end": 32851,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 32829,
											"end": 32852,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "403"
										},
										{
											"begin": 32829,
											"end": 32852,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 32829,
											"end": 32852,
											"name": "tag",
											"source": 2,
											"value": "583"
										},
										{
											"begin": 32829,
											"end": 32852,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 32822,
											"end": 32827,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 32819,
											"end": 32853,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 32809,
											"end": 32811,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "584"
										},
										{
											"begin": 32809,
											"end": 32811,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 32867,
											"end": 32868,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 32864,
											"end": 32865,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 32857,
											"end": 32869,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 32809,
											"end": 32811,
											"name": "tag",
											"source": 2,
											"value": "584"
										},
										{
											"begin": 32809,
											"end": 32811,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 32799,
											"end": 32877,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 32799,
											"end": 32877,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 32883,
											"end": 33005,
											"name": "tag",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 32883,
											"end": 33005,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 32956,
											"end": 32980,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "586"
										},
										{
											"begin": 32974,
											"end": 32979,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 32956,
											"end": 32980,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "411"
										},
										{
											"begin": 32956,
											"end": 32980,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 32956,
											"end": 32980,
											"name": "tag",
											"source": 2,
											"value": "586"
										},
										{
											"begin": 32956,
											"end": 32980,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 32949,
											"end": 32954,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 32946,
											"end": 32981,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 32936,
											"end": 32938,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "587"
										},
										{
											"begin": 32936,
											"end": 32938,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 32995,
											"end": 32996,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 32992,
											"end": 32993,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 32985,
											"end": 32997,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 32936,
											"end": 32938,
											"name": "tag",
											"source": 2,
											"value": "587"
										},
										{
											"begin": 32936,
											"end": 32938,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 32926,
											"end": 33005,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 32926,
											"end": 33005,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 33011,
											"end": 33131,
											"name": "tag",
											"source": 2,
											"value": "260"
										},
										{
											"begin": 33011,
											"end": 33131,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 33083,
											"end": 33106,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "589"
										},
										{
											"begin": 33100,
											"end": 33105,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 33083,
											"end": 33106,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "423"
										},
										{
											"begin": 33083,
											"end": 33106,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 33083,
											"end": 33106,
											"name": "tag",
											"source": 2,
											"value": "589"
										},
										{
											"begin": 33083,
											"end": 33106,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 33076,
											"end": 33081,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 33073,
											"end": 33107,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 33063,
											"end": 33065,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "590"
										},
										{
											"begin": 33063,
											"end": 33065,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 33121,
											"end": 33122,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 33118,
											"end": 33119,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 33111,
											"end": 33123,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 33063,
											"end": 33065,
											"name": "tag",
											"source": 2,
											"value": "590"
										},
										{
											"begin": 33063,
											"end": 33065,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 33053,
											"end": 33131,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 33053,
											"end": 33131,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"calculateStakingRewardPoints(uint72,uint24)": "798633b9",
							"getRewards()": "0572b0cc",
							"grantedTokens(address)": "e0e4a722",
							"lockTokens(uint72,uint24)": "378592c8",
							"oilerToken()": "81e9207d",
							"owner()": "8da5cb5b",
							"poolToken()": "cbdf382c",
							"release()": "86d1a69f",
							"releasedTokens(address)": "70ff852b",
							"rewardPointsEarned(address)": "c959360b",
							"setPoolToken(address,address)": "f6ffab88",
							"stakes(address)": "16934fc4",
							"stakingFundAmount()": "52946b04",
							"stakingProgramEndsBlock()": "bc0925ae",
							"totalRewardPoints()": "c2e8caf6",
							"unlockTokens()": "f968f493",
							"vestingDuration()": "1514617e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oilerToken_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"stakingDurationInBlocks_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakingFundAmount_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vestingDuration_\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountEarned\",\"type\":\"uint256\"}],\"name\":\"RewardGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lockingPeriodInBlocks\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"expectedStakingRewardPoints\",\"type\":\"uint256\"}],\"name\":\"StakeLocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lockingPeriodInBlocks\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardPoints\",\"type\":\"uint256\"}],\"name\":\"StakeUnlocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lockingPeriodInBlocks\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"actualLockingPeriodInBlocks\",\"type\":\"uint256\"}],\"name\":\"StakeUnlockedPrematurely\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"grantedTokensReleased\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint72\",\"name\":\"tokenAmount_\",\"type\":\"uint72\"},{\"internalType\":\"uint24\",\"name\":\"lockingPeriodInBlocks_\",\"type\":\"uint24\"}],\"name\":\"calculateStakingRewardPoints\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"grantedTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint72\",\"name\":\"tokenAmount_\",\"type\":\"uint72\"},{\"internalType\":\"uint24\",\"name\":\"lockingPeriodInBlocks_\",\"type\":\"uint24\"}],\"name\":\"lockTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oilerToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"release\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"releasedTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"rewardPointsEarned\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"poolToken_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"stakingFundAddress_\",\"type\":\"address\"}],\"name\":\"setPoolToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakes\",\"outputs\":[{\"internalType\":\"uint72\",\"name\":\"tokenAmount\",\"type\":\"uint72\"},{\"internalType\":\"uint24\",\"name\":\"lockingPeriodInBlocks\",\"type\":\"uint24\"},{\"internalType\":\"uint32\",\"name\":\"startBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint128\",\"name\":\"expectedStakingRewardPoints\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingFundAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingProgramEndsBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalRewardPoints\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vestingDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"calculateStakingRewardPoints(uint72,uint24)\":{\"details\":\"If any parameter is zero - it will fail, thus we save gas on \\\"requires\\\" by not checking in other places\",\"params\":{\"lockingPeriodInBlocks_\":\"- Lock duration defined in blocks.\",\"tokenAmount_\":\"- Amount of tokens to be stake.\"}},\"constructor\":{\"details\":\"before deploying the stakingFundAddress must have set allowances on behalf of that contract. The address can be predicted basing on the CREATE or CREATE2 opcode.\",\"params\":{\"oilerToken_\":\"- address of the token in which rewards will be payed off.\",\"owner_\":\"- Owner of the contract (is used to initialize poolToken after it's available).\",\"stakingDurationInBlocks_\":\"- Number of blocks after which staking will end.\",\"stakingFundAmount_\":\"- Amount of tokens to be payed of as rewards.\",\"vestingDuration_\":\"- Number of blocks after which OIL tokens earned by staking will be released (duration of Vesting period).\"}},\"getRewards()\":{\"details\":\"Which means that all stakes lock periods are already over, and totalRewardPoints value isn't changing anymore - so we can now calculate the percentages of rewards\"},\"lockTokens(uint72,uint24)\":{\"params\":{\"lockingPeriodInBlocks_\":\"- locking period duration defined in blocks.\",\"tokenAmount_\":\"- Amount of LP tokens to be locked.\"}}},\"stateVariables\":{\"owner\":{\"details\":\"Owner is used only in setPoolToken()\"},\"vestingDuration\":{\"details\":\"In blocks - should be around 100 days\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"calculateStakingRewardPoints(uint72,uint24)\":{\"notice\":\"Calculates the RewardPoints user will earn for a given tokenAmount locked for a given period\"},\"getRewards()\":{\"notice\":\"This can only be called after the Staking Program ended\"},\"grantedTokens(address)\":{\"notice\":\"The amount of OIL tokens earned, granted to be released during vesting period \"},\"lockTokens(uint72,uint24)\":{\"notice\":\"Lock the LP tokens for a specified period of Blocks.Can only be called before Staking Program ends.And the locking period can't last longer than the end of Staking Program block.\"},\"oilerToken()\":{\"notice\":\"Oiler token that will be given as a reward\"},\"poolToken()\":{\"notice\":\"Uniswap pool that we accept LP tokens from\"},\"release()\":{\"notice\":\"Releases granted tokens\"},\"releasedTokens(address)\":{\"notice\":\"The amount of OIL tokens that were already released during vesting period\"},\"rewardPointsEarned(address)\":{\"notice\":\"\\\"Reward points\\\" each user earned (would be relative to totalRewardPoints to get the percentage)\"},\"setPoolToken(address,address)\":{\"notice\":\"Initialize poolToken when OIL<>USDC Uniswap pool is available\"},\"stakes(address)\":{\"notice\":\"Active stakes for each user\"},\"stakingFundAmount()\":{\"notice\":\"Amount of Staking Bonus Fund (500 000 OIL), Oiler funds must be here, approved and ready to be transferredFrom\"},\"stakingProgramEndsBlock()\":{\"notice\":\"Block when Staking Program ends          \"},\"totalRewardPoints()\":{\"notice\":\"Total \\\"reward points\\\" all users earned\"},\"unlockTokens()\":{\"notice\":\"Unlock the tokens and get the rewardThis can be called at any time, even after Staking Program end block\"}},\"notice\":\"Staking contract assumes there is a Staking Program going on until a specified Staking Program End Date. And there is an amount of Oiler tokens that is gonna be given away to incentivise participation in the Staking Program (called StakingFund).  During this Program - users commit to lock tokens for some period of time, earning RewardPoints (if they don't unlock prematurely). RewardPoints multiplier grows linearly with the locking period length (see the formula in calculateStakingRewardPoints() function)  After the end of the Staking Program - the amount of RewardPoints earned by each user is relatively compared to the total RewardPoints earned by all staking participants - and the OIL tokens from StakingFund are divided among them accordingly, by their RewardPoints proportions.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"token-staking(copy)(copy)/contracts/Staking.sol\":\"Staking\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"token-staking(copy)(copy)/contracts/Staking.sol\":{\"keccak256\":\"0x26e1918e9d3de12c8b3a8c980513637175faea101226f231648d6619b0599851\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c18687c00eb66e7478f81651c42109e63da9e262318d28e33405c060f9ec874a\",\"dweb:/ipfs/QmPVj9phF5Y5nRNZM2ZPTH2TcWr4HAVh4MxkjGtZkRV6er\"]},\"token-staking/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x3138ea0baa52800b416d6c3a25ab1f366ebf5d744d0158f4b347fe5882ccbe3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dd850b6d164fbdf2abcf4e6828ee1f3e17508627cbf8f487805c616f3d6816a5\",\"dweb:/ipfs/QmPNJmXfo3fUbEwZPDtA7bAYLX3bekxyuLzw5Sui2kKA64\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 18,
								"contract": "token-staking(copy)(copy)/contracts/Staking.sol:Staking",
								"label": "stakes",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_struct(Stake)12_storage)"
							},
							{
								"astId": 23,
								"contract": "token-staking(copy)(copy)/contracts/Staking.sol:Staking",
								"label": "rewardPointsEarned",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 26,
								"contract": "token-staking(copy)(copy)/contracts/Staking.sol:Staking",
								"label": "totalRewardPoints",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 36,
								"contract": "token-staking(copy)(copy)/contracts/Staking.sol:Staking",
								"label": "poolToken",
								"offset": 0,
								"slot": "3",
								"type": "t_contract(IERC20)786"
							},
							{
								"astId": 45,
								"contract": "token-staking(copy)(copy)/contracts/Staking.sol:Staking",
								"label": "grantedTokens",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 50,
								"contract": "token-staking(copy)(copy)/contracts/Staking.sol:Staking",
								"label": "releasedTokens",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)786": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(Stake)12_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct Staking.Stake)",
								"numberOfBytes": "32",
								"value": "t_struct(Stake)12_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(Stake)12_storage": {
								"encoding": "inplace",
								"label": "struct Staking.Stake",
								"members": [
									{
										"astId": 5,
										"contract": "token-staking(copy)(copy)/contracts/Staking.sol:Staking",
										"label": "tokenAmount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint72"
									},
									{
										"astId": 7,
										"contract": "token-staking(copy)(copy)/contracts/Staking.sol:Staking",
										"label": "lockingPeriodInBlocks",
										"offset": 9,
										"slot": "0",
										"type": "t_uint24"
									},
									{
										"astId": 9,
										"contract": "token-staking(copy)(copy)/contracts/Staking.sol:Staking",
										"label": "startBlock",
										"offset": 12,
										"slot": "0",
										"type": "t_uint32"
									},
									{
										"astId": 11,
										"contract": "token-staking(copy)(copy)/contracts/Staking.sol:Staking",
										"label": "expectedStakingRewardPoints",
										"offset": 16,
										"slot": "0",
										"type": "t_uint128"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint128": {
								"encoding": "inplace",
								"label": "uint128",
								"numberOfBytes": "16"
							},
							"t_uint24": {
								"encoding": "inplace",
								"label": "uint24",
								"numberOfBytes": "3"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint32": {
								"encoding": "inplace",
								"label": "uint32",
								"numberOfBytes": "4"
							},
							"t_uint72": {
								"encoding": "inplace",
								"label": "uint72",
								"numberOfBytes": "9"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"calculateStakingRewardPoints(uint72,uint24)": {
								"notice": "Calculates the RewardPoints user will earn for a given tokenAmount locked for a given period"
							},
							"getRewards()": {
								"notice": "This can only be called after the Staking Program ended"
							},
							"grantedTokens(address)": {
								"notice": "The amount of OIL tokens earned, granted to be released during vesting period "
							},
							"lockTokens(uint72,uint24)": {
								"notice": "Lock the LP tokens for a specified period of Blocks.Can only be called before Staking Program ends.And the locking period can't last longer than the end of Staking Program block."
							},
							"oilerToken()": {
								"notice": "Oiler token that will be given as a reward"
							},
							"poolToken()": {
								"notice": "Uniswap pool that we accept LP tokens from"
							},
							"release()": {
								"notice": "Releases granted tokens"
							},
							"releasedTokens(address)": {
								"notice": "The amount of OIL tokens that were already released during vesting period"
							},
							"rewardPointsEarned(address)": {
								"notice": "\"Reward points\" each user earned (would be relative to totalRewardPoints to get the percentage)"
							},
							"setPoolToken(address,address)": {
								"notice": "Initialize poolToken when OIL<>USDC Uniswap pool is available"
							},
							"stakes(address)": {
								"notice": "Active stakes for each user"
							},
							"stakingFundAmount()": {
								"notice": "Amount of Staking Bonus Fund (500 000 OIL), Oiler funds must be here, approved and ready to be transferredFrom"
							},
							"stakingProgramEndsBlock()": {
								"notice": "Block when Staking Program ends          "
							},
							"totalRewardPoints()": {
								"notice": "Total \"reward points\" all users earned"
							},
							"unlockTokens()": {
								"notice": "Unlock the tokens and get the rewardThis can be called at any time, even after Staking Program end block"
							}
						},
						"notice": "Staking contract assumes there is a Staking Program going on until a specified Staking Program End Date. And there is an amount of Oiler tokens that is gonna be given away to incentivise participation in the Staking Program (called StakingFund).  During this Program - users commit to lock tokens for some period of time, earning RewardPoints (if they don't unlock prematurely). RewardPoints multiplier grows linearly with the locking period length (see the formula in calculateStakingRewardPoints() function)  After the end of the Staking Program - the amount of RewardPoints earned by each user is relatively compared to the total RewardPoints earned by all staking participants - and the OIL tokens from StakingFund are divided among them accordingly, by their RewardPoints proportions.",
						"version": 1
					}
				}
			},
			"token-staking/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"token-staking/@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"token-staking/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x3138ea0baa52800b416d6c3a25ab1f366ebf5d744d0158f4b347fe5882ccbe3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dd850b6d164fbdf2abcf4e6828ee1f3e17508627cbf8f487805c616f3d6816a5\",\"dweb:/ipfs/QmPNJmXfo3fUbEwZPDtA7bAYLX3bekxyuLzw5Sui2kKA64\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"token-staking(copy)(copy)/contracts/Staking.sol": {
				"ast": {
					"absolutePath": "token-staking(copy)(copy)/contracts/Staking.sol",
					"exportedSymbols": {
						"IERC20": [
							786
						],
						"Staking": [
							708
						]
					},
					"id": 709,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "1306:22:0"
						},
						{
							"absolutePath": "token-staking/@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "token-staking/@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 709,
							"sourceUnit": 787,
							"src": "1330:70:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "1782:829:0",
								"text": " @notice Staking contract assumes there is a Staking Program going on until a specified Staking Program End Date.\n And there is an amount of Oiler tokens that is gonna be given away to incentivise participation in the Staking Program (called StakingFund).\n \n During this Program - users commit to lock tokens for some period of time, earning RewardPoints (if they don't unlock prematurely).\n RewardPoints multiplier grows linearly with the locking period length (see the formula in calculateStakingRewardPoints() function)\n \n After the end of the Staking Program - the amount of RewardPoints earned by each user is relatively compared to the total RewardPoints\n earned by all staking participants - and the OIL tokens from StakingFund are divided among them accordingly, by their RewardPoints proportions."
							},
							"fullyImplemented": true,
							"id": 708,
							"linearizedBaseContracts": [
								708
							],
							"name": "Staking",
							"nameLocation": "2621:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Staking.Stake",
									"id": 12,
									"members": [
										{
											"constant": false,
											"id": 5,
											"mutability": "mutable",
											"name": "tokenAmount",
											"nameLocation": "4225:11:0",
											"nodeType": "VariableDeclaration",
											"scope": 12,
											"src": "4218:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint72",
												"typeString": "uint72"
											},
											"typeName": {
												"id": 4,
												"name": "uint72",
												"nodeType": "ElementaryTypeName",
												"src": "4218:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint72",
													"typeString": "uint72"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 7,
											"mutability": "mutable",
											"name": "lockingPeriodInBlocks",
											"nameLocation": "4370:21:0",
											"nodeType": "VariableDeclaration",
											"scope": 12,
											"src": "4363:28:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 6,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "4363:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 9,
											"mutability": "mutable",
											"name": "startBlock",
											"nameLocation": "4505:10:0",
											"nodeType": "VariableDeclaration",
											"scope": 12,
											"src": "4498:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 8,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "4498:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 11,
											"mutability": "mutable",
											"name": "expectedStakingRewardPoints",
											"nameLocation": "4652:27:0",
											"nodeType": "VariableDeclaration",
											"scope": 12,
											"src": "4644:35:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 10,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "4644:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Stake",
									"nameLocation": "4202:5:0",
									"nodeType": "StructDefinition",
									"scope": 708,
									"src": "4195:574:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 13,
										"nodeType": "StructuredDocumentation",
										"src": "4779:39:0",
										"text": "@notice Active stakes for each user"
									},
									"functionSelector": "16934fc4",
									"id": 18,
									"mutability": "mutable",
									"name": "stakes",
									"nameLocation": "4857:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 708,
									"src": "4823:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$12_storage_$",
										"typeString": "mapping(address => struct Staking.Stake)"
									},
									"typeName": {
										"id": 17,
										"keyType": {
											"id": 14,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "4832:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "4823:26:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$12_storage_$",
											"typeString": "mapping(address => struct Staking.Stake)"
										},
										"valueType": {
											"id": 16,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 15,
												"name": "Stake",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 12,
												"src": "4843:5:0"
											},
											"referencedDeclaration": 12,
											"src": "4843:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Stake_$12_storage_ptr",
												"typeString": "struct Staking.Stake"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 19,
										"nodeType": "StructuredDocumentation",
										"src": "4870:107:0",
										"text": "@notice \"Reward points\" each user earned (would be relative to totalRewardPoints to get the percentage)"
									},
									"functionSelector": "c959360b",
									"id": 23,
									"mutability": "mutable",
									"name": "rewardPointsEarned",
									"nameLocation": "5018:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 708,
									"src": "4982:54:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 22,
										"keyType": {
											"id": 20,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "4991:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "4982:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 21,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "5002:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "5047:50:0",
										"text": "@notice Total \"reward points\" all users earned"
									},
									"functionSelector": "c2e8caf6",
									"id": 26,
									"mutability": "mutable",
									"name": "totalRewardPoints",
									"nameLocation": "5117:17:0",
									"nodeType": "VariableDeclaration",
									"scope": 708,
									"src": "5102:32:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 25,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "5102:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "5140:53:0",
										"text": "@notice Block when Staking Program ends          "
									},
									"functionSelector": "bc0925ae",
									"id": 29,
									"mutability": "immutable",
									"name": "stakingProgramEndsBlock",
									"nameLocation": "5223:23:0",
									"nodeType": "VariableDeclaration",
									"scope": 708,
									"src": "5198:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 28,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "5198:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 30,
										"nodeType": "StructuredDocumentation",
										"src": "5252:122:0",
										"text": "@notice Amount of Staking Bonus Fund (500 000 OIL), Oiler funds must be here, approved and ready to be transferredFrom"
									},
									"functionSelector": "52946b04",
									"id": 32,
									"mutability": "immutable",
									"name": "stakingFundAmount",
									"nameLocation": "5404:17:0",
									"nodeType": "VariableDeclaration",
									"scope": 708,
									"src": "5379:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 31,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "5379:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "5432:54:0",
										"text": "@notice Uniswap pool that we accept LP tokens from"
									},
									"functionSelector": "cbdf382c",
									"id": 36,
									"mutability": "mutable",
									"name": "poolToken",
									"nameLocation": "5505:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 708,
									"src": "5491:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$786",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 35,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 34,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 786,
											"src": "5491:6:0"
										},
										"referencedDeclaration": 786,
										"src": "5491:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$786",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 37,
										"nodeType": "StructuredDocumentation",
										"src": "5520:54:0",
										"text": "@notice Oiler token that will be given as a reward"
									},
									"functionSelector": "81e9207d",
									"id": 40,
									"mutability": "immutable",
									"name": "oilerToken",
									"nameLocation": "5603:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 708,
									"src": "5579:34:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$786",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 39,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 38,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 786,
											"src": "5579:6:0"
										},
										"referencedDeclaration": 786,
										"src": "5579:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$786",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "5624:90:0",
										"text": "@notice The amount of OIL tokens earned, granted to be released during vesting period "
									},
									"functionSelector": "e0e4a722",
									"id": 45,
									"mutability": "mutable",
									"name": "grantedTokens",
									"nameLocation": "5755:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 708,
									"src": "5719:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 44,
										"keyType": {
											"id": 42,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "5728:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "5719:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 43,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "5739:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 46,
										"nodeType": "StructuredDocumentation",
										"src": "5774:85:0",
										"text": "@notice The amount of OIL tokens that were already released during vesting period"
									},
									"functionSelector": "70ff852b",
									"id": 50,
									"mutability": "mutable",
									"name": "releasedTokens",
									"nameLocation": "5900:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 708,
									"src": "5864:50:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 49,
										"keyType": {
											"id": 47,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "5873:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "5864:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 48,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "5884:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "5925:46:0",
										"text": "@dev In blocks - should be around 100 days"
									},
									"functionSelector": "1514617e",
									"id": 53,
									"mutability": "immutable",
									"name": "vestingDuration",
									"nameLocation": "6001:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 708,
									"src": "5976:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 52,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "5976:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 70,
										"nodeType": "Block",
										"src": "6095:92:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 65,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 59,
																		"name": "poolToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 36,
																		"src": "6121:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$786",
																			"typeString": "contract IERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$786",
																			"typeString": "contract IERC20"
																		}
																	],
																	"id": 58,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6113:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 57,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6113:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 60,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6113:18:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "307830",
																		"id": 63,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6143:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0x0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 62,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6135:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 61,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6135:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 64,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6135:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6113:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "706f6f6c546f6b656e206e6f7420736574",
															"id": 66,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6149:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baaab41cf1af04b33672a25d6c62a56d368464d86a10d2970d4d31293d0db24a",
																"typeString": "literal_string \"poolToken not set\""
															},
															"value": "poolToken not set"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baaab41cf1af04b33672a25d6c62a56d368464d86a10d2970d4d31293d0db24a",
																"typeString": "literal_string \"poolToken not set\""
															}
														],
														"id": 56,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6105:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 67,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6105:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 68,
												"nodeType": "ExpressionStatement",
												"src": "6105:64:0"
											},
											{
												"id": 69,
												"nodeType": "PlaceholderStatement",
												"src": "6179:1:0"
											}
										]
									},
									"documentation": {
										"id": 54,
										"nodeType": "StructuredDocumentation",
										"src": "6023:43:0",
										"text": "@dev Check if poolToken was initialized"
									},
									"id": 71,
									"name": "poolTokenSet",
									"nameLocation": "6080:12:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6092:2:0"
									},
									"src": "6071:116:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "6193:45:0",
										"text": "@dev Owner is used only in setPoolToken()"
									},
									"functionSelector": "8da5cb5b",
									"id": 74,
									"mutability": "immutable",
									"name": "owner",
									"nameLocation": "6268:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 708,
									"src": "6243:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 73,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "6243:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 86,
										"nodeType": "Block",
										"src": "6342:87:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 81,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 78,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "6360:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "6360:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 80,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 74,
																"src": "6374:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6360:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e206f6e6c792062652063616c6c6564206279206f776e6572",
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6381:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c1afbdaa0ffb21f43f34bdebbd4895f3e6a5d4de4e77864bde1be59aa53542b2",
																"typeString": "literal_string \"Can only be called by owner\""
															},
															"value": "Can only be called by owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c1afbdaa0ffb21f43f34bdebbd4895f3e6a5d4de4e77864bde1be59aa53542b2",
																"typeString": "literal_string \"Can only be called by owner\""
															}
														],
														"id": 77,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6352:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 83,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6352:59:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 84,
												"nodeType": "ExpressionStatement",
												"src": "6352:59:0"
											},
											{
												"id": 85,
												"nodeType": "PlaceholderStatement",
												"src": "6421:1:0"
											}
										]
									},
									"documentation": {
										"id": 75,
										"nodeType": "StructuredDocumentation",
										"src": "6280:36:0",
										"text": "@dev Used only in setPoolToken()"
									},
									"id": 87,
									"name": "onlyOwner",
									"nameLocation": "6330:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6339:2:0"
									},
									"src": "6321:108:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 146,
										"nodeType": "Block",
										"src": "7253:416:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 107,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 102,
																"name": "owner_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 98,
																"src": "7271:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "307830",
																		"id": 105,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7289:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0x0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 104,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7281:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 103,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7281:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 106,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7281:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7271:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e657220616464726573732063616e6e6f74206265207a65726f",
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7295:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_83f15613d50744e36233662068435f875a75fdb9868ea86636d56800cc9f79af",
																"typeString": "literal_string \"Owner address cannot be zero\""
															},
															"value": "Owner address cannot be zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_83f15613d50744e36233662068435f875a75fdb9868ea86636d56800cc9f79af",
																"typeString": "literal_string \"Owner address cannot be zero\""
															}
														],
														"id": 101,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7263:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7263:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 110,
												"nodeType": "ExpressionStatement",
												"src": "7263:63:0"
											},
											{
												"expression": {
													"id": 113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 111,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 74,
														"src": "7336:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 112,
														"name": "owner_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 98,
														"src": "7344:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7336:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 114,
												"nodeType": "ExpressionStatement",
												"src": "7336:14:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 121,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 116,
																"name": "oilerToken_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 90,
																"src": "7369:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "307830",
																		"id": 119,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7392:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0x0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 118,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7384:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 117,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7384:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 120,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7384:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7369:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6f696c6572546f6b656e20616464726573732063616e6e6f74206265207a65726f",
															"id": 122,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7398:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a9e37c7970c290c2b0169155873f1318b42e2d4175bc114412df2e2ee1b730cb",
																"typeString": "literal_string \"oilerToken address cannot be zero\""
															},
															"value": "oilerToken address cannot be zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a9e37c7970c290c2b0169155873f1318b42e2d4175bc114412df2e2ee1b730cb",
																"typeString": "literal_string \"oilerToken address cannot be zero\""
															}
														],
														"id": 115,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7361:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7361:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "7361:73:0"
											},
											{
												"expression": {
													"id": 129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 125,
														"name": "oilerToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 40,
														"src": "7444:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$786",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 127,
																"name": "oilerToken_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 90,
																"src": "7464:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 126,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 786,
															"src": "7457:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$786_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 128,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7457:19:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$786",
															"typeString": "contract IERC20"
														}
													},
													"src": "7444:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$786",
														"typeString": "contract IERC20"
													}
												},
												"id": 130,
												"nodeType": "ExpressionStatement",
												"src": "7444:32:0"
											},
											{
												"expression": {
													"id": 136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 131,
														"name": "stakingProgramEndsBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "7495:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 135,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 132,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "7521:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 133,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "number",
															"nodeType": "MemberAccess",
															"src": "7521:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 134,
															"name": "stakingDurationInBlocks_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 92,
															"src": "7536:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7521:39:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7495:65:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 137,
												"nodeType": "ExpressionStatement",
												"src": "7495:65:0"
											},
											{
												"expression": {
													"id": 140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 138,
														"name": "vestingDuration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 53,
														"src": "7570:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 139,
														"name": "vestingDuration_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 96,
														"src": "7588:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7570:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 141,
												"nodeType": "ExpressionStatement",
												"src": "7570:34:0"
											},
											{
												"expression": {
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 142,
														"name": "stakingFundAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 32,
														"src": "7624:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 143,
														"name": "stakingFundAmount_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "7644:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7624:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 145,
												"nodeType": "ExpressionStatement",
												"src": "7624:38:0"
											}
										]
									},
									"documentation": {
										"id": 88,
										"nodeType": "StructuredDocumentation",
										"src": "6435:676:0",
										"text": " @dev before deploying the stakingFundAddress must have set allowances on behalf of that contract. The address can be predicted basing on the CREATE or CREATE2 opcode.\n @param oilerToken_ - address of the token in which rewards will be payed off.\n @param stakingDurationInBlocks_ - Number of blocks after which staking will end.\n @param stakingFundAmount_ - Amount of tokens to be payed of as rewards.\n @param vestingDuration_ - Number of blocks after which OIL tokens earned by staking will be released (duration of Vesting period).\n @param owner_ - Owner of the contract (is used to initialize poolToken after it's available)."
									},
									"id": 147,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "oilerToken_",
												"nameLocation": "7136:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "7128:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 89,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7128:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "stakingDurationInBlocks_",
												"nameLocation": "7157:24:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "7149:32:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 91,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7149:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "stakingFundAmount_",
												"nameLocation": "7191:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "7183:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 93,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7183:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "vestingDuration_",
												"nameLocation": "7219:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "7211:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 95,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7211:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "owner_",
												"nameLocation": "7245:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "7237:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 97,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7127:125:0"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7253:0:0"
									},
									"scope": 708,
									"src": "7116:553:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 229,
										"nodeType": "Block",
										"src": "7841:720:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 166,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 160,
																		"name": "poolToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 36,
																		"src": "7867:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$786",
																			"typeString": "contract IERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$786",
																			"typeString": "contract IERC20"
																		}
																	],
																	"id": 159,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7859:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 158,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7859:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 161,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7859:18:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "307830",
																		"id": 164,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7889:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0x0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 163,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7881:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 162,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7881:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 165,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7881:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7859:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "706f6f6c546f6b656e2077617320616c726561647920736574",
															"id": 167,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7895:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f49325f1961ffe577581956fc74c87e3c797c6d9a3bf9adf95b186a86eb8bca0",
																"typeString": "literal_string \"poolToken was already set\""
															},
															"value": "poolToken was already set"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f49325f1961ffe577581956fc74c87e3c797c6d9a3bf9adf95b186a86eb8bca0",
																"typeString": "literal_string \"poolToken was already set\""
															}
														],
														"id": 157,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7851:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7851:72:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 169,
												"nodeType": "ExpressionStatement",
												"src": "7851:72:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 176,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 171,
																"name": "poolToken_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 150,
																"src": "7941:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "307830",
																		"id": 174,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7963:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0x0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 173,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7955:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 172,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7955:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 175,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7955:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7941:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "706f6f6c546f6b656e20616464726573732063616e6e6f74206265207a65726f",
															"id": 177,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7969:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_94bb83f969d01c78c03c2937a1d7cdba3c6b39448e0a8fec49f98ae3315b3426",
																"typeString": "literal_string \"poolToken address cannot be zero\""
															},
															"value": "poolToken address cannot be zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_94bb83f969d01c78c03c2937a1d7cdba3c6b39448e0a8fec49f98ae3315b3426",
																"typeString": "literal_string \"poolToken address cannot be zero\""
															}
														],
														"id": 170,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7933:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7933:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 179,
												"nodeType": "ExpressionStatement",
												"src": "7933:71:0"
											},
											{
												"expression": {
													"id": 184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 180,
														"name": "poolToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 36,
														"src": "8014:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$786",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 182,
																"name": "poolToken_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 150,
																"src": "8033:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 181,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 786,
															"src": "8026:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$786_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 183,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8026:18:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$786",
															"typeString": "contract IERC20"
														}
													},
													"src": "8014:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$786",
														"typeString": "contract IERC20"
													}
												},
												"id": 185,
												"nodeType": "ExpressionStatement",
												"src": "8014:30:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 194,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 191,
																		"name": "stakingFundAddress_",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 152,
																		"src": "8164:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 188,
																				"name": "oilerToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 40,
																				"src": "8142:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$786",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$786",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 187,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 786,
																			"src": "8135:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$786_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 189,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8135:18:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$786",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 190,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 725,
																	"src": "8135:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 192,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8135:49:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 193,
																"name": "stakingFundAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 32,
																"src": "8188:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8135:70:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5374616b696e6746756e6420646f65736e2774206861766520656e6f756768204f494c2062616c616e6365",
															"id": 195,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8207:45:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b9edd99dd8d250815668679e6c075641f1995b1ddaf15ec4c0dabacd9db8c322",
																"typeString": "literal_string \"StakingFund doesn't have enough OIL balance\""
															},
															"value": "StakingFund doesn't have enough OIL balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b9edd99dd8d250815668679e6c075641f1995b1ddaf15ec4c0dabacd9db8c322",
																"typeString": "literal_string \"StakingFund doesn't have enough OIL balance\""
															}
														],
														"id": 186,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8127:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8127:126:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 197,
												"nodeType": "ExpressionStatement",
												"src": "8127:126:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 210,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 203,
																		"name": "stakingFundAddress_",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 152,
																		"src": "8300:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 206,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "8329:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Staking_$708",
																					"typeString": "contract Staking"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Staking_$708",
																					"typeString": "contract Staking"
																				}
																			],
																			"id": 205,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8321:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 204,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8321:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 207,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8321:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 200,
																				"name": "oilerToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 40,
																				"src": "8278:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$786",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$786",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 199,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 786,
																			"src": "8271:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$786_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 201,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8271:18:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$786",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 202,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "allowance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 745,
																	"src": "8271:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view external returns (uint256)"
																	}
																},
																"id": 208,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8271:64:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 209,
																"name": "stakingFundAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 32,
																"src": "8339:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8271:85:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5374616b696e6746756e6420646f65736e2774206861766520656e6f75676820616c6c6f77616e6365",
															"id": 211,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8358:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8ec3e015200e1f9e6e0943e9e536de8fd2eccd7db3e2c39533b307d29bacc8bf",
																"typeString": "literal_string \"StakingFund doesn't have enough allowance\""
															},
															"value": "StakingFund doesn't have enough allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8ec3e015200e1f9e6e0943e9e536de8fd2eccd7db3e2c39533b307d29bacc8bf",
																"typeString": "literal_string \"StakingFund doesn't have enough allowance\""
															}
														],
														"id": 198,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8263:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8263:139:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 213,
												"nodeType": "ExpressionStatement",
												"src": "8263:139:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 219,
																	"name": "stakingFundAddress_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 152,
																	"src": "8452:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 222,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "8481:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Staking_$708",
																				"typeString": "contract Staking"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Staking_$708",
																				"typeString": "contract Staking"
																			}
																		],
																		"id": 221,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8473:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 220,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8473:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 223,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8473:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 224,
																	"name": "stakingFundAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 32,
																	"src": "8488:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 216,
																			"name": "oilerToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 40,
																			"src": "8427:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$786",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$786",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 215,
																		"name": "IERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 786,
																		"src": "8420:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC20_$786_$",
																			"typeString": "type(contract IERC20)"
																		}
																	},
																	"id": 217,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8420:18:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$786",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 218,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 767,
																"src": "8420:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 225,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8420:86:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657246726f6d206f66204f494c2066726f6d205374616b696e6746756e64206661696c6564",
															"id": 226,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8508:45:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dce7fcdf8c70b472dd9931854d7bcc019b46831d2b96b88b381e506bbb74c94f",
																"typeString": "literal_string \"TransferFrom of OIL from StakingFund failed\""
															},
															"value": "TransferFrom of OIL from StakingFund failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dce7fcdf8c70b472dd9931854d7bcc019b46831d2b96b88b381e506bbb74c94f",
																"typeString": "literal_string \"TransferFrom of OIL from StakingFund failed\""
															}
														],
														"id": 214,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8412:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8412:142:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 228,
												"nodeType": "ExpressionStatement",
												"src": "8412:142:0"
											}
										]
									},
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "7675:73:0",
										"text": "@notice Initialize poolToken when OIL<>USDC Uniswap pool is available"
									},
									"functionSelector": "f6ffab88",
									"id": 230,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 155,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 154,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 87,
												"src": "7831:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "7831:9:0"
										}
									],
									"name": "setPoolToken",
									"nameLocation": "7762:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "poolToken_",
												"nameLocation": "7783:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "7775:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7775:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "stakingFundAddress_",
												"nameLocation": "7803:19:0",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "7795:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7795:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7774:49:0"
									},
									"returnParameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7841:0:0"
									},
									"scope": 708,
									"src": "7753:808:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 269,
										"nodeType": "Block",
										"src": "9058:547:0",
										"statements": [
											{
												"assignments": [
													241
												],
												"declarations": [
													{
														"constant": false,
														"id": 241,
														"mutability": "mutable",
														"name": "stakingRewardPoints",
														"nameLocation": "9345:19:0",
														"nodeType": "VariableDeclaration",
														"scope": 269,
														"src": "9337:27:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 240,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9337:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 256,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 250,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 244,
																	"name": "tokenAmount_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 233,
																	"src": "9375:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint72",
																		"typeString": "uint72"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint72",
																		"typeString": "uint72"
																	}
																],
																"id": 243,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9367:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 242,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "9367:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 245,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9367:21:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"arguments": [
																{
																	"id": 248,
																	"name": "lockingPeriodInBlocks_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 235,
																	"src": "9399:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint24",
																		"typeString": "uint24"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint24",
																		"typeString": "uint24"
																	}
																],
																"id": 247,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9391:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 246,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "9391:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 249,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9391:31:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "9367:55:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"arguments": [
															{
																"id": 253,
																"name": "lockingPeriodInBlocks_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 235,
																"src": "9433:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint24",
																	"typeString": "uint24"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint24",
																	"typeString": "uint24"
																}
															],
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9425:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 251,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "9425:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 254,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9425:31:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9367:89:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9337:119:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 260,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 258,
																"name": "stakingRewardPoints",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 241,
																"src": "9474:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 259,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9496:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9474:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e65697468657220746f6b656e416d6f756e74206e6f72206c6f636b696e67506572696f6420636f756c646e27742062652030",
															"id": 261,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9499:53:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6e6a919188e639c6fec1ac974bcd532a51e7cb501fa68e5b2f08f294731a4b88",
																"typeString": "literal_string \"Neither tokenAmount nor lockingPeriod couldn't be 0\""
															},
															"value": "Neither tokenAmount nor lockingPeriod couldn't be 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6e6a919188e639c6fec1ac974bcd532a51e7cb501fa68e5b2f08f294731a4b88",
																"typeString": "literal_string \"Neither tokenAmount nor lockingPeriod couldn't be 0\""
															}
														],
														"id": 257,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9466:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9466:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 263,
												"nodeType": "ExpressionStatement",
												"src": "9466:87:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 266,
															"name": "stakingRewardPoints",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 241,
															"src": "9578:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 265,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "9570:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint128_$",
															"typeString": "type(uint128)"
														},
														"typeName": {
															"id": 264,
															"name": "uint128",
															"nodeType": "ElementaryTypeName",
															"src": "9570:7:0",
															"typeDescriptions": {}
														}
													},
													"id": 267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9570:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"functionReturnParameters": 239,
												"id": 268,
												"nodeType": "Return",
												"src": "9563:35:0"
											}
										]
									},
									"documentation": {
										"id": 231,
										"nodeType": "StructuredDocumentation",
										"src": "8567:366:0",
										"text": " @notice Calculates the RewardPoints user will earn for a given tokenAmount locked for a given period\n @dev If any parameter is zero - it will fail, thus we save gas on \"requires\" by not checking in other places\n @param tokenAmount_ - Amount of tokens to be stake.\n @param lockingPeriodInBlocks_ - Lock duration defined in blocks."
									},
									"functionSelector": "798633b9",
									"id": 270,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateStakingRewardPoints",
									"nameLocation": "8947:28:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "tokenAmount_",
												"nameLocation": "8983:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 270,
												"src": "8976:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint72",
													"typeString": "uint72"
												},
												"typeName": {
													"id": 232,
													"name": "uint72",
													"nodeType": "ElementaryTypeName",
													"src": "8976:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint72",
														"typeString": "uint72"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "lockingPeriodInBlocks_",
												"nameLocation": "9004:22:0",
												"nodeType": "VariableDeclaration",
												"scope": 270,
												"src": "8997:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 234,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "8997:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8975:52:0"
									},
									"returnParameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 270,
												"src": "9049:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 237,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "9049:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9048:9:0"
									},
									"scope": 708,
									"src": "8938:667:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "10090:1567:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 286,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 281,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "10248:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 282,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "number",
																"nodeType": "MemberAccess",
																"src": "10248:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 285,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 283,
																	"name": "stakingProgramEndsBlock",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 29,
																	"src": "10264:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 284,
																	"name": "lockingPeriodInBlocks_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 275,
																	"src": "10290:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint24",
																		"typeString": "uint24"
																	}
																},
																"src": "10264:48:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10248:64:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7572206c6f636b20706572696f642065786365656473205374616b696e672050726f6772616d206475726174696f6e",
															"id": 287,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10314:51:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5735093ee1c27da93975faba569ca18ca1f3facf35d6dfe2cae61f4fc1bf709a",
																"typeString": "literal_string \"Your lock period exceeds Staking Program duration\""
															},
															"value": "Your lock period exceeds Staking Program duration"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5735093ee1c27da93975faba569ca18ca1f3facf35d6dfe2cae61f4fc1bf709a",
																"typeString": "literal_string \"Your lock period exceeds Staking Program duration\""
															}
														],
														"id": 280,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10240:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10240:126:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 289,
												"nodeType": "ExpressionStatement",
												"src": "10240:126:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint72",
																"typeString": "uint72"
															},
															"id": 297,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 291,
																		"name": "stakes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 18,
																		"src": "10384:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$12_storage_$",
																			"typeString": "mapping(address => struct Staking.Stake storage ref)"
																		}
																	},
																	"id": 294,
																	"indexExpression": {
																		"expression": {
																			"id": 292,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "10391:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 293,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "10391:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "10384:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stake_$12_storage",
																		"typeString": "struct Staking.Stake storage ref"
																	}
																},
																"id": 295,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "tokenAmount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 5,
																"src": "10384:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint72",
																	"typeString": "uint72"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 296,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10418:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10384:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c7265616479207374616b696e67",
															"id": 298,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10421:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6484e2602344143d38b0f6044478ddd9128a019aabb51146650cc995fb45b4fe",
																"typeString": "literal_string \"Already staking\""
															},
															"value": "Already staking"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6484e2602344143d38b0f6044478ddd9128a019aabb51146650cc995fb45b4fe",
																"typeString": "literal_string \"Already staking\""
															}
														],
														"id": 290,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10376:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10376:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 300,
												"nodeType": "ExpressionStatement",
												"src": "10376:63:0"
											},
											{
												"assignments": [
													302
												],
												"declarations": [
													{
														"constant": false,
														"id": 302,
														"mutability": "mutable",
														"name": "expectedStakingRewardPoints",
														"nameLocation": "10578:27:0",
														"nodeType": "VariableDeclaration",
														"scope": 362,
														"src": "10570:35:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														},
														"typeName": {
															"id": 301,
															"name": "uint128",
															"nodeType": "ElementaryTypeName",
															"src": "10570:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 307,
												"initialValue": {
													"arguments": [
														{
															"id": 304,
															"name": "tokenAmount_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 273,
															"src": "10637:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint72",
																"typeString": "uint72"
															}
														},
														{
															"id": 305,
															"name": "lockingPeriodInBlocks_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 275,
															"src": "10651:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint72",
																"typeString": "uint72"
															},
															{
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														],
														"id": 303,
														"name": "calculateStakingRewardPoints",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 270,
														"src": "10608:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint72_$_t_uint24_$returns$_t_uint128_$",
															"typeString": "function (uint72,uint24) pure returns (uint128)"
														}
													},
													"id": 306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10608:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10570:104:0"
											},
											{
												"assignments": [
													310
												],
												"declarations": [
													{
														"constant": false,
														"id": 310,
														"mutability": "mutable",
														"name": "stake",
														"nameLocation": "10698:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 362,
														"src": "10685:18:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$12_memory_ptr",
															"typeString": "struct Staking.Stake"
														},
														"typeName": {
															"id": 309,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 308,
																"name": "Stake",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 12,
																"src": "10685:5:0"
															},
															"referencedDeclaration": 12,
															"src": "10685:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$12_storage_ptr",
																"typeString": "struct Staking.Stake"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 321,
												"initialValue": {
													"arguments": [
														{
															"id": 312,
															"name": "tokenAmount_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 273,
															"src": "10712:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint72",
																"typeString": "uint72"
															}
														},
														{
															"id": 313,
															"name": "lockingPeriodInBlocks_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 275,
															"src": "10726:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 316,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "10757:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 317,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "number",
																	"nodeType": "MemberAccess",
																	"src": "10757:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 315,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10750:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint32_$",
																	"typeString": "type(uint32)"
																},
																"typeName": {
																	"id": 314,
																	"name": "uint32",
																	"nodeType": "ElementaryTypeName",
																	"src": "10750:6:0",
																	"typeDescriptions": {}
																}
															},
															"id": 318,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10750:20:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														{
															"id": 319,
															"name": "expectedStakingRewardPoints",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "10772:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint72",
																"typeString": "uint72"
															},
															{
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															},
															{
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															},
															{
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														],
														"id": 311,
														"name": "Stake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 12,
														"src": "10706:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_Stake_$12_storage_ptr_$",
															"typeString": "type(struct Staking.Stake storage pointer)"
														}
													},
													"id": 320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10706:94:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$12_memory_ptr",
														"typeString": "struct Staking.Stake memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10685:115:0"
											},
											{
												"expression": {
													"id": 327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 322,
															"name": "stakes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 18,
															"src": "10810:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$12_storage_$",
																"typeString": "mapping(address => struct Staking.Stake storage ref)"
															}
														},
														"id": 325,
														"indexExpression": {
															"expression": {
																"id": 323,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "10817:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 324,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "10817:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10810:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$12_storage",
															"typeString": "struct Staking.Stake storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 326,
														"name": "stake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 310,
														"src": "10831:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$12_memory_ptr",
															"typeString": "struct Staking.Stake memory"
														}
													},
													"src": "10810:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$12_storage",
														"typeString": "struct Staking.Stake storage ref"
													}
												},
												"id": 328,
												"nodeType": "ExpressionStatement",
												"src": "10810:26:0"
											},
											{
												"expression": {
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 329,
														"name": "totalRewardPoints",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 26,
														"src": "11096:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 330,
														"name": "expectedStakingRewardPoints",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "11117:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"src": "11096:48:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 332,
												"nodeType": "ExpressionStatement",
												"src": "11096:48:0"
											},
											{
												"expression": {
													"id": 338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 333,
															"name": "rewardPointsEarned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 23,
															"src": "11154:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 336,
														"indexExpression": {
															"expression": {
																"id": 334,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "11173:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 335,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "11173:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11154:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 337,
														"name": "expectedStakingRewardPoints",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "11188:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"src": "11154:61:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 339,
												"nodeType": "ExpressionStatement",
												"src": "11154:61:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 343,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "11466:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 344,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "11466:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 347,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "11486:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Staking_$708",
																				"typeString": "contract Staking"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Staking_$708",
																				"typeString": "contract Staking"
																			}
																		],
																		"id": 346,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "11478:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 345,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "11478:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 348,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "11478:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 349,
																	"name": "tokenAmount_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 273,
																	"src": "11493:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint72",
																		"typeString": "uint72"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint72",
																		"typeString": "uint72"
																	}
																],
																"expression": {
																	"id": 341,
																	"name": "poolToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 36,
																	"src": "11443:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$786",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 342,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 767,
																"src": "11443:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 350,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11443:63:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657246726f6d206f6620706f6f6c546f6b656e73206661696c6564",
															"id": 351,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11508:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bd8bf05e4eeff98331c5d573ce3c5c39a2f1dfd162031e09da49c962885a911b",
																"typeString": "literal_string \"TransferFrom of poolTokens failed\""
															},
															"value": "TransferFrom of poolTokens failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bd8bf05e4eeff98331c5d573ce3c5c39a2f1dfd162031e09da49c962885a911b",
																"typeString": "literal_string \"TransferFrom of poolTokens failed\""
															}
														],
														"id": 340,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11435:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11435:109:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 353,
												"nodeType": "ExpressionStatement",
												"src": "11435:109:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 355,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "11572:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 356,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "11572:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 357,
															"name": "tokenAmount_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 273,
															"src": "11584:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint72",
																"typeString": "uint72"
															}
														},
														{
															"id": 358,
															"name": "lockingPeriodInBlocks_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 275,
															"src": "11598:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														},
														{
															"id": 359,
															"name": "expectedStakingRewardPoints",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "11622:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint72",
																"typeString": "uint72"
															},
															{
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															},
															{
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														],
														"id": 354,
														"name": "StakeLocked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 675,
														"src": "11560:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256)"
														}
													},
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11560:90:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 361,
												"nodeType": "EmitStatement",
												"src": "11555:95:0"
											}
										]
									},
									"documentation": {
										"id": 271,
										"nodeType": "StructuredDocumentation",
										"src": "9611:382:0",
										"text": " @notice Lock the LP tokens for a specified period of Blocks.\n @notice Can only be called before Staking Program ends.\n @notice And the locking period can't last longer than the end of Staking Program block.\n @param tokenAmount_ - Amount of LP tokens to be locked.\n @param lockingPeriodInBlocks_ - locking period duration defined in blocks."
									},
									"functionSelector": "378592c8",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 278,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 277,
												"name": "poolTokenSet",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 71,
												"src": "10077:12:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "10077:12:0"
										}
									],
									"name": "lockTokens",
									"nameLocation": "10007:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "tokenAmount_",
												"nameLocation": "10025:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "10018:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint72",
													"typeString": "uint72"
												},
												"typeName": {
													"id": 272,
													"name": "uint72",
													"nodeType": "ElementaryTypeName",
													"src": "10018:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint72",
														"typeString": "uint72"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "lockingPeriodInBlocks_",
												"nameLocation": "10046:22:0",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "10039:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 274,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "10039:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10017:52:0"
									},
									"returnParameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10090:0:0"
									},
									"scope": 708,
									"src": "9998:1659:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 418,
										"nodeType": "Block",
										"src": "11859:650:0",
										"statements": [
											{
												"assignments": [
													371
												],
												"declarations": [
													{
														"constant": false,
														"id": 371,
														"mutability": "mutable",
														"name": "stake",
														"nameLocation": "11882:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 418,
														"src": "11869:18:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$12_memory_ptr",
															"typeString": "struct Staking.Stake"
														},
														"typeName": {
															"id": 370,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 369,
																"name": "Stake",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 12,
																"src": "11869:5:0"
															},
															"referencedDeclaration": 12,
															"src": "11869:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$12_storage_ptr",
																"typeString": "struct Staking.Stake"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 376,
												"initialValue": {
													"baseExpression": {
														"id": 372,
														"name": "stakes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 18,
														"src": "11890:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$12_storage_$",
															"typeString": "mapping(address => struct Staking.Stake storage ref)"
														}
													},
													"id": 375,
													"indexExpression": {
														"expression": {
															"id": 373,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "11897:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 374,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "11897:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "11890:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$12_storage",
														"typeString": "struct Staking.Stake storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11869:39:0"
											},
											{
												"assignments": [
													378
												],
												"declarations": [
													{
														"constant": false,
														"id": 378,
														"mutability": "mutable",
														"name": "stakeAmount",
														"nameLocation": "11927:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 418,
														"src": "11919:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 377,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11919:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 381,
												"initialValue": {
													"expression": {
														"id": 379,
														"name": "stake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 371,
														"src": "11941:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$12_memory_ptr",
															"typeString": "struct Staking.Stake memory"
														}
													},
													"id": 380,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "tokenAmount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 5,
													"src": "11941:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint72",
														"typeString": "uint72"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11919:39:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 385,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 383,
																"name": "stakeAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 378,
																"src": "11977:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 384,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11992:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11977:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520646f6e277420686176652061207374616b6520746f20756e6c6f636b",
															"id": 386,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11995:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_52ac77891b100190c173ca8db34c1090b0a3a5fd7fa47169c21476dd2c32bc2f",
																"typeString": "literal_string \"You don't have a stake to unlock\""
															},
															"value": "You don't have a stake to unlock"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_52ac77891b100190c173ca8db34c1090b0a3a5fd7fa47169c21476dd2c32bc2f",
																"typeString": "literal_string \"You don't have a stake to unlock\""
															}
														],
														"id": 382,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11969:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11969:61:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 388,
												"nodeType": "ExpressionStatement",
												"src": "11969:61:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 394,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 390,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "12049:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 391,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "number",
																"nodeType": "MemberAccess",
																"src": "12049:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"expression": {
																	"id": 392,
																	"name": "stake",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 371,
																	"src": "12064:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stake_$12_memory_ptr",
																		"typeString": "struct Staking.Stake memory"
																	}
																},
																"id": 393,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "startBlock",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 9,
																"src": "12064:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"src": "12049:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f752063616e277420776974686472617720746865207374616b6520696e207468652073616d6520626c6f636b20697420776173206c6f636b6564",
															"id": 395,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12082:62:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_79dd45e51ab165bfcf7a14b5d794e1100e4f43c66e93d82a8f33a73acdace21c",
																"typeString": "literal_string \"You can't withdraw the stake in the same block it was locked\""
															},
															"value": "You can't withdraw the stake in the same block it was locked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_79dd45e51ab165bfcf7a14b5d794e1100e4f43c66e93d82a8f33a73acdace21c",
																"typeString": "literal_string \"You can't withdraw the stake in the same block it was locked\""
															}
														],
														"id": 389,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12041:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12041:104:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 397,
												"nodeType": "ExpressionStatement",
												"src": "12041:104:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 399,
															"name": "stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 371,
															"src": "12276:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$12_memory_ptr",
																"typeString": "struct Staking.Stake memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Stake_$12_memory_ptr",
																"typeString": "struct Staking.Stake memory"
															}
														],
														"id": 398,
														"name": "_punishEarlyWithdrawal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 477,
														"src": "12253:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Stake_$12_memory_ptr_$returns$__$",
															"typeString": "function (struct Staking.Stake memory)"
														}
													},
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12253:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 401,
												"nodeType": "ExpressionStatement",
												"src": "12253:29:0"
											},
											{
												"expression": {
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "12384:25:0",
													"subExpression": {
														"baseExpression": {
															"id": 402,
															"name": "stakes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 18,
															"src": "12391:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$12_storage_$",
																"typeString": "mapping(address => struct Staking.Stake storage ref)"
															}
														},
														"id": 405,
														"indexExpression": {
															"expression": {
																"id": 403,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "12398:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 404,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "12398:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12391:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$12_storage",
															"typeString": "struct Staking.Stake storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 407,
												"nodeType": "ExpressionStatement",
												"src": "12384:25:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 411,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "12447:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 412,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "12447:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 413,
																	"name": "stakeAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 378,
																	"src": "12459:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 409,
																	"name": "poolToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 36,
																	"src": "12428:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$786",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "transfer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 735,
																"src": "12428:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 414,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12428:43:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "506f6f6c20746f6b656e207472616e73666572206661696c6564",
															"id": 415,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12473:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_33a0d73ef506feaebcf4cdd68c1a9783ad6fdd5367feedb0a0d58ce8d7b1ad1a",
																"typeString": "literal_string \"Pool token transfer failed\""
															},
															"value": "Pool token transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_33a0d73ef506feaebcf4cdd68c1a9783ad6fdd5367feedb0a0d58ce8d7b1ad1a",
																"typeString": "literal_string \"Pool token transfer failed\""
															}
														],
														"id": 408,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12420:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12420:82:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 417,
												"nodeType": "ExpressionStatement",
												"src": "12420:82:0"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "11663:147:0",
										"text": " @notice Unlock the tokens and get the reward\n @notice This can be called at any time, even after Staking Program end block"
									},
									"functionSelector": "f968f493",
									"id": 419,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 367,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 366,
												"name": "poolTokenSet",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 71,
												"src": "11846:12:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "11846:12:0"
										}
									],
									"name": "unlockTokens",
									"nameLocation": "11824:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11836:2:0"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11859:0:0"
									},
									"scope": 708,
									"src": "11815:694:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 476,
										"nodeType": "Block",
										"src": "12672:876:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 426,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "12955:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 427,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "12955:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																},
																"id": 432,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 428,
																		"name": "stake_",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 423,
																		"src": "12971:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stake_$12_memory_ptr",
																			"typeString": "struct Staking.Stake memory"
																		}
																	},
																	"id": 429,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "startBlock",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 9,
																	"src": "12971:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"expression": {
																		"id": 430,
																		"name": "stake_",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 423,
																		"src": "12991:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stake_$12_memory_ptr",
																			"typeString": "struct Staking.Stake memory"
																		}
																	},
																	"id": 431,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "lockingPeriodInBlocks",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 7,
																	"src": "12991:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint24",
																		"typeString": "uint24"
																	}
																},
																"src": "12971:48:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															}
														],
														"id": 433,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "12970:50:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "12955:65:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 474,
													"nodeType": "Block",
													"src": "13401:141:0",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 464,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "13434:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 465,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "13434:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 466,
																			"name": "stake_",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 423,
																			"src": "13446:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stake_$12_memory_ptr",
																				"typeString": "struct Staking.Stake memory"
																			}
																		},
																		"id": 467,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "tokenAmount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 5,
																		"src": "13446:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint72",
																			"typeString": "uint72"
																		}
																	},
																	{
																		"expression": {
																			"id": 468,
																			"name": "stake_",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 423,
																			"src": "13466:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stake_$12_memory_ptr",
																				"typeString": "struct Staking.Stake memory"
																			}
																		},
																		"id": 469,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "lockingPeriodInBlocks",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 7,
																		"src": "13466:28:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint24",
																			"typeString": "uint24"
																		}
																	},
																	{
																		"expression": {
																			"id": 470,
																			"name": "stake_",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 423,
																			"src": "13496:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stake_$12_memory_ptr",
																				"typeString": "struct Staking.Stake memory"
																			}
																		},
																		"id": 471,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "expectedStakingRewardPoints",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 11,
																		"src": "13496:34:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint72",
																			"typeString": "uint72"
																		},
																		{
																			"typeIdentifier": "t_uint24",
																			"typeString": "uint24"
																		},
																		{
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		}
																	],
																	"id": 463,
																	"name": "StakeUnlocked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 695,
																	"src": "13420:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256,uint256,uint256)"
																	}
																},
																"id": 472,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13420:111:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 473,
															"nodeType": "EmitStatement",
															"src": "13415:116:0"
														}
													]
												},
												"id": 475,
												"nodeType": "IfStatement",
												"src": "12951:591:0",
												"trueBody": {
													"id": 462,
													"nodeType": "Block",
													"src": "13022:373:0",
													"statements": [
														{
															"expression": {
																"id": 441,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 435,
																		"name": "rewardPointsEarned",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 23,
																		"src": "13108:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 438,
																	"indexExpression": {
																		"expression": {
																			"id": 436,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "13127:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 437,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "13127:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "13108:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"expression": {
																		"id": 439,
																		"name": "stake_",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 423,
																		"src": "13142:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stake_$12_memory_ptr",
																			"typeString": "struct Staking.Stake memory"
																		}
																	},
																	"id": 440,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "expectedStakingRewardPoints",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 11,
																	"src": "13142:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																"src": "13108:68:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 442,
															"nodeType": "ExpressionStatement",
															"src": "13108:68:0"
														},
														{
															"expression": {
																"id": 446,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 443,
																	"name": "totalRewardPoints",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 26,
																	"src": "13190:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"expression": {
																		"id": 444,
																		"name": "stake_",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 423,
																		"src": "13211:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stake_$12_memory_ptr",
																			"typeString": "struct Staking.Stake memory"
																		}
																	},
																	"id": 445,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "expectedStakingRewardPoints",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 11,
																	"src": "13211:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																"src": "13190:55:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 447,
															"nodeType": "ExpressionStatement",
															"src": "13190:55:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 449,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "13289:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 450,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "13289:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 451,
																			"name": "stake_",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 423,
																			"src": "13301:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stake_$12_memory_ptr",
																				"typeString": "struct Staking.Stake memory"
																			}
																		},
																		"id": 452,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "tokenAmount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 5,
																		"src": "13301:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint72",
																			"typeString": "uint72"
																		}
																	},
																	{
																		"expression": {
																			"id": 453,
																			"name": "stake_",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 423,
																			"src": "13321:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stake_$12_memory_ptr",
																				"typeString": "struct Staking.Stake memory"
																			}
																		},
																		"id": 454,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "lockingPeriodInBlocks",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 7,
																		"src": "13321:28:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint24",
																			"typeString": "uint24"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 459,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 455,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967292,
																				"src": "13351:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 456,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "number",
																			"nodeType": "MemberAccess",
																			"src": "13351:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"expression": {
																				"id": 457,
																				"name": "stake_",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 423,
																				"src": "13366:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Stake_$12_memory_ptr",
																					"typeString": "struct Staking.Stake memory"
																				}
																			},
																			"id": 458,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "startBlock",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 9,
																			"src": "13366:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		"src": "13351:32:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint72",
																			"typeString": "uint72"
																		},
																		{
																			"typeIdentifier": "t_uint24",
																			"typeString": "uint24"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 448,
																	"name": "StakeUnlockedPrematurely",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 685,
																	"src": "13264:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256,uint256,uint256)"
																	}
																},
																"id": 460,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13264:120:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 461,
															"nodeType": "EmitStatement",
															"src": "13259:125:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 420,
										"nodeType": "StructuredDocumentation",
										"src": "12519:86:0",
										"text": " @notice If the unlock is called prematurely - we subtract the bonus"
									},
									"id": 477,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_punishEarlyWithdrawal",
									"nameLocation": "12619:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "stake_",
												"nameLocation": "12655:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "12642:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Stake_$12_memory_ptr",
													"typeString": "struct Staking.Stake"
												},
												"typeName": {
													"id": 422,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 421,
														"name": "Stake",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 12,
														"src": "12642:5:0"
													},
													"referencedDeclaration": 12,
													"src": "12642:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$12_storage_ptr",
														"typeString": "struct Staking.Stake"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12641:21:0"
									},
									"returnParameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12672:0:0"
									},
									"scope": 708,
									"src": "12610:938:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 534,
										"nodeType": "Block",
										"src": "13850:1370:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 482,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "13868:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "number",
																"nodeType": "MemberAccess",
																"src": "13868:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 484,
																"name": "stakingProgramEndsBlock",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 29,
																"src": "13883:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13868:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f752063616e206f6e6c79206765742052657761726473206166746572205374616b696e672050726f6772616d20656e6473",
															"id": 486,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13908:53:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c3786129cca9bd92dcb42692167cb02d02ae8b030024a781b08e7dafd22bc2fb",
																"typeString": "literal_string \"You can only get Rewards after Staking Program ends\""
															},
															"value": "You can only get Rewards after Staking Program ends"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c3786129cca9bd92dcb42692167cb02d02ae8b030024a781b08e7dafd22bc2fb",
																"typeString": "literal_string \"You can only get Rewards after Staking Program ends\""
															}
														],
														"id": 481,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13860:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13860:102:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 488,
												"nodeType": "ExpressionStatement",
												"src": "13860:102:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint72",
																"typeString": "uint72"
															},
															"id": 496,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 490,
																		"name": "stakes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 18,
																		"src": "13980:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$12_storage_$",
																			"typeString": "mapping(address => struct Staking.Stake storage ref)"
																		}
																	},
																	"id": 493,
																	"indexExpression": {
																		"expression": {
																			"id": 491,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "13987:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 492,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "13987:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "13980:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stake_$12_storage",
																		"typeString": "struct Staking.Stake storage ref"
																	}
																},
																"id": 494,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "tokenAmount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 5,
																"src": "13980:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint72",
																	"typeString": "uint72"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14014:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13980:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f75207374696c6c20686176652061207374616b65206c6f636b6564202d20706c6561736520756e6c6f636b2066697273742c20646f6e2774206c656176652066726565206d6f6e65792068657265",
															"id": 497,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14017:82:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4d2c35fe1a7df903955f64419a99f644f465f2a0aa959d96b99839301c2ef508",
																"typeString": "literal_string \"You still have a stake locked - please unlock first, don't leave free money here\""
															},
															"value": "You still have a stake locked - please unlock first, don't leave free money here"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4d2c35fe1a7df903955f64419a99f644f465f2a0aa959d96b99839301c2ef508",
																"typeString": "literal_string \"You still have a stake locked - please unlock first, don't leave free money here\""
															}
														],
														"id": 489,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13972:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13972:128:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 499,
												"nodeType": "ExpressionStatement",
												"src": "13972:128:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 506,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 501,
																	"name": "rewardPointsEarned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 23,
																	"src": "14118:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 504,
																"indexExpression": {
																	"expression": {
																		"id": 502,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "14137:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 503,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "14137:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "14118:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 505,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14151:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14118:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520646f6e2774206861766520616e7920726577617264506f696e7473",
															"id": 507,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14154:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e5134b59355dcbbe2d4e436ec1b03c78c1275f34182c99b81e54de3ae327f5fc",
																"typeString": "literal_string \"You don't have any rewardPoints\""
															},
															"value": "You don't have any rewardPoints"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e5134b59355dcbbe2d4e436ec1b03c78c1275f34182c99b81e54de3ae327f5fc",
																"typeString": "literal_string \"You don't have any rewardPoints\""
															}
														],
														"id": 500,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14110:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14110:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 509,
												"nodeType": "ExpressionStatement",
												"src": "14110:78:0"
											},
											{
												"assignments": [
													511
												],
												"declarations": [
													{
														"constant": false,
														"id": 511,
														"mutability": "mutable",
														"name": "amountEarned",
														"nameLocation": "14872:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 534,
														"src": "14864:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 510,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "14864:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 520,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 517,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 512,
															"name": "stakingFundAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "14887:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"baseExpression": {
																"id": 513,
																"name": "rewardPointsEarned",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 23,
																"src": "14907:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 516,
															"indexExpression": {
																"expression": {
																	"id": 514,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "14926:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 515,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "14926:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "14907:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "14887:50:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 518,
														"name": "totalRewardPoints",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 26,
														"src": "14940:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14887:70:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14864:93:0"
											},
											{
												"expression": {
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 521,
															"name": "rewardPointsEarned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 23,
															"src": "14967:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 524,
														"indexExpression": {
															"expression": {
																"id": 522,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "14986:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 523,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "14986:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "14967:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 525,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15000:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "14967:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "14967:34:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 529,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "15108:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 530,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "15108:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 531,
															"name": "amountEarned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 511,
															"src": "15120:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 528,
														"name": "_grantTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 572,
														"src": "15095:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15095:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 533,
												"nodeType": "ExpressionStatement",
												"src": "15095:38:0"
											}
										]
									},
									"documentation": {
										"id": 478,
										"nodeType": "StructuredDocumentation",
										"src": "13558:258:0",
										"text": " @notice This can only be called after the Staking Program ended\n @dev Which means that all stakes lock periods are already over, and totalRewardPoints value isn't changing anymore - so we can now calculate the percentages of rewards"
									},
									"functionSelector": "0572b0cc",
									"id": 535,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRewards",
									"nameLocation": "13830:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13840:2:0"
									},
									"returnParameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13850:0:0"
									},
									"scope": 708,
									"src": "13821:1399:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 571,
										"nodeType": "Block",
										"src": "15605:286:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 546,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 544,
																"name": "amountEarned_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 540,
																"src": "15623:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 545,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15639:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "15623:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f75206469646e2774206561726e20616e7920696e746567657220616d6f756e74206f6620776569",
															"id": 547,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15642:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6c4dd08c63778c1a28236bdb848c48062fa51b777ba1838c68276b07c98b172b",
																"typeString": "literal_string \"You didn't earn any integer amount of wei\""
															},
															"value": "You didn't earn any integer amount of wei"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6c4dd08c63778c1a28236bdb848c48062fa51b777ba1838c68276b07c98b172b",
																"typeString": "literal_string \"You didn't earn any integer amount of wei\""
															}
														],
														"id": 543,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "15615:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15615:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 549,
												"nodeType": "ExpressionStatement",
												"src": "15615:71:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 551,
																"name": "recipient_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 538,
																"src": "15704:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 554,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15726:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 553,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15718:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 552,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "15718:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 555,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15718:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "15704:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e56657374696e673a2062656e656669636961727920697320746865207a65726f2061646472657373",
															"id": 557,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15730:47:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2418688d011b8e0830741b4ef5b95d25f3075f5a8407237c54796d2479ff21e5",
																"typeString": "literal_string \"TokenVesting: beneficiary is the zero address\""
															},
															"value": "TokenVesting: beneficiary is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2418688d011b8e0830741b4ef5b95d25f3075f5a8407237c54796d2479ff21e5",
																"typeString": "literal_string \"TokenVesting: beneficiary is the zero address\""
															}
														],
														"id": 550,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "15696:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15696:82:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 559,
												"nodeType": "ExpressionStatement",
												"src": "15696:82:0"
											},
											{
												"expression": {
													"id": 564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 560,
															"name": "grantedTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 45,
															"src": "15788:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 562,
														"indexExpression": {
															"id": 561,
															"name": "recipient_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 538,
															"src": "15802:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15788:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 563,
														"name": "amountEarned_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 540,
														"src": "15816:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15788:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 565,
												"nodeType": "ExpressionStatement",
												"src": "15788:41:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 567,
															"name": "recipient_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 538,
															"src": "15858:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 568,
															"name": "amountEarned_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 540,
															"src": "15870:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 566,
														"name": "RewardGranted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 701,
														"src": "15844:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15844:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 570,
												"nodeType": "EmitStatement",
												"src": "15839:45:0"
											}
										]
									},
									"documentation": {
										"id": 536,
										"nodeType": "StructuredDocumentation",
										"src": "15392:134:0",
										"text": " @param recipient_ - Recipient of granted tokens\n @param amountEarned_ - Amount of tokens earned to be granted"
									},
									"id": 572,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantTokens",
									"nameLocation": "15540:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 538,
												"mutability": "mutable",
												"name": "recipient_",
												"nameLocation": "15561:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "15553:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 537,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15553:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "amountEarned_",
												"nameLocation": "15581:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "15573:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 539,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15573:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15552:43:0"
									},
									"returnParameters": {
										"id": 542,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15605:0:0"
									},
									"scope": 708,
									"src": "15531:360:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 613,
										"nodeType": "Block",
										"src": "15967:345:0",
										"statements": [
											{
												"assignments": [
													577
												],
												"declarations": [
													{
														"constant": false,
														"id": 577,
														"mutability": "mutable",
														"name": "releasable",
														"nameLocation": "15985:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 613,
														"src": "15977:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 576,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "15977:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 582,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 579,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "16016:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "16016:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 578,
														"name": "_releasableAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 631,
														"src": "15998:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 581,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15998:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15977:50:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 586,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 584,
																"name": "releasable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 577,
																"src": "16045:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 585,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16058:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "16045:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "56657374696e672072656c656173653a206e6f20746f6b656e732061726520647565",
															"id": 587,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16061:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_232d7994234e21dc0a46dcff0076032352d1b7b4d58ecc76ed88eec990d90098",
																"typeString": "literal_string \"Vesting release: no tokens are due\""
															},
															"value": "Vesting release: no tokens are due"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_232d7994234e21dc0a46dcff0076032352d1b7b4d58ecc76ed88eec990d90098",
																"typeString": "literal_string \"Vesting release: no tokens are due\""
															}
														],
														"id": 583,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "16037:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16037:61:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 589,
												"nodeType": "ExpressionStatement",
												"src": "16037:61:0"
											},
											{
												"expression": {
													"id": 595,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 590,
															"name": "releasedTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 50,
															"src": "16109:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 593,
														"indexExpression": {
															"expression": {
																"id": 591,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "16124:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 592,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "16124:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "16109:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 594,
														"name": "releasable",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 577,
														"src": "16139:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16109:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 596,
												"nodeType": "ExpressionStatement",
												"src": "16109:40:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 600,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "16187:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 601,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "16187:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 602,
																	"name": "releasable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 577,
																	"src": "16199:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 598,
																	"name": "oilerToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "16167:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$786",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 599,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "transfer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 735,
																"src": "16167:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 603,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16167:43:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "526577617264206f696c657273207472616e73666572206661696c6564",
															"id": 604,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16212:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1d084e2eca749984c089d1d9f64331c149c27c323008184a1491516501160a6b",
																"typeString": "literal_string \"Reward oilers transfer failed\""
															},
															"value": "Reward oilers transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1d084e2eca749984c089d1d9f64331c149c27c323008184a1491516501160a6b",
																"typeString": "literal_string \"Reward oilers transfer failed\""
															}
														],
														"id": 597,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "16159:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16159:85:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 606,
												"nodeType": "ExpressionStatement",
												"src": "16159:85:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 608,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "16282:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 609,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "16282:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 610,
															"name": "releasable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 577,
															"src": "16294:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 607,
														"name": "grantedTokensReleased",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 707,
														"src": "16260:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 611,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16260:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 612,
												"nodeType": "EmitStatement",
												"src": "16255:50:0"
											}
										]
									},
									"documentation": {
										"id": 573,
										"nodeType": "StructuredDocumentation",
										"src": "15901:35:0",
										"text": "@notice Releases granted tokens"
									},
									"functionSelector": "86d1a69f",
									"id": 614,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "release",
									"nameLocation": "15950:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15957:2:0"
									},
									"returnParameters": {
										"id": 575,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15967:0:0"
									},
									"scope": 708,
									"src": "15941:371:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 630,
										"nodeType": "Block",
										"src": "16505:78:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 623,
																"name": "recipient_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 617,
																"src": "16536:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 622,
															"name": "_vestedAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 665,
															"src": "16522:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view returns (uint256)"
															}
														},
														"id": 624,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16522:25:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"baseExpression": {
															"id": 625,
															"name": "releasedTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 50,
															"src": "16550:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 627,
														"indexExpression": {
															"id": 626,
															"name": "recipient_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 617,
															"src": "16565:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "16550:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16522:54:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 621,
												"id": 629,
												"nodeType": "Return",
												"src": "16515:61:0"
											}
										]
									},
									"documentation": {
										"id": 615,
										"nodeType": "StructuredDocumentation",
										"src": "16322:99:0",
										"text": "@notice Releasable amount is what is available at a given time minus what was already withdrawn"
									},
									"id": 631,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_releasableAmount",
									"nameLocation": "16435:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "recipient_",
												"nameLocation": "16461:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 631,
												"src": "16453:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 616,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16453:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16452:20:0"
									},
									"returnParameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 631,
												"src": "16496:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 619,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16496:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16495:9:0"
									},
									"scope": 708,
									"src": "16426:157:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 664,
										"nodeType": "Block",
										"src": "16882:411:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 644,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 639,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "16896:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 640,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "16896:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 643,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 641,
															"name": "stakingProgramEndsBlock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "16912:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 642,
															"name": "vestingDuration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 53,
															"src": "16938:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "16912:41:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16896:57:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 662,
													"nodeType": "Block",
													"src": "17090:197:0",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 660,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 658,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"baseExpression": {
																			"id": 650,
																			"name": "grantedTokens",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 45,
																			"src": "17190:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 652,
																		"indexExpression": {
																			"id": 651,
																			"name": "recipient_",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 634,
																			"src": "17204:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "17190:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"expression": {
																						"id": 653,
																						"name": "block",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967292,
																						"src": "17219:5:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_block",
																							"typeString": "block"
																						}
																					},
																					"id": 654,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "number",
																					"nodeType": "MemberAccess",
																					"src": "17219:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 655,
																					"name": "stakingProgramEndsBlock",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 29,
																					"src": "17234:23:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "17219:38:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 657,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "17218:40:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "17190:68:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 659,
																	"name": "vestingDuration",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 53,
																	"src": "17261:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17190:86:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 638,
															"id": 661,
															"nodeType": "Return",
															"src": "17183:93:0"
														}
													]
												},
												"id": 663,
												"nodeType": "IfStatement",
												"src": "16892:395:0",
												"trueBody": {
													"id": 649,
													"nodeType": "Block",
													"src": "16955:129:0",
													"statements": [
														{
															"expression": {
																"baseExpression": {
																	"id": 645,
																	"name": "grantedTokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 45,
																	"src": "17048:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 647,
																"indexExpression": {
																	"id": 646,
																	"name": "recipient_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 634,
																	"src": "17062:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "17048:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 638,
															"id": 648,
															"nodeType": "Return",
															"src": "17041:32:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 632,
										"nodeType": "StructuredDocumentation",
										"src": "16593:209:0",
										"text": " @notice The output of this function gradually changes from [0.. to ..grantedAmount] while the vesting is going\n @param recipient_ - vested tokens recipient\n @return vested amount"
									},
									"id": 665,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_vestedAmount",
									"nameLocation": "16816:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "recipient_",
												"nameLocation": "16838:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "16830:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 633,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16830:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16829:20:0"
									},
									"returnParameters": {
										"id": 638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 637,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "16873:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 636,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16873:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16872:9:0"
									},
									"scope": 708,
									"src": "16807:486:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"id": 675,
									"name": "StakeLocked",
									"nameLocation": "17309:11:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 667,
												"indexed": false,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "17329:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "17321:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 666,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17321:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 669,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "17348:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "17340:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 668,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17340:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 671,
												"indexed": false,
												"mutability": "mutable",
												"name": "lockingPeriodInBlocks",
												"nameLocation": "17369:21:0",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "17361:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 670,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17361:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 673,
												"indexed": false,
												"mutability": "mutable",
												"name": "expectedStakingRewardPoints",
												"nameLocation": "17400:27:0",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "17392:35:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 672,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17392:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17320:108:0"
									},
									"src": "17303:126:0"
								},
								{
									"anonymous": false,
									"id": 685,
									"name": "StakeUnlockedPrematurely",
									"nameLocation": "17440:24:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 677,
												"indexed": false,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "17473:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "17465:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17465:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "17492:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "17484:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17484:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 681,
												"indexed": false,
												"mutability": "mutable",
												"name": "lockingPeriodInBlocks",
												"nameLocation": "17513:21:0",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "17505:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 680,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17505:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 683,
												"indexed": false,
												"mutability": "mutable",
												"name": "actualLockingPeriodInBlocks",
												"nameLocation": "17544:27:0",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "17536:35:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 682,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17536:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17464:108:0"
									},
									"src": "17434:139:0"
								},
								{
									"anonymous": false,
									"id": 695,
									"name": "StakeUnlocked",
									"nameLocation": "17584:13:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 687,
												"indexed": false,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "17606:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 695,
												"src": "17598:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 686,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17598:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 689,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "17625:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 695,
												"src": "17617:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 688,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17617:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"indexed": false,
												"mutability": "mutable",
												"name": "lockingPeriodInBlocks",
												"nameLocation": "17646:21:0",
												"nodeType": "VariableDeclaration",
												"scope": 695,
												"src": "17638:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17638:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 693,
												"indexed": false,
												"mutability": "mutable",
												"name": "rewardPoints",
												"nameLocation": "17677:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 695,
												"src": "17669:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 692,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17669:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17597:93:0"
									},
									"src": "17578:113:0"
								},
								{
									"anonymous": false,
									"id": 701,
									"name": "RewardGranted",
									"nameLocation": "17702:13:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 697,
												"indexed": false,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "17724:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 701,
												"src": "17716:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 696,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17716:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountEarned",
												"nameLocation": "17743:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 701,
												"src": "17735:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 698,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17735:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17715:41:0"
									},
									"src": "17696:61:0"
								},
								{
									"anonymous": false,
									"id": 707,
									"name": "grantedTokensReleased",
									"nameLocation": "17768:21:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 703,
												"indexed": false,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "17798:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "17790:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 702,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17790:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 705,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "17817:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "17809:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 704,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17809:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17789:35:0"
									},
									"src": "17762:63:0"
								}
							],
							"scope": 709,
							"src": "2612:15215:0",
							"usedErrors": []
						}
					],
					"src": "1306:16521:0"
				},
				"id": 0
			},
			"token-staking/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "token-staking/@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							786
						]
					},
					"id": 787,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 710,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "1307:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 711,
								"nodeType": "StructuredDocumentation",
								"src": "1332:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 786,
							"linearizedBaseContracts": [
								786
							],
							"name": "IERC20",
							"nameLocation": "1413:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 712,
										"nodeType": "StructuredDocumentation",
										"src": "1426:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 717,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "1506:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 713,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1517:2:1"
									},
									"returnParameters": {
										"id": 716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 715,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "1543:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 714,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1543:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1542:9:1"
									},
									"scope": 786,
									"src": "1497:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 718,
										"nodeType": "StructuredDocumentation",
										"src": "1558:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 725,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1644:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 720,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1662:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "1654:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 719,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1654:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1653:17:1"
									},
									"returnParameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "1694:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1694:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1693:9:1"
									},
									"scope": 786,
									"src": "1635:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 726,
										"nodeType": "StructuredDocumentation",
										"src": "1709:209:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 735,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1932:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1949:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "1941:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 727,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1941:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1968:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "1960:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 729,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1960:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1940:35:1"
									},
									"returnParameters": {
										"id": 734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 733,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "1994:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 732,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1994:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1993:6:1"
									},
									"scope": 786,
									"src": "1923:77:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 736,
										"nodeType": "StructuredDocumentation",
										"src": "2006:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 745,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "2284:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 738,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2302:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "2294:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 737,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2294:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2317:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "2309:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 739,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2309:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2293:32:1"
									},
									"returnParameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 743,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "2349:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 742,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2349:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2348:9:1"
									},
									"scope": 786,
									"src": "2275:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 746,
										"nodeType": "StructuredDocumentation",
										"src": "2364:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 755,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3020:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 748,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3036:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "3028:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 747,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3028:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 750,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3053:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "3045:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 749,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3045:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3027:33:1"
									},
									"returnParameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "3079:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 752,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3079:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3078:6:1"
									},
									"scope": 786,
									"src": "3011:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 756,
										"nodeType": "StructuredDocumentation",
										"src": "3091:296:1",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 767,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3401:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3422:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "3414:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 757,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3414:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 760,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3438:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "3430:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 759,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3430:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3457:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "3449:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 761,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3449:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3413:51:1"
									},
									"returnParameters": {
										"id": 766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "3483:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 764,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3483:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3482:6:1"
									},
									"scope": 786,
									"src": "3392:97:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 768,
										"nodeType": "StructuredDocumentation",
										"src": "3495:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 776,
									"name": "Transfer",
									"nameLocation": "3664:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3689:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "3673:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 769,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3673:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 772,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3711:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "3695:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 771,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3695:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 774,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3723:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "3715:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 773,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3715:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3672:57:1"
									},
									"src": "3658:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 777,
										"nodeType": "StructuredDocumentation",
										"src": "3736:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 785,
									"name": "Approval",
									"nameLocation": "3895:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 784,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3920:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "3904:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 778,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3904:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 781,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3943:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "3927:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 780,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3927:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 783,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3960:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "3952:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 782,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3952:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3903:63:1"
									},
									"src": "3889:78:1"
								}
							],
							"scope": 787,
							"src": "1403:2566:1",
							"usedErrors": []
						}
					],
					"src": "1307:2663:1"
				},
				"id": 1
			}
		}
	}
}