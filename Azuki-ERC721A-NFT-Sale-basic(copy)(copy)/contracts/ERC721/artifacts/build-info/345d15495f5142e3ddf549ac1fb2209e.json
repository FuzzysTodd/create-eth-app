{
	"id": "345d15495f5142e3ddf549ac1fb2209e",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.27",
	"solcLongVersion": "0.8.27+commit.40a35a09",
	"input": {
		"language": "Solidity",
		"sources": {
			"mintable-token(copy)(copy)/mintable-token.sol": {
				"content": "/*\n    \n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██    ██████  ███████ ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██      ██    ██\n  ██      ██    ██ ██    ██ █████   ██████  ██    ██ ██    ██ █████      ██   ██ █████   ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██       ██  ██\n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██ ██ ██████  ███████   ████\n  \n  Find any smart contract, and build your project faster: https://www.cookbook.dev\n  Twitter: https://twitter.com/cookbook_dev\n  Discord: https://discord.gg/cookbookdev\n  \n  Find this contract on Cookbook: https://www.cookbook.dev/contracts/mintable-token?utm=code\n  */\n  \n  // SPDX-License-Identifier: UNLICENSED\n\npragma solidity ^0.8.10;\n\nimport \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"mintable-token/@openzeppelin/contracts/access/Ownable.sol\";\n\n/**\n * @title Mintable Token\n * @author Breakthrough Labs Inc.\n * @notice Token, ERC20, Mintable\n * @custom:version 1.0.7\n * @custom:address 5\n * @custom:default-precision 18\n * @custom:simple-description Token that allows the owner to mint as many tokens as desired.\n * @dev ERC20 token with the following features:\n *\n *  - Premint your initial supply.\n *  - Mint as many tokens as you want with no cap.\n *  - Only the contract owner can mint new tokens.\n *\n */\n\ncontract MintableToken is ERC20, Ownable {\n    /**\n     * @param name Token Name\n     * @param symbol Token Symbol\n     * @param initialSupply Initial Supply\n     */\n    constructor(\n        string memory name,\n        string memory symbol,\n        uint256 initialSupply\n    ) payable ERC20(name, symbol) {\n        _mint(msg.sender, initialSupply);\n    }\n\n    /**\n     * @dev Creates `amount` tokens and assigns them to `to`, increasing\n     * the total supply. Only accessible by the contract owner.\n     */\n    function mint(uint256 amount, address to) external onlyOwner {\n        _mint(to, amount);\n    }\n}\n\n"
			},
			"mintable-token/@openzeppelin/contracts/access/Ownable.sol": {
				"content": "/*\n    \n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██    ██████  ███████ ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██      ██    ██\n  ██      ██    ██ ██    ██ █████   ██████  ██    ██ ██    ██ █████      ██   ██ █████   ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██       ██  ██\n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██ ██ ██████  ███████   ████\n  \n  Find any smart contract, and build your project faster: https://www.cookbook.dev\n  Twitter: https://twitter.com/cookbook_dev\n  Discord: https://discord.gg/cookbookdev\n  \n  Find this contract on Cookbook: https://www.cookbook.dev/contracts/mintable-token?utm=code\n  */\n  \n  // SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "/*\n    \n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██    ██████  ███████ ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██      ██    ██\n  ██      ██    ██ ██    ██ █████   ██████  ██    ██ ██    ██ █████      ██   ██ █████   ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██       ██  ██\n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██ ██ ██████  ███████   ████\n  \n  Find any smart contract, and build your project faster: https://www.cookbook.dev\n  Twitter: https://twitter.com/cookbook_dev\n  Discord: https://discord.gg/cookbookdev\n  \n  Find this contract on Cookbook: https://www.cookbook.dev/contracts/mintable-token?utm=code\n  */\n  \n  // SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n        }\n        _balances[to] += amount;\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        _balances[account] += amount;\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n        }\n        _totalSupply -= amount;\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n}\n"
			},
			"mintable-token/@openzeppelin/contracts/utils/Context.sol": {
				"content": "/*\n    \n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██    ██████  ███████ ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██      ██    ██\n  ██      ██    ██ ██    ██ █████   ██████  ██    ██ ██    ██ █████      ██   ██ █████   ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██       ██  ██\n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██ ██ ██████  ███████   ████\n  \n  Find any smart contract, and build your project faster: https://www.cookbook.dev\n  Twitter: https://twitter.com/cookbook_dev\n  Discord: https://discord.gg/cookbookdev\n  \n  Find this contract on Cookbook: https://www.cookbook.dev/contracts/mintable-token?utm=code\n  */\n  \n  // SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"mintable-token/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "/*\n    \n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██    ██████  ███████ ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██      ██    ██\n  ██      ██    ██ ██    ██ █████   ██████  ██    ██ ██    ██ █████      ██   ██ █████   ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██       ██  ██\n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██ ██ ██████  ███████   ████\n  \n  Find any smart contract, and build your project faster: https://www.cookbook.dev\n  Twitter: https://twitter.com/cookbook_dev\n  Discord: https://discord.gg/cookbookdev\n  \n  Find this contract on Cookbook: https://www.cookbook.dev/contracts/mintable-token?utm=code\n  */\n  \n  // SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"mintable-token/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "/*\n    \n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██    ██████  ███████ ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██      ██    ██\n  ██      ██    ██ ██    ██ █████   ██████  ██    ██ ██    ██ █████      ██   ██ █████   ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██       ██  ██\n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██ ██ ██████  ███████   ████\n  \n  Find any smart contract, and build your project faster: https://www.cookbook.dev\n  Twitter: https://twitter.com/cookbook_dev\n  Discord: https://discord.gg/cookbookdev\n  \n  Find this contract on Cookbook: https://www.cookbook.dev/contracts/mintable-token?utm=code\n  */\n  \n  // SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 5000000
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [],
			"evmVersion": "istanbul"
		}
	},
	"output": {
		"contracts": {
			"mintable-token(copy)(copy)/mintable-token.sol": {
				"MintableToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "initialSupply",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Breakthrough Labs Inc.",
						"custom:address": "5",
						"custom:default-precision": "18",
						"custom:simple-description": "Token that allows the owner to mint as many tokens as desired.",
						"custom:version": "1.0.7",
						"details": "ERC20 token with the following features:  - Premint your initial supply.  - Mint as many tokens as you want with no cap.  - Only the contract owner can mint new tokens.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"params": {
									"initialSupply": "Initial Supply",
									"name": "Token Name",
									"symbol": "Token Symbol"
								}
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"mint(uint256,address)": {
								"details": "Creates `amount` tokens and assigns them to `to`, increasing the total supply. Only accessible by the contract owner."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"title": "Mintable Token",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"mintable-token(copy)(copy)/mintable-token.sol\":1946:2556  contract MintableToken is ERC20, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"mintable-token(copy)(copy)/mintable-token.sol\":2116:2300  constructor(... */\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_1\n  swap2\n  tag_2\n  jump\t// in\ntag_1:\n    /* \"mintable-token(copy)(copy)/mintable-token.sol\":2237:2241  name */\n  dup3\n    /* \"mintable-token(copy)(copy)/mintable-token.sol\":2243:2249  symbol */\n  dup3\n    /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3319:3324  _name */\n  0x03\n    /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3319:3332  _name = name_ */\n  tag_7\n    /* \"mintable-token(copy)(copy)/mintable-token.sol\":2237:2241  name */\n  dup4\n    /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3319:3324  _name */\n  dup3\n    /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3319:3332  _name = name_ */\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3342:3349  _symbol */\n  0x04\n    /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3342:3359  _symbol = symbol_ */\n  tag_9\n    /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3352:3359  symbol_ */\n  dup3\n    /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3342:3349  _symbol */\n  dup3\n    /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3342:3359  _symbol = symbol_ */\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n    /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3253:3366  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"mintable-token/@openzeppelin/contracts/access/Ownable.sol\":2211:2243  _transferOwnership(_msgSender()) */\n  tag_11\n    /* \"mintable-token/@openzeppelin/contracts/access/Ownable.sol\":2230:2242  _msgSender() */\n  tag_12\n    /* \"mintable-token/@openzeppelin/contracts/access/Ownable.sol\":2230:2240  _msgSender */\n  shl(0x20, tag_13)\n    /* \"mintable-token/@openzeppelin/contracts/access/Ownable.sol\":2230:2242  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_12:\n    /* \"mintable-token/@openzeppelin/contracts/access/Ownable.sol\":2211:2229  _transferOwnership */\n  tag_14\n    /* \"mintable-token/@openzeppelin/contracts/access/Ownable.sol\":2211:2243  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_11:\n    /* \"mintable-token(copy)(copy)/mintable-token.sol\":2261:2293  _mint(msg.sender, initialSupply) */\n  tag_16\n    /* \"mintable-token(copy)(copy)/mintable-token.sol\":2267:2277  msg.sender */\n  caller\n    /* \"mintable-token(copy)(copy)/mintable-token.sol\":2279:2292  initialSupply */\n  dup3\n    /* \"mintable-token(copy)(copy)/mintable-token.sol\":2261:2266  _mint */\n  tag_17\n    /* \"mintable-token(copy)(copy)/mintable-token.sol\":2261:2293  _mint(msg.sender, initialSupply) */\n  jump\t// in\ntag_16:\n    /* \"mintable-token(copy)(copy)/mintable-token.sol\":2116:2300  constructor(... */\n  pop\n  pop\n  pop\n    /* \"mintable-token(copy)(copy)/mintable-token.sol\":1946:2556  contract MintableToken is ERC20, Ownable {... */\n  jump(tag_42)\n    /* \"mintable-token/@openzeppelin/contracts/utils/Context.sol\":1915:2011  function _msgSender() internal view virtual returns (address) {... */\ntag_13:\n    /* \"mintable-token/@openzeppelin/contracts/utils/Context.sol\":1994:2004  msg.sender */\n  caller\n  swap1\n    /* \"mintable-token/@openzeppelin/contracts/utils/Context.sol\":1915:2011  function _msgSender() internal view virtual returns (address) {... */\n  jump\t// out\n    /* \"mintable-token/@openzeppelin/contracts/access/Ownable.sol\":3708:3895  function _transferOwnership(address newOwner) internal virtual {... */\ntag_14:\n    /* \"mintable-token/@openzeppelin/contracts/access/Ownable.sol\":3800:3806  _owner */\n  0x05\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"mintable-token/@openzeppelin/contracts/access/Ownable.sol\":3816:3833  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"mintable-token/@openzeppelin/contracts/access/Ownable.sol\":3848:3888  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"mintable-token/@openzeppelin/contracts/access/Ownable.sol\":3800:3806  _owner */\n  swap2\n  and\n  swap2\n    /* \"mintable-token/@openzeppelin/contracts/access/Ownable.sol\":3816:3833  _owner = newOwner */\n  swap1\n    /* \"mintable-token/@openzeppelin/contracts/access/Ownable.sol\":3800:3806  _owner */\n  dup3\n  swap1\n    /* \"mintable-token/@openzeppelin/contracts/access/Ownable.sol\":3848:3888  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"mintable-token/@openzeppelin/contracts/access/Ownable.sol\":3781:3797  address oldOwner */\n  0x00\n  swap1\n    /* \"mintable-token/@openzeppelin/contracts/access/Ownable.sol\":3848:3888  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"mintable-token/@openzeppelin/contracts/access/Ownable.sol\":3771:3895  {... */\n  pop\n    /* \"mintable-token/@openzeppelin/contracts/access/Ownable.sol\":3708:3895  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9677:10066  function _mint(address account, uint256 amount) internal virtual {... */\ntag_17:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9760:9781  account != address(0) */\n  dup3\n  and\n    /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9752:9817  require(account != address(0), \"ERC20: mint to the zero address\") */\n  tag_22\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":4319:4321   */\n  0x20\n    /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9752:9817  require(account != address(0), \"ERC20: mint to the zero address\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":4301:4322   */\n  mstore\n    /* \"#utility.yul\":4358:4360   */\n  0x1f\n    /* \"#utility.yul\":4338:4356   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":4331:4361   */\n  mstore\n    /* \"#utility.yul\":4397:4430   */\n  0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n    /* \"#utility.yul\":4377:4395   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":4370:4431   */\n  mstore\n    /* \"#utility.yul\":4448:4466   */\n  0x64\n  add\n    /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9752:9817  require(account != address(0), \"ERC20: mint to the zero address\") */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_22:\n    /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9904:9910  amount */\n  dup1\n    /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9888:9900  _totalSupply */\n  0x02\n  0x00\n    /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9888:9910  _totalSupply += amount */\n  dup3\n  dup3\n  sload\n  tag_27\n  swap2\n  swap1\n  tag_28\n  jump\t// in\ntag_27:\n  swap1\n  swap2\n  sstore\n  pop\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9920:9938  _balances[account] */\n  dup3\n  and\n    /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9920:9929  _balances */\n  0x00\n    /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9920:9938  _balances[account] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  dup2\n  keccak256\n    /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9920:9948  _balances[account] += amount */\n  dup1\n  sload\n    /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9942:9948  amount */\n  dup4\n  swap3\n    /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9920:9929  _balances */\n  swap1\n    /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9920:9948  _balances[account] += amount */\n  tag_29\n  swap1\n    /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9942:9948  amount */\n  dup5\n  swap1\n    /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9920:9948  _balances[account] += amount */\n  tag_28\n  jump\t// in\ntag_29:\n  swap1\n  swap2\n  sstore\n  pop\n  pop\n    /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9963:10000  Transfer(address(0), account, amount) */\n  mload(0x40)\n    /* \"#utility.yul\":4850:4875   */\n  dup2\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9963:10000  Transfer(address(0), account, amount) */\n  dup4\n  and\n  swap1\n    /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9980:9981  0 */\n  0x00\n  swap1\n    /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9963:10000  Transfer(address(0), account, amount) */\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n  swap1\n    /* \"#utility.yul\":4838:4840   */\n  0x20\n    /* \"#utility.yul\":4823:4841   */\n  add\n    /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9963:10000  Transfer(address(0), account, amount) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9677:10066  function _mint(address account, uint256 amount) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":13061:13182  function _beforeTokenTransfer(... */\ntag_26:\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:141   */\ntag_36:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:980   */\ntag_37:\n    /* \"#utility.yul\":200:205   */\n  0x00\n    /* \"#utility.yul\":253:256   */\n  dup3\n    /* \"#utility.yul\":246:250   */\n  0x1f\n    /* \"#utility.yul\":238:244   */\n  dup4\n    /* \"#utility.yul\":234:251   */\n  add\n    /* \"#utility.yul\":230:257   */\n  slt\n    /* \"#utility.yul\":220:275   */\n  tag_45\n  jumpi\n    /* \"#utility.yul\":271:272   */\n  0x00\n    /* \"#utility.yul\":268:269   */\n  dup1\n    /* \"#utility.yul\":261:273   */\n  revert\n    /* \"#utility.yul\":220:275   */\ntag_45:\n    /* \"#utility.yul\":298:311   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":323:353   */\n  dup2\n  gt\n    /* \"#utility.yul\":320:376   */\n  iszero\n  tag_47\n  jumpi\n    /* \"#utility.yul\":356:374   */\n  tag_47\n  tag_36\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":405:407   */\n  0x40\n    /* \"#utility.yul\":399:408   */\n  mload\n    /* \"#utility.yul\":497:499   */\n  0x1f\n    /* \"#utility.yul\":459:476   */\n  dup3\n  add\n  not(0x1f)\n    /* \"#utility.yul\":455:486   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":488:490   */\n  0x3f\n    /* \"#utility.yul\":451:491   */\n  add\n    /* \"#utility.yul\":447:501   */\n  and\n    /* \"#utility.yul\":435:502   */\n  dup2\n  add\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":517:551   */\n  dup2\n  gt\n    /* \"#utility.yul\":553:575   */\n  dup3\n  dup3\n  lt\n    /* \"#utility.yul\":514:576   */\n  or\n    /* \"#utility.yul\":511:599   */\n  iszero\n  tag_49\n  jumpi\n    /* \"#utility.yul\":579:597   */\n  tag_49\n  tag_36\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":615:617   */\n  0x40\n    /* \"#utility.yul\":608:630   */\n  mstore\n    /* \"#utility.yul\":639:661   */\n  dup2\n  dup2\n  mstore\n    /* \"#utility.yul\":680:699   */\n  dup4\n  dup3\n  add\n    /* \"#utility.yul\":701:705   */\n  0x20\n    /* \"#utility.yul\":676:706   */\n  add\n    /* \"#utility.yul\":673:712   */\n  dup6\n  lt\n    /* \"#utility.yul\":670:729   */\n  iszero\n  tag_50\n  jumpi\n    /* \"#utility.yul\":725:726   */\n  0x00\n    /* \"#utility.yul\":722:723   */\n  dup1\n    /* \"#utility.yul\":715:727   */\n  revert\n    /* \"#utility.yul\":670:729   */\ntag_50:\n    /* \"#utility.yul\":747:748   */\n  0x00\n    /* \"#utility.yul\":757:900   */\ntag_51:\n    /* \"#utility.yul\":771:777   */\n  dup3\n    /* \"#utility.yul\":768:769   */\n  dup2\n    /* \"#utility.yul\":765:778   */\n  lt\n    /* \"#utility.yul\":757:900   */\n  iszero\n  tag_53\n  jumpi\n    /* \"#utility.yul\":883:887   */\n  0x20\n    /* \"#utility.yul\":867:881   */\n  dup2\n  dup7\n  add\n    /* \"#utility.yul\":863:888   */\n  dup2\n  add\n    /* \"#utility.yul\":857:889   */\n  mload\n    /* \"#utility.yul\":834:848   */\n  dup4\n  dup4\n  add\n    /* \"#utility.yul\":830:855   */\n  dup3\n  add\n    /* \"#utility.yul\":823:890   */\n  mstore\n    /* \"#utility.yul\":786:798   */\n  add\n    /* \"#utility.yul\":757:900   */\n  jump(tag_51)\ntag_53:\n  pop\n    /* \"#utility.yul\":948:949   */\n  0x00\n    /* \"#utility.yul\":920:939   */\n  swap2\n  dup2\n  add\n    /* \"#utility.yul\":941:945   */\n  0x20\n    /* \"#utility.yul\":916:946   */\n  add\n    /* \"#utility.yul\":909:950   */\n  swap2\n  swap1\n  swap2\n  mstore\n    /* \"#utility.yul\":924:930   */\n  swap4\n    /* \"#utility.yul\":146:980   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":985:1603   */\ntag_2:\n    /* \"#utility.yul\":1093:1099   */\n  0x00\n    /* \"#utility.yul\":1101:1107   */\n  dup1\n    /* \"#utility.yul\":1109:1115   */\n  0x00\n    /* \"#utility.yul\":1162:1164   */\n  0x60\n    /* \"#utility.yul\":1150:1159   */\n  dup5\n    /* \"#utility.yul\":1141:1148   */\n  dup7\n    /* \"#utility.yul\":1137:1160   */\n  sub\n    /* \"#utility.yul\":1133:1165   */\n  slt\n    /* \"#utility.yul\":1130:1182   */\n  iszero\n  tag_55\n  jumpi\n    /* \"#utility.yul\":1178:1179   */\n  0x00\n    /* \"#utility.yul\":1175:1176   */\n  dup1\n    /* \"#utility.yul\":1168:1180   */\n  revert\n    /* \"#utility.yul\":1130:1182   */\ntag_55:\n    /* \"#utility.yul\":1205:1221   */\n  dup4\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1233:1263   */\n  dup2\n  gt\n    /* \"#utility.yul\":1230:1280   */\n  iszero\n  tag_56\n  jumpi\n    /* \"#utility.yul\":1276:1277   */\n  0x00\n    /* \"#utility.yul\":1273:1274   */\n  dup1\n    /* \"#utility.yul\":1266:1278   */\n  revert\n    /* \"#utility.yul\":1230:1280   */\ntag_56:\n    /* \"#utility.yul\":1299:1360   */\n  tag_57\n    /* \"#utility.yul\":1352:1359   */\n  dup7\n    /* \"#utility.yul\":1343:1349   */\n  dup3\n    /* \"#utility.yul\":1332:1341   */\n  dup8\n    /* \"#utility.yul\":1328:1350   */\n  add\n    /* \"#utility.yul\":1299:1360   */\n  tag_37\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":1406:1408   */\n  0x20\n    /* \"#utility.yul\":1391:1409   */\n  dup7\n  add\n    /* \"#utility.yul\":1385:1410   */\n  mload\n    /* \"#utility.yul\":1289:1360   */\n  swap1\n  swap5\n  pop\n    /* \"#utility.yul\":1385:1410   */\n  swap1\n  pop\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1422:1454   */\n  dup2\n  gt\n    /* \"#utility.yul\":1419:1471   */\n  iszero\n  tag_58\n  jumpi\n    /* \"#utility.yul\":1467:1468   */\n  0x00\n    /* \"#utility.yul\":1464:1465   */\n  dup1\n    /* \"#utility.yul\":1457:1469   */\n  revert\n    /* \"#utility.yul\":1419:1471   */\ntag_58:\n    /* \"#utility.yul\":1490:1553   */\n  tag_59\n    /* \"#utility.yul\":1545:1552   */\n  dup7\n    /* \"#utility.yul\":1534:1542   */\n  dup3\n    /* \"#utility.yul\":1523:1532   */\n  dup8\n    /* \"#utility.yul\":1519:1543   */\n  add\n    /* \"#utility.yul\":1490:1553   */\n  tag_37\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":1480:1553   */\n  swap3\n  pop\n  pop\n    /* \"#utility.yul\":1593:1595   */\n  0x40\n    /* \"#utility.yul\":1582:1591   */\n  dup5\n    /* \"#utility.yul\":1578:1596   */\n  add\n    /* \"#utility.yul\":1572:1597   */\n  mload\n    /* \"#utility.yul\":1562:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":985:1603   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":1608:1988   */\ntag_38:\n    /* \"#utility.yul\":1687:1688   */\n  0x01\n    /* \"#utility.yul\":1683:1695   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1730:1742   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1751:1812   */\n  tag_61\n  jumpi\n    /* \"#utility.yul\":1805:1809   */\n  0x7f\n    /* \"#utility.yul\":1797:1803   */\n  dup3\n    /* \"#utility.yul\":1793:1810   */\n  and\n    /* \"#utility.yul\":1783:1810   */\n  swap2\n  pop\n    /* \"#utility.yul\":1751:1812   */\ntag_61:\n    /* \"#utility.yul\":1858:1860   */\n  0x20\n    /* \"#utility.yul\":1850:1856   */\n  dup3\n    /* \"#utility.yul\":1847:1861   */\n  lt\n    /* \"#utility.yul\":1827:1845   */\n  dup2\n    /* \"#utility.yul\":1824:1862   */\n  sub\n    /* \"#utility.yul\":1821:1982   */\n  tag_62\n  jumpi\n    /* \"#utility.yul\":1904:1914   */\n  0x4e487b71\n    /* \"#utility.yul\":1899:1902   */\n  0xe0\n    /* \"#utility.yul\":1895:1915   */\n  shl\n    /* \"#utility.yul\":1892:1893   */\n  0x00\n    /* \"#utility.yul\":1885:1916   */\n  mstore\n    /* \"#utility.yul\":1939:1943   */\n  0x22\n    /* \"#utility.yul\":1936:1937   */\n  0x04\n    /* \"#utility.yul\":1929:1944   */\n  mstore\n    /* \"#utility.yul\":1967:1971   */\n  0x24\n    /* \"#utility.yul\":1964:1965   */\n  0x00\n    /* \"#utility.yul\":1957:1972   */\n  revert\n    /* \"#utility.yul\":1821:1982   */\ntag_62:\n  pop\n    /* \"#utility.yul\":1608:1988   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2119:2637   */\ntag_40:\n    /* \"#utility.yul\":2221:2223   */\n  0x1f\n    /* \"#utility.yul\":2216:2219   */\n  dup3\n    /* \"#utility.yul\":2213:2224   */\n  gt\n    /* \"#utility.yul\":2210:2631   */\n  iszero\n  tag_26\n  jumpi\n    /* \"#utility.yul\":2257:2262   */\n  dup1\n    /* \"#utility.yul\":2254:2255   */\n  0x00\n    /* \"#utility.yul\":2247:2263   */\n  mstore\n    /* \"#utility.yul\":2301:2305   */\n  0x20\n    /* \"#utility.yul\":2298:2299   */\n  0x00\n    /* \"#utility.yul\":2288:2306   */\n  keccak256\n    /* \"#utility.yul\":2371:2373   */\n  0x1f\n    /* \"#utility.yul\":2359:2369   */\n  dup5\n    /* \"#utility.yul\":2355:2374   */\n  add\n    /* \"#utility.yul\":2352:2353   */\n  0x05\n    /* \"#utility.yul\":2348:2375   */\n  shr\n    /* \"#utility.yul\":2342:2346   */\n  dup2\n    /* \"#utility.yul\":2338:2376   */\n  add\n    /* \"#utility.yul\":2407:2411   */\n  0x20\n    /* \"#utility.yul\":2395:2405   */\n  dup6\n    /* \"#utility.yul\":2392:2412   */\n  lt\n    /* \"#utility.yul\":2389:2436   */\n  iszero\n  tag_66\n  jumpi\n  pop\n    /* \"#utility.yul\":2430:2434   */\n  dup1\n    /* \"#utility.yul\":2389:2436   */\ntag_66:\n    /* \"#utility.yul\":2485:2487   */\n  0x1f\n    /* \"#utility.yul\":2480:2483   */\n  dup5\n    /* \"#utility.yul\":2476:2488   */\n  add\n    /* \"#utility.yul\":2473:2474   */\n  0x05\n    /* \"#utility.yul\":2469:2489   */\n  shr\n    /* \"#utility.yul\":2463:2467   */\n  dup3\n    /* \"#utility.yul\":2459:2490   */\n  add\n    /* \"#utility.yul\":2449:2490   */\n  swap2\n  pop\n    /* \"#utility.yul\":2540:2621   */\ntag_67:\n    /* \"#utility.yul\":2558:2560   */\n  dup2\n    /* \"#utility.yul\":2551:2556   */\n  dup2\n    /* \"#utility.yul\":2548:2561   */\n  lt\n    /* \"#utility.yul\":2540:2621   */\n  iszero\n  tag_69\n  jumpi\n    /* \"#utility.yul\":2617:2618   */\n  0x00\n    /* \"#utility.yul\":2603:2619   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2584:2585   */\n  0x01\n    /* \"#utility.yul\":2573:2586   */\n  add\n    /* \"#utility.yul\":2540:2621   */\n  jump(tag_67)\ntag_69:\n    /* \"#utility.yul\":2544:2547   */\n  pop\n  pop\n    /* \"#utility.yul\":2119:2637   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2813:4112   */\ntag_8:\n    /* \"#utility.yul\":2933:2943   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":2955:2985   */\n  dup2\n  gt\n    /* \"#utility.yul\":2952:3008   */\n  iszero\n  tag_73\n  jumpi\n    /* \"#utility.yul\":2988:3006   */\n  tag_73\n  tag_36\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":3017:3114   */\n  tag_74\n    /* \"#utility.yul\":3107:3113   */\n  dup2\n    /* \"#utility.yul\":3067:3105   */\n  tag_75\n    /* \"#utility.yul\":3099:3103   */\n  dup5\n    /* \"#utility.yul\":3093:3104   */\n  sload\n    /* \"#utility.yul\":3067:3105   */\n  tag_38\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":3061:3065   */\n  dup5\n    /* \"#utility.yul\":3017:3114   */\n  tag_40\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":3163:3167   */\n  0x20\n    /* \"#utility.yul\":3194:3196   */\n  0x1f\n    /* \"#utility.yul\":3183:3197   */\n  dup3\n  gt\n    /* \"#utility.yul\":3211:3212   */\n  0x01\n    /* \"#utility.yul\":3206:3855   */\n  dup2\n  eq\n  tag_77\n  jumpi\n    /* \"#utility.yul\":3899:3900   */\n  0x00\n    /* \"#utility.yul\":3916:3922   */\n  dup4\n    /* \"#utility.yul\":3913:4002   */\n  iszero\n  tag_78\n  jumpi\n  pop\n    /* \"#utility.yul\":3968:3987   */\n  dup5\n  dup3\n  add\n    /* \"#utility.yul\":3962:3988   */\n  mload\n    /* \"#utility.yul\":3913:4002   */\ntag_78:\n  not(0x00)\n    /* \"#utility.yul\":2770:2771   */\n  0x03\n    /* \"#utility.yul\":2766:2777   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":2762:2786   */\n  shr\n    /* \"#utility.yul\":2758:2787   */\n  not\n    /* \"#utility.yul\":2748:2788   */\n  and\n    /* \"#utility.yul\":2794:2795   */\n  0x01\n    /* \"#utility.yul\":2790:2801   */\n  dup5\n  swap1\n  shl\n    /* \"#utility.yul\":2745:2802   */\n  or\n    /* \"#utility.yul\":4015:4096   */\n  dup5\n  sstore\n    /* \"#utility.yul\":3176:4106   */\n  jump(tag_69)\n    /* \"#utility.yul\":3206:3855   */\ntag_77:\n    /* \"#utility.yul\":2066:2067   */\n  0x00\n    /* \"#utility.yul\":2059:2073   */\n  dup5\n  dup2\n  mstore\n    /* \"#utility.yul\":2103:2107   */\n  0x20\n    /* \"#utility.yul\":2090:2108   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":3242:3262   */\n  dup6\n  and\n  swap2\n    /* \"#utility.yul\":3360:3582   */\ntag_81:\n    /* \"#utility.yul\":3374:3381   */\n  dup3\n    /* \"#utility.yul\":3371:3372   */\n  dup2\n    /* \"#utility.yul\":3368:3382   */\n  lt\n    /* \"#utility.yul\":3360:3582   */\n  iszero\n  tag_83\n  jumpi\n    /* \"#utility.yul\":3456:3475   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":3450:3476   */\n  mload\n    /* \"#utility.yul\":3435:3477   */\n  dup3\n  sstore\n    /* \"#utility.yul\":3563:3567   */\n  0x20\n    /* \"#utility.yul\":3548:3568   */\n  swap5\n  dup6\n  add\n  swap5\n    /* \"#utility.yul\":3516:3517   */\n  0x01\n    /* \"#utility.yul\":3504:3518   */\n  swap1\n  swap3\n  add\n  swap2\n    /* \"#utility.yul\":3390:3402   */\n  add\n    /* \"#utility.yul\":3360:3582   */\n  jump(tag_81)\ntag_83:\n    /* \"#utility.yul\":3364:3367   */\n  pop\n    /* \"#utility.yul\":3610:3616   */\n  dup5\n    /* \"#utility.yul\":3601:3608   */\n  dup3\n    /* \"#utility.yul\":3598:3617   */\n  lt\n    /* \"#utility.yul\":3595:3796   */\n  iszero\n  tag_84\n  jumpi\n    /* \"#utility.yul\":3671:3690   */\n  dup7\n  dup5\n  add\n    /* \"#utility.yul\":3665:3691   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":3754:3755   */\n  0x03\n    /* \"#utility.yul\":3750:3764   */\n  dup8\n  swap1\n  shl\n    /* \"#utility.yul\":3766:3769   */\n  0xf8\n    /* \"#utility.yul\":3746:3770   */\n  and\n    /* \"#utility.yul\":3742:3779   */\n  shr\n    /* \"#utility.yul\":3738:3780   */\n  not\n    /* \"#utility.yul\":3723:3781   */\n  and\n    /* \"#utility.yul\":3708:3782   */\n  dup2\n  sstore\n    /* \"#utility.yul\":3595:3796   */\ntag_84:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3842:3843   */\n  0x01\n    /* \"#utility.yul\":3826:3840   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":3822:3844   */\n  add\n    /* \"#utility.yul\":3809:3845   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":2813:4112   */\n  jump\t// out\n    /* \"#utility.yul\":4477:4699   */\ntag_28:\n    /* \"#utility.yul\":4542:4551   */\n  dup1\n  dup3\n  add\n    /* \"#utility.yul\":4563:4573   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":4560:4693   */\n  iszero\n  tag_87\n  jumpi\n    /* \"#utility.yul\":4615:4625   */\n  0x4e487b71\n    /* \"#utility.yul\":4610:4613   */\n  0xe0\n    /* \"#utility.yul\":4606:4626   */\n  shl\n    /* \"#utility.yul\":4603:4604   */\n  0x00\n    /* \"#utility.yul\":4596:4627   */\n  mstore\n    /* \"#utility.yul\":4650:4654   */\n  0x11\n    /* \"#utility.yul\":4647:4648   */\n  0x04\n    /* \"#utility.yul\":4640:4655   */\n  mstore\n    /* \"#utility.yul\":4678:4682   */\n  0x24\n    /* \"#utility.yul\":4675:4676   */\n  0x00\n    /* \"#utility.yul\":4668:4683   */\n  revert\n    /* \"#utility.yul\":4560:4693   */\ntag_87:\n    /* \"#utility.yul\":4477:4699   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4704:4881   */\ntag_42:\n    /* \"mintable-token(copy)(copy)/mintable-token.sol\":1946:2556  contract MintableToken is ERC20, Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"mintable-token(copy)(copy)/mintable-token.sol\":1946:2556  contract MintableToken is ERC20, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xa457c2d7\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      dup1\n      0x715018a6\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x94bf804d\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n      dup1\n      0x23b872dd\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3431:3529  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5708:5905  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_25\n      tag_26\n      calldatasize\n      0x04\n      tag_27\n      jump\t// in\n    tag_26:\n      tag_28\n      jump\t// in\n    tag_25:\n      mload(0x40)\n        /* \"#utility.yul\":1276:1290   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1269:1291   */\n      iszero\n        /* \"#utility.yul\":1251:1292   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1239:1241   */\n      0x20\n        /* \"#utility.yul\":1224:1242   */\n      add\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5708:5905  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      tag_23\n        /* \"#utility.yul\":1111:1298   */\n      jump\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4519:4625  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4606:4618  _totalSupply */\n      sload(0x02)\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4519:4625  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_31:\n      mload(0x40)\n        /* \"#utility.yul\":1449:1474   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1437:1439   */\n      0x20\n        /* \"#utility.yul\":1422:1440   */\n      add\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4519:4625  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_23\n        /* \"#utility.yul\":1303:1480   */\n      jump\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6467:6753  function transferFrom(... */\n    tag_6:\n      tag_25\n      tag_36\n      calldatasize\n      0x04\n      tag_37\n      jump\t// in\n    tag_36:\n      tag_38\n      jump\t// in\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4368:4459  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4450:4452  18 */\n      0x12\n        /* \"#utility.yul\":2006:2042   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1994:1996   */\n      0x20\n        /* \"#utility.yul\":1979:1997   */\n      add\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4368:4459  function decimals() public view virtual override returns (uint8) {... */\n      tag_23\n        /* \"#utility.yul\":1864:2048   */\n      jump\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7148:7382  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_25\n      tag_45\n      calldatasize\n      0x04\n      tag_27\n      jump\t// in\n    tag_45:\n      tag_46\n      jump\t// in\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4683:4808  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_31\n      tag_49\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_49:\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4783:4801  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:4764  uint256 */\n      0x00\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4783:4801  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4683:4808  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"mintable-token/@openzeppelin/contracts/access/Ownable.sol\":3106:3207  function renounceOwnership() public virtual onlyOwner {... */\n    tag_10:\n      tag_53\n      tag_54\n      jump\t// in\n    tag_53:\n      stop\n        /* \"mintable-token/@openzeppelin/contracts/access/Ownable.sol\":2476:2561  function owner() public view virtual returns (address) {... */\n    tag_11:\n        /* \"mintable-token/@openzeppelin/contracts/access/Ownable.sol\":2548:2554  _owner */\n      sload(0x05)\n        /* \"mintable-token/@openzeppelin/contracts/access/Ownable.sol\":2476:2561  function owner() public view virtual returns (address) {... */\n      mload(0x40)\n        /* \"mintable-token/@openzeppelin/contracts/access/Ownable.sol\":2548:2554  _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2390:2464   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2378:2380   */\n      0x20\n        /* \"#utility.yul\":2363:2381   */\n      add\n        /* \"mintable-token/@openzeppelin/contracts/access/Ownable.sol\":2476:2561  function owner() public view virtual returns (address) {... */\n      tag_23\n        /* \"#utility.yul\":2244:2470   */\n      jump\n        /* \"mintable-token(copy)(copy)/mintable-token.sol\":2459:2554  function mint(uint256 amount, address to) external onlyOwner {... */\n    tag_12:\n      tag_53\n      tag_60\n      calldatasize\n      0x04\n      tag_61\n      jump\t// in\n    tag_60:\n      tag_62\n      jump\t// in\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3642:3744  function symbol() public view virtual override returns (string memory) {... */\n    tag_13:\n      tag_21\n      tag_64\n      jump\t// in\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7869:8296  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_14:\n      tag_25\n      tag_67\n      calldatasize\n      0x04\n      tag_27\n      jump\t// in\n    tag_67:\n      tag_68\n      jump\t// in\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5004:5193  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_15:\n      tag_25\n      tag_71\n      calldatasize\n      0x04\n      tag_27\n      jump\t// in\n    tag_71:\n      tag_72\n      jump\t// in\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5251:5400  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_16:\n      tag_31\n      tag_75\n      calldatasize\n      0x04\n      tag_76\n      jump\t// in\n    tag_75:\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5366:5384  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap2\n      dup3\n      and\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5340:5347  uint256 */\n      0x00\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5366:5384  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5366:5377  _allowances */\n      0x01\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5366:5384  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5366:5393  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5251:5400  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\n        /* \"mintable-token/@openzeppelin/contracts/access/Ownable.sol\":3356:3554  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_17:\n      tag_53\n      tag_80\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_80:\n      tag_81\n      jump\t// in\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3431:3529  function name() public view virtual override returns (string memory) {... */\n    tag_22:\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3485:3498  string memory */\n      0x60\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3517:3522  _name */\n      0x03\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3510:3522  return _name */\n      dup1\n      sload\n      tag_83\n      swap1\n      tag_84\n      jump\t// in\n    tag_83:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_85\n      swap1\n      tag_84\n      jump\t// in\n    tag_85:\n      dup1\n      iszero\n      tag_86\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_87\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_86)\n    tag_87:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_88:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_88\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_86:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3431:3529  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5708:5905  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_28:\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5791:5795  bool */\n      0x00\n        /* \"mintable-token/@openzeppelin/contracts/utils/Context.sol\":1994:2004  msg.sender */\n      caller\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5845:5877  _approve(owner, spender, amount) */\n      tag_92\n        /* \"mintable-token/@openzeppelin/contracts/utils/Context.sol\":1994:2004  msg.sender */\n      dup2\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5861:5868  spender */\n      dup6\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5870:5876  amount */\n      dup6\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5845:5853  _approve */\n      tag_93\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5845:5877  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_92:\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5894:5898  true */\n      0x01\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5887:5898  return true */\n      swap2\n      pop\n      pop\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5708:5905  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_89:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6467:6753  function transferFrom(... */\n    tag_38:\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6594:6598  bool */\n      0x00\n        /* \"mintable-token/@openzeppelin/contracts/utils/Context.sol\":1994:2004  msg.sender */\n      caller\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6650:6688  _spendAllowance(from, spender, amount) */\n      tag_97\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6666:6670  from */\n      dup6\n        /* \"mintable-token/@openzeppelin/contracts/utils/Context.sol\":1994:2004  msg.sender */\n      dup3\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6681:6687  amount */\n      dup6\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6650:6665  _spendAllowance */\n      tag_98\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6650:6688  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_97:\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6698:6725  _transfer(from, to, amount) */\n      tag_99\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6708:6712  from */\n      dup6\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6714:6716  to */\n      dup6\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6718:6724  amount */\n      dup6\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6698:6707  _transfer */\n      tag_100\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6698:6725  _transfer(from, to, amount) */\n      jump\t// in\n    tag_99:\n      pop\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6742:6746  true */\n      0x01\n      swap5\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6467:6753  function transferFrom(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7148:7382  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_46:\n        /* \"mintable-token/@openzeppelin/contracts/utils/Context.sol\":1994:2004  msg.sender */\n      caller\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7236:7240  bool */\n      0x00\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5366:5384  _allowances[owner] */\n      dup2\n      dup2\n      mstore\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5366:5377  _allowances */\n      0x01\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5366:5384  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5366:5393  _allowances[owner][spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7236:7240  bool */\n      swap1\n      swap2\n        /* \"mintable-token/@openzeppelin/contracts/utils/Context.sol\":1994:2004  msg.sender */\n      swap1\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7290:7354  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_92\n      swap1\n        /* \"mintable-token/@openzeppelin/contracts/utils/Context.sol\":1994:2004  msg.sender */\n      dup3\n      swap1\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5366:5393  _allowances[owner][spender] */\n      dup7\n      swap1\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7315:7353  allowance(owner, spender) + addedValue */\n      tag_106\n      swap1\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7343:7353  addedValue */\n      dup8\n      swap1\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7315:7353  allowance(owner, spender) + addedValue */\n      tag_107\n      jump\t// in\n    tag_106:\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7290:7298  _approve */\n      tag_93\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7290:7354  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n        /* \"mintable-token/@openzeppelin/contracts/access/Ownable.sol\":3106:3207  function renounceOwnership() public virtual onlyOwner {... */\n    tag_54:\n        /* \"mintable-token/@openzeppelin/contracts/access/Ownable.sol\":2369:2382  _checkOwner() */\n      tag_110\n        /* \"mintable-token/@openzeppelin/contracts/access/Ownable.sol\":2369:2380  _checkOwner */\n      tag_111\n        /* \"mintable-token/@openzeppelin/contracts/access/Ownable.sol\":2369:2382  _checkOwner() */\n      jump\t// in\n    tag_110:\n        /* \"mintable-token/@openzeppelin/contracts/access/Ownable.sol\":3170:3200  _transferOwnership(address(0)) */\n      tag_113\n        /* \"mintable-token/@openzeppelin/contracts/access/Ownable.sol\":3197:3198  0 */\n      0x00\n        /* \"mintable-token/@openzeppelin/contracts/access/Ownable.sol\":3170:3188  _transferOwnership */\n      tag_114\n        /* \"mintable-token/@openzeppelin/contracts/access/Ownable.sol\":3170:3200  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_113:\n        /* \"mintable-token/@openzeppelin/contracts/access/Ownable.sol\":3106:3207  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"mintable-token(copy)(copy)/mintable-token.sol\":2459:2554  function mint(uint256 amount, address to) external onlyOwner {... */\n    tag_62:\n        /* \"mintable-token/@openzeppelin/contracts/access/Ownable.sol\":2369:2382  _checkOwner() */\n      tag_117\n        /* \"mintable-token/@openzeppelin/contracts/access/Ownable.sol\":2369:2380  _checkOwner */\n      tag_111\n        /* \"mintable-token/@openzeppelin/contracts/access/Ownable.sol\":2369:2382  _checkOwner() */\n      jump\t// in\n    tag_117:\n        /* \"mintable-token(copy)(copy)/mintable-token.sol\":2530:2547  _mint(to, amount) */\n      tag_119\n        /* \"mintable-token(copy)(copy)/mintable-token.sol\":2536:2538  to */\n      dup2\n        /* \"mintable-token(copy)(copy)/mintable-token.sol\":2540:2546  amount */\n      dup4\n        /* \"mintable-token(copy)(copy)/mintable-token.sol\":2530:2535  _mint */\n      tag_120\n        /* \"mintable-token(copy)(copy)/mintable-token.sol\":2530:2547  _mint(to, amount) */\n      jump\t// in\n    tag_119:\n        /* \"mintable-token(copy)(copy)/mintable-token.sol\":2459:2554  function mint(uint256 amount, address to) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3642:3744  function symbol() public view virtual override returns (string memory) {... */\n    tag_64:\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3698:3711  string memory */\n      0x60\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3730:3737  _symbol */\n      0x04\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3723:3737  return _symbol */\n      dup1\n      sload\n      tag_83\n      swap1\n      tag_84\n      jump\t// in\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7869:8296  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_68:\n        /* \"mintable-token/@openzeppelin/contracts/utils/Context.sol\":1994:2004  msg.sender */\n      caller\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7962:7966  bool */\n      0x00\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5366:5384  _allowances[owner] */\n      dup2\n      dup2\n      mstore\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5366:5377  _allowances */\n      0x01\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5366:5384  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5366:5393  _allowances[owner][spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7962:7966  bool */\n      swap1\n      swap2\n        /* \"mintable-token/@openzeppelin/contracts/utils/Context.sol\":1994:2004  msg.sender */\n      swap1\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8106:8121  subtractedValue */\n      dup4\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8086:8102  currentAllowance */\n      dup2\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8086:8121  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8078:8163  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_130\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":3973:3975   */\n      0x20\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8078:8163  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3955:3976   */\n      mstore\n        /* \"#utility.yul\":4012:4014   */\n      0x25\n        /* \"#utility.yul\":3992:4010   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3985:4015   */\n      mstore\n        /* \"#utility.yul\":4051:4085   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":4031:4049   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4024:4086   */\n      mstore\n        /* \"#utility.yul\":4122:4129   */\n      0x207a65726f000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4102:4120   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4095:4130   */\n      mstore\n        /* \"#utility.yul\":4147:4166   */\n      0x84\n      add\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8078:8163  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_131:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_130:\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8197:8257  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_99\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8206:8211  owner */\n      dup3\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8213:8220  spender */\n      dup7\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8241:8256  subtractedValue */\n      dup7\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8222:8238  currentAllowance */\n      dup5\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8222:8256  currentAllowance - subtractedValue */\n      sub\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8197:8205  _approve */\n      tag_93\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8197:8257  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5004:5193  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_72:\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5083:5087  bool */\n      0x00\n        /* \"mintable-token/@openzeppelin/contracts/utils/Context.sol\":1994:2004  msg.sender */\n      caller\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5137:5165  _transfer(owner, to, amount) */\n      tag_92\n        /* \"mintable-token/@openzeppelin/contracts/utils/Context.sol\":1994:2004  msg.sender */\n      dup2\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5154:5156  to */\n      dup6\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5158:5164  amount */\n      dup6\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5137:5146  _transfer */\n      tag_100\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5137:5165  _transfer(owner, to, amount) */\n      jump\t// in\n        /* \"mintable-token/@openzeppelin/contracts/access/Ownable.sol\":3356:3554  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_81:\n        /* \"mintable-token/@openzeppelin/contracts/access/Ownable.sol\":2369:2382  _checkOwner() */\n      tag_139\n        /* \"mintable-token/@openzeppelin/contracts/access/Ownable.sol\":2369:2380  _checkOwner */\n      tag_111\n        /* \"mintable-token/@openzeppelin/contracts/access/Ownable.sol\":2369:2382  _checkOwner() */\n      jump\t// in\n    tag_139:\n        /* \"mintable-token/@openzeppelin/contracts/access/Ownable.sol\":3444:3466  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup2\n      and\n        /* \"mintable-token/@openzeppelin/contracts/access/Ownable.sol\":3436:3509  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_141\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":4379:4381   */\n      0x20\n        /* \"mintable-token/@openzeppelin/contracts/access/Ownable.sol\":3436:3509  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4361:4382   */\n      mstore\n        /* \"#utility.yul\":4418:4420   */\n      0x26\n        /* \"#utility.yul\":4398:4416   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4391:4421   */\n      mstore\n        /* \"#utility.yul\":4457:4491   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":4437:4455   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4430:4492   */\n      mstore\n        /* \"#utility.yul\":4528:4536   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4508:4526   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4501:4537   */\n      mstore\n        /* \"#utility.yul\":4554:4573   */\n      0x84\n      add\n        /* \"mintable-token/@openzeppelin/contracts/access/Ownable.sol\":3436:3509  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_131\n        /* \"#utility.yul\":4177:4579   */\n      jump\n        /* \"mintable-token/@openzeppelin/contracts/access/Ownable.sol\":3436:3509  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_141:\n        /* \"mintable-token/@openzeppelin/contracts/access/Ownable.sol\":3519:3547  _transferOwnership(newOwner) */\n      tag_144\n        /* \"mintable-token/@openzeppelin/contracts/access/Ownable.sol\":3538:3546  newOwner */\n      dup2\n        /* \"mintable-token/@openzeppelin/contracts/access/Ownable.sol\":3519:3537  _transferOwnership */\n      tag_114\n        /* \"mintable-token/@openzeppelin/contracts/access/Ownable.sol\":3519:3547  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_144:\n        /* \"mintable-token/@openzeppelin/contracts/access/Ownable.sol\":3356:3554  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11385:11755  function _approve(... */\n    tag_93:\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11516:11535  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup4\n      and\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11508:11576  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_147\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":4786:4788   */\n      0x20\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11508:11576  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4768:4789   */\n      mstore\n        /* \"#utility.yul\":4825:4827   */\n      0x24\n        /* \"#utility.yul\":4805:4823   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":4798:4828   */\n      mstore\n        /* \"#utility.yul\":4864:4898   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":4844:4862   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4837:4899   */\n      mstore\n        /* \"#utility.yul\":4935:4941   */\n      0x7265737300000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4915:4933   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4908:4942   */\n      mstore\n        /* \"#utility.yul\":4959:4978   */\n      0x84\n      add\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11508:11576  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_131\n        /* \"#utility.yul\":4584:4984   */\n      jump\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11508:11576  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_147:\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11594:11615  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup3\n      and\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11586:11654  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_150\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":5191:5193   */\n      0x20\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11586:11654  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5173:5194   */\n      mstore\n        /* \"#utility.yul\":5230:5232   */\n      0x22\n        /* \"#utility.yul\":5210:5228   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5203:5233   */\n      mstore\n        /* \"#utility.yul\":5269:5303   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":5249:5267   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5242:5304   */\n      mstore\n        /* \"#utility.yul\":5340:5344   */\n      0x7373000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5320:5338   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5313:5345   */\n      mstore\n        /* \"#utility.yul\":5362:5381   */\n      0x84\n      add\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11586:11654  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_131\n        /* \"#utility.yul\":4989:5387   */\n      jump\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11586:11654  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_150:\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11665:11683  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11665:11676  _allowances */\n      0x01\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11665:11683  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11665:11692  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11665:11701  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11716:11748  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":1449:1474   */\n      dup5\n      dup2\n      mstore\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11716:11748  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":1422:1440   */\n      add\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11716:11748  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11385:11755  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12036:12477  function _spendAllowance(... */\n    tag_98:\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5366:5384  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      and\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12166:12190  uint256 currentAllowance */\n      0x00\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5366:5384  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5366:5377  _allowances */\n      0x01\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5366:5384  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5366:5393  _allowances[owner][spender] */\n      swap4\n      dup7\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12252:12269  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12232:12269  currentAllowance != type(uint256).max */\n      dup2\n      eq\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12228:12471  if (currentAllowance != type(uint256).max) {... */\n      tag_160\n      jumpi\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12313:12319  amount */\n      dup2\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12293:12309  currentAllowance */\n      dup2\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12293:12319  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12285:12353  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_157\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":5594:5596   */\n      0x20\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12285:12353  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5576:5597   */\n      mstore\n        /* \"#utility.yul\":5633:5635   */\n      0x1d\n        /* \"#utility.yul\":5613:5631   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5606:5636   */\n      mstore\n        /* \"#utility.yul\":5672:5703   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":5652:5670   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5645:5704   */\n      mstore\n        /* \"#utility.yul\":5721:5739   */\n      0x64\n      add\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12285:12353  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_131\n        /* \"#utility.yul\":5392:5745   */\n      jump\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12285:12353  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n    tag_157:\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12395:12446  _approve(owner, spender, currentAllowance - amount) */\n      tag_160\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12404:12409  owner */\n      dup5\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12411:12418  spender */\n      dup5\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12439:12445  amount */\n      dup5\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12420:12436  currentAllowance */\n      dup5\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12420:12445  currentAllowance - amount */\n      sub\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12395:12403  _approve */\n      tag_93\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12395:12446  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_160:\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12156:12477  {... */\n      pop\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12036:12477  function _spendAllowance(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8750:9401  function _transfer(... */\n    tag_100:\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8876:8894  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup4\n      and\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8868:8936  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_162\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":5952:5954   */\n      0x20\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8868:8936  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5934:5955   */\n      mstore\n        /* \"#utility.yul\":5991:5993   */\n      0x25\n        /* \"#utility.yul\":5971:5989   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5964:5994   */\n      mstore\n        /* \"#utility.yul\":6030:6064   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":6010:6028   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6003:6065   */\n      mstore\n        /* \"#utility.yul\":6101:6108   */\n      0x6472657373000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6081:6099   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6074:6109   */\n      mstore\n        /* \"#utility.yul\":6126:6145   */\n      0x84\n      add\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8868:8936  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_131\n        /* \"#utility.yul\":5750:6151   */\n      jump\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8868:8936  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_162:\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8954:8970  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup3\n      and\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8946:9010  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_165\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":6358:6360   */\n      0x20\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8946:9010  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6340:6361   */\n      mstore\n        /* \"#utility.yul\":6397:6399   */\n      0x23\n        /* \"#utility.yul\":6377:6395   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6370:6400   */\n      mstore\n        /* \"#utility.yul\":6436:6470   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":6416:6434   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6409:6471   */\n      mstore\n        /* \"#utility.yul\":6507:6512   */\n      0x6573730000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6487:6505   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6480:6513   */\n      mstore\n        /* \"#utility.yul\":6530:6549   */\n      0x84\n      add\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8946:9010  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_131\n        /* \"#utility.yul\":6156:6555   */\n      jump\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8946:9010  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_165:\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9092:9107  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup4\n      and\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9070:9089  uint256 fromBalance */\n      0x00\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9092:9107  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9125:9146  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9117:9189  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_170\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":6762:6764   */\n      0x20\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9117:9189  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6744:6765   */\n      mstore\n        /* \"#utility.yul\":6801:6803   */\n      0x26\n        /* \"#utility.yul\":6781:6799   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6774:6804   */\n      mstore\n        /* \"#utility.yul\":6840:6874   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":6820:6838   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6813:6875   */\n      mstore\n        /* \"#utility.yul\":6911:6919   */\n      0x616c616e63650000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6891:6909   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6884:6920   */\n      mstore\n        /* \"#utility.yul\":6937:6956   */\n      0x84\n      add\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9117:9189  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_131\n        /* \"#utility.yul\":6560:6962   */\n      jump\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9117:9189  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_170:\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9223:9238  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup1\n      dup6\n      and\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9223:9232  _balances */\n      0x00\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9223:9238  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9241:9261  fromBalance - amount */\n      dup6\n      dup6\n      sub\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9223:9261  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9281:9294  _balances[to] */\n      swap2\n      dup6\n      and\n      dup2\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9281:9304  _balances[to] += amount */\n      dup1\n      sload\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9255:9261  amount */\n      dup5\n      swap3\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9223:9232  _balances */\n      swap1\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9281:9304  _balances[to] += amount */\n      tag_173\n      swap1\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9255:9261  amount */\n      dup5\n      swap1\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9281:9304  _balances[to] += amount */\n      tag_107\n      jump\t// in\n    tag_173:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9335:9337  to */\n      dup3\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9320:9346  Transfer(from, to, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9329:9333  from */\n      dup5\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9320:9346  Transfer(from, to, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9339:9345  amount */\n      dup5\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9320:9346  Transfer(from, to, amount) */\n      mload(0x40)\n      tag_174\n      swap2\n        /* \"#utility.yul\":1449:1474   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1437:1439   */\n      0x20\n        /* \"#utility.yul\":1422:1440   */\n      add\n      swap1\n        /* \"#utility.yul\":1303:1480   */\n      jump\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9320:9346  Transfer(from, to, amount) */\n    tag_174:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9357:9394  _afterTokenTransfer(from, to, amount) */\n      tag_160\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":13061:13182  function _beforeTokenTransfer(... */\n      jump\n        /* \"mintable-token/@openzeppelin/contracts/access/Ownable.sol\":2634:2764  function _checkOwner() internal view virtual {... */\n    tag_111:\n        /* \"mintable-token/@openzeppelin/contracts/access/Ownable.sol\":2548:2554  _owner */\n      sload(0x05)\n        /* \"mintable-token/@openzeppelin/contracts/access/Ownable.sol\":2697:2720  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"mintable-token/@openzeppelin/contracts/access/Ownable.sol\":2548:2554  _owner */\n      and\n        /* \"mintable-token/@openzeppelin/contracts/utils/Context.sol\":1994:2004  msg.sender */\n      caller\n        /* \"mintable-token/@openzeppelin/contracts/access/Ownable.sol\":2697:2720  owner() == _msgSender() */\n      eq\n        /* \"mintable-token/@openzeppelin/contracts/access/Ownable.sol\":2689:2757  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_113\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":7169:7171   */\n      0x20\n        /* \"mintable-token/@openzeppelin/contracts/access/Ownable.sol\":2689:2757  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7151:7172   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":7188:7206   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7181:7211   */\n      mstore\n        /* \"#utility.yul\":7247:7281   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":7227:7245   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7220:7282   */\n      mstore\n        /* \"#utility.yul\":7299:7317   */\n      0x64\n      add\n        /* \"mintable-token/@openzeppelin/contracts/access/Ownable.sol\":2689:2757  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_131\n        /* \"#utility.yul\":6967:7323   */\n      jump\n        /* \"mintable-token/@openzeppelin/contracts/access/Ownable.sol\":3708:3895  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_114:\n        /* \"mintable-token/@openzeppelin/contracts/access/Ownable.sol\":3800:3806  _owner */\n      0x05\n      dup1\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"mintable-token/@openzeppelin/contracts/access/Ownable.sol\":3816:3833  _owner = newOwner */\n      dup4\n      dup2\n      and\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"mintable-token/@openzeppelin/contracts/access/Ownable.sol\":3848:3888  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"mintable-token/@openzeppelin/contracts/access/Ownable.sol\":3800:3806  _owner */\n      swap2\n      and\n      swap2\n        /* \"mintable-token/@openzeppelin/contracts/access/Ownable.sol\":3816:3833  _owner = newOwner */\n      swap1\n        /* \"mintable-token/@openzeppelin/contracts/access/Ownable.sol\":3800:3806  _owner */\n      dup3\n      swap1\n        /* \"mintable-token/@openzeppelin/contracts/access/Ownable.sol\":3848:3888  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"mintable-token/@openzeppelin/contracts/access/Ownable.sol\":3781:3797  address oldOwner */\n      0x00\n      swap1\n        /* \"mintable-token/@openzeppelin/contracts/access/Ownable.sol\":3848:3888  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"mintable-token/@openzeppelin/contracts/access/Ownable.sol\":3771:3895  {... */\n      pop\n        /* \"mintable-token/@openzeppelin/contracts/access/Ownable.sol\":3708:3895  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9677:10066  function _mint(address account, uint256 amount) internal virtual {... */\n    tag_120:\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9760:9781  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup3\n      and\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9752:9817  require(account != address(0), \"ERC20: mint to the zero address\") */\n      tag_185\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":7530:7532   */\n      0x20\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9752:9817  require(account != address(0), \"ERC20: mint to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7512:7533   */\n      mstore\n        /* \"#utility.yul\":7569:7571   */\n      0x1f\n        /* \"#utility.yul\":7549:7567   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7542:7572   */\n      mstore\n        /* \"#utility.yul\":7608:7641   */\n      0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n        /* \"#utility.yul\":7588:7606   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7581:7642   */\n      mstore\n        /* \"#utility.yul\":7659:7677   */\n      0x64\n      add\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9752:9817  require(account != address(0), \"ERC20: mint to the zero address\") */\n      tag_131\n        /* \"#utility.yul\":7328:7683   */\n      jump\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9752:9817  require(account != address(0), \"ERC20: mint to the zero address\") */\n    tag_185:\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9904:9910  amount */\n      dup1\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9888:9900  _totalSupply */\n      0x02\n      0x00\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9888:9910  _totalSupply += amount */\n      dup3\n      dup3\n      sload\n      tag_189\n      swap2\n      swap1\n      tag_107\n      jump\t// in\n    tag_189:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9920:9938  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup3\n      and\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9920:9929  _balances */\n      0x00\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9920:9938  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9920:9948  _balances[account] += amount */\n      dup1\n      sload\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9942:9948  amount */\n      dup4\n      swap3\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9920:9929  _balances */\n      swap1\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9920:9948  _balances[account] += amount */\n      tag_190\n      swap1\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9942:9948  amount */\n      dup5\n      swap1\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9920:9948  _balances[account] += amount */\n      tag_107\n      jump\t// in\n    tag_190:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9963:10000  Transfer(address(0), account, amount) */\n      mload(0x40)\n        /* \"#utility.yul\":1449:1474   */\n      dup2\n      dup2\n      mstore\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9963:10000  Transfer(address(0), account, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup4\n      and\n      swap1\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9980:9981  0 */\n      0x00\n      swap1\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9963:10000  Transfer(address(0), account, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n        /* \"#utility.yul\":1437:1439   */\n      0x20\n        /* \"#utility.yul\":1422:1440   */\n      add\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9963:10000  Transfer(address(0), account, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"mintable-token(copy)(copy)/mintable-token.sol\":2459:2554  function mint(uint256 amount, address to) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:600   */\n    tag_24:\n        /* \"#utility.yul\":163:165   */\n      0x20\n        /* \"#utility.yul\":152:161   */\n      dup2\n        /* \"#utility.yul\":145:166   */\n      mstore\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":195:201   */\n      dup3\n        /* \"#utility.yul\":189:202   */\n      mload\n        /* \"#utility.yul\":238:244   */\n      dup1\n        /* \"#utility.yul\":233:235   */\n      0x20\n        /* \"#utility.yul\":222:231   */\n      dup5\n        /* \"#utility.yul\":218:236   */\n      add\n        /* \"#utility.yul\":211:245   */\n      mstore\n        /* \"#utility.yul\":263:264   */\n      0x00\n        /* \"#utility.yul\":273:413   */\n    tag_198:\n        /* \"#utility.yul\":287:293   */\n      dup2\n        /* \"#utility.yul\":284:285   */\n      dup2\n        /* \"#utility.yul\":281:294   */\n      lt\n        /* \"#utility.yul\":273:413   */\n      iszero\n      tag_200\n      jumpi\n        /* \"#utility.yul\":398:400   */\n      0x20\n        /* \"#utility.yul\":382:396   */\n      dup2\n      dup7\n      add\n        /* \"#utility.yul\":378:401   */\n      dup2\n      add\n        /* \"#utility.yul\":372:402   */\n      mload\n        /* \"#utility.yul\":367:369   */\n      0x40\n        /* \"#utility.yul\":348:365   */\n      dup7\n      dup5\n      add\n        /* \"#utility.yul\":344:370   */\n      add\n        /* \"#utility.yul\":337:403   */\n      mstore\n        /* \"#utility.yul\":302:312   */\n      add\n        /* \"#utility.yul\":273:413   */\n      jump(tag_198)\n    tag_200:\n        /* \"#utility.yul\":277:280   */\n      pop\n        /* \"#utility.yul\":462:463   */\n      0x00\n        /* \"#utility.yul\":457:459   */\n      0x40\n        /* \"#utility.yul\":448:454   */\n      dup3\n        /* \"#utility.yul\":437:446   */\n      dup6\n        /* \"#utility.yul\":433:455   */\n      add\n        /* \"#utility.yul\":429:460   */\n      add\n        /* \"#utility.yul\":422:464   */\n      mstore\n        /* \"#utility.yul\":591:593   */\n      0x40\n        /* \"#utility.yul\":521:587   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n        /* \"#utility.yul\":516:518   */\n      0x1f\n        /* \"#utility.yul\":508:514   */\n      dup4\n        /* \"#utility.yul\":504:519   */\n      add\n        /* \"#utility.yul\":500:588   */\n      and\n        /* \"#utility.yul\":489:498   */\n      dup5\n        /* \"#utility.yul\":485:589   */\n      add\n        /* \"#utility.yul\":481:594   */\n      add\n        /* \"#utility.yul\":473:594   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":14:600   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":605:801   */\n    tag_195:\n        /* \"#utility.yul\":673:693   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":733:775   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":722:776   */\n      dup2\n      and\n        /* \"#utility.yul\":712:777   */\n      dup2\n      eq\n        /* \"#utility.yul\":702:795   */\n      tag_202\n      jumpi\n        /* \"#utility.yul\":791:792   */\n      0x00\n        /* \"#utility.yul\":788:789   */\n      dup1\n        /* \"#utility.yul\":781:793   */\n      revert\n        /* \"#utility.yul\":702:795   */\n    tag_202:\n        /* \"#utility.yul\":605:801   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":806:1106   */\n    tag_27:\n        /* \"#utility.yul\":874:880   */\n      0x00\n        /* \"#utility.yul\":882:888   */\n      dup1\n        /* \"#utility.yul\":935:937   */\n      0x40\n        /* \"#utility.yul\":923:932   */\n      dup4\n        /* \"#utility.yul\":914:921   */\n      dup6\n        /* \"#utility.yul\":910:933   */\n      sub\n        /* \"#utility.yul\":906:938   */\n      slt\n        /* \"#utility.yul\":903:955   */\n      iszero\n      tag_204\n      jumpi\n        /* \"#utility.yul\":951:952   */\n      0x00\n        /* \"#utility.yul\":948:949   */\n      dup1\n        /* \"#utility.yul\":941:953   */\n      revert\n        /* \"#utility.yul\":903:955   */\n    tag_204:\n        /* \"#utility.yul\":974:1003   */\n      tag_205\n        /* \"#utility.yul\":993:1002   */\n      dup4\n        /* \"#utility.yul\":974:1003   */\n      tag_195\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":964:1003   */\n      swap5\n        /* \"#utility.yul\":1072:1074   */\n      0x20\n        /* \"#utility.yul\":1057:1075   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1044:1076   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":806:1106   */\n      jump\t// out\n        /* \"#utility.yul\":1485:1859   */\n    tag_37:\n        /* \"#utility.yul\":1562:1568   */\n      0x00\n        /* \"#utility.yul\":1570:1576   */\n      dup1\n        /* \"#utility.yul\":1578:1584   */\n      0x00\n        /* \"#utility.yul\":1631:1633   */\n      0x60\n        /* \"#utility.yul\":1619:1628   */\n      dup5\n        /* \"#utility.yul\":1610:1617   */\n      dup7\n        /* \"#utility.yul\":1606:1629   */\n      sub\n        /* \"#utility.yul\":1602:1634   */\n      slt\n        /* \"#utility.yul\":1599:1651   */\n      iszero\n      tag_209\n      jumpi\n        /* \"#utility.yul\":1647:1648   */\n      0x00\n        /* \"#utility.yul\":1644:1645   */\n      dup1\n        /* \"#utility.yul\":1637:1649   */\n      revert\n        /* \"#utility.yul\":1599:1651   */\n    tag_209:\n        /* \"#utility.yul\":1670:1699   */\n      tag_210\n        /* \"#utility.yul\":1689:1698   */\n      dup5\n        /* \"#utility.yul\":1670:1699   */\n      tag_195\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":1660:1699   */\n      swap3\n      pop\n        /* \"#utility.yul\":1718:1756   */\n      tag_211\n        /* \"#utility.yul\":1752:1754   */\n      0x20\n        /* \"#utility.yul\":1741:1750   */\n      dup6\n        /* \"#utility.yul\":1737:1755   */\n      add\n        /* \"#utility.yul\":1718:1756   */\n      tag_195\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":1485:1859   */\n      swap3\n      swap6\n        /* \"#utility.yul\":1708:1756   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1825:1827   */\n      0x40\n        /* \"#utility.yul\":1810:1828   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1797:1829   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":1485:1859   */\n      jump\t// out\n        /* \"#utility.yul\":2053:2239   */\n    tag_50:\n        /* \"#utility.yul\":2112:2118   */\n      0x00\n        /* \"#utility.yul\":2165:2167   */\n      0x20\n        /* \"#utility.yul\":2153:2162   */\n      dup3\n        /* \"#utility.yul\":2144:2151   */\n      dup5\n        /* \"#utility.yul\":2140:2163   */\n      sub\n        /* \"#utility.yul\":2136:2168   */\n      slt\n        /* \"#utility.yul\":2133:2185   */\n      iszero\n      tag_214\n      jumpi\n        /* \"#utility.yul\":2181:2182   */\n      0x00\n        /* \"#utility.yul\":2178:2179   */\n      dup1\n        /* \"#utility.yul\":2171:2183   */\n      revert\n        /* \"#utility.yul\":2133:2185   */\n    tag_214:\n        /* \"#utility.yul\":2204:2233   */\n      tag_215\n        /* \"#utility.yul\":2223:2232   */\n      dup3\n        /* \"#utility.yul\":2204:2233   */\n      tag_195\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":2194:2233   */\n      swap4\n        /* \"#utility.yul\":2053:2239   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2475:2775   */\n    tag_61:\n        /* \"#utility.yul\":2543:2549   */\n      0x00\n        /* \"#utility.yul\":2551:2557   */\n      dup1\n        /* \"#utility.yul\":2604:2606   */\n      0x40\n        /* \"#utility.yul\":2592:2601   */\n      dup4\n        /* \"#utility.yul\":2583:2590   */\n      dup6\n        /* \"#utility.yul\":2579:2602   */\n      sub\n        /* \"#utility.yul\":2575:2607   */\n      slt\n        /* \"#utility.yul\":2572:2624   */\n      iszero\n      tag_218\n      jumpi\n        /* \"#utility.yul\":2620:2621   */\n      0x00\n        /* \"#utility.yul\":2617:2618   */\n      dup1\n        /* \"#utility.yul\":2610:2622   */\n      revert\n        /* \"#utility.yul\":2572:2624   */\n    tag_218:\n        /* \"#utility.yul\":2665:2688   */\n      dup3\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":2731:2769   */\n      tag_219\n        /* \"#utility.yul\":2765:2767   */\n      0x20\n        /* \"#utility.yul\":2750:2768   */\n      dup5\n      add\n        /* \"#utility.yul\":2731:2769   */\n      tag_195\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":2721:2769   */\n      swap1\n      pop\n        /* \"#utility.yul\":2475:2775   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2780:3040   */\n    tag_76:\n        /* \"#utility.yul\":2848:2854   */\n      0x00\n        /* \"#utility.yul\":2856:2862   */\n      dup1\n        /* \"#utility.yul\":2909:2911   */\n      0x40\n        /* \"#utility.yul\":2897:2906   */\n      dup4\n        /* \"#utility.yul\":2888:2895   */\n      dup6\n        /* \"#utility.yul\":2884:2907   */\n      sub\n        /* \"#utility.yul\":2880:2912   */\n      slt\n        /* \"#utility.yul\":2877:2929   */\n      iszero\n      tag_221\n      jumpi\n        /* \"#utility.yul\":2925:2926   */\n      0x00\n        /* \"#utility.yul\":2922:2923   */\n      dup1\n        /* \"#utility.yul\":2915:2927   */\n      revert\n        /* \"#utility.yul\":2877:2929   */\n    tag_221:\n        /* \"#utility.yul\":2948:2977   */\n      tag_222\n        /* \"#utility.yul\":2967:2976   */\n      dup4\n        /* \"#utility.yul\":2948:2977   */\n      tag_195\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":2938:2977   */\n      swap2\n      pop\n        /* \"#utility.yul\":2996:3034   */\n      tag_219\n        /* \"#utility.yul\":3030:3032   */\n      0x20\n        /* \"#utility.yul\":3019:3028   */\n      dup5\n        /* \"#utility.yul\":3015:3033   */\n      add\n        /* \"#utility.yul\":2996:3034   */\n      tag_195\n      jump\t// in\n        /* \"#utility.yul\":3045:3482   */\n    tag_84:\n        /* \"#utility.yul\":3124:3125   */\n      0x01\n        /* \"#utility.yul\":3120:3132   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":3167:3179   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":3188:3249   */\n      tag_225\n      jumpi\n        /* \"#utility.yul\":3242:3246   */\n      0x7f\n        /* \"#utility.yul\":3234:3240   */\n      dup3\n        /* \"#utility.yul\":3230:3247   */\n      and\n        /* \"#utility.yul\":3220:3247   */\n      swap2\n      pop\n        /* \"#utility.yul\":3188:3249   */\n    tag_225:\n        /* \"#utility.yul\":3295:3297   */\n      0x20\n        /* \"#utility.yul\":3287:3293   */\n      dup3\n        /* \"#utility.yul\":3284:3298   */\n      lt\n        /* \"#utility.yul\":3264:3282   */\n      dup2\n        /* \"#utility.yul\":3261:3299   */\n      sub\n        /* \"#utility.yul\":3258:3476   */\n      tag_226\n      jumpi\n        /* \"#utility.yul\":3332:3409   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3329:3330   */\n      0x00\n        /* \"#utility.yul\":3322:3410   */\n      mstore\n        /* \"#utility.yul\":3433:3437   */\n      0x22\n        /* \"#utility.yul\":3430:3431   */\n      0x04\n        /* \"#utility.yul\":3423:3438   */\n      mstore\n        /* \"#utility.yul\":3461:3465   */\n      0x24\n        /* \"#utility.yul\":3458:3459   */\n      0x00\n        /* \"#utility.yul\":3451:3466   */\n      revert\n        /* \"#utility.yul\":3258:3476   */\n    tag_226:\n      pop\n        /* \"#utility.yul\":3045:3482   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3487:3766   */\n    tag_107:\n        /* \"#utility.yul\":3552:3561   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3573:3583   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":3570:3760   */\n      iszero\n      tag_89\n      jumpi\n        /* \"#utility.yul\":3616:3693   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3613:3614   */\n      0x00\n        /* \"#utility.yul\":3606:3694   */\n      mstore\n        /* \"#utility.yul\":3717:3721   */\n      0x11\n        /* \"#utility.yul\":3714:3715   */\n      0x04\n        /* \"#utility.yul\":3707:3722   */\n      mstore\n        /* \"#utility.yul\":3745:3749   */\n      0x24\n        /* \"#utility.yul\":3742:3743   */\n      0x00\n        /* \"#utility.yul\":3735:3750   */\n      revert\n\n    auxdata: 0xa26469706673582212207dcbdb53e8ac3c556a88362276b015fb0ed42716854840cfe5816ff65c57ed1364736f6c634300081b0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_204": {
									"entryPoint": null,
									"id": 204,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_29": {
									"entryPoint": null,
									"id": 29,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_70": {
									"entryPoint": null,
									"id": 70,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_afterTokenTransfer_744": {
									"entryPoint": null,
									"id": 744,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_733": {
									"entryPoint": 417,
									"id": 733,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_mint_562": {
									"entryPoint": 190,
									"id": 562,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_860": {
									"entryPoint": 104,
									"id": 860,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_158": {
									"entryPoint": 108,
									"id": 158,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 444,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256_fromMemory": {
									"entryPoint": 607,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1047,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 779,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 857,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 721,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 422,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:4883:6",
										"nodeType": "YulBlock",
										"src": "0:4883:6",
										"statements": [
											{
												"nativeSrc": "6:3:6",
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "46:95:6",
													"nodeType": "YulBlock",
													"src": "46:95:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "63:1:6",
																		"nodeType": "YulLiteral",
																		"src": "63:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "70:3:6",
																				"nodeType": "YulLiteral",
																				"src": "70:3:6",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "75:10:6",
																				"nodeType": "YulLiteral",
																				"src": "75:10:6",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "66:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:6"
																		},
																		"nativeSrc": "66:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "56:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:6"
																},
																"nativeSrc": "56:31:6",
																"nodeType": "YulFunctionCall",
																"src": "56:31:6"
															},
															"nativeSrc": "56:31:6",
															"nodeType": "YulExpressionStatement",
															"src": "56:31:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "103:1:6",
																		"nodeType": "YulLiteral",
																		"src": "103:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "106:4:6",
																		"nodeType": "YulLiteral",
																		"src": "106:4:6",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "96:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:6"
																},
																"nativeSrc": "96:15:6",
																"nodeType": "YulFunctionCall",
																"src": "96:15:6"
															},
															"nativeSrc": "96:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "96:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "127:1:6",
																		"nodeType": "YulLiteral",
																		"src": "127:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "130:4:6",
																		"nodeType": "YulLiteral",
																		"src": "130:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "120:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:6"
																},
																"nativeSrc": "120:15:6",
																"nodeType": "YulFunctionCall",
																"src": "120:15:6"
															},
															"nativeSrc": "120:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "120:15:6"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "14:127:6",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:6"
											},
											{
												"body": {
													"nativeSrc": "210:770:6",
													"nodeType": "YulBlock",
													"src": "210:770:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "259:16:6",
																"nodeType": "YulBlock",
																"src": "259:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "268:1:6",
																					"nodeType": "YulLiteral",
																					"src": "268:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "271:1:6",
																					"nodeType": "YulLiteral",
																					"src": "271:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "261:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "261:6:6"
																			},
																			"nativeSrc": "261:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "261:12:6"
																		},
																		"nativeSrc": "261:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "261:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "238:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "238:6:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "246:4:6",
																						"nodeType": "YulLiteral",
																						"src": "246:4:6",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "234:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:6"
																				},
																				"nativeSrc": "234:17:6",
																				"nodeType": "YulFunctionCall",
																				"src": "234:17:6"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "253:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "253:3:6"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "230:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "230:3:6"
																		},
																		"nativeSrc": "230:27:6",
																		"nodeType": "YulFunctionCall",
																		"src": "230:27:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "223:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:6"
																},
																"nativeSrc": "223:35:6",
																"nodeType": "YulFunctionCall",
																"src": "223:35:6"
															},
															"nativeSrc": "220:55:6",
															"nodeType": "YulIf",
															"src": "220:55:6"
														},
														{
															"nativeSrc": "284:27:6",
															"nodeType": "YulVariableDeclaration",
															"src": "284:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "304:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "304:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "298:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "298:5:6"
																},
																"nativeSrc": "298:13:6",
																"nodeType": "YulFunctionCall",
																"src": "298:13:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "288:6:6",
																	"nodeType": "YulTypedName",
																	"src": "288:6:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "354:22:6",
																"nodeType": "YulBlock",
																"src": "354:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "356:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "356:16:6"
																			},
																			"nativeSrc": "356:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "356:18:6"
																		},
																		"nativeSrc": "356:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "356:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "326:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "326:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "342:2:6",
																						"nodeType": "YulLiteral",
																						"src": "342:2:6",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "346:1:6",
																						"nodeType": "YulLiteral",
																						"src": "346:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "338:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "338:3:6"
																				},
																				"nativeSrc": "338:10:6",
																				"nodeType": "YulFunctionCall",
																				"src": "338:10:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "350:1:6",
																				"nodeType": "YulLiteral",
																				"src": "350:1:6",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "334:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "334:3:6"
																		},
																		"nativeSrc": "334:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "334:18:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "323:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "323:2:6"
																},
																"nativeSrc": "323:30:6",
																"nodeType": "YulFunctionCall",
																"src": "323:30:6"
															},
															"nativeSrc": "320:56:6",
															"nodeType": "YulIf",
															"src": "320:56:6"
														},
														{
															"nativeSrc": "385:23:6",
															"nodeType": "YulVariableDeclaration",
															"src": "385:23:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "405:2:6",
																		"nodeType": "YulLiteral",
																		"src": "405:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "399:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "399:5:6"
																},
																"nativeSrc": "399:9:6",
																"nodeType": "YulFunctionCall",
																"src": "399:9:6"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "389:6:6",
																	"nodeType": "YulTypedName",
																	"src": "389:6:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "417:85:6",
															"nodeType": "YulVariableDeclaration",
															"src": "417:85:6",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "439:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "439:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "length",
																										"nativeSrc": "463:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "463:6:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "471:4:6",
																										"nodeType": "YulLiteral",
																										"src": "471:4:6",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "459:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "459:3:6"
																								},
																								"nativeSrc": "459:17:6",
																								"nodeType": "YulFunctionCall",
																								"src": "459:17:6"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "482:2:6",
																										"nodeType": "YulLiteral",
																										"src": "482:2:6",
																										"type": "",
																										"value": "31"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "478:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "478:3:6"
																								},
																								"nativeSrc": "478:7:6",
																								"nodeType": "YulFunctionCall",
																								"src": "478:7:6"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "455:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "455:3:6"
																						},
																						"nativeSrc": "455:31:6",
																						"nodeType": "YulFunctionCall",
																						"src": "455:31:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "488:2:6",
																						"nodeType": "YulLiteral",
																						"src": "488:2:6",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "451:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "451:3:6"
																				},
																				"nativeSrc": "451:40:6",
																				"nodeType": "YulFunctionCall",
																				"src": "451:40:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "497:2:6",
																						"nodeType": "YulLiteral",
																						"src": "497:2:6",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "493:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "493:3:6"
																				},
																				"nativeSrc": "493:7:6",
																				"nodeType": "YulFunctionCall",
																				"src": "493:7:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "447:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "447:3:6"
																		},
																		"nativeSrc": "447:54:6",
																		"nodeType": "YulFunctionCall",
																		"src": "447:54:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "435:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "435:3:6"
																},
																"nativeSrc": "435:67:6",
																"nodeType": "YulFunctionCall",
																"src": "435:67:6"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "421:10:6",
																	"nodeType": "YulTypedName",
																	"src": "421:10:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "577:22:6",
																"nodeType": "YulBlock",
																"src": "577:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "579:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "579:16:6"
																			},
																			"nativeSrc": "579:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "579:18:6"
																		},
																		"nativeSrc": "579:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "579:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "520:10:6",
																				"nodeType": "YulIdentifier",
																				"src": "520:10:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "540:2:6",
																								"nodeType": "YulLiteral",
																								"src": "540:2:6",
																								"type": "",
																								"value": "64"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "544:1:6",
																								"nodeType": "YulLiteral",
																								"src": "544:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "536:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "536:3:6"
																						},
																						"nativeSrc": "536:10:6",
																						"nodeType": "YulFunctionCall",
																						"src": "536:10:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "548:1:6",
																						"nodeType": "YulLiteral",
																						"src": "548:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "532:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "532:3:6"
																				},
																				"nativeSrc": "532:18:6",
																				"nodeType": "YulFunctionCall",
																				"src": "532:18:6"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "517:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "517:2:6"
																		},
																		"nativeSrc": "517:34:6",
																		"nodeType": "YulFunctionCall",
																		"src": "517:34:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "556:10:6",
																				"nodeType": "YulIdentifier",
																				"src": "556:10:6"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "568:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "568:6:6"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "553:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "553:2:6"
																		},
																		"nativeSrc": "553:22:6",
																		"nodeType": "YulFunctionCall",
																		"src": "553:22:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "514:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "514:2:6"
																},
																"nativeSrc": "514:62:6",
																"nodeType": "YulFunctionCall",
																"src": "514:62:6"
															},
															"nativeSrc": "511:88:6",
															"nodeType": "YulIf",
															"src": "511:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "615:2:6",
																		"nodeType": "YulLiteral",
																		"src": "615:2:6",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "619:10:6",
																		"nodeType": "YulIdentifier",
																		"src": "619:10:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "608:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "608:6:6"
																},
																"nativeSrc": "608:22:6",
																"nodeType": "YulFunctionCall",
																"src": "608:22:6"
															},
															"nativeSrc": "608:22:6",
															"nodeType": "YulExpressionStatement",
															"src": "608:22:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "646:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "646:6:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "654:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "654:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "639:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "639:6:6"
																},
																"nativeSrc": "639:22:6",
																"nodeType": "YulFunctionCall",
																"src": "639:22:6"
															},
															"nativeSrc": "639:22:6",
															"nodeType": "YulExpressionStatement",
															"src": "639:22:6"
														},
														{
															"body": {
																"nativeSrc": "713:16:6",
																"nodeType": "YulBlock",
																"src": "713:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "722:1:6",
																					"nodeType": "YulLiteral",
																					"src": "722:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "725:1:6",
																					"nodeType": "YulLiteral",
																					"src": "725:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "715:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "715:6:6"
																			},
																			"nativeSrc": "715:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "715:12:6"
																		},
																		"nativeSrc": "715:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "715:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "684:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "684:6:6"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "692:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "692:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "680:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "680:3:6"
																				},
																				"nativeSrc": "680:19:6",
																				"nodeType": "YulFunctionCall",
																				"src": "680:19:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "701:4:6",
																				"nodeType": "YulLiteral",
																				"src": "701:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "676:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "676:3:6"
																		},
																		"nativeSrc": "676:30:6",
																		"nodeType": "YulFunctionCall",
																		"src": "676:30:6"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "708:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "708:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "673:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "673:2:6"
																},
																"nativeSrc": "673:39:6",
																"nodeType": "YulFunctionCall",
																"src": "673:39:6"
															},
															"nativeSrc": "670:59:6",
															"nodeType": "YulIf",
															"src": "670:59:6"
														},
														{
															"nativeSrc": "738:10:6",
															"nodeType": "YulVariableDeclaration",
															"src": "738:10:6",
															"value": {
																"kind": "number",
																"nativeSrc": "747:1:6",
																"nodeType": "YulLiteral",
																"src": "747:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "742:1:6",
																	"nodeType": "YulTypedName",
																	"src": "742:1:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "809:91:6",
																"nodeType": "YulBlock",
																"src": "809:91:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nativeSrc": "838:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "838:6:6"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "846:1:6",
																									"nodeType": "YulIdentifier",
																									"src": "846:1:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "834:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "834:3:6"
																							},
																							"nativeSrc": "834:14:6",
																							"nodeType": "YulFunctionCall",
																							"src": "834:14:6"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "850:4:6",
																							"nodeType": "YulLiteral",
																							"src": "850:4:6",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "830:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "830:3:6"
																					},
																					"nativeSrc": "830:25:6",
																					"nodeType": "YulFunctionCall",
																					"src": "830:25:6"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nativeSrc": "871:6:6",
																											"nodeType": "YulIdentifier",
																											"src": "871:6:6"
																										},
																										{
																											"name": "i",
																											"nativeSrc": "879:1:6",
																											"nodeType": "YulIdentifier",
																											"src": "879:1:6"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nativeSrc": "867:3:6",
																										"nodeType": "YulIdentifier",
																										"src": "867:3:6"
																									},
																									"nativeSrc": "867:14:6",
																									"nodeType": "YulFunctionCall",
																									"src": "867:14:6"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "883:4:6",
																									"nodeType": "YulLiteral",
																									"src": "883:4:6",
																									"type": "",
																									"value": "0x20"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "863:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "863:3:6"
																							},
																							"nativeSrc": "863:25:6",
																							"nodeType": "YulFunctionCall",
																							"src": "863:25:6"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "857:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "857:5:6"
																					},
																					"nativeSrc": "857:32:6",
																					"nodeType": "YulFunctionCall",
																					"src": "857:32:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "823:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "823:6:6"
																			},
																			"nativeSrc": "823:67:6",
																			"nodeType": "YulFunctionCall",
																			"src": "823:67:6"
																		},
																		"nativeSrc": "823:67:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "823:67:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "768:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "768:1:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "771:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "771:6:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "765:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "765:2:6"
																},
																"nativeSrc": "765:13:6",
																"nodeType": "YulFunctionCall",
																"src": "765:13:6"
															},
															"nativeSrc": "757:143:6",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "779:21:6",
																"nodeType": "YulBlock",
																"src": "779:21:6",
																"statements": [
																	{
																		"nativeSrc": "781:17:6",
																		"nodeType": "YulAssignment",
																		"src": "781:17:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "790:1:6",
																					"nodeType": "YulIdentifier",
																					"src": "790:1:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "793:4:6",
																					"nodeType": "YulLiteral",
																					"src": "793:4:6",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "786:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "786:3:6"
																			},
																			"nativeSrc": "786:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "786:12:6"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "781:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "781:1:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "761:3:6",
																"nodeType": "YulBlock",
																"src": "761:3:6",
																"statements": []
															},
															"src": "757:143:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "924:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "924:6:6"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "932:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "932:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "920:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "920:3:6"
																				},
																				"nativeSrc": "920:19:6",
																				"nodeType": "YulFunctionCall",
																				"src": "920:19:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "941:4:6",
																				"nodeType": "YulLiteral",
																				"src": "941:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "916:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "916:3:6"
																		},
																		"nativeSrc": "916:30:6",
																		"nodeType": "YulFunctionCall",
																		"src": "916:30:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "948:1:6",
																		"nodeType": "YulLiteral",
																		"src": "948:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "909:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "909:6:6"
																},
																"nativeSrc": "909:41:6",
																"nodeType": "YulFunctionCall",
																"src": "909:41:6"
															},
															"nativeSrc": "909:41:6",
															"nodeType": "YulExpressionStatement",
															"src": "909:41:6"
														},
														{
															"nativeSrc": "959:15:6",
															"nodeType": "YulAssignment",
															"src": "959:15:6",
															"value": {
																"name": "memPtr",
																"nativeSrc": "968:6:6",
																"nodeType": "YulIdentifier",
																"src": "968:6:6"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "959:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "959:5:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nativeSrc": "146:834:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "184:6:6",
														"nodeType": "YulTypedName",
														"src": "184:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "192:3:6",
														"nodeType": "YulTypedName",
														"src": "192:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "200:5:6",
														"nodeType": "YulTypedName",
														"src": "200:5:6",
														"type": ""
													}
												],
												"src": "146:834:6"
											},
											{
												"body": {
													"nativeSrc": "1120:483:6",
													"nodeType": "YulBlock",
													"src": "1120:483:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1166:16:6",
																"nodeType": "YulBlock",
																"src": "1166:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1175:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1175:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1178:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1178:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1168:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1168:6:6"
																			},
																			"nativeSrc": "1168:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1168:12:6"
																		},
																		"nativeSrc": "1168:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1168:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1141:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1141:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1150:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1150:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1137:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1137:3:6"
																		},
																		"nativeSrc": "1137:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1137:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1162:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1162:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1133:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1133:3:6"
																},
																"nativeSrc": "1133:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1133:32:6"
															},
															"nativeSrc": "1130:52:6",
															"nodeType": "YulIf",
															"src": "1130:52:6"
														},
														{
															"nativeSrc": "1191:30:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1191:30:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1211:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1211:9:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1205:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1205:5:6"
																},
																"nativeSrc": "1205:16:6",
																"nodeType": "YulFunctionCall",
																"src": "1205:16:6"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "1195:6:6",
																	"nodeType": "YulTypedName",
																	"src": "1195:6:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1264:16:6",
																"nodeType": "YulBlock",
																"src": "1264:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1273:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1273:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1276:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1276:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1266:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1266:6:6"
																			},
																			"nativeSrc": "1266:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1266:12:6"
																		},
																		"nativeSrc": "1266:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1266:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1236:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1236:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1252:2:6",
																						"nodeType": "YulLiteral",
																						"src": "1252:2:6",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1256:1:6",
																						"nodeType": "YulLiteral",
																						"src": "1256:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1248:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1248:3:6"
																				},
																				"nativeSrc": "1248:10:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1248:10:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1260:1:6",
																				"nodeType": "YulLiteral",
																				"src": "1260:1:6",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1244:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1244:3:6"
																		},
																		"nativeSrc": "1244:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1244:18:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1233:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "1233:2:6"
																},
																"nativeSrc": "1233:30:6",
																"nodeType": "YulFunctionCall",
																"src": "1233:30:6"
															},
															"nativeSrc": "1230:50:6",
															"nodeType": "YulIf",
															"src": "1230:50:6"
														},
														{
															"nativeSrc": "1289:71:6",
															"nodeType": "YulAssignment",
															"src": "1289:71:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1332:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1332:9:6"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "1343:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1343:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1328:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1328:3:6"
																		},
																		"nativeSrc": "1328:22:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1328:22:6"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1352:7:6",
																		"nodeType": "YulIdentifier",
																		"src": "1352:7:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nativeSrc": "1299:28:6",
																	"nodeType": "YulIdentifier",
																	"src": "1299:28:6"
																},
																"nativeSrc": "1299:61:6",
																"nodeType": "YulFunctionCall",
																"src": "1299:61:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1289:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1289:6:6"
																}
															]
														},
														{
															"nativeSrc": "1369:41:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1369:41:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1395:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1395:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1406:2:6",
																				"nodeType": "YulLiteral",
																				"src": "1406:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1391:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1391:3:6"
																		},
																		"nativeSrc": "1391:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1391:18:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1385:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1385:5:6"
																},
																"nativeSrc": "1385:25:6",
																"nodeType": "YulFunctionCall",
																"src": "1385:25:6"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nativeSrc": "1373:8:6",
																	"nodeType": "YulTypedName",
																	"src": "1373:8:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1455:16:6",
																"nodeType": "YulBlock",
																"src": "1455:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1464:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1464:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1467:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1467:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1457:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1457:6:6"
																			},
																			"nativeSrc": "1457:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1457:12:6"
																		},
																		"nativeSrc": "1457:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1457:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nativeSrc": "1425:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "1425:8:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1443:2:6",
																						"nodeType": "YulLiteral",
																						"src": "1443:2:6",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1447:1:6",
																						"nodeType": "YulLiteral",
																						"src": "1447:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1439:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1439:3:6"
																				},
																				"nativeSrc": "1439:10:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1439:10:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1451:1:6",
																				"nodeType": "YulLiteral",
																				"src": "1451:1:6",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1435:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1435:3:6"
																		},
																		"nativeSrc": "1435:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1435:18:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1422:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "1422:2:6"
																},
																"nativeSrc": "1422:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1422:32:6"
															},
															"nativeSrc": "1419:52:6",
															"nodeType": "YulIf",
															"src": "1419:52:6"
														},
														{
															"nativeSrc": "1480:73:6",
															"nodeType": "YulAssignment",
															"src": "1480:73:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1523:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1523:9:6"
																			},
																			{
																				"name": "offset_1",
																				"nativeSrc": "1534:8:6",
																				"nodeType": "YulIdentifier",
																				"src": "1534:8:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1519:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1519:3:6"
																		},
																		"nativeSrc": "1519:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1519:24:6"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1545:7:6",
																		"nodeType": "YulIdentifier",
																		"src": "1545:7:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nativeSrc": "1490:28:6",
																	"nodeType": "YulIdentifier",
																	"src": "1490:28:6"
																},
																"nativeSrc": "1490:63:6",
																"nodeType": "YulFunctionCall",
																"src": "1490:63:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1480:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1480:6:6"
																}
															]
														},
														{
															"nativeSrc": "1562:35:6",
															"nodeType": "YulAssignment",
															"src": "1562:35:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1582:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1582:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1593:2:6",
																				"nodeType": "YulLiteral",
																				"src": "1593:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1578:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1578:3:6"
																		},
																		"nativeSrc": "1578:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1578:18:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1572:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1572:5:6"
																},
																"nativeSrc": "1572:25:6",
																"nodeType": "YulFunctionCall",
																"src": "1572:25:6"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1562:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1562:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256_fromMemory",
												"nativeSrc": "985:618:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1070:9:6",
														"nodeType": "YulTypedName",
														"src": "1070:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1081:7:6",
														"nodeType": "YulTypedName",
														"src": "1081:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1093:6:6",
														"nodeType": "YulTypedName",
														"src": "1093:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1101:6:6",
														"nodeType": "YulTypedName",
														"src": "1101:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1109:6:6",
														"nodeType": "YulTypedName",
														"src": "1109:6:6",
														"type": ""
													}
												],
												"src": "985:618:6"
											},
											{
												"body": {
													"nativeSrc": "1663:325:6",
													"nodeType": "YulBlock",
													"src": "1663:325:6",
													"statements": [
														{
															"nativeSrc": "1673:22:6",
															"nodeType": "YulAssignment",
															"src": "1673:22:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1687:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1687:1:6",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "1690:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "1690:4:6"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "1683:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1683:3:6"
																},
																"nativeSrc": "1683:12:6",
																"nodeType": "YulFunctionCall",
																"src": "1683:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1673:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1673:6:6"
																}
															]
														},
														{
															"nativeSrc": "1704:38:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1704:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1734:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "1734:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1740:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1740:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1730:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1730:3:6"
																},
																"nativeSrc": "1730:12:6",
																"nodeType": "YulFunctionCall",
																"src": "1730:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "1708:18:6",
																	"nodeType": "YulTypedName",
																	"src": "1708:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1781:31:6",
																"nodeType": "YulBlock",
																"src": "1781:31:6",
																"statements": [
																	{
																		"nativeSrc": "1783:27:6",
																		"nodeType": "YulAssignment",
																		"src": "1783:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "1797:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "1797:6:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1805:4:6",
																					"nodeType": "YulLiteral",
																					"src": "1805:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "1793:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "1793:3:6"
																			},
																			"nativeSrc": "1793:17:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1793:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "1783:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1783:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1761:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "1761:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1754:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1754:6:6"
																},
																"nativeSrc": "1754:26:6",
																"nodeType": "YulFunctionCall",
																"src": "1754:26:6"
															},
															"nativeSrc": "1751:61:6",
															"nodeType": "YulIf",
															"src": "1751:61:6"
														},
														{
															"body": {
																"nativeSrc": "1871:111:6",
																"nodeType": "YulBlock",
																"src": "1871:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1892:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1892:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1899:3:6",
																							"nodeType": "YulLiteral",
																							"src": "1899:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "1904:10:6",
																							"nodeType": "YulLiteral",
																							"src": "1904:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "1895:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "1895:3:6"
																					},
																					"nativeSrc": "1895:20:6",
																					"nodeType": "YulFunctionCall",
																					"src": "1895:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1885:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1885:6:6"
																			},
																			"nativeSrc": "1885:31:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1885:31:6"
																		},
																		"nativeSrc": "1885:31:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1885:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1936:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1936:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1939:4:6",
																					"nodeType": "YulLiteral",
																					"src": "1939:4:6",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1929:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1929:6:6"
																			},
																			"nativeSrc": "1929:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1929:15:6"
																		},
																		"nativeSrc": "1929:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1929:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1964:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1964:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1967:4:6",
																					"nodeType": "YulLiteral",
																					"src": "1967:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1957:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1957:6:6"
																			},
																			"nativeSrc": "1957:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1957:15:6"
																		},
																		"nativeSrc": "1957:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1957:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1827:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "1827:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1850:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1850:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1858:2:6",
																				"nodeType": "YulLiteral",
																				"src": "1858:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1847:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "1847:2:6"
																		},
																		"nativeSrc": "1847:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1847:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "1824:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "1824:2:6"
																},
																"nativeSrc": "1824:38:6",
																"nodeType": "YulFunctionCall",
																"src": "1824:38:6"
															},
															"nativeSrc": "1821:161:6",
															"nodeType": "YulIf",
															"src": "1821:161:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1608:380:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1643:4:6",
														"nodeType": "YulTypedName",
														"src": "1643:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1652:6:6",
														"nodeType": "YulTypedName",
														"src": "1652:6:6",
														"type": ""
													}
												],
												"src": "1608:380:6"
											},
											{
												"body": {
													"nativeSrc": "2049:65:6",
													"nodeType": "YulBlock",
													"src": "2049:65:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2066:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2066:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2069:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2069:3:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2059:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2059:6:6"
																},
																"nativeSrc": "2059:14:6",
																"nodeType": "YulFunctionCall",
																"src": "2059:14:6"
															},
															"nativeSrc": "2059:14:6",
															"nodeType": "YulExpressionStatement",
															"src": "2059:14:6"
														},
														{
															"nativeSrc": "2082:26:6",
															"nodeType": "YulAssignment",
															"src": "2082:26:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2100:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2100:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2103:4:6",
																		"nodeType": "YulLiteral",
																		"src": "2103:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2090:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "2090:9:6"
																},
																"nativeSrc": "2090:18:6",
																"nodeType": "YulFunctionCall",
																"src": "2090:18:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2082:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2082:4:6"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "1993:121:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "2032:3:6",
														"nodeType": "YulTypedName",
														"src": "2032:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "2040:4:6",
														"nodeType": "YulTypedName",
														"src": "2040:4:6",
														"type": ""
													}
												],
												"src": "1993:121:6"
											},
											{
												"body": {
													"nativeSrc": "2200:437:6",
													"nodeType": "YulBlock",
													"src": "2200:437:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2233:398:6",
																"nodeType": "YulBlock",
																"src": "2233:398:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2254:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2254:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "2257:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "2257:5:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2247:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2247:6:6"
																			},
																			"nativeSrc": "2247:16:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2247:16:6"
																		},
																		"nativeSrc": "2247:16:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2247:16:6"
																	},
																	{
																		"nativeSrc": "2276:30:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2276:30:6",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2298:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2298:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2301:4:6",
																					"nodeType": "YulLiteral",
																					"src": "2301:4:6",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "2288:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2288:9:6"
																			},
																			"nativeSrc": "2288:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2288:18:6"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "2280:4:6",
																				"nodeType": "YulTypedName",
																				"src": "2280:4:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2319:57:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2319:57:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "2342:4:6",
																					"nodeType": "YulIdentifier",
																					"src": "2342:4:6"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2352:1:6",
																							"nodeType": "YulLiteral",
																							"src": "2352:1:6",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "2359:10:6",
																									"nodeType": "YulIdentifier",
																									"src": "2359:10:6"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2371:2:6",
																									"nodeType": "YulLiteral",
																									"src": "2371:2:6",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2355:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "2355:3:6"
																							},
																							"nativeSrc": "2355:19:6",
																							"nodeType": "YulFunctionCall",
																							"src": "2355:19:6"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "2348:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "2348:3:6"
																					},
																					"nativeSrc": "2348:27:6",
																					"nodeType": "YulFunctionCall",
																					"src": "2348:27:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2338:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "2338:3:6"
																			},
																			"nativeSrc": "2338:38:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2338:38:6"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2323:11:6",
																				"nodeType": "YulTypedName",
																				"src": "2323:11:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "2413:23:6",
																			"nodeType": "YulBlock",
																			"src": "2413:23:6",
																			"statements": [
																				{
																					"nativeSrc": "2415:19:6",
																					"nodeType": "YulAssignment",
																					"src": "2415:19:6",
																					"value": {
																						"name": "data",
																						"nativeSrc": "2430:4:6",
																						"nodeType": "YulIdentifier",
																						"src": "2430:4:6"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "2415:11:6",
																							"nodeType": "YulIdentifier",
																							"src": "2415:11:6"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "2395:10:6",
																					"nodeType": "YulIdentifier",
																					"src": "2395:10:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2407:4:6",
																					"nodeType": "YulLiteral",
																					"src": "2407:4:6",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "2392:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "2392:2:6"
																			},
																			"nativeSrc": "2392:20:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2392:20:6"
																		},
																		"nativeSrc": "2389:47:6",
																		"nodeType": "YulIf",
																		"src": "2389:47:6"
																	},
																	{
																		"nativeSrc": "2449:41:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2449:41:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "2463:4:6",
																					"nodeType": "YulIdentifier",
																					"src": "2463:4:6"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2473:1:6",
																							"nodeType": "YulLiteral",
																							"src": "2473:1:6",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "2480:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "2480:3:6"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2485:2:6",
																									"nodeType": "YulLiteral",
																									"src": "2485:2:6",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2476:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "2476:3:6"
																							},
																							"nativeSrc": "2476:12:6",
																							"nodeType": "YulFunctionCall",
																							"src": "2476:12:6"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "2469:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "2469:3:6"
																					},
																					"nativeSrc": "2469:20:6",
																					"nodeType": "YulFunctionCall",
																					"src": "2469:20:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2459:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "2459:3:6"
																			},
																			"nativeSrc": "2459:31:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2459:31:6"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "2453:2:6",
																				"nodeType": "YulTypedName",
																				"src": "2453:2:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2503:24:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2503:24:6",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "2516:11:6",
																			"nodeType": "YulIdentifier",
																			"src": "2516:11:6"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "2507:5:6",
																				"nodeType": "YulTypedName",
																				"src": "2507:5:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "2601:20:6",
																			"nodeType": "YulBlock",
																			"src": "2601:20:6",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "2610:5:6",
																								"nodeType": "YulIdentifier",
																								"src": "2610:5:6"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2617:1:6",
																								"nodeType": "YulLiteral",
																								"src": "2617:1:6",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "2603:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "2603:6:6"
																						},
																						"nativeSrc": "2603:16:6",
																						"nodeType": "YulFunctionCall",
																						"src": "2603:16:6"
																					},
																					"nativeSrc": "2603:16:6",
																					"nodeType": "YulExpressionStatement",
																					"src": "2603:16:6"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2551:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "2551:5:6"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "2558:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "2558:2:6"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "2548:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "2548:2:6"
																			},
																			"nativeSrc": "2548:13:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2548:13:6"
																		},
																		"nativeSrc": "2540:81:6",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "2562:26:6",
																			"nodeType": "YulBlock",
																			"src": "2562:26:6",
																			"statements": [
																				{
																					"nativeSrc": "2564:22:6",
																					"nodeType": "YulAssignment",
																					"src": "2564:22:6",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "2577:5:6",
																								"nodeType": "YulIdentifier",
																								"src": "2577:5:6"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2584:1:6",
																								"nodeType": "YulLiteral",
																								"src": "2584:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "2573:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "2573:3:6"
																						},
																						"nativeSrc": "2573:13:6",
																						"nodeType": "YulFunctionCall",
																						"src": "2573:13:6"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "2564:5:6",
																							"nodeType": "YulIdentifier",
																							"src": "2564:5:6"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "2544:3:6",
																			"nodeType": "YulBlock",
																			"src": "2544:3:6",
																			"statements": []
																		},
																		"src": "2540:81:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2216:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2216:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2221:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2221:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2213:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "2213:2:6"
																},
																"nativeSrc": "2213:11:6",
																"nodeType": "YulFunctionCall",
																"src": "2213:11:6"
															},
															"nativeSrc": "2210:421:6",
															"nodeType": "YulIf",
															"src": "2210:421:6"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "2119:518:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2172:5:6",
														"nodeType": "YulTypedName",
														"src": "2172:5:6",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2179:3:6",
														"nodeType": "YulTypedName",
														"src": "2179:3:6",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2184:10:6",
														"nodeType": "YulTypedName",
														"src": "2184:10:6",
														"type": ""
													}
												],
												"src": "2119:518:6"
											},
											{
												"body": {
													"nativeSrc": "2727:81:6",
													"nodeType": "YulBlock",
													"src": "2727:81:6",
													"statements": [
														{
															"nativeSrc": "2737:65:6",
															"nodeType": "YulAssignment",
															"src": "2737:65:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "2752:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "2752:4:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2770:1:6",
																										"nodeType": "YulLiteral",
																										"src": "2770:1:6",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "2773:3:6",
																										"nodeType": "YulIdentifier",
																										"src": "2773:3:6"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "2766:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "2766:3:6"
																								},
																								"nativeSrc": "2766:11:6",
																								"nodeType": "YulFunctionCall",
																								"src": "2766:11:6"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2783:1:6",
																										"nodeType": "YulLiteral",
																										"src": "2783:1:6",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "2779:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "2779:3:6"
																								},
																								"nativeSrc": "2779:6:6",
																								"nodeType": "YulFunctionCall",
																								"src": "2779:6:6"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "2762:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "2762:3:6"
																						},
																						"nativeSrc": "2762:24:6",
																						"nodeType": "YulFunctionCall",
																						"src": "2762:24:6"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "2758:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2758:3:6"
																				},
																				"nativeSrc": "2758:29:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2758:29:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2748:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2748:3:6"
																		},
																		"nativeSrc": "2748:40:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2748:40:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2794:1:6",
																				"nodeType": "YulLiteral",
																				"src": "2794:1:6",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "2797:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "2797:3:6"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "2790:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2790:3:6"
																		},
																		"nativeSrc": "2790:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2790:11:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2745:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "2745:2:6"
																},
																"nativeSrc": "2745:57:6",
																"nodeType": "YulFunctionCall",
																"src": "2745:57:6"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "2737:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2737:4:6"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "2642:166:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2704:4:6",
														"nodeType": "YulTypedName",
														"src": "2704:4:6",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2710:3:6",
														"nodeType": "YulTypedName",
														"src": "2710:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "2718:4:6",
														"nodeType": "YulTypedName",
														"src": "2718:4:6",
														"type": ""
													}
												],
												"src": "2642:166:6"
											},
											{
												"body": {
													"nativeSrc": "2909:1203:6",
													"nodeType": "YulBlock",
													"src": "2909:1203:6",
													"statements": [
														{
															"nativeSrc": "2919:24:6",
															"nodeType": "YulVariableDeclaration",
															"src": "2919:24:6",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2939:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2939:3:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2933:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2933:5:6"
																},
																"nativeSrc": "2933:10:6",
																"nodeType": "YulFunctionCall",
																"src": "2933:10:6"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "2923:6:6",
																	"nodeType": "YulTypedName",
																	"src": "2923:6:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2986:22:6",
																"nodeType": "YulBlock",
																"src": "2986:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2988:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "2988:16:6"
																			},
																			"nativeSrc": "2988:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2988:18:6"
																		},
																		"nativeSrc": "2988:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2988:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "2958:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2958:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2974:2:6",
																						"nodeType": "YulLiteral",
																						"src": "2974:2:6",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2978:1:6",
																						"nodeType": "YulLiteral",
																						"src": "2978:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "2970:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2970:3:6"
																				},
																				"nativeSrc": "2970:10:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2970:10:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2982:1:6",
																				"nodeType": "YulLiteral",
																				"src": "2982:1:6",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2966:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2966:3:6"
																		},
																		"nativeSrc": "2966:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2966:18:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2955:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "2955:2:6"
																},
																"nativeSrc": "2955:30:6",
																"nodeType": "YulFunctionCall",
																"src": "2955:30:6"
															},
															"nativeSrc": "2952:56:6",
															"nodeType": "YulIf",
															"src": "2952:56:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3061:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "3061:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3099:4:6",
																						"nodeType": "YulIdentifier",
																						"src": "3099:4:6"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3093:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "3093:5:6"
																				},
																				"nativeSrc": "3093:11:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3093:11:6"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "3067:25:6",
																			"nodeType": "YulIdentifier",
																			"src": "3067:25:6"
																		},
																		"nativeSrc": "3067:38:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3067:38:6"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "3107:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3107:6:6"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "3017:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "3017:43:6"
																},
																"nativeSrc": "3017:97:6",
																"nodeType": "YulFunctionCall",
																"src": "3017:97:6"
															},
															"nativeSrc": "3017:97:6",
															"nodeType": "YulExpressionStatement",
															"src": "3017:97:6"
														},
														{
															"nativeSrc": "3123:18:6",
															"nodeType": "YulVariableDeclaration",
															"src": "3123:18:6",
															"value": {
																"kind": "number",
																"nativeSrc": "3140:1:6",
																"nodeType": "YulLiteral",
																"src": "3140:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "3127:9:6",
																	"nodeType": "YulTypedName",
																	"src": "3127:9:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3150:17:6",
															"nodeType": "YulAssignment",
															"src": "3150:17:6",
															"value": {
																"kind": "number",
																"nativeSrc": "3163:4:6",
																"nodeType": "YulLiteral",
																"src": "3163:4:6",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "3150:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "3150:9:6"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "3213:642:6",
																		"nodeType": "YulBlock",
																		"src": "3213:642:6",
																		"statements": [
																			{
																				"nativeSrc": "3227:35:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3227:35:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "3246:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "3246:6:6"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "3258:2:6",
																									"nodeType": "YulLiteral",
																									"src": "3258:2:6",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "3254:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "3254:3:6"
																							},
																							"nativeSrc": "3254:7:6",
																							"nodeType": "YulFunctionCall",
																							"src": "3254:7:6"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "3242:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "3242:3:6"
																					},
																					"nativeSrc": "3242:20:6",
																					"nodeType": "YulFunctionCall",
																					"src": "3242:20:6"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "3231:7:6",
																						"nodeType": "YulTypedName",
																						"src": "3231:7:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "3275:49:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3275:49:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3319:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "3319:4:6"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "3289:29:6",
																						"nodeType": "YulIdentifier",
																						"src": "3289:29:6"
																					},
																					"nativeSrc": "3289:35:6",
																					"nodeType": "YulFunctionCall",
																					"src": "3289:35:6"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "3279:6:6",
																						"nodeType": "YulTypedName",
																						"src": "3279:6:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "3337:10:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3337:10:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3346:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3346:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "3341:1:6",
																						"nodeType": "YulTypedName",
																						"src": "3341:1:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "3417:165:6",
																					"nodeType": "YulBlock",
																					"src": "3417:165:6",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3442:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "3442:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "3460:3:6",
																														"nodeType": "YulIdentifier",
																														"src": "3460:3:6"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "3465:9:6",
																														"nodeType": "YulIdentifier",
																														"src": "3465:9:6"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "3456:3:6",
																													"nodeType": "YulIdentifier",
																													"src": "3456:3:6"
																												},
																												"nativeSrc": "3456:19:6",
																												"nodeType": "YulFunctionCall",
																												"src": "3456:19:6"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "3450:5:6",
																											"nodeType": "YulIdentifier",
																											"src": "3450:5:6"
																										},
																										"nativeSrc": "3450:26:6",
																										"nodeType": "YulFunctionCall",
																										"src": "3450:26:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "3435:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "3435:6:6"
																								},
																								"nativeSrc": "3435:42:6",
																								"nodeType": "YulFunctionCall",
																								"src": "3435:42:6"
																							},
																							"nativeSrc": "3435:42:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "3435:42:6"
																						},
																						{
																							"nativeSrc": "3494:24:6",
																							"nodeType": "YulAssignment",
																							"src": "3494:24:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3508:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "3508:6:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3516:1:6",
																										"nodeType": "YulLiteral",
																										"src": "3516:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3504:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "3504:3:6"
																								},
																								"nativeSrc": "3504:14:6",
																								"nodeType": "YulFunctionCall",
																								"src": "3504:14:6"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "3494:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "3494:6:6"
																								}
																							]
																						},
																						{
																							"nativeSrc": "3535:33:6",
																							"nodeType": "YulAssignment",
																							"src": "3535:33:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "3552:9:6",
																										"nodeType": "YulIdentifier",
																										"src": "3552:9:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3563:4:6",
																										"nodeType": "YulLiteral",
																										"src": "3563:4:6",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3548:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "3548:3:6"
																								},
																								"nativeSrc": "3548:20:6",
																								"nodeType": "YulFunctionCall",
																								"src": "3548:20:6"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "3535:9:6",
																									"nodeType": "YulIdentifier",
																									"src": "3535:9:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "3371:1:6",
																							"nodeType": "YulIdentifier",
																							"src": "3371:1:6"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "3374:7:6",
																							"nodeType": "YulIdentifier",
																							"src": "3374:7:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "3368:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "3368:2:6"
																					},
																					"nativeSrc": "3368:14:6",
																					"nodeType": "YulFunctionCall",
																					"src": "3368:14:6"
																				},
																				"nativeSrc": "3360:222:6",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "3383:21:6",
																					"nodeType": "YulBlock",
																					"src": "3383:21:6",
																					"statements": [
																						{
																							"nativeSrc": "3385:17:6",
																							"nodeType": "YulAssignment",
																							"src": "3385:17:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "3394:1:6",
																										"nodeType": "YulIdentifier",
																										"src": "3394:1:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3397:4:6",
																										"nodeType": "YulLiteral",
																										"src": "3397:4:6",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3390:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "3390:3:6"
																								},
																								"nativeSrc": "3390:12:6",
																								"nodeType": "YulFunctionCall",
																								"src": "3390:12:6"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "3385:1:6",
																									"nodeType": "YulIdentifier",
																									"src": "3385:1:6"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "3364:3:6",
																					"nodeType": "YulBlock",
																					"src": "3364:3:6",
																					"statements": []
																				},
																				"src": "3360:222:6"
																			},
																			{
																				"body": {
																					"nativeSrc": "3630:166:6",
																					"nodeType": "YulBlock",
																					"src": "3630:166:6",
																					"statements": [
																						{
																							"nativeSrc": "3648:43:6",
																							"nodeType": "YulVariableDeclaration",
																							"src": "3648:43:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "3675:3:6",
																												"nodeType": "YulIdentifier",
																												"src": "3675:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "3680:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "3680:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "3671:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "3671:3:6"
																										},
																										"nativeSrc": "3671:19:6",
																										"nodeType": "YulFunctionCall",
																										"src": "3671:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "3665:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "3665:5:6"
																								},
																								"nativeSrc": "3665:26:6",
																								"nodeType": "YulFunctionCall",
																								"src": "3665:26:6"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "3652:9:6",
																									"nodeType": "YulTypedName",
																									"src": "3652:9:6",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3715:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "3715:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "3727:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "3727:9:6"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "3754:1:6",
																																				"nodeType": "YulLiteral",
																																				"src": "3754:1:6",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "3757:6:6",
																																				"nodeType": "YulIdentifier",
																																				"src": "3757:6:6"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "3750:3:6",
																																			"nodeType": "YulIdentifier",
																																			"src": "3750:3:6"
																																		},
																																		"nativeSrc": "3750:14:6",
																																		"nodeType": "YulFunctionCall",
																																		"src": "3750:14:6"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "3766:3:6",
																																		"nodeType": "YulLiteral",
																																		"src": "3766:3:6",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "3746:3:6",
																																	"nodeType": "YulIdentifier",
																																	"src": "3746:3:6"
																																},
																																"nativeSrc": "3746:24:6",
																																"nodeType": "YulFunctionCall",
																																"src": "3746:24:6"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "3776:1:6",
																																		"nodeType": "YulLiteral",
																																		"src": "3776:1:6",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "3772:3:6",
																																	"nodeType": "YulIdentifier",
																																	"src": "3772:3:6"
																																},
																																"nativeSrc": "3772:6:6",
																																"nodeType": "YulFunctionCall",
																																"src": "3772:6:6"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "3742:3:6",
																															"nodeType": "YulIdentifier",
																															"src": "3742:3:6"
																														},
																														"nativeSrc": "3742:37:6",
																														"nodeType": "YulFunctionCall",
																														"src": "3742:37:6"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "3738:3:6",
																													"nodeType": "YulIdentifier",
																													"src": "3738:3:6"
																												},
																												"nativeSrc": "3738:42:6",
																												"nodeType": "YulFunctionCall",
																												"src": "3738:42:6"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "3723:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "3723:3:6"
																										},
																										"nativeSrc": "3723:58:6",
																										"nodeType": "YulFunctionCall",
																										"src": "3723:58:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "3708:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "3708:6:6"
																								},
																								"nativeSrc": "3708:74:6",
																								"nodeType": "YulFunctionCall",
																								"src": "3708:74:6"
																							},
																							"nativeSrc": "3708:74:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "3708:74:6"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "3601:7:6",
																							"nodeType": "YulIdentifier",
																							"src": "3601:7:6"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "3610:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "3610:6:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "3598:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "3598:2:6"
																					},
																					"nativeSrc": "3598:19:6",
																					"nodeType": "YulFunctionCall",
																					"src": "3598:19:6"
																				},
																				"nativeSrc": "3595:201:6",
																				"nodeType": "YulIf",
																				"src": "3595:201:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3816:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "3816:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "3830:1:6",
																											"nodeType": "YulLiteral",
																											"src": "3830:1:6",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "3833:6:6",
																											"nodeType": "YulIdentifier",
																											"src": "3833:6:6"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "3826:3:6",
																										"nodeType": "YulIdentifier",
																										"src": "3826:3:6"
																									},
																									"nativeSrc": "3826:14:6",
																									"nodeType": "YulFunctionCall",
																									"src": "3826:14:6"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "3842:1:6",
																									"nodeType": "YulLiteral",
																									"src": "3842:1:6",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "3822:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "3822:3:6"
																							},
																							"nativeSrc": "3822:22:6",
																							"nodeType": "YulFunctionCall",
																							"src": "3822:22:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "3809:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "3809:6:6"
																					},
																					"nativeSrc": "3809:36:6",
																					"nodeType": "YulFunctionCall",
																					"src": "3809:36:6"
																				},
																				"nativeSrc": "3809:36:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "3809:36:6"
																			}
																		]
																	},
																	"nativeSrc": "3206:649:6",
																	"nodeType": "YulCase",
																	"src": "3206:649:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3211:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3211:1:6",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "3872:234:6",
																		"nodeType": "YulBlock",
																		"src": "3872:234:6",
																		"statements": [
																			{
																				"nativeSrc": "3886:14:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3886:14:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3899:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3899:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "3890:5:6",
																						"nodeType": "YulTypedName",
																						"src": "3890:5:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "3935:67:6",
																					"nodeType": "YulBlock",
																					"src": "3935:67:6",
																					"statements": [
																						{
																							"nativeSrc": "3953:35:6",
																							"nodeType": "YulAssignment",
																							"src": "3953:35:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "3972:3:6",
																												"nodeType": "YulIdentifier",
																												"src": "3972:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "3977:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "3977:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "3968:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "3968:3:6"
																										},
																										"nativeSrc": "3968:19:6",
																										"nodeType": "YulFunctionCall",
																										"src": "3968:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "3962:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "3962:5:6"
																								},
																								"nativeSrc": "3962:26:6",
																								"nodeType": "YulFunctionCall",
																								"src": "3962:26:6"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "3953:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "3953:5:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "3916:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "3916:6:6"
																				},
																				"nativeSrc": "3913:89:6",
																				"nodeType": "YulIf",
																				"src": "3913:89:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4022:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "4022:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "4081:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "4081:5:6"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "4088:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "4088:6:6"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "4028:52:6",
																								"nodeType": "YulIdentifier",
																								"src": "4028:52:6"
																							},
																							"nativeSrc": "4028:67:6",
																							"nodeType": "YulFunctionCall",
																							"src": "4028:67:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4015:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4015:6:6"
																					},
																					"nativeSrc": "4015:81:6",
																					"nodeType": "YulFunctionCall",
																					"src": "4015:81:6"
																				},
																				"nativeSrc": "4015:81:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "4015:81:6"
																			}
																		]
																	},
																	"nativeSrc": "3864:242:6",
																	"nodeType": "YulCase",
																	"src": "3864:242:6",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "3186:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3186:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3194:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3194:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3183:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "3183:2:6"
																},
																"nativeSrc": "3183:14:6",
																"nodeType": "YulFunctionCall",
																"src": "3183:14:6"
															},
															"nativeSrc": "3176:930:6",
															"nodeType": "YulSwitch",
															"src": "3176:930:6"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "2813:1299:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2894:4:6",
														"nodeType": "YulTypedName",
														"src": "2894:4:6",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "2900:3:6",
														"nodeType": "YulTypedName",
														"src": "2900:3:6",
														"type": ""
													}
												],
												"src": "2813:1299:6"
											},
											{
												"body": {
													"nativeSrc": "4291:181:6",
													"nodeType": "YulBlock",
													"src": "4291:181:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4308:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4308:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4319:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4319:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4301:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4301:6:6"
																},
																"nativeSrc": "4301:21:6",
																"nodeType": "YulFunctionCall",
																"src": "4301:21:6"
															},
															"nativeSrc": "4301:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "4301:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4342:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4342:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4353:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4353:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4338:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4338:3:6"
																		},
																		"nativeSrc": "4338:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4338:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4358:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4358:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4331:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4331:6:6"
																},
																"nativeSrc": "4331:30:6",
																"nodeType": "YulFunctionCall",
																"src": "4331:30:6"
															},
															"nativeSrc": "4331:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "4331:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4381:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4381:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4392:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4392:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4377:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4377:3:6"
																		},
																		"nativeSrc": "4377:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4377:18:6"
																	},
																	{
																		"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nativeSrc": "4397:33:6",
																		"nodeType": "YulLiteral",
																		"src": "4397:33:6",
																		"type": "",
																		"value": "ERC20: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4370:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4370:6:6"
																},
																"nativeSrc": "4370:61:6",
																"nodeType": "YulFunctionCall",
																"src": "4370:61:6"
															},
															"nativeSrc": "4370:61:6",
															"nodeType": "YulExpressionStatement",
															"src": "4370:61:6"
														},
														{
															"nativeSrc": "4440:26:6",
															"nodeType": "YulAssignment",
															"src": "4440:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4452:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4452:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4463:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4463:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4448:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4448:3:6"
																},
																"nativeSrc": "4448:18:6",
																"nodeType": "YulFunctionCall",
																"src": "4448:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4440:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4440:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4117:355:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4268:9:6",
														"nodeType": "YulTypedName",
														"src": "4268:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4282:4:6",
														"nodeType": "YulTypedName",
														"src": "4282:4:6",
														"type": ""
													}
												],
												"src": "4117:355:6"
											},
											{
												"body": {
													"nativeSrc": "4525:174:6",
													"nodeType": "YulBlock",
													"src": "4525:174:6",
													"statements": [
														{
															"nativeSrc": "4535:16:6",
															"nodeType": "YulAssignment",
															"src": "4535:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4546:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4546:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4549:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4549:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4542:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4542:3:6"
																},
																"nativeSrc": "4542:9:6",
																"nodeType": "YulFunctionCall",
																"src": "4542:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "4535:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4535:3:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4582:111:6",
																"nodeType": "YulBlock",
																"src": "4582:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4603:1:6",
																					"nodeType": "YulLiteral",
																					"src": "4603:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "4610:3:6",
																							"nodeType": "YulLiteral",
																							"src": "4610:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "4615:10:6",
																							"nodeType": "YulLiteral",
																							"src": "4615:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "4606:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "4606:3:6"
																					},
																					"nativeSrc": "4606:20:6",
																					"nodeType": "YulFunctionCall",
																					"src": "4606:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4596:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "4596:6:6"
																			},
																			"nativeSrc": "4596:31:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4596:31:6"
																		},
																		"nativeSrc": "4596:31:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4596:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4647:1:6",
																					"nodeType": "YulLiteral",
																					"src": "4647:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4650:4:6",
																					"nodeType": "YulLiteral",
																					"src": "4650:4:6",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4640:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "4640:6:6"
																			},
																			"nativeSrc": "4640:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4640:15:6"
																		},
																		"nativeSrc": "4640:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4640:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4675:1:6",
																					"nodeType": "YulLiteral",
																					"src": "4675:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4678:4:6",
																					"nodeType": "YulLiteral",
																					"src": "4678:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4668:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "4668:6:6"
																			},
																			"nativeSrc": "4668:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4668:15:6"
																		},
																		"nativeSrc": "4668:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4668:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4566:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4566:1:6"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "4569:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4569:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4563:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "4563:2:6"
																},
																"nativeSrc": "4563:10:6",
																"nodeType": "YulFunctionCall",
																"src": "4563:10:6"
															},
															"nativeSrc": "4560:133:6",
															"nodeType": "YulIf",
															"src": "4560:133:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "4477:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4508:1:6",
														"nodeType": "YulTypedName",
														"src": "4508:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4511:1:6",
														"nodeType": "YulTypedName",
														"src": "4511:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "4517:3:6",
														"nodeType": "YulTypedName",
														"src": "4517:3:6",
														"type": ""
													}
												],
												"src": "4477:222:6"
											},
											{
												"body": {
													"nativeSrc": "4805:76:6",
													"nodeType": "YulBlock",
													"src": "4805:76:6",
													"statements": [
														{
															"nativeSrc": "4815:26:6",
															"nodeType": "YulAssignment",
															"src": "4815:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4827:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4827:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4838:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4838:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4823:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4823:3:6"
																},
																"nativeSrc": "4823:18:6",
																"nodeType": "YulFunctionCall",
																"src": "4823:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4815:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4815:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4857:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4857:9:6"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "4868:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4868:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4850:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4850:6:6"
																},
																"nativeSrc": "4850:25:6",
																"nodeType": "YulFunctionCall",
																"src": "4850:25:6"
															},
															"nativeSrc": "4850:25:6",
															"nodeType": "YulExpressionStatement",
															"src": "4850:25:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "4704:177:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4774:9:6",
														"nodeType": "YulTypedName",
														"src": "4774:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4785:6:6",
														"nodeType": "YulTypedName",
														"src": "4785:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4796:4:6",
														"nodeType": "YulTypedName",
														"src": "4796:4:6",
														"type": ""
													}
												],
												"src": "4704:177:6"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := mload(offset)\n        if gt(length, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 0x1f), not(31)), 63), not(31)))\n        if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, length)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            mstore(add(add(memPtr, i), 0x20), mload(add(add(offset, i), 0x20)))\n        }\n        mstore(add(add(memPtr, length), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let offset := mload(headStart)\n        if gt(offset, sub(shl(64, 1), 1)) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, sub(shl(64, 1), 1)) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n        value2 := mload(add(headStart, 64))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405260405161134d38038061134d8339810160408190526100229161025f565b828260036100308382610359565b50600461003d8282610359565b50505061005661005161006860201b60201c565b61006c565b61006033826100be565b50505061043e565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0382166101185760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b806002600082825461012a9190610417565b90915550506001600160a01b03821660009081526020819052604081208054839290610157908490610417565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b505050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126101cd57600080fd5b81516001600160401b038111156101e6576101e66101a6565b604051601f8201601f19908116603f011681016001600160401b0381118282101715610214576102146101a6565b60405281815283820160200185101561022c57600080fd5b60005b8281101561024b5760208186018101518383018201520161022f565b506000918101602001919091529392505050565b60008060006060848603121561027457600080fd5b83516001600160401b0381111561028a57600080fd5b610296868287016101bc565b602086015190945090506001600160401b038111156102b457600080fd5b6102c0868287016101bc565b925050604084015190509250925092565b600181811c908216806102e557607f821691505b60208210810361030557634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156101a157806000526020600020601f840160051c810160208510156103325750805b601f840160051c820191505b81811015610352576000815560010161033e565b5050505050565b81516001600160401b03811115610372576103726101a6565b6103868161038084546102d1565b8461030b565b6020601f8211600181146103ba57600083156103a25750848201515b600019600385901b1c1916600184901b178455610352565b600084815260208120601f198516915b828110156103ea57878501518255602094850194600190920191016103ca565b50848210156104085786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b8082018082111561043857634e487b7160e01b600052601160045260246000fd5b92915050565b610f008061044d6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c8063715018a611610097578063a457c2d711610066578063a457c2d714610205578063a9059cbb14610218578063dd62ed3e1461022b578063f2fde38b1461027157600080fd5b8063715018a6146101b85780638da5cb5b146101c257806394bf804d146101ea57806395d89b41146101fd57600080fd5b806323b872dd116100d357806323b872dd1461014d578063313ce56714610160578063395093511461016f57806370a082311461018257600080fd5b806306fdde03146100fa578063095ea7b31461011857806318160ddd1461013b575b600080fd5b610102610284565b60405161010f9190610cc9565b60405180910390f35b61012b610126366004610d5e565b610316565b604051901515815260200161010f565b6002545b60405190815260200161010f565b61012b61015b366004610d88565b610330565b6040516012815260200161010f565b61012b61017d366004610d5e565b610354565b61013f610190366004610dc5565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b6101c06103a0565b005b60055460405173ffffffffffffffffffffffffffffffffffffffff909116815260200161010f565b6101c06101f8366004610de7565b6103b4565b6101026103ca565b61012b610213366004610d5e565b6103d9565b61012b610226366004610d5e565b6104af565b61013f610239366004610e13565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b6101c061027f366004610dc5565b6104bd565b60606003805461029390610e3d565b80601f01602080910402602001604051908101604052809291908181526020018280546102bf90610e3d565b801561030c5780601f106102e15761010080835404028352916020019161030c565b820191906000526020600020905b8154815290600101906020018083116102ef57829003601f168201915b5050505050905090565b600033610324818585610574565b60019150505b92915050565b60003361033e858285610727565b6103498585856107fe565b506001949350505050565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff87168452909152812054909190610324908290869061039b908790610e90565b610574565b6103a8610ab1565b6103b26000610b32565b565b6103bc610ab1565b6103c68183610ba9565b5050565b60606004805461029390610e3d565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff87168452909152812054909190838110156104a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f00000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6103498286868403610574565b6000336103248185856107fe565b6104c5610ab1565b73ffffffffffffffffffffffffffffffffffffffff8116610568576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610499565b61057181610b32565b50565b73ffffffffffffffffffffffffffffffffffffffff8316610616576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152608401610499565b73ffffffffffffffffffffffffffffffffffffffff82166106b9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152608401610499565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff8381166000908152600160209081526040808320938616835292905220547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107f857818110156107eb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610499565b6107f88484848403610574565b50505050565b73ffffffffffffffffffffffffffffffffffffffff83166108a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152608401610499565b73ffffffffffffffffffffffffffffffffffffffff8216610944576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f65737300000000000000000000000000000000000000000000000000000000006064820152608401610499565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260208190526040902054818110156109fa576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e636500000000000000000000000000000000000000000000000000006064820152608401610499565b73ffffffffffffffffffffffffffffffffffffffff808516600090815260208190526040808220858503905591851681529081208054849290610a3e908490610e90565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610aa491815260200190565b60405180910390a36107f8565b60055473ffffffffffffffffffffffffffffffffffffffff1633146103b2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610499565b6005805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b73ffffffffffffffffffffffffffffffffffffffff8216610c26576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610499565b8060026000828254610c389190610e90565b909155505073ffffffffffffffffffffffffffffffffffffffff821660009081526020819052604081208054839290610c72908490610e90565b909155505060405181815273ffffffffffffffffffffffffffffffffffffffff8316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b602081526000825180602084015260005b81811015610cf75760208186018101516040868401015201610cda565b5060006040828501015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011684010191505092915050565b803573ffffffffffffffffffffffffffffffffffffffff81168114610d5957600080fd5b919050565b60008060408385031215610d7157600080fd5b610d7a83610d35565b946020939093013593505050565b600080600060608486031215610d9d57600080fd5b610da684610d35565b9250610db460208501610d35565b929592945050506040919091013590565b600060208284031215610dd757600080fd5b610de082610d35565b9392505050565b60008060408385031215610dfa57600080fd5b82359150610e0a60208401610d35565b90509250929050565b60008060408385031215610e2657600080fd5b610e2f83610d35565b9150610e0a60208401610d35565b600181811c90821680610e5157607f821691505b602082108103610e8a577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b8082018082111561032a577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea26469706673582212207dcbdb53e8ac3c556a88362276b015fb0ed42716854840cfe5816ff65c57ed1364736f6c634300081b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x134D CODESIZE SUB DUP1 PUSH2 0x134D DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x22 SWAP2 PUSH2 0x25F JUMP JUMPDEST DUP3 DUP3 PUSH1 0x3 PUSH2 0x30 DUP4 DUP3 PUSH2 0x359 JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0x3D DUP3 DUP3 PUSH2 0x359 JUMP JUMPDEST POP POP POP PUSH2 0x56 PUSH2 0x51 PUSH2 0x68 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x6C JUMP JUMPDEST PUSH2 0x60 CALLER DUP3 PUSH2 0xBE JUMP JUMPDEST POP POP POP PUSH2 0x43E JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x118 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x12A SWAP2 SWAP1 PUSH2 0x417 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x157 SWAP1 DUP5 SWAP1 PUSH2 0x417 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1E6 JUMPI PUSH2 0x1E6 PUSH2 0x1A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x214 JUMPI PUSH2 0x214 PUSH2 0x1A6 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP4 DUP3 ADD PUSH1 0x20 ADD DUP6 LT ISZERO PUSH2 0x22C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x24B JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP4 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x22F JUMP JUMPDEST POP PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x274 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x28A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x296 DUP7 DUP3 DUP8 ADD PUSH2 0x1BC JUMP JUMPDEST PUSH1 0x20 DUP7 ADD MLOAD SWAP1 SWAP5 POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C0 DUP7 DUP3 DUP8 ADD PUSH2 0x1BC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD MLOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x2E5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x305 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1A1 JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x332 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x352 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x33E JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x372 JUMPI PUSH2 0x372 PUSH2 0x1A6 JUMP JUMPDEST PUSH2 0x386 DUP2 PUSH2 0x380 DUP5 SLOAD PUSH2 0x2D1 JUMP JUMPDEST DUP5 PUSH2 0x30B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x3BA JUMPI PUSH1 0x0 DUP4 ISZERO PUSH2 0x3A2 JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x352 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x3EA JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x3CA JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x408 JUMPI DUP7 DUP5 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x438 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF00 DUP1 PUSH2 0x44D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x218 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x271 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1B8 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1C2 JUMPI DUP1 PUSH4 0x94BF804D EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x14D JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x160 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x182 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x13B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x102 PUSH2 0x284 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10F SWAP2 SWAP1 PUSH2 0xCC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12B PUSH2 0x126 CALLDATASIZE PUSH1 0x4 PUSH2 0xD5E JUMP JUMPDEST PUSH2 0x316 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10F JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10F JUMP JUMPDEST PUSH2 0x12B PUSH2 0x15B CALLDATASIZE PUSH1 0x4 PUSH2 0xD88 JUMP JUMPDEST PUSH2 0x330 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10F JUMP JUMPDEST PUSH2 0x12B PUSH2 0x17D CALLDATASIZE PUSH1 0x4 PUSH2 0xD5E JUMP JUMPDEST PUSH2 0x354 JUMP JUMPDEST PUSH2 0x13F PUSH2 0x190 CALLDATASIZE PUSH1 0x4 PUSH2 0xDC5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1C0 PUSH2 0x3A0 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10F JUMP JUMPDEST PUSH2 0x1C0 PUSH2 0x1F8 CALLDATASIZE PUSH1 0x4 PUSH2 0xDE7 JUMP JUMPDEST PUSH2 0x3B4 JUMP JUMPDEST PUSH2 0x102 PUSH2 0x3CA JUMP JUMPDEST PUSH2 0x12B PUSH2 0x213 CALLDATASIZE PUSH1 0x4 PUSH2 0xD5E JUMP JUMPDEST PUSH2 0x3D9 JUMP JUMPDEST PUSH2 0x12B PUSH2 0x226 CALLDATASIZE PUSH1 0x4 PUSH2 0xD5E JUMP JUMPDEST PUSH2 0x4AF JUMP JUMPDEST PUSH2 0x13F PUSH2 0x239 CALLDATASIZE PUSH1 0x4 PUSH2 0xE13 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1C0 PUSH2 0x27F CALLDATASIZE PUSH1 0x4 PUSH2 0xDC5 JUMP JUMPDEST PUSH2 0x4BD JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x293 SWAP1 PUSH2 0xE3D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2BF SWAP1 PUSH2 0xE3D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x30C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2E1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x30C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2EF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x324 DUP2 DUP6 DUP6 PUSH2 0x574 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x33E DUP6 DUP3 DUP6 PUSH2 0x727 JUMP JUMPDEST PUSH2 0x349 DUP6 DUP6 DUP6 PUSH2 0x7FE JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x324 SWAP1 DUP3 SWAP1 DUP7 SWAP1 PUSH2 0x39B SWAP1 DUP8 SWAP1 PUSH2 0xE90 JUMP JUMPDEST PUSH2 0x574 JUMP JUMPDEST PUSH2 0x3A8 PUSH2 0xAB1 JUMP JUMPDEST PUSH2 0x3B2 PUSH1 0x0 PUSH2 0xB32 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x3BC PUSH2 0xAB1 JUMP JUMPDEST PUSH2 0x3C6 DUP2 DUP4 PUSH2 0xBA9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x293 SWAP1 PUSH2 0xE3D JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 DUP4 DUP2 LT ISZERO PUSH2 0x4A2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x349 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x574 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x324 DUP2 DUP6 DUP6 PUSH2 0x7FE JUMP JUMPDEST PUSH2 0x4C5 PUSH2 0xAB1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x568 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x499 JUMP JUMPDEST PUSH2 0x571 DUP2 PUSH2 0xB32 JUMP JUMPDEST POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH2 0x616 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x499 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x6B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x499 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x7F8 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7EB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x499 JUMP JUMPDEST PUSH2 0x7F8 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x574 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH2 0x8A1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x499 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x944 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x499 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x9FA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x499 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xA3E SWAP1 DUP5 SWAP1 PUSH2 0xE90 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xAA4 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x7F8 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x3B2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x499 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0xC26 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x499 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xC38 SWAP2 SWAP1 PUSH2 0xE90 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xC72 SWAP1 DUP5 SWAP1 PUSH2 0xE90 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xCF7 JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD PUSH1 0x40 DUP7 DUP5 ADD ADD MSTORE ADD PUSH2 0xCDA JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xD59 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD7A DUP4 PUSH2 0xD35 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xD9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDA6 DUP5 PUSH2 0xD35 JUMP JUMPDEST SWAP3 POP PUSH2 0xDB4 PUSH1 0x20 DUP6 ADD PUSH2 0xD35 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDD7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDE0 DUP3 PUSH2 0xD35 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDFA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0xE0A PUSH1 0x20 DUP5 ADD PUSH2 0xD35 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE26 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE2F DUP4 PUSH2 0xD35 JUMP JUMPDEST SWAP2 POP PUSH2 0xE0A PUSH1 0x20 DUP5 ADD PUSH2 0xD35 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xE51 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xE8A JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x32A JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH30 0xCBDB53E8AC3C556A88362276B015FB0ED42716854840CFE5816FF65C57ED SGT PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ",
							"sourceMap": "1946:610:0:-:0;;;2116:184;;;;;;;;;;;;;;;;;;:::i;:::-;2237:4;2243:6;3319:5:2;:13;2237:4:0;3319:5:2;:13;:::i;:::-;-1:-1:-1;3342:7:2;:17;3352:7;3342;:17;:::i;:::-;;3253:113;;2211:32:1;2230:12;:10;;;:12;;:::i;:::-;2211:18;:32::i;:::-;2261::0::1;2267:10;2279:13:::0;2261:5:::1;:32::i;:::-;2116:184:::0;;;1946:610;;1915:96:5;1994:10;;1915:96::o;3708:187:1:-;3800:6;;;-1:-1:-1;;;;;3816:17:1;;;-1:-1:-1;;;;;;3816:17:1;;;;;;;3848:40;;3800:6;;;3816:17;3800:6;;3848:40;;3781:16;;3848:40;3771:124;3708:187;:::o;9677:389:2:-;-1:-1:-1;;;;;9760:21:2;;9752:65;;;;-1:-1:-1;;;9752:65:2;;4319:2:6;9752:65:2;;;4301:21:6;4358:2;4338:18;;;4331:30;4397:33;4377:18;;;4370:61;4448:18;;9752:65:2;;;;;;;;9904:6;9888:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;9920:18:2;;:9;:18;;;;;;;;;;:28;;9942:6;;9920:9;:28;;9942:6;;9920:28;:::i;:::-;;;;-1:-1:-1;;9963:37:2;;4850:25:6;;;-1:-1:-1;;;;;9963:37:2;;;9980:1;;9963:37;;4838:2:6;4823:18;9963:37:2;;;;;;;9677:389;;:::o;13061:121::-;;;;:::o;14:127:6:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:834;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;298:13;;-1:-1:-1;;;;;323:30:6;;320:56;;;356:18;;:::i;:::-;405:2;399:9;497:2;459:17;;-1:-1:-1;;455:31:6;;;488:2;451:40;447:54;435:67;;-1:-1:-1;;;;;517:34:6;;553:22;;;514:62;511:88;;;579:18;;:::i;:::-;615:2;608:22;639;;;680:19;;;701:4;676:30;673:39;-1:-1:-1;670:59:6;;;725:1;722;715:12;670:59;747:1;757:143;771:6;768:1;765:13;757:143;;;883:4;867:14;;;863:25;;857:32;834:14;;;830:25;;823:67;786:12;757:143;;;-1:-1:-1;948:1:6;920:19;;;941:4;916:30;909:41;;;;924:6;146:834;-1:-1:-1;;;146:834:6:o;985:618::-;1093:6;1101;1109;1162:2;1150:9;1141:7;1137:23;1133:32;1130:52;;;1178:1;1175;1168:12;1130:52;1205:16;;-1:-1:-1;;;;;1233:30:6;;1230:50;;;1276:1;1273;1266:12;1230:50;1299:61;1352:7;1343:6;1332:9;1328:22;1299:61;:::i;:::-;1406:2;1391:18;;1385:25;1289:71;;-1:-1:-1;1385:25:6;-1:-1:-1;;;;;;1422:32:6;;1419:52;;;1467:1;1464;1457:12;1419:52;1490:63;1545:7;1534:8;1523:9;1519:24;1490:63;:::i;:::-;1480:73;;;1593:2;1582:9;1578:18;1572:25;1562:35;;985:618;;;;;:::o;1608:380::-;1687:1;1683:12;;;;1730;;;1751:61;;1805:4;1797:6;1793:17;1783:27;;1751:61;1858:2;1850:6;1847:14;1827:18;1824:38;1821:161;;1904:10;1899:3;1895:20;1892:1;1885:31;1939:4;1936:1;1929:15;1967:4;1964:1;1957:15;1821:161;;1608:380;;;:::o;2119:518::-;2221:2;2216:3;2213:11;2210:421;;;2257:5;2254:1;2247:16;2301:4;2298:1;2288:18;2371:2;2359:10;2355:19;2352:1;2348:27;2342:4;2338:38;2407:4;2395:10;2392:20;2389:47;;;-1:-1:-1;2430:4:6;2389:47;2485:2;2480:3;2476:12;2473:1;2469:20;2463:4;2459:31;2449:41;;2540:81;2558:2;2551:5;2548:13;2540:81;;;2617:1;2603:16;;2584:1;2573:13;2540:81;;;2544:3;;2119:518;;;:::o;2813:1299::-;2933:10;;-1:-1:-1;;;;;2955:30:6;;2952:56;;;2988:18;;:::i;:::-;3017:97;3107:6;3067:38;3099:4;3093:11;3067:38;:::i;:::-;3061:4;3017:97;:::i;:::-;3163:4;3194:2;3183:14;;3211:1;3206:649;;;;3899:1;3916:6;3913:89;;;-1:-1:-1;3968:19:6;;;3962:26;3913:89;-1:-1:-1;;2770:1:6;2766:11;;;2762:24;2758:29;2748:40;2794:1;2790:11;;;2745:57;4015:81;;3176:930;;3206:649;2066:1;2059:14;;;2103:4;2090:18;;-1:-1:-1;;3242:20:6;;;3360:222;3374:7;3371:1;3368:14;3360:222;;;3456:19;;;3450:26;3435:42;;3563:4;3548:20;;;;3516:1;3504:14;;;;3390:12;3360:222;;;3364:3;3610:6;3601:7;3598:19;3595:201;;;3671:19;;;3665:26;-1:-1:-1;;3754:1:6;3750:14;;;3766:3;3746:24;3742:37;3738:42;3723:58;3708:74;;3595:201;-1:-1:-1;;;;3842:1:6;3826:14;;;3822:22;3809:36;;-1:-1:-1;2813:1299:6:o;4477:222::-;4542:9;;;4563:10;;;4560:133;;;4615:10;4610:3;4606:20;4603:1;4596:31;4650:4;4647:1;4640:15;4678:4;4675:1;4668:15;4560:133;4477:222;;;;:::o;4704:177::-;1946:610:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_744": {
									"entryPoint": null,
									"id": 744,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_679": {
									"entryPoint": 1396,
									"id": 679,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_733": {
									"entryPoint": null,
									"id": 733,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_checkOwner_101": {
									"entryPoint": 2737,
									"id": 101,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_562": {
									"entryPoint": 2985,
									"id": 562,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_860": {
									"entryPoint": null,
									"id": 860,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_722": {
									"entryPoint": 1831,
									"id": 722,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_158": {
									"entryPoint": 2866,
									"id": 158,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_506": {
									"entryPoint": 2046,
									"id": 506,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_301": {
									"entryPoint": null,
									"id": 301,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_326": {
									"entryPoint": 790,
									"id": 326,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_258": {
									"entryPoint": null,
									"id": 258,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_234": {
									"entryPoint": null,
									"id": 234,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_429": {
									"entryPoint": 985,
									"id": 429,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_388": {
									"entryPoint": 852,
									"id": 388,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mint_45": {
									"entryPoint": 948,
									"id": 45,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_214": {
									"entryPoint": 644,
									"id": 214,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_87": {
									"entryPoint": null,
									"id": 87,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_115": {
									"entryPoint": 928,
									"id": 115,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_224": {
									"entryPoint": 970,
									"id": 224,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_244": {
									"entryPoint": null,
									"id": 244,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_359": {
									"entryPoint": 816,
									"id": 359,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_138": {
									"entryPoint": 1213,
									"id": 138,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_283": {
									"entryPoint": 1199,
									"id": 283,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 3381,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3525,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3603,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3464,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3422,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_address": {
									"entryPoint": 3559,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3273,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3728,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 3645,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:7685:6",
										"nodeType": "YulBlock",
										"src": "0:7685:6",
										"statements": [
											{
												"nativeSrc": "6:3:6",
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "135:465:6",
													"nodeType": "YulBlock",
													"src": "135:465:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "152:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "152:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "163:2:6",
																		"nodeType": "YulLiteral",
																		"src": "163:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "145:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "145:6:6"
																},
																"nativeSrc": "145:21:6",
																"nodeType": "YulFunctionCall",
																"src": "145:21:6"
															},
															"nativeSrc": "145:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "145:21:6"
														},
														{
															"nativeSrc": "175:27:6",
															"nodeType": "YulVariableDeclaration",
															"src": "175:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "195:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "195:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "189:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "189:5:6"
																},
																"nativeSrc": "189:13:6",
																"nodeType": "YulFunctionCall",
																"src": "189:13:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "179:6:6",
																	"nodeType": "YulTypedName",
																	"src": "179:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "222:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "222:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "233:2:6",
																				"nodeType": "YulLiteral",
																				"src": "233:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "218:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "218:3:6"
																		},
																		"nativeSrc": "218:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "218:18:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "238:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "238:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "211:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "211:6:6"
																},
																"nativeSrc": "211:34:6",
																"nodeType": "YulFunctionCall",
																"src": "211:34:6"
															},
															"nativeSrc": "211:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "211:34:6"
														},
														{
															"nativeSrc": "254:10:6",
															"nodeType": "YulVariableDeclaration",
															"src": "254:10:6",
															"value": {
																"kind": "number",
																"nativeSrc": "263:1:6",
																"nodeType": "YulLiteral",
																"src": "263:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "258:1:6",
																	"nodeType": "YulTypedName",
																	"src": "258:1:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "323:90:6",
																"nodeType": "YulBlock",
																"src": "323:90:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nativeSrc": "352:9:6",
																									"nodeType": "YulIdentifier",
																									"src": "352:9:6"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "363:1:6",
																									"nodeType": "YulIdentifier",
																									"src": "363:1:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "348:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "348:3:6"
																							},
																							"nativeSrc": "348:17:6",
																							"nodeType": "YulFunctionCall",
																							"src": "348:17:6"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "367:2:6",
																							"nodeType": "YulLiteral",
																							"src": "367:2:6",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "344:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "344:3:6"
																					},
																					"nativeSrc": "344:26:6",
																					"nodeType": "YulFunctionCall",
																					"src": "344:26:6"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nativeSrc": "386:6:6",
																											"nodeType": "YulIdentifier",
																											"src": "386:6:6"
																										},
																										{
																											"name": "i",
																											"nativeSrc": "394:1:6",
																											"nodeType": "YulIdentifier",
																											"src": "394:1:6"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nativeSrc": "382:3:6",
																										"nodeType": "YulIdentifier",
																										"src": "382:3:6"
																									},
																									"nativeSrc": "382:14:6",
																									"nodeType": "YulFunctionCall",
																									"src": "382:14:6"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "398:2:6",
																									"nodeType": "YulLiteral",
																									"src": "398:2:6",
																									"type": "",
																									"value": "32"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "378:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "378:3:6"
																							},
																							"nativeSrc": "378:23:6",
																							"nodeType": "YulFunctionCall",
																							"src": "378:23:6"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "372:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "372:5:6"
																					},
																					"nativeSrc": "372:30:6",
																					"nodeType": "YulFunctionCall",
																					"src": "372:30:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "337:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "337:6:6"
																			},
																			"nativeSrc": "337:66:6",
																			"nodeType": "YulFunctionCall",
																			"src": "337:66:6"
																		},
																		"nativeSrc": "337:66:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "337:66:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "284:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "284:1:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "287:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "287:6:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "281:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "281:2:6"
																},
																"nativeSrc": "281:13:6",
																"nodeType": "YulFunctionCall",
																"src": "281:13:6"
															},
															"nativeSrc": "273:140:6",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "295:19:6",
																"nodeType": "YulBlock",
																"src": "295:19:6",
																"statements": [
																	{
																		"nativeSrc": "297:15:6",
																		"nodeType": "YulAssignment",
																		"src": "297:15:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "306:1:6",
																					"nodeType": "YulIdentifier",
																					"src": "306:1:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "309:2:6",
																					"nodeType": "YulLiteral",
																					"src": "309:2:6",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "302:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "302:3:6"
																			},
																			"nativeSrc": "302:10:6",
																			"nodeType": "YulFunctionCall",
																			"src": "302:10:6"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "297:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "297:1:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "277:3:6",
																"nodeType": "YulBlock",
																"src": "277:3:6",
																"statements": []
															},
															"src": "273:140:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "437:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "437:9:6"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "448:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "448:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "433:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "433:3:6"
																				},
																				"nativeSrc": "433:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "433:22:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "457:2:6",
																				"nodeType": "YulLiteral",
																				"src": "457:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "429:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "429:3:6"
																		},
																		"nativeSrc": "429:31:6",
																		"nodeType": "YulFunctionCall",
																		"src": "429:31:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "462:1:6",
																		"nodeType": "YulLiteral",
																		"src": "462:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "422:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "422:6:6"
																},
																"nativeSrc": "422:42:6",
																"nodeType": "YulFunctionCall",
																"src": "422:42:6"
															},
															"nativeSrc": "422:42:6",
															"nodeType": "YulExpressionStatement",
															"src": "422:42:6"
														},
														{
															"nativeSrc": "473:121:6",
															"nodeType": "YulAssignment",
															"src": "473:121:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "489:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "489:9:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "508:6:6",
																								"nodeType": "YulIdentifier",
																								"src": "508:6:6"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "516:2:6",
																								"nodeType": "YulLiteral",
																								"src": "516:2:6",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "504:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "504:3:6"
																						},
																						"nativeSrc": "504:15:6",
																						"nodeType": "YulFunctionCall",
																						"src": "504:15:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "521:66:6",
																						"nodeType": "YulLiteral",
																						"src": "521:66:6",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "500:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "500:3:6"
																				},
																				"nativeSrc": "500:88:6",
																				"nodeType": "YulFunctionCall",
																				"src": "500:88:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "485:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "485:3:6"
																		},
																		"nativeSrc": "485:104:6",
																		"nodeType": "YulFunctionCall",
																		"src": "485:104:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "591:2:6",
																		"nodeType": "YulLiteral",
																		"src": "591:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "481:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:6"
																},
																"nativeSrc": "481:113:6",
																"nodeType": "YulFunctionCall",
																"src": "481:113:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "473:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14:586:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "104:9:6",
														"nodeType": "YulTypedName",
														"src": "104:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "115:6:6",
														"nodeType": "YulTypedName",
														"src": "115:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "126:4:6",
														"nodeType": "YulTypedName",
														"src": "126:4:6",
														"type": ""
													}
												],
												"src": "14:586:6"
											},
											{
												"body": {
													"nativeSrc": "654:147:6",
													"nodeType": "YulBlock",
													"src": "654:147:6",
													"statements": [
														{
															"nativeSrc": "664:29:6",
															"nodeType": "YulAssignment",
															"src": "664:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "686:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "686:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "673:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "673:12:6"
																},
																"nativeSrc": "673:20:6",
																"nodeType": "YulFunctionCall",
																"src": "673:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "664:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "664:5:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "779:16:6",
																"nodeType": "YulBlock",
																"src": "779:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "788:1:6",
																					"nodeType": "YulLiteral",
																					"src": "788:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "791:1:6",
																					"nodeType": "YulLiteral",
																					"src": "791:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "781:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "781:6:6"
																			},
																			"nativeSrc": "781:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "781:12:6"
																		},
																		"nativeSrc": "781:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "781:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "715:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "715:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "726:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "726:5:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "733:42:6",
																						"nodeType": "YulLiteral",
																						"src": "733:42:6",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "722:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "722:3:6"
																				},
																				"nativeSrc": "722:54:6",
																				"nodeType": "YulFunctionCall",
																				"src": "722:54:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "712:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "712:2:6"
																		},
																		"nativeSrc": "712:65:6",
																		"nodeType": "YulFunctionCall",
																		"src": "712:65:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "705:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "705:6:6"
																},
																"nativeSrc": "705:73:6",
																"nodeType": "YulFunctionCall",
																"src": "705:73:6"
															},
															"nativeSrc": "702:93:6",
															"nodeType": "YulIf",
															"src": "702:93:6"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "605:196:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "633:6:6",
														"nodeType": "YulTypedName",
														"src": "633:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "644:5:6",
														"nodeType": "YulTypedName",
														"src": "644:5:6",
														"type": ""
													}
												],
												"src": "605:196:6"
											},
											{
												"body": {
													"nativeSrc": "893:213:6",
													"nodeType": "YulBlock",
													"src": "893:213:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "939:16:6",
																"nodeType": "YulBlock",
																"src": "939:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "948:1:6",
																					"nodeType": "YulLiteral",
																					"src": "948:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "951:1:6",
																					"nodeType": "YulLiteral",
																					"src": "951:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "941:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "941:6:6"
																			},
																			"nativeSrc": "941:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "941:12:6"
																		},
																		"nativeSrc": "941:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "941:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "914:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "914:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "923:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "923:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "910:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "910:3:6"
																		},
																		"nativeSrc": "910:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "910:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "935:2:6",
																		"nodeType": "YulLiteral",
																		"src": "935:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "906:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "906:3:6"
																},
																"nativeSrc": "906:32:6",
																"nodeType": "YulFunctionCall",
																"src": "906:32:6"
															},
															"nativeSrc": "903:52:6",
															"nodeType": "YulIf",
															"src": "903:52:6"
														},
														{
															"nativeSrc": "964:39:6",
															"nodeType": "YulAssignment",
															"src": "964:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "993:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "993:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "974:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "974:18:6"
																},
																"nativeSrc": "974:29:6",
																"nodeType": "YulFunctionCall",
																"src": "974:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "964:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "964:6:6"
																}
															]
														},
														{
															"nativeSrc": "1012:14:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1012:14:6",
															"value": {
																"kind": "number",
																"nativeSrc": "1025:1:6",
																"nodeType": "YulLiteral",
																"src": "1025:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1016:5:6",
																	"nodeType": "YulTypedName",
																	"src": "1016:5:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1035:41:6",
															"nodeType": "YulAssignment",
															"src": "1035:41:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1061:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1061:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1072:2:6",
																				"nodeType": "YulLiteral",
																				"src": "1072:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1057:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1057:3:6"
																		},
																		"nativeSrc": "1057:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1057:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1044:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "1044:12:6"
																},
																"nativeSrc": "1044:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1044:32:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1035:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1035:5:6"
																}
															]
														},
														{
															"nativeSrc": "1085:15:6",
															"nodeType": "YulAssignment",
															"src": "1085:15:6",
															"value": {
																"name": "value",
																"nativeSrc": "1095:5:6",
																"nodeType": "YulIdentifier",
																"src": "1095:5:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1085:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1085:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "806:300:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "851:9:6",
														"nodeType": "YulTypedName",
														"src": "851:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "862:7:6",
														"nodeType": "YulTypedName",
														"src": "862:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "874:6:6",
														"nodeType": "YulTypedName",
														"src": "874:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "882:6:6",
														"nodeType": "YulTypedName",
														"src": "882:6:6",
														"type": ""
													}
												],
												"src": "806:300:6"
											},
											{
												"body": {
													"nativeSrc": "1206:92:6",
													"nodeType": "YulBlock",
													"src": "1206:92:6",
													"statements": [
														{
															"nativeSrc": "1216:26:6",
															"nodeType": "YulAssignment",
															"src": "1216:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1228:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1228:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1239:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1239:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1224:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1224:3:6"
																},
																"nativeSrc": "1224:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1224:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1216:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1216:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1258:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1258:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1283:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1283:6:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1276:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "1276:6:6"
																				},
																				"nativeSrc": "1276:14:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1276:14:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1269:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1269:6:6"
																		},
																		"nativeSrc": "1269:22:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1269:22:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1251:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1251:6:6"
																},
																"nativeSrc": "1251:41:6",
																"nodeType": "YulFunctionCall",
																"src": "1251:41:6"
															},
															"nativeSrc": "1251:41:6",
															"nodeType": "YulExpressionStatement",
															"src": "1251:41:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1111:187:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1175:9:6",
														"nodeType": "YulTypedName",
														"src": "1175:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1186:6:6",
														"nodeType": "YulTypedName",
														"src": "1186:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1197:4:6",
														"nodeType": "YulTypedName",
														"src": "1197:4:6",
														"type": ""
													}
												],
												"src": "1111:187:6"
											},
											{
												"body": {
													"nativeSrc": "1404:76:6",
													"nodeType": "YulBlock",
													"src": "1404:76:6",
													"statements": [
														{
															"nativeSrc": "1414:26:6",
															"nodeType": "YulAssignment",
															"src": "1414:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1426:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1426:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1437:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1437:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1422:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1422:3:6"
																},
																"nativeSrc": "1422:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1422:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1414:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1414:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1456:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1456:9:6"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1467:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1467:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1449:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1449:6:6"
																},
																"nativeSrc": "1449:25:6",
																"nodeType": "YulFunctionCall",
																"src": "1449:25:6"
															},
															"nativeSrc": "1449:25:6",
															"nodeType": "YulExpressionStatement",
															"src": "1449:25:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1303:177:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1373:9:6",
														"nodeType": "YulTypedName",
														"src": "1373:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1384:6:6",
														"nodeType": "YulTypedName",
														"src": "1384:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1395:4:6",
														"nodeType": "YulTypedName",
														"src": "1395:4:6",
														"type": ""
													}
												],
												"src": "1303:177:6"
											},
											{
												"body": {
													"nativeSrc": "1589:270:6",
													"nodeType": "YulBlock",
													"src": "1589:270:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1635:16:6",
																"nodeType": "YulBlock",
																"src": "1635:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1644:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1644:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1647:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1647:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1637:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1637:6:6"
																			},
																			"nativeSrc": "1637:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1637:12:6"
																		},
																		"nativeSrc": "1637:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1637:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1610:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1610:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1619:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1619:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1606:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1606:3:6"
																		},
																		"nativeSrc": "1606:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1606:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1631:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1631:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1602:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1602:3:6"
																},
																"nativeSrc": "1602:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1602:32:6"
															},
															"nativeSrc": "1599:52:6",
															"nodeType": "YulIf",
															"src": "1599:52:6"
														},
														{
															"nativeSrc": "1660:39:6",
															"nodeType": "YulAssignment",
															"src": "1660:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1689:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1689:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1670:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "1670:18:6"
																},
																"nativeSrc": "1670:29:6",
																"nodeType": "YulFunctionCall",
																"src": "1670:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1660:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1660:6:6"
																}
															]
														},
														{
															"nativeSrc": "1708:48:6",
															"nodeType": "YulAssignment",
															"src": "1708:48:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1741:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1741:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1752:2:6",
																				"nodeType": "YulLiteral",
																				"src": "1752:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1737:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1737:3:6"
																		},
																		"nativeSrc": "1737:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1737:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1718:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "1718:18:6"
																},
																"nativeSrc": "1718:38:6",
																"nodeType": "YulFunctionCall",
																"src": "1718:38:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1708:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1708:6:6"
																}
															]
														},
														{
															"nativeSrc": "1765:14:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1765:14:6",
															"value": {
																"kind": "number",
																"nativeSrc": "1778:1:6",
																"nodeType": "YulLiteral",
																"src": "1778:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1769:5:6",
																	"nodeType": "YulTypedName",
																	"src": "1769:5:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1788:41:6",
															"nodeType": "YulAssignment",
															"src": "1788:41:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1814:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1814:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1825:2:6",
																				"nodeType": "YulLiteral",
																				"src": "1825:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1810:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1810:3:6"
																		},
																		"nativeSrc": "1810:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1810:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1797:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "1797:12:6"
																},
																"nativeSrc": "1797:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1797:32:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1788:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1788:5:6"
																}
															]
														},
														{
															"nativeSrc": "1838:15:6",
															"nodeType": "YulAssignment",
															"src": "1838:15:6",
															"value": {
																"name": "value",
																"nativeSrc": "1848:5:6",
																"nodeType": "YulIdentifier",
																"src": "1848:5:6"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1838:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1838:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1485:374:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1539:9:6",
														"nodeType": "YulTypedName",
														"src": "1539:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1550:7:6",
														"nodeType": "YulTypedName",
														"src": "1550:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1562:6:6",
														"nodeType": "YulTypedName",
														"src": "1562:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1570:6:6",
														"nodeType": "YulTypedName",
														"src": "1570:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1578:6:6",
														"nodeType": "YulTypedName",
														"src": "1578:6:6",
														"type": ""
													}
												],
												"src": "1485:374:6"
											},
											{
												"body": {
													"nativeSrc": "1961:87:6",
													"nodeType": "YulBlock",
													"src": "1961:87:6",
													"statements": [
														{
															"nativeSrc": "1971:26:6",
															"nodeType": "YulAssignment",
															"src": "1971:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1983:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1983:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1994:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1994:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1979:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1979:3:6"
																},
																"nativeSrc": "1979:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1979:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1971:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1971:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2013:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2013:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2028:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2028:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2036:4:6",
																				"nodeType": "YulLiteral",
																				"src": "2036:4:6",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2024:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2024:3:6"
																		},
																		"nativeSrc": "2024:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2024:17:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2006:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2006:6:6"
																},
																"nativeSrc": "2006:36:6",
																"nodeType": "YulFunctionCall",
																"src": "2006:36:6"
															},
															"nativeSrc": "2006:36:6",
															"nodeType": "YulExpressionStatement",
															"src": "2006:36:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "1864:184:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1930:9:6",
														"nodeType": "YulTypedName",
														"src": "1930:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1941:6:6",
														"nodeType": "YulTypedName",
														"src": "1941:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1952:4:6",
														"nodeType": "YulTypedName",
														"src": "1952:4:6",
														"type": ""
													}
												],
												"src": "1864:184:6"
											},
											{
												"body": {
													"nativeSrc": "2123:116:6",
													"nodeType": "YulBlock",
													"src": "2123:116:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2169:16:6",
																"nodeType": "YulBlock",
																"src": "2169:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2178:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2178:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2181:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2181:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2171:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2171:6:6"
																			},
																			"nativeSrc": "2171:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2171:12:6"
																		},
																		"nativeSrc": "2171:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2171:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2144:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2144:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2153:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2153:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2140:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2140:3:6"
																		},
																		"nativeSrc": "2140:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2140:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2165:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2165:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2136:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2136:3:6"
																},
																"nativeSrc": "2136:32:6",
																"nodeType": "YulFunctionCall",
																"src": "2136:32:6"
															},
															"nativeSrc": "2133:52:6",
															"nodeType": "YulIf",
															"src": "2133:52:6"
														},
														{
															"nativeSrc": "2194:39:6",
															"nodeType": "YulAssignment",
															"src": "2194:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2223:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2223:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2204:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "2204:18:6"
																},
																"nativeSrc": "2204:29:6",
																"nodeType": "YulFunctionCall",
																"src": "2204:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2194:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2194:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2053:186:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2089:9:6",
														"nodeType": "YulTypedName",
														"src": "2089:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2100:7:6",
														"nodeType": "YulTypedName",
														"src": "2100:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2112:6:6",
														"nodeType": "YulTypedName",
														"src": "2112:6:6",
														"type": ""
													}
												],
												"src": "2053:186:6"
											},
											{
												"body": {
													"nativeSrc": "2345:125:6",
													"nodeType": "YulBlock",
													"src": "2345:125:6",
													"statements": [
														{
															"nativeSrc": "2355:26:6",
															"nodeType": "YulAssignment",
															"src": "2355:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2367:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2367:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2378:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2378:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2363:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2363:3:6"
																},
																"nativeSrc": "2363:18:6",
																"nodeType": "YulFunctionCall",
																"src": "2363:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2355:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2355:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2397:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2397:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2412:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2412:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2420:42:6",
																				"nodeType": "YulLiteral",
																				"src": "2420:42:6",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2408:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2408:3:6"
																		},
																		"nativeSrc": "2408:55:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2408:55:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2390:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2390:6:6"
																},
																"nativeSrc": "2390:74:6",
																"nodeType": "YulFunctionCall",
																"src": "2390:74:6"
															},
															"nativeSrc": "2390:74:6",
															"nodeType": "YulExpressionStatement",
															"src": "2390:74:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2244:226:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2314:9:6",
														"nodeType": "YulTypedName",
														"src": "2314:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2325:6:6",
														"nodeType": "YulTypedName",
														"src": "2325:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2336:4:6",
														"nodeType": "YulTypedName",
														"src": "2336:4:6",
														"type": ""
													}
												],
												"src": "2244:226:6"
											},
											{
												"body": {
													"nativeSrc": "2562:213:6",
													"nodeType": "YulBlock",
													"src": "2562:213:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2608:16:6",
																"nodeType": "YulBlock",
																"src": "2608:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2617:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2617:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2620:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2620:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2610:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2610:6:6"
																			},
																			"nativeSrc": "2610:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2610:12:6"
																		},
																		"nativeSrc": "2610:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2610:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2583:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2583:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2592:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2592:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2579:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2579:3:6"
																		},
																		"nativeSrc": "2579:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2579:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2604:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2604:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2575:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2575:3:6"
																},
																"nativeSrc": "2575:32:6",
																"nodeType": "YulFunctionCall",
																"src": "2575:32:6"
															},
															"nativeSrc": "2572:52:6",
															"nodeType": "YulIf",
															"src": "2572:52:6"
														},
														{
															"nativeSrc": "2633:14:6",
															"nodeType": "YulVariableDeclaration",
															"src": "2633:14:6",
															"value": {
																"kind": "number",
																"nativeSrc": "2646:1:6",
																"nodeType": "YulLiteral",
																"src": "2646:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2637:5:6",
																	"nodeType": "YulTypedName",
																	"src": "2637:5:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2656:32:6",
															"nodeType": "YulAssignment",
															"src": "2656:32:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2678:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2678:9:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2665:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "2665:12:6"
																},
																"nativeSrc": "2665:23:6",
																"nodeType": "YulFunctionCall",
																"src": "2665:23:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2656:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2656:5:6"
																}
															]
														},
														{
															"nativeSrc": "2697:15:6",
															"nodeType": "YulAssignment",
															"src": "2697:15:6",
															"value": {
																"name": "value",
																"nativeSrc": "2707:5:6",
																"nodeType": "YulIdentifier",
																"src": "2707:5:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2697:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2697:6:6"
																}
															]
														},
														{
															"nativeSrc": "2721:48:6",
															"nodeType": "YulAssignment",
															"src": "2721:48:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2754:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2754:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2765:2:6",
																				"nodeType": "YulLiteral",
																				"src": "2765:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2750:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2750:3:6"
																		},
																		"nativeSrc": "2750:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2750:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2731:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "2731:18:6"
																},
																"nativeSrc": "2731:38:6",
																"nodeType": "YulFunctionCall",
																"src": "2731:38:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2721:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2721:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_address",
												"nativeSrc": "2475:300:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2520:9:6",
														"nodeType": "YulTypedName",
														"src": "2520:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2531:7:6",
														"nodeType": "YulTypedName",
														"src": "2531:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2543:6:6",
														"nodeType": "YulTypedName",
														"src": "2543:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2551:6:6",
														"nodeType": "YulTypedName",
														"src": "2551:6:6",
														"type": ""
													}
												],
												"src": "2475:300:6"
											},
											{
												"body": {
													"nativeSrc": "2867:173:6",
													"nodeType": "YulBlock",
													"src": "2867:173:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2913:16:6",
																"nodeType": "YulBlock",
																"src": "2913:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2922:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2922:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2925:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2925:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2915:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2915:6:6"
																			},
																			"nativeSrc": "2915:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2915:12:6"
																		},
																		"nativeSrc": "2915:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2915:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2888:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2888:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2897:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2897:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2884:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2884:3:6"
																		},
																		"nativeSrc": "2884:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2884:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2909:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2909:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2880:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2880:3:6"
																},
																"nativeSrc": "2880:32:6",
																"nodeType": "YulFunctionCall",
																"src": "2880:32:6"
															},
															"nativeSrc": "2877:52:6",
															"nodeType": "YulIf",
															"src": "2877:52:6"
														},
														{
															"nativeSrc": "2938:39:6",
															"nodeType": "YulAssignment",
															"src": "2938:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2967:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2967:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2948:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "2948:18:6"
																},
																"nativeSrc": "2948:29:6",
																"nodeType": "YulFunctionCall",
																"src": "2948:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2938:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2938:6:6"
																}
															]
														},
														{
															"nativeSrc": "2986:48:6",
															"nodeType": "YulAssignment",
															"src": "2986:48:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3019:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3019:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3030:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3030:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3015:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3015:3:6"
																		},
																		"nativeSrc": "3015:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3015:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2996:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "2996:18:6"
																},
																"nativeSrc": "2996:38:6",
																"nodeType": "YulFunctionCall",
																"src": "2996:38:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2986:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2986:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "2780:260:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2825:9:6",
														"nodeType": "YulTypedName",
														"src": "2825:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2836:7:6",
														"nodeType": "YulTypedName",
														"src": "2836:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2848:6:6",
														"nodeType": "YulTypedName",
														"src": "2848:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2856:6:6",
														"nodeType": "YulTypedName",
														"src": "2856:6:6",
														"type": ""
													}
												],
												"src": "2780:260:6"
											},
											{
												"body": {
													"nativeSrc": "3100:382:6",
													"nodeType": "YulBlock",
													"src": "3100:382:6",
													"statements": [
														{
															"nativeSrc": "3110:22:6",
															"nodeType": "YulAssignment",
															"src": "3110:22:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3124:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3124:1:6",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "3127:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "3127:4:6"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3120:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3120:3:6"
																},
																"nativeSrc": "3120:12:6",
																"nodeType": "YulFunctionCall",
																"src": "3120:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "3110:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3110:6:6"
																}
															]
														},
														{
															"nativeSrc": "3141:38:6",
															"nodeType": "YulVariableDeclaration",
															"src": "3141:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3171:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "3171:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3177:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3177:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3167:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3167:3:6"
																},
																"nativeSrc": "3167:12:6",
																"nodeType": "YulFunctionCall",
																"src": "3167:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "3145:18:6",
																	"nodeType": "YulTypedName",
																	"src": "3145:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3218:31:6",
																"nodeType": "YulBlock",
																"src": "3218:31:6",
																"statements": [
																	{
																		"nativeSrc": "3220:27:6",
																		"nodeType": "YulAssignment",
																		"src": "3220:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "3234:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "3234:6:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3242:4:6",
																					"nodeType": "YulLiteral",
																					"src": "3242:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "3230:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "3230:3:6"
																			},
																			"nativeSrc": "3230:17:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3230:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "3220:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3220:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "3198:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "3198:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3191:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3191:6:6"
																},
																"nativeSrc": "3191:26:6",
																"nodeType": "YulFunctionCall",
																"src": "3191:26:6"
															},
															"nativeSrc": "3188:61:6",
															"nodeType": "YulIf",
															"src": "3188:61:6"
														},
														{
															"body": {
																"nativeSrc": "3308:168:6",
																"nodeType": "YulBlock",
																"src": "3308:168:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3329:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3329:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3332:77:6",
																					"nodeType": "YulLiteral",
																					"src": "3332:77:6",
																					"type": "",
																					"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3322:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3322:6:6"
																			},
																			"nativeSrc": "3322:88:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3322:88:6"
																		},
																		"nativeSrc": "3322:88:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3322:88:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3430:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3430:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3433:4:6",
																					"nodeType": "YulLiteral",
																					"src": "3433:4:6",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3423:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3423:6:6"
																			},
																			"nativeSrc": "3423:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3423:15:6"
																		},
																		"nativeSrc": "3423:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3423:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3458:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3458:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3461:4:6",
																					"nodeType": "YulLiteral",
																					"src": "3461:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3451:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3451:6:6"
																			},
																			"nativeSrc": "3451:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3451:15:6"
																		},
																		"nativeSrc": "3451:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3451:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "3264:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "3264:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "3287:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3287:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3295:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3295:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "3284:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "3284:2:6"
																		},
																		"nativeSrc": "3284:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3284:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "3261:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "3261:2:6"
																},
																"nativeSrc": "3261:38:6",
																"nodeType": "YulFunctionCall",
																"src": "3261:38:6"
															},
															"nativeSrc": "3258:218:6",
															"nodeType": "YulIf",
															"src": "3258:218:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "3045:437:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3080:4:6",
														"nodeType": "YulTypedName",
														"src": "3080:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "3089:6:6",
														"nodeType": "YulTypedName",
														"src": "3089:6:6",
														"type": ""
													}
												],
												"src": "3045:437:6"
											},
											{
												"body": {
													"nativeSrc": "3535:231:6",
													"nodeType": "YulBlock",
													"src": "3535:231:6",
													"statements": [
														{
															"nativeSrc": "3545:16:6",
															"nodeType": "YulAssignment",
															"src": "3545:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3556:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "3556:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3559:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "3559:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3552:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3552:3:6"
																},
																"nativeSrc": "3552:9:6",
																"nodeType": "YulFunctionCall",
																"src": "3552:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "3545:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3545:3:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3592:168:6",
																"nodeType": "YulBlock",
																"src": "3592:168:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3613:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3613:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3616:77:6",
																					"nodeType": "YulLiteral",
																					"src": "3616:77:6",
																					"type": "",
																					"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3606:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3606:6:6"
																			},
																			"nativeSrc": "3606:88:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3606:88:6"
																		},
																		"nativeSrc": "3606:88:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3606:88:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3714:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3714:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3717:4:6",
																					"nodeType": "YulLiteral",
																					"src": "3717:4:6",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3707:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3707:6:6"
																			},
																			"nativeSrc": "3707:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3707:15:6"
																		},
																		"nativeSrc": "3707:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3707:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3742:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3742:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3745:4:6",
																					"nodeType": "YulLiteral",
																					"src": "3745:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3735:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3735:6:6"
																			},
																			"nativeSrc": "3735:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3735:15:6"
																		},
																		"nativeSrc": "3735:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3735:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3576:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "3576:1:6"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "3579:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3579:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3573:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "3573:2:6"
																},
																"nativeSrc": "3573:10:6",
																"nodeType": "YulFunctionCall",
																"src": "3573:10:6"
															},
															"nativeSrc": "3570:190:6",
															"nodeType": "YulIf",
															"src": "3570:190:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "3487:279:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3518:1:6",
														"nodeType": "YulTypedName",
														"src": "3518:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3521:1:6",
														"nodeType": "YulTypedName",
														"src": "3521:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "3527:3:6",
														"nodeType": "YulTypedName",
														"src": "3527:3:6",
														"type": ""
													}
												],
												"src": "3487:279:6"
											},
											{
												"body": {
													"nativeSrc": "3945:227:6",
													"nodeType": "YulBlock",
													"src": "3945:227:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3962:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3962:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3973:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3973:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3955:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3955:6:6"
																},
																"nativeSrc": "3955:21:6",
																"nodeType": "YulFunctionCall",
																"src": "3955:21:6"
															},
															"nativeSrc": "3955:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "3955:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3996:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3996:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4007:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4007:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3992:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3992:3:6"
																		},
																		"nativeSrc": "3992:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3992:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4012:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4012:2:6",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3985:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3985:6:6"
																},
																"nativeSrc": "3985:30:6",
																"nodeType": "YulFunctionCall",
																"src": "3985:30:6"
															},
															"nativeSrc": "3985:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "3985:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4035:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4035:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4046:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4046:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4031:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4031:3:6"
																		},
																		"nativeSrc": "4031:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4031:18:6"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nativeSrc": "4051:34:6",
																		"nodeType": "YulLiteral",
																		"src": "4051:34:6",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4024:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4024:6:6"
																},
																"nativeSrc": "4024:62:6",
																"nodeType": "YulFunctionCall",
																"src": "4024:62:6"
															},
															"nativeSrc": "4024:62:6",
															"nodeType": "YulExpressionStatement",
															"src": "4024:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4106:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4106:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4117:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4117:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4102:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4102:3:6"
																		},
																		"nativeSrc": "4102:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4102:18:6"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nativeSrc": "4122:7:6",
																		"nodeType": "YulLiteral",
																		"src": "4122:7:6",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4095:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4095:6:6"
																},
																"nativeSrc": "4095:35:6",
																"nodeType": "YulFunctionCall",
																"src": "4095:35:6"
															},
															"nativeSrc": "4095:35:6",
															"nodeType": "YulExpressionStatement",
															"src": "4095:35:6"
														},
														{
															"nativeSrc": "4139:27:6",
															"nodeType": "YulAssignment",
															"src": "4139:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4151:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4151:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4162:3:6",
																		"nodeType": "YulLiteral",
																		"src": "4162:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4147:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4147:3:6"
																},
																"nativeSrc": "4147:19:6",
																"nodeType": "YulFunctionCall",
																"src": "4147:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4139:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4139:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3771:401:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3922:9:6",
														"nodeType": "YulTypedName",
														"src": "3922:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3936:4:6",
														"nodeType": "YulTypedName",
														"src": "3936:4:6",
														"type": ""
													}
												],
												"src": "3771:401:6"
											},
											{
												"body": {
													"nativeSrc": "4351:228:6",
													"nodeType": "YulBlock",
													"src": "4351:228:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4368:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4368:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4379:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4379:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4361:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4361:6:6"
																},
																"nativeSrc": "4361:21:6",
																"nodeType": "YulFunctionCall",
																"src": "4361:21:6"
															},
															"nativeSrc": "4361:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "4361:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4402:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4402:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4413:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4413:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4398:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4398:3:6"
																		},
																		"nativeSrc": "4398:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4398:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4418:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4418:2:6",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4391:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4391:6:6"
																},
																"nativeSrc": "4391:30:6",
																"nodeType": "YulFunctionCall",
																"src": "4391:30:6"
															},
															"nativeSrc": "4391:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "4391:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4441:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4441:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4452:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4452:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4437:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4437:3:6"
																		},
																		"nativeSrc": "4437:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4437:18:6"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nativeSrc": "4457:34:6",
																		"nodeType": "YulLiteral",
																		"src": "4457:34:6",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4430:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4430:6:6"
																},
																"nativeSrc": "4430:62:6",
																"nodeType": "YulFunctionCall",
																"src": "4430:62:6"
															},
															"nativeSrc": "4430:62:6",
															"nodeType": "YulExpressionStatement",
															"src": "4430:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4512:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4512:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4523:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4523:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4508:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4508:3:6"
																		},
																		"nativeSrc": "4508:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4508:18:6"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nativeSrc": "4528:8:6",
																		"nodeType": "YulLiteral",
																		"src": "4528:8:6",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4501:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4501:6:6"
																},
																"nativeSrc": "4501:36:6",
																"nodeType": "YulFunctionCall",
																"src": "4501:36:6"
															},
															"nativeSrc": "4501:36:6",
															"nodeType": "YulExpressionStatement",
															"src": "4501:36:6"
														},
														{
															"nativeSrc": "4546:27:6",
															"nodeType": "YulAssignment",
															"src": "4546:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4558:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4558:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4569:3:6",
																		"nodeType": "YulLiteral",
																		"src": "4569:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4554:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4554:3:6"
																},
																"nativeSrc": "4554:19:6",
																"nodeType": "YulFunctionCall",
																"src": "4554:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4546:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4546:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4177:402:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4328:9:6",
														"nodeType": "YulTypedName",
														"src": "4328:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4342:4:6",
														"nodeType": "YulTypedName",
														"src": "4342:4:6",
														"type": ""
													}
												],
												"src": "4177:402:6"
											},
											{
												"body": {
													"nativeSrc": "4758:226:6",
													"nodeType": "YulBlock",
													"src": "4758:226:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4775:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4775:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4786:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4786:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4768:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4768:6:6"
																},
																"nativeSrc": "4768:21:6",
																"nodeType": "YulFunctionCall",
																"src": "4768:21:6"
															},
															"nativeSrc": "4768:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "4768:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4809:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4809:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4820:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4820:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4805:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4805:3:6"
																		},
																		"nativeSrc": "4805:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4805:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4825:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4825:2:6",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4798:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4798:6:6"
																},
																"nativeSrc": "4798:30:6",
																"nodeType": "YulFunctionCall",
																"src": "4798:30:6"
															},
															"nativeSrc": "4798:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "4798:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4848:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4848:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4859:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4859:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4844:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4844:3:6"
																		},
																		"nativeSrc": "4844:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4844:18:6"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nativeSrc": "4864:34:6",
																		"nodeType": "YulLiteral",
																		"src": "4864:34:6",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4837:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4837:6:6"
																},
																"nativeSrc": "4837:62:6",
																"nodeType": "YulFunctionCall",
																"src": "4837:62:6"
															},
															"nativeSrc": "4837:62:6",
															"nodeType": "YulExpressionStatement",
															"src": "4837:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4919:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4919:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4930:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4930:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4915:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4915:3:6"
																		},
																		"nativeSrc": "4915:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4915:18:6"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nativeSrc": "4935:6:6",
																		"nodeType": "YulLiteral",
																		"src": "4935:6:6",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4908:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4908:6:6"
																},
																"nativeSrc": "4908:34:6",
																"nodeType": "YulFunctionCall",
																"src": "4908:34:6"
															},
															"nativeSrc": "4908:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "4908:34:6"
														},
														{
															"nativeSrc": "4951:27:6",
															"nodeType": "YulAssignment",
															"src": "4951:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4963:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4963:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4974:3:6",
																		"nodeType": "YulLiteral",
																		"src": "4974:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4959:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4959:3:6"
																},
																"nativeSrc": "4959:19:6",
																"nodeType": "YulFunctionCall",
																"src": "4959:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4951:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4951:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4584:400:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4735:9:6",
														"nodeType": "YulTypedName",
														"src": "4735:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4749:4:6",
														"nodeType": "YulTypedName",
														"src": "4749:4:6",
														"type": ""
													}
												],
												"src": "4584:400:6"
											},
											{
												"body": {
													"nativeSrc": "5163:224:6",
													"nodeType": "YulBlock",
													"src": "5163:224:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5180:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5180:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5191:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5191:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5173:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5173:6:6"
																},
																"nativeSrc": "5173:21:6",
																"nodeType": "YulFunctionCall",
																"src": "5173:21:6"
															},
															"nativeSrc": "5173:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "5173:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5214:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5214:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5225:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5225:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5210:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5210:3:6"
																		},
																		"nativeSrc": "5210:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5210:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5230:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5230:2:6",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5203:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5203:6:6"
																},
																"nativeSrc": "5203:30:6",
																"nodeType": "YulFunctionCall",
																"src": "5203:30:6"
															},
															"nativeSrc": "5203:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "5203:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5253:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5253:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5264:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5264:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5249:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5249:3:6"
																		},
																		"nativeSrc": "5249:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5249:18:6"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nativeSrc": "5269:34:6",
																		"nodeType": "YulLiteral",
																		"src": "5269:34:6",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5242:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5242:6:6"
																},
																"nativeSrc": "5242:62:6",
																"nodeType": "YulFunctionCall",
																"src": "5242:62:6"
															},
															"nativeSrc": "5242:62:6",
															"nodeType": "YulExpressionStatement",
															"src": "5242:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5324:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5324:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5335:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5335:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5320:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5320:3:6"
																		},
																		"nativeSrc": "5320:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5320:18:6"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nativeSrc": "5340:4:6",
																		"nodeType": "YulLiteral",
																		"src": "5340:4:6",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5313:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5313:6:6"
																},
																"nativeSrc": "5313:32:6",
																"nodeType": "YulFunctionCall",
																"src": "5313:32:6"
															},
															"nativeSrc": "5313:32:6",
															"nodeType": "YulExpressionStatement",
															"src": "5313:32:6"
														},
														{
															"nativeSrc": "5354:27:6",
															"nodeType": "YulAssignment",
															"src": "5354:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5366:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5366:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5377:3:6",
																		"nodeType": "YulLiteral",
																		"src": "5377:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5362:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5362:3:6"
																},
																"nativeSrc": "5362:19:6",
																"nodeType": "YulFunctionCall",
																"src": "5362:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5354:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5354:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4989:398:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5140:9:6",
														"nodeType": "YulTypedName",
														"src": "5140:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5154:4:6",
														"nodeType": "YulTypedName",
														"src": "5154:4:6",
														"type": ""
													}
												],
												"src": "4989:398:6"
											},
											{
												"body": {
													"nativeSrc": "5566:179:6",
													"nodeType": "YulBlock",
													"src": "5566:179:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5583:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5583:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5594:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5594:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5576:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5576:6:6"
																},
																"nativeSrc": "5576:21:6",
																"nodeType": "YulFunctionCall",
																"src": "5576:21:6"
															},
															"nativeSrc": "5576:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "5576:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5617:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5617:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5628:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5628:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5613:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5613:3:6"
																		},
																		"nativeSrc": "5613:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5613:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5633:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5633:2:6",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5606:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5606:6:6"
																},
																"nativeSrc": "5606:30:6",
																"nodeType": "YulFunctionCall",
																"src": "5606:30:6"
															},
															"nativeSrc": "5606:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "5606:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5656:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5656:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5667:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5667:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5652:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5652:3:6"
																		},
																		"nativeSrc": "5652:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5652:18:6"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nativeSrc": "5672:31:6",
																		"nodeType": "YulLiteral",
																		"src": "5672:31:6",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5645:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5645:6:6"
																},
																"nativeSrc": "5645:59:6",
																"nodeType": "YulFunctionCall",
																"src": "5645:59:6"
															},
															"nativeSrc": "5645:59:6",
															"nodeType": "YulExpressionStatement",
															"src": "5645:59:6"
														},
														{
															"nativeSrc": "5713:26:6",
															"nodeType": "YulAssignment",
															"src": "5713:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5725:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5725:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5736:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5736:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5721:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5721:3:6"
																},
																"nativeSrc": "5721:18:6",
																"nodeType": "YulFunctionCall",
																"src": "5721:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5713:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5713:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5392:353:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5543:9:6",
														"nodeType": "YulTypedName",
														"src": "5543:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5557:4:6",
														"nodeType": "YulTypedName",
														"src": "5557:4:6",
														"type": ""
													}
												],
												"src": "5392:353:6"
											},
											{
												"body": {
													"nativeSrc": "5924:227:6",
													"nodeType": "YulBlock",
													"src": "5924:227:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5941:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5941:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5952:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5952:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5934:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5934:6:6"
																},
																"nativeSrc": "5934:21:6",
																"nodeType": "YulFunctionCall",
																"src": "5934:21:6"
															},
															"nativeSrc": "5934:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "5934:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5975:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5975:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5986:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5986:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5971:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5971:3:6"
																		},
																		"nativeSrc": "5971:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5971:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5991:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5991:2:6",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5964:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5964:6:6"
																},
																"nativeSrc": "5964:30:6",
																"nodeType": "YulFunctionCall",
																"src": "5964:30:6"
															},
															"nativeSrc": "5964:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "5964:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6014:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6014:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6025:2:6",
																				"nodeType": "YulLiteral",
																				"src": "6025:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6010:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6010:3:6"
																		},
																		"nativeSrc": "6010:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6010:18:6"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nativeSrc": "6030:34:6",
																		"nodeType": "YulLiteral",
																		"src": "6030:34:6",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6003:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6003:6:6"
																},
																"nativeSrc": "6003:62:6",
																"nodeType": "YulFunctionCall",
																"src": "6003:62:6"
															},
															"nativeSrc": "6003:62:6",
															"nodeType": "YulExpressionStatement",
															"src": "6003:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6085:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6085:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6096:2:6",
																				"nodeType": "YulLiteral",
																				"src": "6096:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6081:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6081:3:6"
																		},
																		"nativeSrc": "6081:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6081:18:6"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nativeSrc": "6101:7:6",
																		"nodeType": "YulLiteral",
																		"src": "6101:7:6",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6074:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6074:6:6"
																},
																"nativeSrc": "6074:35:6",
																"nodeType": "YulFunctionCall",
																"src": "6074:35:6"
															},
															"nativeSrc": "6074:35:6",
															"nodeType": "YulExpressionStatement",
															"src": "6074:35:6"
														},
														{
															"nativeSrc": "6118:27:6",
															"nodeType": "YulAssignment",
															"src": "6118:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6130:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "6130:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6141:3:6",
																		"nodeType": "YulLiteral",
																		"src": "6141:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6126:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6126:3:6"
																},
																"nativeSrc": "6126:19:6",
																"nodeType": "YulFunctionCall",
																"src": "6126:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6118:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6118:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5750:401:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5901:9:6",
														"nodeType": "YulTypedName",
														"src": "5901:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5915:4:6",
														"nodeType": "YulTypedName",
														"src": "5915:4:6",
														"type": ""
													}
												],
												"src": "5750:401:6"
											},
											{
												"body": {
													"nativeSrc": "6330:225:6",
													"nodeType": "YulBlock",
													"src": "6330:225:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6347:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "6347:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6358:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6358:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6340:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6340:6:6"
																},
																"nativeSrc": "6340:21:6",
																"nodeType": "YulFunctionCall",
																"src": "6340:21:6"
															},
															"nativeSrc": "6340:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "6340:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6381:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6381:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6392:2:6",
																				"nodeType": "YulLiteral",
																				"src": "6392:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6377:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6377:3:6"
																		},
																		"nativeSrc": "6377:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6377:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6397:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6397:2:6",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6370:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6370:6:6"
																},
																"nativeSrc": "6370:30:6",
																"nodeType": "YulFunctionCall",
																"src": "6370:30:6"
															},
															"nativeSrc": "6370:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "6370:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6420:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6420:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6431:2:6",
																				"nodeType": "YulLiteral",
																				"src": "6431:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6416:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6416:3:6"
																		},
																		"nativeSrc": "6416:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6416:18:6"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nativeSrc": "6436:34:6",
																		"nodeType": "YulLiteral",
																		"src": "6436:34:6",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6409:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6409:6:6"
																},
																"nativeSrc": "6409:62:6",
																"nodeType": "YulFunctionCall",
																"src": "6409:62:6"
															},
															"nativeSrc": "6409:62:6",
															"nodeType": "YulExpressionStatement",
															"src": "6409:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6491:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6491:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6502:2:6",
																				"nodeType": "YulLiteral",
																				"src": "6502:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6487:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6487:3:6"
																		},
																		"nativeSrc": "6487:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6487:18:6"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nativeSrc": "6507:5:6",
																		"nodeType": "YulLiteral",
																		"src": "6507:5:6",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6480:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6480:6:6"
																},
																"nativeSrc": "6480:33:6",
																"nodeType": "YulFunctionCall",
																"src": "6480:33:6"
															},
															"nativeSrc": "6480:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "6480:33:6"
														},
														{
															"nativeSrc": "6522:27:6",
															"nodeType": "YulAssignment",
															"src": "6522:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6534:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "6534:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6545:3:6",
																		"nodeType": "YulLiteral",
																		"src": "6545:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6530:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6530:3:6"
																},
																"nativeSrc": "6530:19:6",
																"nodeType": "YulFunctionCall",
																"src": "6530:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6522:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6522:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6156:399:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6307:9:6",
														"nodeType": "YulTypedName",
														"src": "6307:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6321:4:6",
														"nodeType": "YulTypedName",
														"src": "6321:4:6",
														"type": ""
													}
												],
												"src": "6156:399:6"
											},
											{
												"body": {
													"nativeSrc": "6734:228:6",
													"nodeType": "YulBlock",
													"src": "6734:228:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6751:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "6751:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6762:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6762:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6744:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6744:6:6"
																},
																"nativeSrc": "6744:21:6",
																"nodeType": "YulFunctionCall",
																"src": "6744:21:6"
															},
															"nativeSrc": "6744:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "6744:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6785:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6785:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6796:2:6",
																				"nodeType": "YulLiteral",
																				"src": "6796:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6781:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6781:3:6"
																		},
																		"nativeSrc": "6781:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6781:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6801:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6801:2:6",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6774:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6774:6:6"
																},
																"nativeSrc": "6774:30:6",
																"nodeType": "YulFunctionCall",
																"src": "6774:30:6"
															},
															"nativeSrc": "6774:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "6774:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6824:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6824:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6835:2:6",
																				"nodeType": "YulLiteral",
																				"src": "6835:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6820:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6820:3:6"
																		},
																		"nativeSrc": "6820:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6820:18:6"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nativeSrc": "6840:34:6",
																		"nodeType": "YulLiteral",
																		"src": "6840:34:6",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6813:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6813:6:6"
																},
																"nativeSrc": "6813:62:6",
																"nodeType": "YulFunctionCall",
																"src": "6813:62:6"
															},
															"nativeSrc": "6813:62:6",
															"nodeType": "YulExpressionStatement",
															"src": "6813:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6895:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6895:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6906:2:6",
																				"nodeType": "YulLiteral",
																				"src": "6906:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6891:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6891:3:6"
																		},
																		"nativeSrc": "6891:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6891:18:6"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nativeSrc": "6911:8:6",
																		"nodeType": "YulLiteral",
																		"src": "6911:8:6",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6884:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6884:6:6"
																},
																"nativeSrc": "6884:36:6",
																"nodeType": "YulFunctionCall",
																"src": "6884:36:6"
															},
															"nativeSrc": "6884:36:6",
															"nodeType": "YulExpressionStatement",
															"src": "6884:36:6"
														},
														{
															"nativeSrc": "6929:27:6",
															"nodeType": "YulAssignment",
															"src": "6929:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6941:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "6941:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6952:3:6",
																		"nodeType": "YulLiteral",
																		"src": "6952:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6937:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6937:3:6"
																},
																"nativeSrc": "6937:19:6",
																"nodeType": "YulFunctionCall",
																"src": "6937:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6929:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6929:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6560:402:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6711:9:6",
														"nodeType": "YulTypedName",
														"src": "6711:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6725:4:6",
														"nodeType": "YulTypedName",
														"src": "6725:4:6",
														"type": ""
													}
												],
												"src": "6560:402:6"
											},
											{
												"body": {
													"nativeSrc": "7141:182:6",
													"nodeType": "YulBlock",
													"src": "7141:182:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7158:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "7158:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7169:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7169:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7151:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7151:6:6"
																},
																"nativeSrc": "7151:21:6",
																"nodeType": "YulFunctionCall",
																"src": "7151:21:6"
															},
															"nativeSrc": "7151:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "7151:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7192:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7192:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7203:2:6",
																				"nodeType": "YulLiteral",
																				"src": "7203:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7188:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7188:3:6"
																		},
																		"nativeSrc": "7188:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7188:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7208:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7208:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7181:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7181:6:6"
																},
																"nativeSrc": "7181:30:6",
																"nodeType": "YulFunctionCall",
																"src": "7181:30:6"
															},
															"nativeSrc": "7181:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "7181:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7231:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7231:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7242:2:6",
																				"nodeType": "YulLiteral",
																				"src": "7242:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7227:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7227:3:6"
																		},
																		"nativeSrc": "7227:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7227:18:6"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nativeSrc": "7247:34:6",
																		"nodeType": "YulLiteral",
																		"src": "7247:34:6",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7220:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7220:6:6"
																},
																"nativeSrc": "7220:62:6",
																"nodeType": "YulFunctionCall",
																"src": "7220:62:6"
															},
															"nativeSrc": "7220:62:6",
															"nodeType": "YulExpressionStatement",
															"src": "7220:62:6"
														},
														{
															"nativeSrc": "7291:26:6",
															"nodeType": "YulAssignment",
															"src": "7291:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7303:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "7303:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7314:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7314:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7299:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7299:3:6"
																},
																"nativeSrc": "7299:18:6",
																"nodeType": "YulFunctionCall",
																"src": "7299:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7291:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "7291:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6967:356:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7118:9:6",
														"nodeType": "YulTypedName",
														"src": "7118:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7132:4:6",
														"nodeType": "YulTypedName",
														"src": "7132:4:6",
														"type": ""
													}
												],
												"src": "6967:356:6"
											},
											{
												"body": {
													"nativeSrc": "7502:181:6",
													"nodeType": "YulBlock",
													"src": "7502:181:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7519:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "7519:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7530:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7530:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7512:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7512:6:6"
																},
																"nativeSrc": "7512:21:6",
																"nodeType": "YulFunctionCall",
																"src": "7512:21:6"
															},
															"nativeSrc": "7512:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "7512:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7553:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7553:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7564:2:6",
																				"nodeType": "YulLiteral",
																				"src": "7564:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7549:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7549:3:6"
																		},
																		"nativeSrc": "7549:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7549:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7569:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7569:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7542:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7542:6:6"
																},
																"nativeSrc": "7542:30:6",
																"nodeType": "YulFunctionCall",
																"src": "7542:30:6"
															},
															"nativeSrc": "7542:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "7542:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7592:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7592:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7603:2:6",
																				"nodeType": "YulLiteral",
																				"src": "7603:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7588:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7588:3:6"
																		},
																		"nativeSrc": "7588:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7588:18:6"
																	},
																	{
																		"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nativeSrc": "7608:33:6",
																		"nodeType": "YulLiteral",
																		"src": "7608:33:6",
																		"type": "",
																		"value": "ERC20: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7581:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7581:6:6"
																},
																"nativeSrc": "7581:61:6",
																"nodeType": "YulFunctionCall",
																"src": "7581:61:6"
															},
															"nativeSrc": "7581:61:6",
															"nodeType": "YulExpressionStatement",
															"src": "7581:61:6"
														},
														{
															"nativeSrc": "7651:26:6",
															"nodeType": "YulAssignment",
															"src": "7651:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7663:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "7663:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7674:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7674:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7659:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7659:3:6"
																},
																"nativeSrc": "7659:18:6",
																"nodeType": "YulFunctionCall",
																"src": "7659:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7651:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "7651:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7328:355:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7479:9:6",
														"nodeType": "YulTypedName",
														"src": "7479:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7493:4:6",
														"nodeType": "YulTypedName",
														"src": "7493:4:6",
														"type": ""
													}
												],
												"src": "7328:355:6"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), 32)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100f55760003560e01c8063715018a611610097578063a457c2d711610066578063a457c2d714610205578063a9059cbb14610218578063dd62ed3e1461022b578063f2fde38b1461027157600080fd5b8063715018a6146101b85780638da5cb5b146101c257806394bf804d146101ea57806395d89b41146101fd57600080fd5b806323b872dd116100d357806323b872dd1461014d578063313ce56714610160578063395093511461016f57806370a082311461018257600080fd5b806306fdde03146100fa578063095ea7b31461011857806318160ddd1461013b575b600080fd5b610102610284565b60405161010f9190610cc9565b60405180910390f35b61012b610126366004610d5e565b610316565b604051901515815260200161010f565b6002545b60405190815260200161010f565b61012b61015b366004610d88565b610330565b6040516012815260200161010f565b61012b61017d366004610d5e565b610354565b61013f610190366004610dc5565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b6101c06103a0565b005b60055460405173ffffffffffffffffffffffffffffffffffffffff909116815260200161010f565b6101c06101f8366004610de7565b6103b4565b6101026103ca565b61012b610213366004610d5e565b6103d9565b61012b610226366004610d5e565b6104af565b61013f610239366004610e13565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b6101c061027f366004610dc5565b6104bd565b60606003805461029390610e3d565b80601f01602080910402602001604051908101604052809291908181526020018280546102bf90610e3d565b801561030c5780601f106102e15761010080835404028352916020019161030c565b820191906000526020600020905b8154815290600101906020018083116102ef57829003601f168201915b5050505050905090565b600033610324818585610574565b60019150505b92915050565b60003361033e858285610727565b6103498585856107fe565b506001949350505050565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff87168452909152812054909190610324908290869061039b908790610e90565b610574565b6103a8610ab1565b6103b26000610b32565b565b6103bc610ab1565b6103c68183610ba9565b5050565b60606004805461029390610e3d565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff87168452909152812054909190838110156104a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f00000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6103498286868403610574565b6000336103248185856107fe565b6104c5610ab1565b73ffffffffffffffffffffffffffffffffffffffff8116610568576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610499565b61057181610b32565b50565b73ffffffffffffffffffffffffffffffffffffffff8316610616576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152608401610499565b73ffffffffffffffffffffffffffffffffffffffff82166106b9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152608401610499565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff8381166000908152600160209081526040808320938616835292905220547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107f857818110156107eb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610499565b6107f88484848403610574565b50505050565b73ffffffffffffffffffffffffffffffffffffffff83166108a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152608401610499565b73ffffffffffffffffffffffffffffffffffffffff8216610944576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f65737300000000000000000000000000000000000000000000000000000000006064820152608401610499565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260208190526040902054818110156109fa576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e636500000000000000000000000000000000000000000000000000006064820152608401610499565b73ffffffffffffffffffffffffffffffffffffffff808516600090815260208190526040808220858503905591851681529081208054849290610a3e908490610e90565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610aa491815260200190565b60405180910390a36107f8565b60055473ffffffffffffffffffffffffffffffffffffffff1633146103b2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610499565b6005805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b73ffffffffffffffffffffffffffffffffffffffff8216610c26576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610499565b8060026000828254610c389190610e90565b909155505073ffffffffffffffffffffffffffffffffffffffff821660009081526020819052604081208054839290610c72908490610e90565b909155505060405181815273ffffffffffffffffffffffffffffffffffffffff8316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b602081526000825180602084015260005b81811015610cf75760208186018101516040868401015201610cda565b5060006040828501015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011684010191505092915050565b803573ffffffffffffffffffffffffffffffffffffffff81168114610d5957600080fd5b919050565b60008060408385031215610d7157600080fd5b610d7a83610d35565b946020939093013593505050565b600080600060608486031215610d9d57600080fd5b610da684610d35565b9250610db460208501610d35565b929592945050506040919091013590565b600060208284031215610dd757600080fd5b610de082610d35565b9392505050565b60008060408385031215610dfa57600080fd5b82359150610e0a60208401610d35565b90509250929050565b60008060408385031215610e2657600080fd5b610e2f83610d35565b9150610e0a60208401610d35565b600181811c90821680610e5157607f821691505b602082108103610e8a577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b8082018082111561032a577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea26469706673582212207dcbdb53e8ac3c556a88362276b015fb0ed42716854840cfe5816ff65c57ed1364736f6c634300081b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x218 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x271 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1B8 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1C2 JUMPI DUP1 PUSH4 0x94BF804D EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x14D JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x160 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x182 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x13B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x102 PUSH2 0x284 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10F SWAP2 SWAP1 PUSH2 0xCC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12B PUSH2 0x126 CALLDATASIZE PUSH1 0x4 PUSH2 0xD5E JUMP JUMPDEST PUSH2 0x316 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10F JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10F JUMP JUMPDEST PUSH2 0x12B PUSH2 0x15B CALLDATASIZE PUSH1 0x4 PUSH2 0xD88 JUMP JUMPDEST PUSH2 0x330 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10F JUMP JUMPDEST PUSH2 0x12B PUSH2 0x17D CALLDATASIZE PUSH1 0x4 PUSH2 0xD5E JUMP JUMPDEST PUSH2 0x354 JUMP JUMPDEST PUSH2 0x13F PUSH2 0x190 CALLDATASIZE PUSH1 0x4 PUSH2 0xDC5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1C0 PUSH2 0x3A0 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10F JUMP JUMPDEST PUSH2 0x1C0 PUSH2 0x1F8 CALLDATASIZE PUSH1 0x4 PUSH2 0xDE7 JUMP JUMPDEST PUSH2 0x3B4 JUMP JUMPDEST PUSH2 0x102 PUSH2 0x3CA JUMP JUMPDEST PUSH2 0x12B PUSH2 0x213 CALLDATASIZE PUSH1 0x4 PUSH2 0xD5E JUMP JUMPDEST PUSH2 0x3D9 JUMP JUMPDEST PUSH2 0x12B PUSH2 0x226 CALLDATASIZE PUSH1 0x4 PUSH2 0xD5E JUMP JUMPDEST PUSH2 0x4AF JUMP JUMPDEST PUSH2 0x13F PUSH2 0x239 CALLDATASIZE PUSH1 0x4 PUSH2 0xE13 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1C0 PUSH2 0x27F CALLDATASIZE PUSH1 0x4 PUSH2 0xDC5 JUMP JUMPDEST PUSH2 0x4BD JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x293 SWAP1 PUSH2 0xE3D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2BF SWAP1 PUSH2 0xE3D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x30C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2E1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x30C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2EF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x324 DUP2 DUP6 DUP6 PUSH2 0x574 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x33E DUP6 DUP3 DUP6 PUSH2 0x727 JUMP JUMPDEST PUSH2 0x349 DUP6 DUP6 DUP6 PUSH2 0x7FE JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x324 SWAP1 DUP3 SWAP1 DUP7 SWAP1 PUSH2 0x39B SWAP1 DUP8 SWAP1 PUSH2 0xE90 JUMP JUMPDEST PUSH2 0x574 JUMP JUMPDEST PUSH2 0x3A8 PUSH2 0xAB1 JUMP JUMPDEST PUSH2 0x3B2 PUSH1 0x0 PUSH2 0xB32 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x3BC PUSH2 0xAB1 JUMP JUMPDEST PUSH2 0x3C6 DUP2 DUP4 PUSH2 0xBA9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x293 SWAP1 PUSH2 0xE3D JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 DUP4 DUP2 LT ISZERO PUSH2 0x4A2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x349 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x574 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x324 DUP2 DUP6 DUP6 PUSH2 0x7FE JUMP JUMPDEST PUSH2 0x4C5 PUSH2 0xAB1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x568 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x499 JUMP JUMPDEST PUSH2 0x571 DUP2 PUSH2 0xB32 JUMP JUMPDEST POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH2 0x616 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x499 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x6B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x499 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x7F8 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7EB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x499 JUMP JUMPDEST PUSH2 0x7F8 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x574 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH2 0x8A1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x499 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x944 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x499 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x9FA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x499 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xA3E SWAP1 DUP5 SWAP1 PUSH2 0xE90 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xAA4 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x7F8 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x3B2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x499 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0xC26 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x499 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xC38 SWAP2 SWAP1 PUSH2 0xE90 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xC72 SWAP1 DUP5 SWAP1 PUSH2 0xE90 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xCF7 JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD PUSH1 0x40 DUP7 DUP5 ADD ADD MSTORE ADD PUSH2 0xCDA JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xD59 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD7A DUP4 PUSH2 0xD35 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xD9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDA6 DUP5 PUSH2 0xD35 JUMP JUMPDEST SWAP3 POP PUSH2 0xDB4 PUSH1 0x20 DUP6 ADD PUSH2 0xD35 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDD7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDE0 DUP3 PUSH2 0xD35 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDFA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0xE0A PUSH1 0x20 DUP5 ADD PUSH2 0xD35 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE26 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE2F DUP4 PUSH2 0xD35 JUMP JUMPDEST SWAP2 POP PUSH2 0xE0A PUSH1 0x20 DUP5 ADD PUSH2 0xD35 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xE51 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xE8A JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x32A JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH30 0xCBDB53E8AC3C556A88362276B015FB0ED42716854840CFE5816FF65C57ED SGT PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ",
							"sourceMap": "1946:610:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3431:98:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5708:197;;;;;;:::i;:::-;;:::i;:::-;;;1276:14:6;;1269:22;1251:41;;1239:2;1224:18;5708:197:2;1111:187:6;4519:106:2;4606:12;;4519:106;;;1449:25:6;;;1437:2;1422:18;4519:106:2;1303:177:6;6467:286:2;;;;;;:::i;:::-;;:::i;4368:91::-;;;4450:2;2006:36:6;;1994:2;1979:18;4368:91:2;1864:184:6;7148:234:2;;;;;;:::i;:::-;;:::i;4683:125::-;;;;;;:::i;:::-;4783:18;;4757:7;4783:18;;;;;;;;;;;;4683:125;3106:101:1;;;:::i;:::-;;2476:85;2548:6;;2476:85;;2548:6;;;;2390:74:6;;2378:2;2363:18;2476:85:1;2244:226:6;2459:95:0;;;;;;:::i;:::-;;:::i;3642:102:2:-;;;:::i;7869:427::-;;;;;;:::i;:::-;;:::i;5004:189::-;;;;;;:::i;:::-;;:::i;5251:149::-;;;;;;:::i;:::-;5366:18;;;;5340:7;5366:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;5251:149;3356:198:1;;;;;;:::i;:::-;;:::i;3431:98:2:-;3485:13;3517:5;3510:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3431:98;:::o;5708:197::-;5791:4;1994:10:5;5845:32:2;1994:10:5;5861:7:2;5870:6;5845:8;:32::i;:::-;5894:4;5887:11;;;5708:197;;;;;:::o;6467:286::-;6594:4;1994:10:5;6650:38:2;6666:4;1994:10:5;6681:6:2;6650:15;:38::i;:::-;6698:27;6708:4;6714:2;6718:6;6698:9;:27::i;:::-;-1:-1:-1;6742:4:2;;6467:286;-1:-1:-1;;;;6467:286:2:o;7148:234::-;1994:10:5;7236:4:2;5366:18;;;:11;:18;;;;;;;;;:27;;;;;;;;;;7236:4;;1994:10:5;7290:64:2;;1994:10:5;;5366:27:2;;7315:38;;7343:10;;7315:38;:::i;:::-;7290:8;:64::i;3106:101:1:-;2369:13;:11;:13::i;:::-;3170:30:::1;3197:1;3170:18;:30::i;:::-;3106:101::o:0;2459:95:0:-;2369:13:1;:11;:13::i;:::-;2530:17:0::1;2536:2;2540:6;2530:5;:17::i;:::-;2459:95:::0;;:::o;3642:102:2:-;3698:13;3730:7;3723:14;;;;;:::i;7869:427::-;1994:10:5;7962:4:2;5366:18;;;:11;:18;;;;;;;;;:27;;;;;;;;;;7962:4;;1994:10:5;8106:15:2;8086:16;:35;;8078:85;;;;;;;3973:2:6;8078:85:2;;;3955:21:6;4012:2;3992:18;;;3985:30;4051:34;4031:18;;;4024:62;4122:7;4102:18;;;4095:35;4147:19;;8078:85:2;;;;;;;;;8197:60;8206:5;8213:7;8241:15;8222:16;:34;8197:8;:60::i;5004:189::-;5083:4;1994:10:5;5137:28:2;1994:10:5;5154:2:2;5158:6;5137:9;:28::i;3356:198:1:-;2369:13;:11;:13::i;:::-;3444:22:::1;::::0;::::1;3436:73;;;::::0;::::1;::::0;;4379:2:6;3436:73:1::1;::::0;::::1;4361:21:6::0;4418:2;4398:18;;;4391:30;4457:34;4437:18;;;4430:62;4528:8;4508:18;;;4501:36;4554:19;;3436:73:1::1;4177:402:6::0;3436:73:1::1;3519:28;3538:8;3519:18;:28::i;:::-;3356:198:::0;:::o;11385:370:2:-;11516:19;;;11508:68;;;;;;;4786:2:6;11508:68:2;;;4768:21:6;4825:2;4805:18;;;4798:30;4864:34;4844:18;;;4837:62;4935:6;4915:18;;;4908:34;4959:19;;11508:68:2;4584:400:6;11508:68:2;11594:21;;;11586:68;;;;;;;5191:2:6;11586:68:2;;;5173:21:6;5230:2;5210:18;;;5203:30;5269:34;5249:18;;;5242:62;5340:4;5320:18;;;5313:32;5362:19;;11586:68:2;4989:398:6;11586:68:2;11665:18;;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;11716:32;;1449:25:6;;;11716:32:2;;1422:18:6;11716:32:2;;;;;;;11385:370;;;:::o;12036:441::-;5366:18;;;;12166:24;5366:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;12252:17;12232:37;;12228:243;;12313:6;12293:16;:26;;12285:68;;;;;;;5594:2:6;12285:68:2;;;5576:21:6;5633:2;5613:18;;;5606:30;5672:31;5652:18;;;5645:59;5721:18;;12285:68:2;5392:353:6;12285:68:2;12395:51;12404:5;12411:7;12439:6;12420:16;:25;12395:8;:51::i;:::-;12156:321;12036:441;;;:::o;8750:651::-;8876:18;;;8868:68;;;;;;;5952:2:6;8868:68:2;;;5934:21:6;5991:2;5971:18;;;5964:30;6030:34;6010:18;;;6003:62;6101:7;6081:18;;;6074:35;6126:19;;8868:68:2;5750:401:6;8868:68:2;8954:16;;;8946:64;;;;;;;6358:2:6;8946:64:2;;;6340:21:6;6397:2;6377:18;;;6370:30;6436:34;6416:18;;;6409:62;6507:5;6487:18;;;6480:33;6530:19;;8946:64:2;6156:399:6;8946:64:2;9092:15;;;9070:19;9092:15;;;;;;;;;;;9125:21;;;;9117:72;;;;;;;6762:2:6;9117:72:2;;;6744:21:6;6801:2;6781:18;;;6774:30;6840:34;6820:18;;;6813:62;6911:8;6891:18;;;6884:36;6937:19;;9117:72:2;6560:402:6;9117:72:2;9223:15;;;;:9;:15;;;;;;;;;;;9241:20;;;9223:38;;9281:13;;;;;;;;:23;;9255:6;;9223:9;9281:23;;9255:6;;9281:23;:::i;:::-;;;;;;;;9335:2;9320:26;;9329:4;9320:26;;;9339:6;9320:26;;;;1449:25:6;;1437:2;1422:18;;1303:177;9320:26:2;;;;;;;;9357:37;13061:121;2634:130:1;2548:6;;2697:23;2548:6;1994:10:5;2697:23:1;2689:68;;;;;;;7169:2:6;2689:68:1;;;7151:21:6;;;7188:18;;;7181:30;7247:34;7227:18;;;7220:62;7299:18;;2689:68:1;6967:356:6;3708:187:1;3800:6;;;;3816:17;;;;;;;;;;;3848:40;;3800:6;;;3816:17;3800:6;;3848:40;;3781:16;;3848:40;3771:124;3708:187;:::o;9677:389:2:-;9760:21;;;9752:65;;;;;;;7530:2:6;9752:65:2;;;7512:21:6;7569:2;7549:18;;;7542:30;7608:33;7588:18;;;7581:61;7659:18;;9752:65:2;7328:355:6;9752:65:2;9904:6;9888:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;9920:18:2;;;:9;:18;;;;;;;;;;:28;;9942:6;;9920:9;:28;;9942:6;;9920:28;:::i;:::-;;;;-1:-1:-1;;9963:37:2;;1449:25:6;;;9963:37:2;;;;9980:1;;9963:37;;1437:2:6;1422:18;9963:37:2;;;;;;;2459:95:0;;:::o;14:586:6:-;163:2;152:9;145:21;126:4;195:6;189:13;238:6;233:2;222:9;218:18;211:34;263:1;273:140;287:6;284:1;281:13;273:140;;;398:2;382:14;;;378:23;;372:30;367:2;348:17;;;344:26;337:66;302:10;273:140;;;277:3;462:1;457:2;448:6;437:9;433:22;429:31;422:42;591:2;521:66;516:2;508:6;504:15;500:88;489:9;485:104;481:113;473:121;;;14:586;;;;:::o;605:196::-;673:20;;733:42;722:54;;712:65;;702:93;;791:1;788;781:12;702:93;605:196;;;:::o;806:300::-;874:6;882;935:2;923:9;914:7;910:23;906:32;903:52;;;951:1;948;941:12;903:52;974:29;993:9;974:29;:::i;:::-;964:39;1072:2;1057:18;;;;1044:32;;-1:-1:-1;;;806:300:6:o;1485:374::-;1562:6;1570;1578;1631:2;1619:9;1610:7;1606:23;1602:32;1599:52;;;1647:1;1644;1637:12;1599:52;1670:29;1689:9;1670:29;:::i;:::-;1660:39;;1718:38;1752:2;1741:9;1737:18;1718:38;:::i;:::-;1485:374;;1708:48;;-1:-1:-1;;;1825:2:6;1810:18;;;;1797:32;;1485:374::o;2053:186::-;2112:6;2165:2;2153:9;2144:7;2140:23;2136:32;2133:52;;;2181:1;2178;2171:12;2133:52;2204:29;2223:9;2204:29;:::i;:::-;2194:39;2053:186;-1:-1:-1;;;2053:186:6:o;2475:300::-;2543:6;2551;2604:2;2592:9;2583:7;2579:23;2575:32;2572:52;;;2620:1;2617;2610:12;2572:52;2665:23;;;-1:-1:-1;2731:38:6;2765:2;2750:18;;2731:38;:::i;:::-;2721:48;;2475:300;;;;;:::o;2780:260::-;2848:6;2856;2909:2;2897:9;2888:7;2884:23;2880:32;2877:52;;;2925:1;2922;2915:12;2877:52;2948:29;2967:9;2948:29;:::i;:::-;2938:39;;2996:38;3030:2;3019:9;3015:18;2996:38;:::i;3045:437::-;3124:1;3120:12;;;;3167;;;3188:61;;3242:4;3234:6;3230:17;3220:27;;3188:61;3295:2;3287:6;3284:14;3264:18;3261:38;3258:218;;3332:77;3329:1;3322:88;3433:4;3430:1;3423:15;3461:4;3458:1;3451:15;3258:218;;3045:437;;;:::o;3487:279::-;3552:9;;;3573:10;;;3570:190;;;3616:77;3613:1;3606:88;3717:4;3714:1;3707:15;3745:4;3742:1;3735:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "768000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "22503",
								"balanceOf(address)": "1305",
								"decimals()": "222",
								"decreaseAllowance(address,uint256)": "23462",
								"increaseAllowance(address,uint256)": "infinite",
								"mint(uint256,address)": "infinite",
								"name()": "infinite",
								"owner()": "1034",
								"renounceOwnership()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "1049",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "23661"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1946,
									"end": 2556,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 1946,
									"end": 2556,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1946,
									"end": 2556,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2116,
									"end": 2300,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2116,
									"end": 2300,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2116,
									"end": 2300,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 2116,
									"end": 2300,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 2116,
									"end": 2300,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2116,
									"end": 2300,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2116,
									"end": 2300,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 2116,
									"end": 2300,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2116,
									"end": 2300,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 2116,
									"end": 2300,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2116,
									"end": 2300,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2116,
									"end": 2300,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2116,
									"end": 2300,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2116,
									"end": 2300,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2116,
									"end": 2300,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2116,
									"end": 2300,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2116,
									"end": 2300,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2116,
									"end": 2300,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 2116,
									"end": 2300,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2116,
									"end": 2300,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2116,
									"end": 2300,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2237,
									"end": 2241,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2243,
									"end": 2249,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3319,
									"end": 3324,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 3319,
									"end": 3332,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 2237,
									"end": 2241,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3319,
									"end": 3324,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 3319,
									"end": 3332,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 3319,
									"end": 3332,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 3319,
									"end": 3332,
									"name": "tag",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 3319,
									"end": 3332,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3342,
									"end": 3349,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 3342,
									"end": 3359,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 3352,
									"end": 3359,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 3342,
									"end": 3349,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 3342,
									"end": 3359,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 3342,
									"end": 3359,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 3342,
									"end": 3359,
									"name": "tag",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 3342,
									"end": 3359,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3342,
									"end": 3359,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3253,
									"end": 3366,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3253,
									"end": 3366,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2211,
									"end": 2243,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 2230,
									"end": 2242,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 2230,
									"end": 2240,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 2230,
									"end": 2240,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2230,
									"end": 2240,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2230,
									"end": 2242,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2230,
									"end": 2242,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 2230,
									"end": 2242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2230,
									"end": 2242,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 2230,
									"end": 2242,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2211,
									"end": 2229,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 2211,
									"end": 2243,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2211,
									"end": 2243,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 2211,
									"end": 2243,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2261,
									"end": 2293,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 2267,
									"end": 2277,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 2279,
									"end": 2292,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2261,
									"end": 2266,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 2261,
									"end": 2293,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2261,
									"end": 2293,
									"modifierDepth": 1,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 2261,
									"end": 2293,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2116,
									"end": 2300,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2116,
									"end": 2300,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2116,
									"end": 2300,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1946,
									"end": 2556,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "42"
								},
								{
									"begin": 1946,
									"end": 2556,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1915,
									"end": 2011,
									"name": "tag",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 1915,
									"end": 2011,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1994,
									"end": 2004,
									"name": "CALLER",
									"source": 5
								},
								{
									"begin": 1994,
									"end": 2004,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1915,
									"end": 2011,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3708,
									"end": 3895,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 3708,
									"end": 3895,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3800,
									"end": 3806,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 3800,
									"end": 3806,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3800,
									"end": 3806,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3816,
									"end": 3833,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3816,
									"end": 3833,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3816,
									"end": 3833,
									"name": "AND",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3816,
									"end": 3833,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3816,
									"end": 3833,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3816,
									"end": 3833,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3816,
									"end": 3833,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 3816,
									"end": 3833,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3816,
									"end": 3833,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 3816,
									"end": 3833,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 3848,
									"end": 3888,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3848,
									"end": 3888,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3800,
									"end": 3806,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3800,
									"end": 3806,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3800,
									"end": 3806,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3816,
									"end": 3833,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3800,
									"end": 3806,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3800,
									"end": 3806,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3848,
									"end": 3888,
									"name": "PUSH",
									"source": 1,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3848,
									"end": 3888,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3781,
									"end": 3797,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3781,
									"end": 3797,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3848,
									"end": 3888,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 3771,
									"end": 3895,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3708,
									"end": 3895,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3708,
									"end": 3895,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9677,
									"end": 10066,
									"name": "tag",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 9677,
									"end": 10066,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 9760,
									"end": 9781,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 9760,
									"end": 9781,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 9752,
									"end": 9817,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 9752,
									"end": 9817,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 9752,
									"end": 9817,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 9752,
									"end": 9817,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 9752,
									"end": 9817,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 9752,
									"end": 9817,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 4319,
									"end": 4321,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 9752,
									"end": 9817,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 9752,
									"end": 9817,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 9752,
									"end": 9817,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 4301,
									"end": 4322,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 4358,
									"end": 4360,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 4338,
									"end": 4356,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 4338,
									"end": 4356,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4338,
									"end": 4356,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4331,
									"end": 4361,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 4397,
									"end": 4430,
									"name": "PUSH",
									"source": 6,
									"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
								},
								{
									"begin": 4377,
									"end": 4395,
									"name": "PUSH",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 4377,
									"end": 4395,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4377,
									"end": 4395,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4370,
									"end": 4431,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 4448,
									"end": 4466,
									"name": "PUSH",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 4448,
									"end": 4466,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 9752,
									"end": 9817,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 9752,
									"end": 9817,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 9752,
									"end": 9817,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 9752,
									"end": 9817,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 9752,
									"end": 9817,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 9752,
									"end": 9817,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 9752,
									"end": 9817,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 9752,
									"end": 9817,
									"name": "tag",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 9752,
									"end": 9817,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 9904,
									"end": 9910,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 9888,
									"end": 9900,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 9888,
									"end": 9900,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 9888,
									"end": 9910,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 9888,
									"end": 9910,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 9888,
									"end": 9910,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 9888,
									"end": 9910,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 9888,
									"end": 9910,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 9888,
									"end": 9910,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 9888,
									"end": 9910,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 9888,
									"end": 9910,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 9888,
									"end": 9910,
									"name": "tag",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 9888,
									"end": 9910,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 9888,
									"end": 9910,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 9888,
									"end": 9910,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 9888,
									"end": 9910,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 9920,
									"end": 9938,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 9920,
									"end": 9938,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 9920,
									"end": 9929,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 9920,
									"end": 9938,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 9920,
									"end": 9938,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 9920,
									"end": 9938,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 9920,
									"end": 9938,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 9920,
									"end": 9938,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 9920,
									"end": 9938,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 9920,
									"end": 9938,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 9920,
									"end": 9938,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 9920,
									"end": 9938,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 9920,
									"end": 9938,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 9920,
									"end": 9948,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 9920,
									"end": 9948,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 9942,
									"end": 9948,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 9942,
									"end": 9948,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 9920,
									"end": 9929,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 9920,
									"end": 9948,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 9920,
									"end": 9948,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 9942,
									"end": 9948,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 9942,
									"end": 9948,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 9920,
									"end": 9948,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 9920,
									"end": 9948,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 9920,
									"end": 9948,
									"name": "tag",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 9920,
									"end": 9948,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 9920,
									"end": 9948,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 9920,
									"end": 9948,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 9920,
									"end": 9948,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 9963,
									"end": 10000,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 9963,
									"end": 10000,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 4850,
									"end": 4875,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4850,
									"end": 4875,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4850,
									"end": 4875,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 9963,
									"end": 10000,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 9963,
									"end": 10000,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 9963,
									"end": 10000,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 9980,
									"end": 9981,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 9980,
									"end": 9981,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 9963,
									"end": 10000,
									"name": "PUSH",
									"source": 2,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 9963,
									"end": 10000,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4838,
									"end": 4840,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 4823,
									"end": 4841,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 9963,
									"end": 10000,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 9963,
									"end": 10000,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 9963,
									"end": 10000,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 9963,
									"end": 10000,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 9963,
									"end": 10000,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 9963,
									"end": 10000,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 9963,
									"end": 10000,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 9677,
									"end": 10066,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 9677,
									"end": 10066,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 9677,
									"end": 10066,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 13061,
									"end": 13182,
									"name": "tag",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 13061,
									"end": 13182,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 13061,
									"end": 13182,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 13061,
									"end": 13182,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 13061,
									"end": 13182,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 13061,
									"end": 13182,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 146,
									"end": 980,
									"name": "tag",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 146,
									"end": 980,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 200,
									"end": 205,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 256,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 246,
									"end": 250,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 238,
									"end": 244,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 234,
									"end": 251,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 230,
									"end": 257,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 220,
									"end": 275,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 271,
									"end": 272,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 269,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 261,
									"end": 273,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 220,
									"end": 275,
									"name": "tag",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 298,
									"end": 311,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 298,
									"end": 311,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 323,
									"end": 353,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 323,
									"end": 353,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 320,
									"end": 376,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 320,
									"end": 376,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 320,
									"end": 376,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 356,
									"end": 374,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 356,
									"end": 374,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 356,
									"end": 374,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 356,
									"end": 374,
									"name": "tag",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 356,
									"end": 374,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 405,
									"end": 407,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 399,
									"end": 408,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 497,
									"end": 499,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 459,
									"end": 476,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 459,
									"end": 476,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 455,
									"end": 486,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 455,
									"end": 486,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 455,
									"end": 486,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 488,
									"end": 490,
									"name": "PUSH",
									"source": 6,
									"value": "3F"
								},
								{
									"begin": 451,
									"end": 491,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 447,
									"end": 501,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 435,
									"end": 502,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 435,
									"end": 502,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 517,
									"end": 551,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 517,
									"end": 551,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 553,
									"end": 575,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 553,
									"end": 575,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 553,
									"end": 575,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 514,
									"end": 576,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 511,
									"end": 599,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 511,
									"end": 599,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 511,
									"end": 599,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 579,
									"end": 597,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 579,
									"end": 597,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 579,
									"end": 597,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 579,
									"end": 597,
									"name": "tag",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 579,
									"end": 597,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 615,
									"end": 617,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 608,
									"end": 630,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 639,
									"end": 661,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 639,
									"end": 661,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 639,
									"end": 661,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 680,
									"end": 699,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 680,
									"end": 699,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 680,
									"end": 699,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 701,
									"end": 705,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 676,
									"end": 706,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 673,
									"end": 712,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 670,
									"end": 729,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 670,
									"end": 729,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 670,
									"end": 729,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 725,
									"end": 726,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 722,
									"end": 723,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 715,
									"end": 727,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 670,
									"end": 729,
									"name": "tag",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 670,
									"end": 729,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 747,
									"end": 748,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 757,
									"end": 900,
									"name": "tag",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 757,
									"end": 900,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 771,
									"end": 777,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 768,
									"end": 769,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 765,
									"end": 778,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 757,
									"end": 900,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 757,
									"end": 900,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 757,
									"end": 900,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 883,
									"end": 887,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 867,
									"end": 881,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 867,
									"end": 881,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 867,
									"end": 881,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 863,
									"end": 888,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 863,
									"end": 888,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 857,
									"end": 889,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 834,
									"end": 848,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 834,
									"end": 848,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 834,
									"end": 848,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 830,
									"end": 855,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 830,
									"end": 855,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 823,
									"end": 890,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 786,
									"end": 798,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 757,
									"end": 900,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 757,
									"end": 900,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 757,
									"end": 900,
									"name": "tag",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 757,
									"end": 900,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 948,
									"end": 949,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 920,
									"end": 939,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 920,
									"end": 939,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 920,
									"end": 939,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 941,
									"end": 945,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 916,
									"end": 946,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 909,
									"end": 950,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 909,
									"end": 950,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 909,
									"end": 950,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 909,
									"end": 950,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 924,
									"end": 930,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 146,
									"end": 980,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 146,
									"end": 980,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 985,
									"end": 1603,
									"name": "tag",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 985,
									"end": 1603,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1093,
									"end": 1099,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1101,
									"end": 1107,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1109,
									"end": 1115,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1162,
									"end": 1164,
									"name": "PUSH",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 1150,
									"end": 1159,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1141,
									"end": 1148,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1137,
									"end": 1160,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1133,
									"end": 1165,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 1130,
									"end": 1182,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1130,
									"end": 1182,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 1130,
									"end": 1182,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1178,
									"end": 1179,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1175,
									"end": 1176,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1168,
									"end": 1180,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1130,
									"end": 1182,
									"name": "tag",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 1130,
									"end": 1182,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1205,
									"end": 1221,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1205,
									"end": 1221,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1233,
									"end": 1263,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1233,
									"end": 1263,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1230,
									"end": 1280,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1230,
									"end": 1280,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 1230,
									"end": 1280,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1276,
									"end": 1277,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1274,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1266,
									"end": 1278,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1230,
									"end": 1280,
									"name": "tag",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 1230,
									"end": 1280,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1299,
									"end": 1360,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "57"
								},
								{
									"begin": 1352,
									"end": 1359,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1343,
									"end": 1349,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1332,
									"end": 1341,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 1328,
									"end": 1350,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1299,
									"end": 1360,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 1299,
									"end": 1360,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1299,
									"end": 1360,
									"name": "tag",
									"source": 6,
									"value": "57"
								},
								{
									"begin": 1299,
									"end": 1360,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1406,
									"end": 1408,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1391,
									"end": 1409,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1391,
									"end": 1409,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1385,
									"end": 1410,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1289,
									"end": 1360,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1289,
									"end": 1360,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1385,
									"end": 1410,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1422,
									"end": 1454,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1422,
									"end": 1454,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1419,
									"end": 1471,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1419,
									"end": 1471,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 1419,
									"end": 1471,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1467,
									"end": 1468,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1464,
									"end": 1465,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1457,
									"end": 1469,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1419,
									"end": 1471,
									"name": "tag",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 1419,
									"end": 1471,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1490,
									"end": 1553,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "59"
								},
								{
									"begin": 1545,
									"end": 1552,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1534,
									"end": 1542,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1523,
									"end": 1532,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 1519,
									"end": 1543,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1490,
									"end": 1553,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 1490,
									"end": 1553,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1490,
									"end": 1553,
									"name": "tag",
									"source": 6,
									"value": "59"
								},
								{
									"begin": 1490,
									"end": 1553,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1480,
									"end": 1553,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1480,
									"end": 1553,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1480,
									"end": 1553,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1593,
									"end": 1595,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1591,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1578,
									"end": 1596,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1572,
									"end": 1597,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1562,
									"end": 1597,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1562,
									"end": 1597,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 985,
									"end": 1603,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 985,
									"end": 1603,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 985,
									"end": 1603,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 985,
									"end": 1603,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 985,
									"end": 1603,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 985,
									"end": 1603,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1608,
									"end": 1988,
									"name": "tag",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 1608,
									"end": 1988,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1687,
									"end": 1688,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1683,
									"end": 1695,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1683,
									"end": 1695,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1683,
									"end": 1695,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 1683,
									"end": 1695,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1730,
									"end": 1742,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1730,
									"end": 1742,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1730,
									"end": 1742,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1751,
									"end": 1812,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "61"
								},
								{
									"begin": 1751,
									"end": 1812,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1805,
									"end": 1809,
									"name": "PUSH",
									"source": 6,
									"value": "7F"
								},
								{
									"begin": 1797,
									"end": 1803,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1793,
									"end": 1810,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1783,
									"end": 1810,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1783,
									"end": 1810,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1751,
									"end": 1812,
									"name": "tag",
									"source": 6,
									"value": "61"
								},
								{
									"begin": 1751,
									"end": 1812,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1858,
									"end": 1860,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1850,
									"end": 1856,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1847,
									"end": 1861,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 1827,
									"end": 1845,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1824,
									"end": 1862,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1821,
									"end": 1982,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "62"
								},
								{
									"begin": 1821,
									"end": 1982,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1904,
									"end": 1914,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B71"
								},
								{
									"begin": 1899,
									"end": 1902,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 1895,
									"end": 1915,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 1892,
									"end": 1893,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1885,
									"end": 1916,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1939,
									"end": 1943,
									"name": "PUSH",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 1936,
									"end": 1937,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1929,
									"end": 1944,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1967,
									"end": 1971,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 1964,
									"end": 1965,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1957,
									"end": 1972,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1821,
									"end": 1982,
									"name": "tag",
									"source": 6,
									"value": "62"
								},
								{
									"begin": 1821,
									"end": 1982,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1821,
									"end": 1982,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1608,
									"end": 1988,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1608,
									"end": 1988,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1608,
									"end": 1988,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1608,
									"end": 1988,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2119,
									"end": 2637,
									"name": "tag",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 2119,
									"end": 2637,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2221,
									"end": 2223,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 2216,
									"end": 2219,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2213,
									"end": 2224,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 2210,
									"end": 2631,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2210,
									"end": 2631,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 2210,
									"end": 2631,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2257,
									"end": 2262,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2254,
									"end": 2255,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2247,
									"end": 2263,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2301,
									"end": 2305,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2298,
									"end": 2299,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2288,
									"end": 2306,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 2371,
									"end": 2373,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 2359,
									"end": 2369,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2355,
									"end": 2374,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2352,
									"end": 2353,
									"name": "PUSH",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 2348,
									"end": 2375,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 2342,
									"end": 2346,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2338,
									"end": 2376,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2407,
									"end": 2411,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2395,
									"end": 2405,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 2392,
									"end": 2412,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 2389,
									"end": 2436,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2389,
									"end": 2436,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "66"
								},
								{
									"begin": 2389,
									"end": 2436,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2430,
									"end": 2434,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2389,
									"end": 2436,
									"name": "tag",
									"source": 6,
									"value": "66"
								},
								{
									"begin": 2389,
									"end": 2436,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2485,
									"end": 2487,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 2480,
									"end": 2483,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2476,
									"end": 2488,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2473,
									"end": 2474,
									"name": "PUSH",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 2469,
									"end": 2489,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 2463,
									"end": 2467,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2459,
									"end": 2490,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2449,
									"end": 2490,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2449,
									"end": 2490,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2540,
									"end": 2621,
									"name": "tag",
									"source": 6,
									"value": "67"
								},
								{
									"begin": 2540,
									"end": 2621,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2558,
									"end": 2560,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2551,
									"end": 2556,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2548,
									"end": 2561,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 2540,
									"end": 2621,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2540,
									"end": 2621,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "69"
								},
								{
									"begin": 2540,
									"end": 2621,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2617,
									"end": 2618,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2603,
									"end": 2619,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2603,
									"end": 2619,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 2584,
									"end": 2585,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 2573,
									"end": 2586,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2540,
									"end": 2621,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "67"
								},
								{
									"begin": 2540,
									"end": 2621,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2540,
									"end": 2621,
									"name": "tag",
									"source": 6,
									"value": "69"
								},
								{
									"begin": 2540,
									"end": 2621,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2544,
									"end": 2547,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2544,
									"end": 2547,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2119,
									"end": 2637,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2119,
									"end": 2637,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2119,
									"end": 2637,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2119,
									"end": 2637,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2813,
									"end": 4112,
									"name": "tag",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 2813,
									"end": 4112,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2933,
									"end": 2943,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2933,
									"end": 2943,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2955,
									"end": 2985,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2955,
									"end": 2985,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 2952,
									"end": 3008,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2952,
									"end": 3008,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 2952,
									"end": 3008,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2988,
									"end": 3006,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 2988,
									"end": 3006,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 2988,
									"end": 3006,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2988,
									"end": 3006,
									"name": "tag",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 2988,
									"end": 3006,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3017,
									"end": 3114,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "74"
								},
								{
									"begin": 3107,
									"end": 3113,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3067,
									"end": 3105,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "75"
								},
								{
									"begin": 3099,
									"end": 3103,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3093,
									"end": 3104,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 3067,
									"end": 3105,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 3067,
									"end": 3105,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3067,
									"end": 3105,
									"name": "tag",
									"source": 6,
									"value": "75"
								},
								{
									"begin": 3067,
									"end": 3105,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3061,
									"end": 3065,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3017,
									"end": 3114,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 3017,
									"end": 3114,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3017,
									"end": 3114,
									"name": "tag",
									"source": 6,
									"value": "74"
								},
								{
									"begin": 3017,
									"end": 3114,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3163,
									"end": 3167,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3194,
									"end": 3196,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 3183,
									"end": 3197,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3183,
									"end": 3197,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 3211,
									"end": 3212,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 3206,
									"end": 3855,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3206,
									"end": 3855,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 3206,
									"end": 3855,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "77"
								},
								{
									"begin": 3206,
									"end": 3855,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3899,
									"end": 3900,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3916,
									"end": 3922,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3913,
									"end": 4002,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3913,
									"end": 4002,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "78"
								},
								{
									"begin": 3913,
									"end": 4002,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3968,
									"end": 3987,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3968,
									"end": 3987,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3968,
									"end": 3987,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3962,
									"end": 3988,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 3913,
									"end": 4002,
									"name": "tag",
									"source": 6,
									"value": "78"
								},
								{
									"begin": 3913,
									"end": 4002,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2770,
									"end": 2771,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 2766,
									"end": 2777,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 2766,
									"end": 2777,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2766,
									"end": 2777,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 2762,
									"end": 2786,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 2758,
									"end": 2787,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 2748,
									"end": 2788,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2794,
									"end": 2795,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 2790,
									"end": 2801,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2790,
									"end": 2801,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2790,
									"end": 2801,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 2745,
									"end": 2802,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 4015,
									"end": 4096,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 4015,
									"end": 4096,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 3176,
									"end": 4106,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "69"
								},
								{
									"begin": 3176,
									"end": 4106,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3206,
									"end": 3855,
									"name": "tag",
									"source": 6,
									"value": "77"
								},
								{
									"begin": 3206,
									"end": 3855,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2066,
									"end": 2067,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2059,
									"end": 2073,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2059,
									"end": 2073,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2059,
									"end": 2073,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2103,
									"end": 2107,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2090,
									"end": 2108,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2090,
									"end": 2108,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3242,
									"end": 3262,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 3242,
									"end": 3262,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3242,
									"end": 3262,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3360,
									"end": 3582,
									"name": "tag",
									"source": 6,
									"value": "81"
								},
								{
									"begin": 3360,
									"end": 3582,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3374,
									"end": 3381,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3371,
									"end": 3372,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3368,
									"end": 3382,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 3360,
									"end": 3582,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3360,
									"end": 3582,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "83"
								},
								{
									"begin": 3360,
									"end": 3582,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3456,
									"end": 3475,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 3456,
									"end": 3475,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 3456,
									"end": 3475,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3450,
									"end": 3476,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 3435,
									"end": 3477,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3435,
									"end": 3477,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 3563,
									"end": 3567,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3548,
									"end": 3568,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 3548,
									"end": 3568,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 3548,
									"end": 3568,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3548,
									"end": 3568,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 3516,
									"end": 3517,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 3504,
									"end": 3518,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3504,
									"end": 3518,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 3504,
									"end": 3518,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3504,
									"end": 3518,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3390,
									"end": 3402,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3360,
									"end": 3582,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "81"
								},
								{
									"begin": 3360,
									"end": 3582,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3360,
									"end": 3582,
									"name": "tag",
									"source": 6,
									"value": "83"
								},
								{
									"begin": 3360,
									"end": 3582,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3364,
									"end": 3367,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3610,
									"end": 3616,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3601,
									"end": 3608,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3598,
									"end": 3617,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 3595,
									"end": 3796,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3595,
									"end": 3796,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "84"
								},
								{
									"begin": 3595,
									"end": 3796,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3671,
									"end": 3690,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 3671,
									"end": 3690,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3671,
									"end": 3690,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3665,
									"end": 3691,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3754,
									"end": 3755,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 3750,
									"end": 3764,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 3750,
									"end": 3764,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3750,
									"end": 3764,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 3766,
									"end": 3769,
									"name": "PUSH",
									"source": 6,
									"value": "F8"
								},
								{
									"begin": 3746,
									"end": 3770,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3742,
									"end": 3779,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 3738,
									"end": 3780,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 3723,
									"end": 3781,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3708,
									"end": 3782,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3708,
									"end": 3782,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 3595,
									"end": 3796,
									"name": "tag",
									"source": 6,
									"value": "84"
								},
								{
									"begin": 3595,
									"end": 3796,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3842,
									"end": 3843,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 3826,
									"end": 3840,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3826,
									"end": 3840,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3826,
									"end": 3840,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 3822,
									"end": 3844,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3809,
									"end": 3845,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3809,
									"end": 3845,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2813,
									"end": 4112,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4477,
									"end": 4699,
									"name": "tag",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 4477,
									"end": 4699,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4542,
									"end": 4551,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 4542,
									"end": 4551,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4542,
									"end": 4551,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4563,
									"end": 4573,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 4563,
									"end": 4573,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4563,
									"end": 4573,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 4560,
									"end": 4693,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 4560,
									"end": 4693,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "87"
								},
								{
									"begin": 4560,
									"end": 4693,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4615,
									"end": 4625,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B71"
								},
								{
									"begin": 4610,
									"end": 4613,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 4606,
									"end": 4626,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 4603,
									"end": 4604,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4596,
									"end": 4627,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 4650,
									"end": 4654,
									"name": "PUSH",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 4647,
									"end": 4648,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 4640,
									"end": 4655,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 4678,
									"end": 4682,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 4675,
									"end": 4676,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4668,
									"end": 4683,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 4560,
									"end": 4693,
									"name": "tag",
									"source": 6,
									"value": "87"
								},
								{
									"begin": 4560,
									"end": 4693,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4477,
									"end": 4699,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 4477,
									"end": 4699,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4477,
									"end": 4699,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4477,
									"end": 4699,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4477,
									"end": 4699,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4704,
									"end": 4881,
									"name": "tag",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 4704,
									"end": 4881,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1946,
									"end": 2556,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1946,
									"end": 2556,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1946,
									"end": 2556,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1946,
									"end": 2556,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1946,
									"end": 2556,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1946,
									"end": 2556,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1946,
									"end": 2556,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207dcbdb53e8ac3c556a88362276b015fb0ed42716854840cfe5816ff65c57ed1364736f6c634300081b0033",
									".code": [
										{
											"begin": 1946,
											"end": 2556,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "PUSH",
											"source": 0,
											"value": "94BF804D"
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 2556,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3431,
											"end": 3529,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 3431,
											"end": 3529,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3431,
											"end": 3529,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 3431,
											"end": 3529,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 3431,
											"end": 3529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3431,
											"end": 3529,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 3431,
											"end": 3529,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3431,
											"end": 3529,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3431,
											"end": 3529,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3431,
											"end": 3529,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 3431,
											"end": 3529,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3431,
											"end": 3529,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3431,
											"end": 3529,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3431,
											"end": 3529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3431,
											"end": 3529,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 3431,
											"end": 3529,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3431,
											"end": 3529,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3431,
											"end": 3529,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3431,
											"end": 3529,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3431,
											"end": 3529,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3431,
											"end": 3529,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3431,
											"end": 3529,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3431,
											"end": 3529,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 5708,
											"end": 5905,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5708,
											"end": 5905,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5708,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 5708,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 5708,
											"end": 5905,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5708,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5708,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 5708,
											"end": 5905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5708,
											"end": 5905,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 5708,
											"end": 5905,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5708,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 5708,
											"end": 5905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5708,
											"end": 5905,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 5708,
											"end": 5905,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5708,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5708,
											"end": 5905,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1276,
											"end": 1290,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1276,
											"end": 1290,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1269,
											"end": 1291,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1251,
											"end": 1292,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1251,
											"end": 1292,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1239,
											"end": 1241,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1224,
											"end": 1242,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5708,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1111,
											"end": 1298,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4519,
											"end": 4625,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 4519,
											"end": 4625,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4606,
											"end": 4618,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 4606,
											"end": 4618,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4519,
											"end": 4625,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 4519,
											"end": 4625,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4519,
											"end": 4625,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4519,
											"end": 4625,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1449,
											"end": 1474,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1449,
											"end": 1474,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1449,
											"end": 1474,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1437,
											"end": 1439,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1422,
											"end": 1440,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4519,
											"end": 4625,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1303,
											"end": 1480,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6467,
											"end": 6753,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 6467,
											"end": 6753,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6467,
											"end": 6753,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 6467,
											"end": 6753,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 6467,
											"end": 6753,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 6467,
											"end": 6753,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6467,
											"end": 6753,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 6467,
											"end": 6753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6467,
											"end": 6753,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 6467,
											"end": 6753,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6467,
											"end": 6753,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 6467,
											"end": 6753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4368,
											"end": 4459,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 4368,
											"end": 4459,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4368,
											"end": 4459,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4368,
											"end": 4459,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4450,
											"end": 4452,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2006,
											"end": 2042,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2006,
											"end": 2042,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1994,
											"end": 1996,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1979,
											"end": 1997,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4368,
											"end": 4459,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1864,
											"end": 2048,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7148,
											"end": 7382,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 7148,
											"end": 7382,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7148,
											"end": 7382,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 7148,
											"end": 7382,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 7148,
											"end": 7382,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 7148,
											"end": 7382,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7148,
											"end": 7382,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 7148,
											"end": 7382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7148,
											"end": 7382,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 7148,
											"end": 7382,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7148,
											"end": 7382,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 7148,
											"end": 7382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4683,
											"end": 4808,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 4683,
											"end": 4808,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4683,
											"end": 4808,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 4683,
											"end": 4808,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 4683,
											"end": 4808,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4683,
											"end": 4808,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4683,
											"end": 4808,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 4683,
											"end": 4808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4683,
											"end": 4808,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 4683,
											"end": 4808,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4783,
											"end": 4801,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4783,
											"end": 4801,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 4764,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4783,
											"end": 4801,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4783,
											"end": 4801,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4783,
											"end": 4801,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4783,
											"end": 4801,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4783,
											"end": 4801,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4783,
											"end": 4801,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4783,
											"end": 4801,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4783,
											"end": 4801,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4783,
											"end": 4801,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4783,
											"end": 4801,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4783,
											"end": 4801,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4783,
											"end": 4801,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4683,
											"end": 4808,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3106,
											"end": 3207,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 3106,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3106,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 3106,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 3106,
											"end": 3207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3106,
											"end": 3207,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 3106,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3106,
											"end": 3207,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 2476,
											"end": 2561,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2476,
											"end": 2561,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2548,
											"end": 2554,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2548,
											"end": 2554,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2476,
											"end": 2561,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2476,
											"end": 2561,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2548,
											"end": 2554,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2548,
											"end": 2554,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2548,
											"end": 2554,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2548,
											"end": 2554,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2390,
											"end": 2464,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2390,
											"end": 2464,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2378,
											"end": 2380,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2363,
											"end": 2381,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2476,
											"end": 2561,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2244,
											"end": 2470,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2459,
											"end": 2554,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2459,
											"end": 2554,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 2554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2459,
											"end": 2554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2459,
											"end": 2554,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 2554,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2459,
											"end": 2554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2459,
											"end": 2554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 2554,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2459,
											"end": 2554,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 2554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2459,
											"end": 2554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3642,
											"end": 3744,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 3642,
											"end": 3744,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3642,
											"end": 3744,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 3642,
											"end": 3744,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3642,
											"end": 3744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7869,
											"end": 8296,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 7869,
											"end": 8296,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7869,
											"end": 8296,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 7869,
											"end": 8296,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 7869,
											"end": 8296,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 7869,
											"end": 8296,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7869,
											"end": 8296,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 7869,
											"end": 8296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7869,
											"end": 8296,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 7869,
											"end": 8296,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7869,
											"end": 8296,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 7869,
											"end": 8296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5004,
											"end": 5193,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 5004,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5004,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 5004,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 5004,
											"end": 5193,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5004,
											"end": 5193,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5004,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 5004,
											"end": 5193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5004,
											"end": 5193,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 5004,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5004,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 5004,
											"end": 5193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5251,
											"end": 5400,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 5251,
											"end": 5400,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5251,
											"end": 5400,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 5251,
											"end": 5400,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 5251,
											"end": 5400,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5251,
											"end": 5400,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5251,
											"end": 5400,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 5251,
											"end": 5400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5251,
											"end": 5400,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 5251,
											"end": 5400,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5384,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5366,
											"end": 5384,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5384,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5384,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5340,
											"end": 5347,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5366,
											"end": 5384,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5384,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5384,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5377,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5366,
											"end": 5384,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5366,
											"end": 5384,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5384,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5384,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5384,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5366,
											"end": 5384,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5384,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5384,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5393,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5393,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5393,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5393,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5393,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5393,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5393,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5393,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5393,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5393,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5393,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5393,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5393,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5251,
											"end": 5400,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3356,
											"end": 3554,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 3356,
											"end": 3554,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3356,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 3356,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 3356,
											"end": 3554,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3356,
											"end": 3554,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3356,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 3356,
											"end": 3554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3356,
											"end": 3554,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 3356,
											"end": 3554,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3356,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 3356,
											"end": 3554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3431,
											"end": 3529,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 3431,
											"end": 3529,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3485,
											"end": 3498,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3517,
											"end": 3522,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 3510,
											"end": 3522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 3510,
											"end": 3522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3431,
											"end": 3529,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3431,
											"end": 3529,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5708,
											"end": 5905,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 5708,
											"end": 5905,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5791,
											"end": 5795,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1994,
											"end": 2004,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 5845,
											"end": 5877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 1994,
											"end": 2004,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5861,
											"end": 5868,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5870,
											"end": 5876,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5845,
											"end": 5853,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 5845,
											"end": 5877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5845,
											"end": 5877,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 5845,
											"end": 5877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5894,
											"end": 5898,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5887,
											"end": 5898,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5887,
											"end": 5898,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5887,
											"end": 5898,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5708,
											"end": 5905,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 5708,
											"end": 5905,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5708,
											"end": 5905,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5708,
											"end": 5905,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5708,
											"end": 5905,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5708,
											"end": 5905,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5708,
											"end": 5905,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6467,
											"end": 6753,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 6467,
											"end": 6753,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6594,
											"end": 6598,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1994,
											"end": 2004,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 6650,
											"end": 6688,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 6666,
											"end": 6670,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1994,
											"end": 2004,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6681,
											"end": 6687,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6650,
											"end": 6665,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 6650,
											"end": 6688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6650,
											"end": 6688,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 6650,
											"end": 6688,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6698,
											"end": 6725,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 6708,
											"end": 6712,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6714,
											"end": 6716,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6718,
											"end": 6724,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6698,
											"end": 6707,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 6698,
											"end": 6725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6698,
											"end": 6725,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 6698,
											"end": 6725,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6742,
											"end": 6746,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6742,
											"end": 6746,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 6467,
											"end": 6753,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6467,
											"end": 6753,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7148,
											"end": 7382,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 7148,
											"end": 7382,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1994,
											"end": 2004,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 7236,
											"end": 7240,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5366,
											"end": 5384,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5384,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5384,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5377,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5366,
											"end": 5384,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5366,
											"end": 5384,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5384,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5384,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5384,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5366,
											"end": 5384,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5384,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5384,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5384,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5366,
											"end": 5393,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5393,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5393,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5393,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5393,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5393,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5393,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5393,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5393,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5393,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7236,
											"end": 7240,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7236,
											"end": 7240,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1994,
											"end": 2004,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7290,
											"end": 7354,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 7290,
											"end": 7354,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1994,
											"end": 2004,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1994,
											"end": 2004,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5366,
											"end": 5393,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5393,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7315,
											"end": 7353,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 7315,
											"end": 7353,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7343,
											"end": 7353,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7343,
											"end": 7353,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7315,
											"end": 7353,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 7315,
											"end": 7353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7315,
											"end": 7353,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 7315,
											"end": 7353,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7290,
											"end": 7298,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 7290,
											"end": 7354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3106,
											"end": 3207,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 3106,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 2369,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 2369,
											"end": 2382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3170,
											"end": 3200,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 3197,
											"end": 3198,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3170,
											"end": 3188,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 3170,
											"end": 3200,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3170,
											"end": 3200,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 3170,
											"end": 3200,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3106,
											"end": 3207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2459,
											"end": 2554,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2459,
											"end": 2554,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 2369,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 2369,
											"end": 2382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2530,
											"end": 2547,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2536,
											"end": 2538,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2540,
											"end": 2546,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2535,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2530,
											"end": 2547,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2547,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2530,
											"end": 2547,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 2554,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 2554,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 2554,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3642,
											"end": 3744,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3642,
											"end": 3744,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3698,
											"end": 3711,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3730,
											"end": 3737,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3723,
											"end": 3737,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3723,
											"end": 3737,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3723,
											"end": 3737,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 3723,
											"end": 3737,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3723,
											"end": 3737,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 3723,
											"end": 3737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7869,
											"end": 8296,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 7869,
											"end": 8296,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1994,
											"end": 2004,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 7962,
											"end": 7966,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5366,
											"end": 5384,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5384,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5384,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5377,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5366,
											"end": 5384,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5366,
											"end": 5384,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5384,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5384,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5384,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5366,
											"end": 5384,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5384,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5384,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5384,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5366,
											"end": 5393,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5393,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5393,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5393,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5393,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5393,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5393,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5393,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5393,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5393,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7962,
											"end": 7966,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7962,
											"end": 7966,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1994,
											"end": 2004,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8106,
											"end": 8121,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8086,
											"end": 8102,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8086,
											"end": 8121,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 8086,
											"end": 8121,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8078,
											"end": 8163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 8078,
											"end": 8163,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8078,
											"end": 8163,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8078,
											"end": 8163,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8078,
											"end": 8163,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8078,
											"end": 8163,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8078,
											"end": 8163,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3973,
											"end": 3975,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8078,
											"end": 8163,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8078,
											"end": 8163,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8078,
											"end": 8163,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3955,
											"end": 3976,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4012,
											"end": 4014,
											"name": "PUSH",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 3992,
											"end": 4010,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3992,
											"end": 4010,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3992,
											"end": 4010,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3985,
											"end": 4015,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4051,
											"end": 4085,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 4031,
											"end": 4049,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4031,
											"end": 4049,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4031,
											"end": 4049,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4024,
											"end": 4086,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4122,
											"end": 4129,
											"name": "PUSH",
											"source": 6,
											"value": "207A65726F000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4095,
											"end": 4130,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4147,
											"end": 4166,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 4147,
											"end": 4166,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8078,
											"end": 8163,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 8078,
											"end": 8163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8078,
											"end": 8163,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8078,
											"end": 8163,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8078,
											"end": 8163,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8078,
											"end": 8163,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8078,
											"end": 8163,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8078,
											"end": 8163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8078,
											"end": 8163,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 8078,
											"end": 8163,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 8078,
											"end": 8163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8197,
											"end": 8257,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 8206,
											"end": 8211,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8213,
											"end": 8220,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 8241,
											"end": 8256,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 8222,
											"end": 8238,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8222,
											"end": 8256,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8197,
											"end": 8205,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 8197,
											"end": 8257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5004,
											"end": 5193,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 5004,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5083,
											"end": 5087,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1994,
											"end": 2004,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 5137,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 1994,
											"end": 2004,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5154,
											"end": 5156,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5158,
											"end": 5164,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5146,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 5137,
											"end": 5165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3356,
											"end": 3554,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 3356,
											"end": 3554,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 2369,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 2369,
											"end": 2382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3444,
											"end": 3466,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3444,
											"end": 3466,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3444,
											"end": 3466,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3436,
											"end": 3509,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 3436,
											"end": 3509,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3436,
											"end": 3509,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3436,
											"end": 3509,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3436,
											"end": 3509,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3436,
											"end": 3509,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3436,
											"end": 3509,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4379,
											"end": 4381,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3436,
											"end": 3509,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3436,
											"end": 3509,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3436,
											"end": 3509,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4361,
											"end": 4382,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4418,
											"end": 4420,
											"name": "PUSH",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 4398,
											"end": 4416,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4398,
											"end": 4416,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4398,
											"end": 4416,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4391,
											"end": 4421,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4457,
											"end": 4491,
											"name": "PUSH",
											"source": 6,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 4437,
											"end": 4455,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4437,
											"end": 4455,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4437,
											"end": 4455,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4430,
											"end": 4492,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4528,
											"end": 4536,
											"name": "PUSH",
											"source": 6,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4508,
											"end": 4526,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4508,
											"end": 4526,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4508,
											"end": 4526,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4501,
											"end": 4537,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4554,
											"end": 4573,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 4554,
											"end": 4573,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3436,
											"end": 3509,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 4177,
											"end": 4579,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3436,
											"end": 3509,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 3436,
											"end": 3509,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3547,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 3538,
											"end": 3546,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3537,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 3519,
											"end": 3547,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3547,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 3519,
											"end": 3547,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3356,
											"end": 3554,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3356,
											"end": 3554,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11385,
											"end": 11755,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 11385,
											"end": 11755,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11516,
											"end": 11535,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11516,
											"end": 11535,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11516,
											"end": 11535,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11508,
											"end": 11576,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 11508,
											"end": 11576,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11508,
											"end": 11576,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11508,
											"end": 11576,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11508,
											"end": 11576,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11508,
											"end": 11576,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11508,
											"end": 11576,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4786,
											"end": 4788,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11508,
											"end": 11576,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 11508,
											"end": 11576,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11508,
											"end": 11576,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4768,
											"end": 4789,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4825,
											"end": 4827,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4805,
											"end": 4823,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4805,
											"end": 4823,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4805,
											"end": 4823,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4798,
											"end": 4828,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4864,
											"end": 4898,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 4844,
											"end": 4862,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4844,
											"end": 4862,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4844,
											"end": 4862,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4837,
											"end": 4899,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4935,
											"end": 4941,
											"name": "PUSH",
											"source": 6,
											"value": "7265737300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4915,
											"end": 4933,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4915,
											"end": 4933,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4915,
											"end": 4933,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4908,
											"end": 4942,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4959,
											"end": 4978,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 4959,
											"end": 4978,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11508,
											"end": 11576,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 4584,
											"end": 4984,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11508,
											"end": 11576,
											"name": "tag",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 11508,
											"end": 11576,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11594,
											"end": 11615,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11594,
											"end": 11615,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11594,
											"end": 11615,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11586,
											"end": 11654,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 11586,
											"end": 11654,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11586,
											"end": 11654,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11586,
											"end": 11654,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11586,
											"end": 11654,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11586,
											"end": 11654,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11586,
											"end": 11654,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5191,
											"end": 5193,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11586,
											"end": 11654,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 11586,
											"end": 11654,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11586,
											"end": 11654,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5173,
											"end": 5194,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5230,
											"end": 5232,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 5210,
											"end": 5228,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5210,
											"end": 5228,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5210,
											"end": 5228,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5203,
											"end": 5233,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5269,
											"end": 5303,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 5249,
											"end": 5267,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 5249,
											"end": 5267,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5249,
											"end": 5267,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5242,
											"end": 5304,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5340,
											"end": 5344,
											"name": "PUSH",
											"source": 6,
											"value": "7373000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5320,
											"end": 5338,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 5320,
											"end": 5338,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5320,
											"end": 5338,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5313,
											"end": 5345,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5362,
											"end": 5381,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 5362,
											"end": 5381,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11586,
											"end": 11654,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 4989,
											"end": 5387,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11586,
											"end": 11654,
											"name": "tag",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 11586,
											"end": 11654,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11665,
											"end": 11683,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11665,
											"end": 11683,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11665,
											"end": 11683,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11665,
											"end": 11683,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11665,
											"end": 11683,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11665,
											"end": 11683,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11665,
											"end": 11683,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11665,
											"end": 11683,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11665,
											"end": 11676,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 11665,
											"end": 11683,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11665,
											"end": 11683,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11665,
											"end": 11683,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11665,
											"end": 11683,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11665,
											"end": 11683,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11665,
											"end": 11683,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11665,
											"end": 11683,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11665,
											"end": 11683,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 11665,
											"end": 11692,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 11665,
											"end": 11692,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 11665,
											"end": 11692,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11665,
											"end": 11692,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11665,
											"end": 11692,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11665,
											"end": 11692,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11665,
											"end": 11692,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 11665,
											"end": 11692,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11665,
											"end": 11692,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11665,
											"end": 11692,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11665,
											"end": 11692,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11665,
											"end": 11692,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11665,
											"end": 11692,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 11665,
											"end": 11701,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 11665,
											"end": 11701,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11665,
											"end": 11701,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 11716,
											"end": 11748,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11716,
											"end": 11748,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1449,
											"end": 1474,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1449,
											"end": 1474,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1449,
											"end": 1474,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11716,
											"end": 11748,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 11716,
											"end": 11748,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1422,
											"end": 1440,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11716,
											"end": 11748,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11716,
											"end": 11748,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11716,
											"end": 11748,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11716,
											"end": 11748,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11716,
											"end": 11748,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11716,
											"end": 11748,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11716,
											"end": 11748,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 11385,
											"end": 11755,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11385,
											"end": 11755,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11385,
											"end": 11755,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11385,
											"end": 11755,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12036,
											"end": 12477,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 12036,
											"end": 12477,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5384,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5366,
											"end": 5384,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5384,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5384,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12166,
											"end": 12190,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5366,
											"end": 5384,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5384,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5384,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5377,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5366,
											"end": 5384,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5366,
											"end": 5384,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5384,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5384,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5384,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5366,
											"end": 5384,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5384,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5384,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5393,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5393,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5393,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5393,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5393,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5393,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5393,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5393,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5393,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5393,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 12252,
											"end": 12269,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12232,
											"end": 12269,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12232,
											"end": 12269,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 12228,
											"end": 12471,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 12228,
											"end": 12471,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12313,
											"end": 12319,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12293,
											"end": 12309,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12293,
											"end": 12319,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 12293,
											"end": 12319,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12285,
											"end": 12353,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 12285,
											"end": 12353,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12285,
											"end": 12353,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12285,
											"end": 12353,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12285,
											"end": 12353,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12285,
											"end": 12353,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12285,
											"end": 12353,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5594,
											"end": 5596,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12285,
											"end": 12353,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 12285,
											"end": 12353,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12285,
											"end": 12353,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5576,
											"end": 5597,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5633,
											"end": 5635,
											"name": "PUSH",
											"source": 6,
											"value": "1D"
										},
										{
											"begin": 5613,
											"end": 5631,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5613,
											"end": 5631,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5613,
											"end": 5631,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5606,
											"end": 5636,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5672,
											"end": 5703,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 5652,
											"end": 5670,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 5652,
											"end": 5670,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5652,
											"end": 5670,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5645,
											"end": 5704,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5721,
											"end": 5739,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 5721,
											"end": 5739,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12285,
											"end": 12353,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 5392,
											"end": 5745,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12285,
											"end": 12353,
											"name": "tag",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 12285,
											"end": 12353,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12395,
											"end": 12446,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 12404,
											"end": 12409,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12411,
											"end": 12418,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12439,
											"end": 12445,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12420,
											"end": 12436,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12420,
											"end": 12445,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12395,
											"end": 12403,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 12395,
											"end": 12446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12395,
											"end": 12446,
											"name": "tag",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 12395,
											"end": 12446,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12156,
											"end": 12477,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12036,
											"end": 12477,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12036,
											"end": 12477,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12036,
											"end": 12477,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12036,
											"end": 12477,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8750,
											"end": 9401,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 8750,
											"end": 9401,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8876,
											"end": 8894,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8876,
											"end": 8894,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8876,
											"end": 8894,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8868,
											"end": 8936,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 8868,
											"end": 8936,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8868,
											"end": 8936,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8868,
											"end": 8936,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8868,
											"end": 8936,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8868,
											"end": 8936,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8868,
											"end": 8936,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5952,
											"end": 5954,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8868,
											"end": 8936,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8868,
											"end": 8936,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8868,
											"end": 8936,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5934,
											"end": 5955,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5991,
											"end": 5993,
											"name": "PUSH",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 5971,
											"end": 5989,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5971,
											"end": 5989,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5971,
											"end": 5989,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5964,
											"end": 5994,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6030,
											"end": 6064,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 6010,
											"end": 6028,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 6010,
											"end": 6028,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6010,
											"end": 6028,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6003,
											"end": 6065,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6101,
											"end": 6108,
											"name": "PUSH",
											"source": 6,
											"value": "6472657373000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6081,
											"end": 6099,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 6081,
											"end": 6099,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6081,
											"end": 6099,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6074,
											"end": 6109,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6126,
											"end": 6145,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 6126,
											"end": 6145,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8868,
											"end": 8936,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 5750,
											"end": 6151,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8868,
											"end": 8936,
											"name": "tag",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 8868,
											"end": 8936,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8954,
											"end": 8970,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8954,
											"end": 8970,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8954,
											"end": 8970,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8946,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 8946,
											"end": 9010,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8946,
											"end": 9010,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8946,
											"end": 9010,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8946,
											"end": 9010,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8946,
											"end": 9010,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8946,
											"end": 9010,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6358,
											"end": 6360,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8946,
											"end": 9010,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8946,
											"end": 9010,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8946,
											"end": 9010,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6340,
											"end": 6361,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6397,
											"end": 6399,
											"name": "PUSH",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 6377,
											"end": 6395,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 6377,
											"end": 6395,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6377,
											"end": 6395,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6370,
											"end": 6400,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6436,
											"end": 6470,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 6416,
											"end": 6434,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 6416,
											"end": 6434,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6416,
											"end": 6434,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6409,
											"end": 6471,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6507,
											"end": 6512,
											"name": "PUSH",
											"source": 6,
											"value": "6573730000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6487,
											"end": 6505,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 6487,
											"end": 6505,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6487,
											"end": 6505,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6480,
											"end": 6513,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6530,
											"end": 6549,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 6530,
											"end": 6549,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8946,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 6156,
											"end": 6555,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8946,
											"end": 9010,
											"name": "tag",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 8946,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9092,
											"end": 9107,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9092,
											"end": 9107,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9092,
											"end": 9107,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9070,
											"end": 9089,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9092,
											"end": 9107,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9092,
											"end": 9107,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9092,
											"end": 9107,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9092,
											"end": 9107,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9092,
											"end": 9107,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9092,
											"end": 9107,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9092,
											"end": 9107,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9092,
											"end": 9107,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9092,
											"end": 9107,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9092,
											"end": 9107,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9092,
											"end": 9107,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9125,
											"end": 9146,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9125,
											"end": 9146,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9125,
											"end": 9146,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 9125,
											"end": 9146,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9117,
											"end": 9189,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 9117,
											"end": 9189,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9117,
											"end": 9189,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9117,
											"end": 9189,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9117,
											"end": 9189,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9117,
											"end": 9189,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9117,
											"end": 9189,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6762,
											"end": 6764,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9117,
											"end": 9189,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9117,
											"end": 9189,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9117,
											"end": 9189,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6744,
											"end": 6765,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6801,
											"end": 6803,
											"name": "PUSH",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 6781,
											"end": 6799,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 6781,
											"end": 6799,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6781,
											"end": 6799,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6774,
											"end": 6804,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6840,
											"end": 6874,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 6820,
											"end": 6838,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 6820,
											"end": 6838,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6820,
											"end": 6838,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6813,
											"end": 6875,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6911,
											"end": 6919,
											"name": "PUSH",
											"source": 6,
											"value": "616C616E63650000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6891,
											"end": 6909,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 6891,
											"end": 6909,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6891,
											"end": 6909,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6884,
											"end": 6920,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6937,
											"end": 6956,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 6937,
											"end": 6956,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9117,
											"end": 9189,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 6560,
											"end": 6962,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9117,
											"end": 9189,
											"name": "tag",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 9117,
											"end": 9189,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9223,
											"end": 9238,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9223,
											"end": 9238,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9223,
											"end": 9238,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9223,
											"end": 9238,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9223,
											"end": 9232,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9223,
											"end": 9238,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9223,
											"end": 9238,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9223,
											"end": 9238,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9223,
											"end": 9238,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9223,
											"end": 9238,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9223,
											"end": 9238,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9223,
											"end": 9238,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9223,
											"end": 9238,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9223,
											"end": 9238,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9223,
											"end": 9238,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9223,
											"end": 9238,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9241,
											"end": 9261,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9241,
											"end": 9261,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9241,
											"end": 9261,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9223,
											"end": 9261,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9223,
											"end": 9261,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 9281,
											"end": 9294,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9281,
											"end": 9294,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9281,
											"end": 9294,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9281,
											"end": 9294,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9281,
											"end": 9294,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9281,
											"end": 9294,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9281,
											"end": 9294,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9281,
											"end": 9294,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9281,
											"end": 9304,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9281,
											"end": 9304,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9255,
											"end": 9261,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9255,
											"end": 9261,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9223,
											"end": 9232,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9281,
											"end": 9304,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 9281,
											"end": 9304,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9255,
											"end": 9261,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9255,
											"end": 9261,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9281,
											"end": 9304,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 9281,
											"end": 9304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9281,
											"end": 9304,
											"name": "tag",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 9281,
											"end": 9304,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9281,
											"end": 9304,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9281,
											"end": 9304,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9281,
											"end": 9304,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9281,
											"end": 9304,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9281,
											"end": 9304,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9281,
											"end": 9304,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 9281,
											"end": 9304,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9335,
											"end": 9337,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9320,
											"end": 9346,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9320,
											"end": 9346,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9329,
											"end": 9333,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9320,
											"end": 9346,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9320,
											"end": 9346,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9320,
											"end": 9346,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9339,
											"end": 9345,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9320,
											"end": 9346,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9320,
											"end": 9346,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9320,
											"end": 9346,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 9320,
											"end": 9346,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1449,
											"end": 1474,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1449,
											"end": 1474,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1437,
											"end": 1439,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1422,
											"end": 1440,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1422,
											"end": 1440,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1303,
											"end": 1480,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9320,
											"end": 9346,
											"name": "tag",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 9320,
											"end": 9346,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9320,
											"end": 9346,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9320,
											"end": 9346,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9320,
											"end": 9346,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9320,
											"end": 9346,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9320,
											"end": 9346,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9320,
											"end": 9346,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9320,
											"end": 9346,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 9357,
											"end": 9394,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 13061,
											"end": 13182,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2634,
											"end": 2764,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 2634,
											"end": 2764,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2548,
											"end": 2554,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2548,
											"end": 2554,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2697,
											"end": 2720,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2548,
											"end": 2554,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1994,
											"end": 2004,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2697,
											"end": 2720,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2689,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 2689,
											"end": 2757,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2689,
											"end": 2757,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2689,
											"end": 2757,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2689,
											"end": 2757,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2689,
											"end": 2757,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2689,
											"end": 2757,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7169,
											"end": 7171,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2689,
											"end": 2757,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2689,
											"end": 2757,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2689,
											"end": 2757,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7151,
											"end": 7172,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7151,
											"end": 7172,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7151,
											"end": 7172,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7188,
											"end": 7206,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 7188,
											"end": 7206,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7188,
											"end": 7206,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7181,
											"end": 7211,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7247,
											"end": 7281,
											"name": "PUSH",
											"source": 6,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 7227,
											"end": 7245,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 7227,
											"end": 7245,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7227,
											"end": 7245,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7220,
											"end": 7282,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7299,
											"end": 7317,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 7299,
											"end": 7317,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2689,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 6967,
											"end": 7323,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3708,
											"end": 3895,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 3708,
											"end": 3895,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3800,
											"end": 3806,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3800,
											"end": 3806,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3800,
											"end": 3806,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3800,
											"end": 3806,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3816,
											"end": 3833,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3816,
											"end": 3833,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3816,
											"end": 3833,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3816,
											"end": 3833,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 3816,
											"end": 3833,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3816,
											"end": 3833,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3816,
											"end": 3833,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3816,
											"end": 3833,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 3816,
											"end": 3833,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3816,
											"end": 3833,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3816,
											"end": 3833,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3848,
											"end": 3888,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3848,
											"end": 3888,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3800,
											"end": 3806,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3800,
											"end": 3806,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3800,
											"end": 3806,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3816,
											"end": 3833,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3800,
											"end": 3806,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3800,
											"end": 3806,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3848,
											"end": 3888,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3848,
											"end": 3888,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3781,
											"end": 3797,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3781,
											"end": 3797,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3848,
											"end": 3888,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 3771,
											"end": 3895,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3708,
											"end": 3895,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3708,
											"end": 3895,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9677,
											"end": 10066,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 9677,
											"end": 10066,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9760,
											"end": 9781,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9760,
											"end": 9781,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9760,
											"end": 9781,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9752,
											"end": 9817,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 9752,
											"end": 9817,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9752,
											"end": 9817,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9752,
											"end": 9817,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9752,
											"end": 9817,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9752,
											"end": 9817,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9752,
											"end": 9817,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7530,
											"end": 7532,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9752,
											"end": 9817,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9752,
											"end": 9817,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9752,
											"end": 9817,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7512,
											"end": 7533,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7569,
											"end": 7571,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 7549,
											"end": 7567,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 7549,
											"end": 7567,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7549,
											"end": 7567,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7542,
											"end": 7572,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7608,
											"end": 7641,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 7588,
											"end": 7606,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 7588,
											"end": 7606,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7588,
											"end": 7606,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7581,
											"end": 7642,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7659,
											"end": 7677,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 7659,
											"end": 7677,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9752,
											"end": 9817,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 7328,
											"end": 7683,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9752,
											"end": 9817,
											"name": "tag",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 9752,
											"end": 9817,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9904,
											"end": 9910,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9888,
											"end": 9900,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 9888,
											"end": 9900,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9888,
											"end": 9910,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9888,
											"end": 9910,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9888,
											"end": 9910,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9888,
											"end": 9910,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 9888,
											"end": 9910,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9888,
											"end": 9910,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9888,
											"end": 9910,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 9888,
											"end": 9910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9888,
											"end": 9910,
											"name": "tag",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 9888,
											"end": 9910,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9888,
											"end": 9910,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9888,
											"end": 9910,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9888,
											"end": 9910,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9920,
											"end": 9938,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9920,
											"end": 9938,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 9938,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 9929,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9920,
											"end": 9938,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 9938,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 9938,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 9938,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9920,
											"end": 9938,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 9938,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 9938,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 9938,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9920,
											"end": 9938,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 9938,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 9948,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 9948,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9942,
											"end": 9948,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9942,
											"end": 9948,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 9929,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 9948,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 9920,
											"end": 9948,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9942,
											"end": 9948,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9942,
											"end": 9948,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 9948,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 9920,
											"end": 9948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 9948,
											"name": "tag",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 9920,
											"end": 9948,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 9948,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 9948,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 9948,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9963,
											"end": 10000,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9963,
											"end": 10000,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1449,
											"end": 1474,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1449,
											"end": 1474,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1449,
											"end": 1474,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9963,
											"end": 10000,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9963,
											"end": 10000,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9963,
											"end": 10000,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9963,
											"end": 10000,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9980,
											"end": 9981,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9980,
											"end": 9981,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9963,
											"end": 10000,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9963,
											"end": 10000,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1437,
											"end": 1439,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1422,
											"end": 1440,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9963,
											"end": 10000,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9963,
											"end": 10000,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9963,
											"end": 10000,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9963,
											"end": 10000,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9963,
											"end": 10000,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9963,
											"end": 10000,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9963,
											"end": 10000,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 2459,
											"end": 2554,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 2554,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 2554,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 600,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 14,
											"end": 600,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 163,
											"end": 165,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 152,
											"end": 161,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 145,
											"end": 166,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 201,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 189,
											"end": 202,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 238,
											"end": 244,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 233,
											"end": 235,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 222,
											"end": 231,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 218,
											"end": 236,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 211,
											"end": 245,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 263,
											"end": 264,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 273,
											"end": 413,
											"name": "tag",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 273,
											"end": 413,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 287,
											"end": 293,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 284,
											"end": 285,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 281,
											"end": 294,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 273,
											"end": 413,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 273,
											"end": 413,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 273,
											"end": 413,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 398,
											"end": 400,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 382,
											"end": 396,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 382,
											"end": 396,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 382,
											"end": 396,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 378,
											"end": 401,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 378,
											"end": 401,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 372,
											"end": 402,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 367,
											"end": 369,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 348,
											"end": 365,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 348,
											"end": 365,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 348,
											"end": 365,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 344,
											"end": 370,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 337,
											"end": 403,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 302,
											"end": 312,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 273,
											"end": 413,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 273,
											"end": 413,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 273,
											"end": 413,
											"name": "tag",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 273,
											"end": 413,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 277,
											"end": 280,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 462,
											"end": 463,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 457,
											"end": 459,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 448,
											"end": 454,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 437,
											"end": 446,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 433,
											"end": 455,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 429,
											"end": 460,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 422,
											"end": 464,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 591,
											"end": 593,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 521,
											"end": 587,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 516,
											"end": 518,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 514,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 504,
											"end": 519,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 500,
											"end": 588,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 489,
											"end": 498,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 485,
											"end": 589,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 481,
											"end": 594,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 473,
											"end": 594,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 473,
											"end": 594,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 473,
											"end": 594,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14,
											"end": 600,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 14,
											"end": 600,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14,
											"end": 600,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14,
											"end": 600,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14,
											"end": 600,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 605,
											"end": 801,
											"name": "tag",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 605,
											"end": 801,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 673,
											"end": 693,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 673,
											"end": 693,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 733,
											"end": 775,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 722,
											"end": 776,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 722,
											"end": 776,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 712,
											"end": 777,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 712,
											"end": 777,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 702,
											"end": 795,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 702,
											"end": 795,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 791,
											"end": 792,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 788,
											"end": 789,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 781,
											"end": 793,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 702,
											"end": 795,
											"name": "tag",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 702,
											"end": 795,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 605,
											"end": 801,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 605,
											"end": 801,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 605,
											"end": 801,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 605,
											"end": 801,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 806,
											"end": 1106,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 806,
											"end": 1106,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 874,
											"end": 880,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 882,
											"end": 888,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 935,
											"end": 937,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 923,
											"end": 932,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 914,
											"end": 921,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 910,
											"end": 933,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 906,
											"end": 938,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 903,
											"end": 955,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 903,
											"end": 955,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 903,
											"end": 955,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 951,
											"end": 952,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 948,
											"end": 949,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 941,
											"end": 953,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 903,
											"end": 955,
											"name": "tag",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 903,
											"end": 955,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 974,
											"end": 1003,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 993,
											"end": 1002,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 974,
											"end": 1003,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 974,
											"end": 1003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 974,
											"end": 1003,
											"name": "tag",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 974,
											"end": 1003,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 964,
											"end": 1003,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1074,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1057,
											"end": 1075,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1057,
											"end": 1075,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1057,
											"end": 1075,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1057,
											"end": 1075,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1076,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1076,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 806,
											"end": 1106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1485,
											"end": 1859,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 1485,
											"end": 1859,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1562,
											"end": 1568,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1578,
											"end": 1584,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1631,
											"end": 1633,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1619,
											"end": 1628,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1610,
											"end": 1617,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1606,
											"end": 1629,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1602,
											"end": 1634,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1599,
											"end": 1651,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1599,
											"end": 1651,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 1599,
											"end": 1651,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1647,
											"end": 1648,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1644,
											"end": 1645,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1637,
											"end": 1649,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1599,
											"end": 1651,
											"name": "tag",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 1599,
											"end": 1651,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1670,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 1689,
											"end": 1698,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1670,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 1670,
											"end": 1699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1670,
											"end": 1699,
											"name": "tag",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 1670,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1660,
											"end": 1699,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1660,
											"end": 1699,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1718,
											"end": 1756,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 1752,
											"end": 1754,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1741,
											"end": 1750,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1737,
											"end": 1755,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1718,
											"end": 1756,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 1718,
											"end": 1756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1718,
											"end": 1756,
											"name": "tag",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 1718,
											"end": 1756,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1485,
											"end": 1859,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1485,
											"end": 1859,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 1708,
											"end": 1756,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1708,
											"end": 1756,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1825,
											"end": 1827,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1810,
											"end": 1828,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1810,
											"end": 1828,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1810,
											"end": 1828,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1810,
											"end": 1828,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1797,
											"end": 1829,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1797,
											"end": 1829,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1485,
											"end": 1859,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2239,
											"name": "tag",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 2053,
											"end": 2239,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2112,
											"end": 2118,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2165,
											"end": 2167,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2153,
											"end": 2162,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2144,
											"end": 2151,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2140,
											"end": 2163,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2136,
											"end": 2168,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2133,
											"end": 2185,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2133,
											"end": 2185,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 2133,
											"end": 2185,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2181,
											"end": 2182,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2178,
											"end": 2179,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2171,
											"end": 2183,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2133,
											"end": 2185,
											"name": "tag",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 2133,
											"end": 2185,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2204,
											"end": 2233,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 2223,
											"end": 2232,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2204,
											"end": 2233,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 2204,
											"end": 2233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2204,
											"end": 2233,
											"name": "tag",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 2204,
											"end": 2233,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2194,
											"end": 2233,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2239,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2053,
											"end": 2239,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2475,
											"end": 2775,
											"name": "tag",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 2475,
											"end": 2775,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2549,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2551,
											"end": 2557,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2604,
											"end": 2606,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2592,
											"end": 2601,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2583,
											"end": 2590,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2602,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2575,
											"end": 2607,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2572,
											"end": 2624,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2572,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 2572,
											"end": 2624,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2620,
											"end": 2621,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2617,
											"end": 2618,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2610,
											"end": 2622,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2572,
											"end": 2624,
											"name": "tag",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 2572,
											"end": 2624,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2665,
											"end": 2688,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2665,
											"end": 2688,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2665,
											"end": 2688,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2731,
											"end": 2769,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 2765,
											"end": 2767,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2750,
											"end": 2768,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2750,
											"end": 2768,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2731,
											"end": 2769,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 2731,
											"end": 2769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2731,
											"end": 2769,
											"name": "tag",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 2731,
											"end": 2769,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2721,
											"end": 2769,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2721,
											"end": 2769,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2475,
											"end": 2775,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2475,
											"end": 2775,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2475,
											"end": 2775,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2475,
											"end": 2775,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2475,
											"end": 2775,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2475,
											"end": 2775,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2780,
											"end": 3040,
											"name": "tag",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 2780,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2848,
											"end": 2854,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2856,
											"end": 2862,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2909,
											"end": 2911,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2897,
											"end": 2906,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2888,
											"end": 2895,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2884,
											"end": 2907,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2880,
											"end": 2912,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2877,
											"end": 2929,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2877,
											"end": 2929,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 2877,
											"end": 2929,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2925,
											"end": 2926,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2922,
											"end": 2923,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2915,
											"end": 2927,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2877,
											"end": 2929,
											"name": "tag",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 2877,
											"end": 2929,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2948,
											"end": 2977,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 2967,
											"end": 2976,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2948,
											"end": 2977,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 2948,
											"end": 2977,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2948,
											"end": 2977,
											"name": "tag",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 2948,
											"end": 2977,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2938,
											"end": 2977,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2938,
											"end": 2977,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2996,
											"end": 3034,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 3030,
											"end": 3032,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3019,
											"end": 3028,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3015,
											"end": 3033,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2996,
											"end": 3034,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 2996,
											"end": 3034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3045,
											"end": 3482,
											"name": "tag",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 3045,
											"end": 3482,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3124,
											"end": 3125,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3120,
											"end": 3132,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3120,
											"end": 3132,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3120,
											"end": 3132,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 3120,
											"end": 3132,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3167,
											"end": 3179,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3167,
											"end": 3179,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3167,
											"end": 3179,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3188,
											"end": 3249,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 3188,
											"end": 3249,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3242,
											"end": 3246,
											"name": "PUSH",
											"source": 6,
											"value": "7F"
										},
										{
											"begin": 3234,
											"end": 3240,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3230,
											"end": 3247,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3220,
											"end": 3247,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3220,
											"end": 3247,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3188,
											"end": 3249,
											"name": "tag",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 3188,
											"end": 3249,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3295,
											"end": 3297,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3287,
											"end": 3293,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3284,
											"end": 3298,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3282,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3299,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3258,
											"end": 3476,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 3258,
											"end": 3476,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3332,
											"end": 3409,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3329,
											"end": 3330,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3322,
											"end": 3410,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3433,
											"end": 3437,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 3430,
											"end": 3431,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3423,
											"end": 3438,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3461,
											"end": 3465,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3458,
											"end": 3459,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3451,
											"end": 3466,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3258,
											"end": 3476,
											"name": "tag",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 3258,
											"end": 3476,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3258,
											"end": 3476,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3045,
											"end": 3482,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3045,
											"end": 3482,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3045,
											"end": 3482,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3045,
											"end": 3482,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3487,
											"end": 3766,
											"name": "tag",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 3487,
											"end": 3766,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3552,
											"end": 3561,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3552,
											"end": 3561,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3552,
											"end": 3561,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3573,
											"end": 3583,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3573,
											"end": 3583,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3573,
											"end": 3583,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3570,
											"end": 3760,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3570,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 3570,
											"end": 3760,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3616,
											"end": 3693,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3613,
											"end": 3614,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3606,
											"end": 3694,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3717,
											"end": 3721,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 3714,
											"end": 3715,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3707,
											"end": 3722,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3745,
											"end": 3749,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3742,
											"end": 3743,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3735,
											"end": 3750,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"mintable-token(copy)(copy)/mintable-token.sol",
								"mintable-token/@openzeppelin/contracts/access/Ownable.sol",
								"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"mintable-token/@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"mintable-token/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"mintable-token/@openzeppelin/contracts/utils/Context.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"mint(uint256,address)": "94bf804d",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Breakthrough Labs Inc.\",\"custom:address\":\"5\",\"custom:default-precision\":\"18\",\"custom:simple-description\":\"Token that allows the owner to mint as many tokens as desired.\",\"custom:version\":\"1.0.7\",\"details\":\"ERC20 token with the following features:  - Premint your initial supply.  - Mint as many tokens as you want with no cap.  - Only the contract owner can mint new tokens.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"params\":{\"initialSupply\":\"Initial Supply\",\"name\":\"Token Name\",\"symbol\":\"Token Symbol\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"mint(uint256,address)\":{\"details\":\"Creates `amount` tokens and assigns them to `to`, increasing the total supply. Only accessible by the contract owner.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"Mintable Token\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Token, ERC20, Mintable\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"mintable-token(copy)(copy)/mintable-token.sol\":\"MintableToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":5000000},\"remappings\":[]},\"sources\":{\"mintable-token(copy)(copy)/mintable-token.sol\":{\"keccak256\":\"0xea0a72bdd7ae086ba430b85cfa1a35da7485f7d70fe92dd16be57dd15d73a46d\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://4af0327a47f41facef1bc5e292d58dbe5095f3966738992fc8b02a2b6bf16d46\",\"dweb:/ipfs/QmXWtbKLkrGQjbefy4YQhnqtJ8KJocJrqrzY7XhDMqYwwk\"]},\"mintable-token/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xf05da373463cf6d01cb87211d1f758e87329cefc2cf17f2294760c53465c8eb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e2644a580ac338fa2fa93f463c4552ace27cfb884c118574f260e03fd7f1bb1c\",\"dweb:/ipfs/QmU1zmfdxb64MKQ5J8roe7v64k29fkrxMKdD2wXksJZkSk\"]},\"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xfe852965027dde45d9f40b4562bc36956a82d791efb3698e6f207d21668a8e1a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cd4e1f7d3fd2bc01a33f144a86b9b3f6d1fafae53ed4c9f79db227711031653\",\"dweb:/ipfs/QmeNhBsPRSA43ZpPVqmP1K9DeyvKrZoz2x1MsJFXbjwyCb\"]},\"mintable-token/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x6c007a17cced139722dc96ad462eb69f5e2d93744875b19e077cff1ef1bb2e6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://192f293037134b402dd09b0c8825c0f8d759a71c2ef17a1a5fcfbb77cbd120fa\",\"dweb:/ipfs/QmdSuMhY51TRmQ3qyYQrNbuU52v6yZatWVcChtnH5CFYPg\"]},\"mintable-token/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xb240625569719274603083dffbf2bb043f84695d22a7e8357f94b0e8dce0819e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://671ef5dbe12cd0feaf50dfdcd7bfb1108f2eefe283b2c30076374388fd94b46d\",\"dweb:/ipfs/QmXT2aocpvjE3QWFE8rhZ5d6dPPinK64xwNzMmZYdRDfzT\"]},\"mintable-token/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xf4835196ff5e1d34fbaddbb7553c233c939c58fc7449980563c3a4ebd6470037\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07aec331fdd1760504e9213505dc2cc00713166fd51cbb4ffa27ac769e0f8878\",\"dweb:/ipfs/QmSpoSTeh4AvaNd1oAf2zL2tsYxvYSPQxwrr4PNtAy3uZj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 175,
								"contract": "mintable-token(copy)(copy)/mintable-token.sol:MintableToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 181,
								"contract": "mintable-token(copy)(copy)/mintable-token.sol:MintableToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 183,
								"contract": "mintable-token(copy)(copy)/mintable-token.sol:MintableToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 185,
								"contract": "mintable-token(copy)(copy)/mintable-token.sol:MintableToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 187,
								"contract": "mintable-token(copy)(copy)/mintable-token.sol:MintableToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 54,
								"contract": "mintable-token(copy)(copy)/mintable-token.sol:MintableToken",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Token, ERC20, Mintable",
						"version": 1
					}
				}
			},
			"mintable-token/@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"mintable-token/@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":5000000},\"remappings\":[]},\"sources\":{\"mintable-token/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xf05da373463cf6d01cb87211d1f758e87329cefc2cf17f2294760c53465c8eb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e2644a580ac338fa2fa93f463c4552ace27cfb884c118574f260e03fd7f1bb1c\",\"dweb:/ipfs/QmU1zmfdxb64MKQ5J8roe7v64k29fkrxMKdD2wXksJZkSk\"]},\"mintable-token/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xf4835196ff5e1d34fbaddbb7553c233c939c58fc7449980563c3a4ebd6470037\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07aec331fdd1760504e9213505dc2cc00713166fd51cbb4ffa27ac769e0f8878\",\"dweb:/ipfs/QmSpoSTeh4AvaNd1oAf2zL2tsYxvYSPQxwrr4PNtAy3uZj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 54,
								"contract": "mintable-token/@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2678:13892  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  mstore(0x40, 0x80)\n    /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3253:3366  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3319:3324  _name */\n  0x03\n    /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3319:3332  _name = name_ */\n  tag_6\n    /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3327:3332  name_ */\n  dup4\n    /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3319:3324  _name */\n  dup3\n    /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3319:3332  _name = name_ */\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3342:3349  _symbol */\n  0x04\n    /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3342:3359  _symbol = symbol_ */\n  tag_8\n    /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3352:3359  symbol_ */\n  dup3\n    /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3342:3349  _symbol */\n  dup3\n    /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3342:3359  _symbol = symbol_ */\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3253:3366  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2678:13892  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  jump(tag_16)\n    /* \"#utility.yul\":14:141   */\ntag_10:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:980   */\ntag_11:\n    /* \"#utility.yul\":200:205   */\n  0x00\n    /* \"#utility.yul\":253:256   */\n  dup3\n    /* \"#utility.yul\":246:250   */\n  0x1f\n    /* \"#utility.yul\":238:244   */\n  dup4\n    /* \"#utility.yul\":234:251   */\n  add\n    /* \"#utility.yul\":230:257   */\n  slt\n    /* \"#utility.yul\":220:275   */\n  tag_19\n  jumpi\n    /* \"#utility.yul\":271:272   */\n  0x00\n    /* \"#utility.yul\":268:269   */\n  dup1\n    /* \"#utility.yul\":261:273   */\n  revert\n    /* \"#utility.yul\":220:275   */\ntag_19:\n    /* \"#utility.yul\":298:311   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":323:353   */\n  dup2\n  gt\n    /* \"#utility.yul\":320:376   */\n  iszero\n  tag_21\n  jumpi\n    /* \"#utility.yul\":356:374   */\n  tag_21\n  tag_10\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":405:407   */\n  0x40\n    /* \"#utility.yul\":399:408   */\n  mload\n    /* \"#utility.yul\":497:499   */\n  0x1f\n    /* \"#utility.yul\":459:476   */\n  dup3\n  add\n  not(0x1f)\n    /* \"#utility.yul\":455:486   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":488:490   */\n  0x3f\n    /* \"#utility.yul\":451:491   */\n  add\n    /* \"#utility.yul\":447:501   */\n  and\n    /* \"#utility.yul\":435:502   */\n  dup2\n  add\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":517:551   */\n  dup2\n  gt\n    /* \"#utility.yul\":553:575   */\n  dup3\n  dup3\n  lt\n    /* \"#utility.yul\":514:576   */\n  or\n    /* \"#utility.yul\":511:599   */\n  iszero\n  tag_23\n  jumpi\n    /* \"#utility.yul\":579:597   */\n  tag_23\n  tag_10\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":615:617   */\n  0x40\n    /* \"#utility.yul\":608:630   */\n  mstore\n    /* \"#utility.yul\":639:661   */\n  dup2\n  dup2\n  mstore\n    /* \"#utility.yul\":680:699   */\n  dup4\n  dup3\n  add\n    /* \"#utility.yul\":701:705   */\n  0x20\n    /* \"#utility.yul\":676:706   */\n  add\n    /* \"#utility.yul\":673:712   */\n  dup6\n  lt\n    /* \"#utility.yul\":670:729   */\n  iszero\n  tag_24\n  jumpi\n    /* \"#utility.yul\":725:726   */\n  0x00\n    /* \"#utility.yul\":722:723   */\n  dup1\n    /* \"#utility.yul\":715:727   */\n  revert\n    /* \"#utility.yul\":670:729   */\ntag_24:\n    /* \"#utility.yul\":747:748   */\n  0x00\n    /* \"#utility.yul\":757:900   */\ntag_25:\n    /* \"#utility.yul\":771:777   */\n  dup3\n    /* \"#utility.yul\":768:769   */\n  dup2\n    /* \"#utility.yul\":765:778   */\n  lt\n    /* \"#utility.yul\":757:900   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":883:887   */\n  0x20\n    /* \"#utility.yul\":867:881   */\n  dup2\n  dup7\n  add\n    /* \"#utility.yul\":863:888   */\n  dup2\n  add\n    /* \"#utility.yul\":857:889   */\n  mload\n    /* \"#utility.yul\":834:848   */\n  dup4\n  dup4\n  add\n    /* \"#utility.yul\":830:855   */\n  dup3\n  add\n    /* \"#utility.yul\":823:890   */\n  mstore\n    /* \"#utility.yul\":786:798   */\n  add\n    /* \"#utility.yul\":757:900   */\n  jump(tag_25)\ntag_27:\n  pop\n    /* \"#utility.yul\":948:949   */\n  0x00\n    /* \"#utility.yul\":920:939   */\n  swap2\n  dup2\n  add\n    /* \"#utility.yul\":941:945   */\n  0x20\n    /* \"#utility.yul\":916:946   */\n  add\n    /* \"#utility.yul\":909:950   */\n  swap2\n  swap1\n  swap2\n  mstore\n    /* \"#utility.yul\":924:930   */\n  swap4\n    /* \"#utility.yul\":146:980   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":985:1542   */\ntag_3:\n    /* \"#utility.yul\":1084:1090   */\n  0x00\n    /* \"#utility.yul\":1092:1098   */\n  dup1\n    /* \"#utility.yul\":1145:1147   */\n  0x40\n    /* \"#utility.yul\":1133:1142   */\n  dup4\n    /* \"#utility.yul\":1124:1131   */\n  dup6\n    /* \"#utility.yul\":1120:1143   */\n  sub\n    /* \"#utility.yul\":1116:1148   */\n  slt\n    /* \"#utility.yul\":1113:1165   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":1161:1162   */\n  0x00\n    /* \"#utility.yul\":1158:1159   */\n  dup1\n    /* \"#utility.yul\":1151:1163   */\n  revert\n    /* \"#utility.yul\":1113:1165   */\ntag_29:\n    /* \"#utility.yul\":1188:1204   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1216:1246   */\n  dup2\n  gt\n    /* \"#utility.yul\":1213:1263   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":1259:1260   */\n  0x00\n    /* \"#utility.yul\":1256:1257   */\n  dup1\n    /* \"#utility.yul\":1249:1261   */\n  revert\n    /* \"#utility.yul\":1213:1263   */\ntag_30:\n    /* \"#utility.yul\":1282:1343   */\n  tag_31\n    /* \"#utility.yul\":1335:1342   */\n  dup6\n    /* \"#utility.yul\":1326:1332   */\n  dup3\n    /* \"#utility.yul\":1315:1324   */\n  dup7\n    /* \"#utility.yul\":1311:1333   */\n  add\n    /* \"#utility.yul\":1282:1343   */\n  tag_11\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":1389:1391   */\n  0x20\n    /* \"#utility.yul\":1374:1392   */\n  dup6\n  add\n    /* \"#utility.yul\":1368:1393   */\n  mload\n    /* \"#utility.yul\":1272:1343   */\n  swap1\n  swap4\n  pop\n    /* \"#utility.yul\":1368:1393   */\n  swap1\n  pop\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1405:1437   */\n  dup2\n  gt\n    /* \"#utility.yul\":1402:1454   */\n  iszero\n  tag_32\n  jumpi\n    /* \"#utility.yul\":1450:1451   */\n  0x00\n    /* \"#utility.yul\":1447:1448   */\n  dup1\n    /* \"#utility.yul\":1440:1452   */\n  revert\n    /* \"#utility.yul\":1402:1454   */\ntag_32:\n    /* \"#utility.yul\":1473:1536   */\n  tag_33\n    /* \"#utility.yul\":1528:1535   */\n  dup6\n    /* \"#utility.yul\":1517:1525   */\n  dup3\n    /* \"#utility.yul\":1506:1515   */\n  dup7\n    /* \"#utility.yul\":1502:1526   */\n  add\n    /* \"#utility.yul\":1473:1536   */\n  tag_11\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":1463:1536   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":985:1542   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1547:1927   */\ntag_12:\n    /* \"#utility.yul\":1626:1627   */\n  0x01\n    /* \"#utility.yul\":1622:1634   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1669:1681   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1690:1751   */\n  tag_35\n  jumpi\n    /* \"#utility.yul\":1744:1748   */\n  0x7f\n    /* \"#utility.yul\":1736:1742   */\n  dup3\n    /* \"#utility.yul\":1732:1749   */\n  and\n    /* \"#utility.yul\":1722:1749   */\n  swap2\n  pop\n    /* \"#utility.yul\":1690:1751   */\ntag_35:\n    /* \"#utility.yul\":1797:1799   */\n  0x20\n    /* \"#utility.yul\":1789:1795   */\n  dup3\n    /* \"#utility.yul\":1786:1800   */\n  lt\n    /* \"#utility.yul\":1766:1784   */\n  dup2\n    /* \"#utility.yul\":1763:1801   */\n  sub\n    /* \"#utility.yul\":1760:1921   */\n  tag_36\n  jumpi\n    /* \"#utility.yul\":1843:1853   */\n  0x4e487b71\n    /* \"#utility.yul\":1838:1841   */\n  0xe0\n    /* \"#utility.yul\":1834:1854   */\n  shl\n    /* \"#utility.yul\":1831:1832   */\n  0x00\n    /* \"#utility.yul\":1824:1855   */\n  mstore\n    /* \"#utility.yul\":1878:1882   */\n  0x22\n    /* \"#utility.yul\":1875:1876   */\n  0x04\n    /* \"#utility.yul\":1868:1883   */\n  mstore\n    /* \"#utility.yul\":1906:1910   */\n  0x24\n    /* \"#utility.yul\":1903:1904   */\n  0x00\n    /* \"#utility.yul\":1896:1911   */\n  revert\n    /* \"#utility.yul\":1760:1921   */\ntag_36:\n  pop\n    /* \"#utility.yul\":1547:1927   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2058:2576   */\ntag_14:\n    /* \"#utility.yul\":2160:2162   */\n  0x1f\n    /* \"#utility.yul\":2155:2158   */\n  dup3\n    /* \"#utility.yul\":2152:2163   */\n  gt\n    /* \"#utility.yul\":2149:2570   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":2196:2201   */\n  dup1\n    /* \"#utility.yul\":2193:2194   */\n  0x00\n    /* \"#utility.yul\":2186:2202   */\n  mstore\n    /* \"#utility.yul\":2240:2244   */\n  0x20\n    /* \"#utility.yul\":2237:2238   */\n  0x00\n    /* \"#utility.yul\":2227:2245   */\n  keccak256\n    /* \"#utility.yul\":2310:2312   */\n  0x1f\n    /* \"#utility.yul\":2298:2308   */\n  dup5\n    /* \"#utility.yul\":2294:2313   */\n  add\n    /* \"#utility.yul\":2291:2292   */\n  0x05\n    /* \"#utility.yul\":2287:2314   */\n  shr\n    /* \"#utility.yul\":2281:2285   */\n  dup2\n    /* \"#utility.yul\":2277:2315   */\n  add\n    /* \"#utility.yul\":2346:2350   */\n  0x20\n    /* \"#utility.yul\":2334:2344   */\n  dup6\n    /* \"#utility.yul\":2331:2351   */\n  lt\n    /* \"#utility.yul\":2328:2375   */\n  iszero\n  tag_40\n  jumpi\n  pop\n    /* \"#utility.yul\":2369:2373   */\n  dup1\n    /* \"#utility.yul\":2328:2375   */\ntag_40:\n    /* \"#utility.yul\":2424:2426   */\n  0x1f\n    /* \"#utility.yul\":2419:2422   */\n  dup5\n    /* \"#utility.yul\":2415:2427   */\n  add\n    /* \"#utility.yul\":2412:2413   */\n  0x05\n    /* \"#utility.yul\":2408:2428   */\n  shr\n    /* \"#utility.yul\":2402:2406   */\n  dup3\n    /* \"#utility.yul\":2398:2429   */\n  add\n    /* \"#utility.yul\":2388:2429   */\n  swap2\n  pop\n    /* \"#utility.yul\":2479:2560   */\ntag_41:\n    /* \"#utility.yul\":2497:2499   */\n  dup2\n    /* \"#utility.yul\":2490:2495   */\n  dup2\n    /* \"#utility.yul\":2487:2500   */\n  lt\n    /* \"#utility.yul\":2479:2560   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":2556:2557   */\n  0x00\n    /* \"#utility.yul\":2542:2558   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2523:2524   */\n  0x01\n    /* \"#utility.yul\":2512:2525   */\n  add\n    /* \"#utility.yul\":2479:2560   */\n  jump(tag_41)\ntag_43:\n    /* \"#utility.yul\":2483:2486   */\n  pop\n  pop\n    /* \"#utility.yul\":2149:2570   */\ntag_39:\n    /* \"#utility.yul\":2058:2576   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2752:4051   */\ntag_7:\n    /* \"#utility.yul\":2872:2882   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":2894:2924   */\n  dup2\n  gt\n    /* \"#utility.yul\":2891:2947   */\n  iszero\n  tag_47\n  jumpi\n    /* \"#utility.yul\":2927:2945   */\n  tag_47\n  tag_10\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":2956:3053   */\n  tag_48\n    /* \"#utility.yul\":3046:3052   */\n  dup2\n    /* \"#utility.yul\":3006:3044   */\n  tag_49\n    /* \"#utility.yul\":3038:3042   */\n  dup5\n    /* \"#utility.yul\":3032:3043   */\n  sload\n    /* \"#utility.yul\":3006:3044   */\n  tag_12\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":3000:3004   */\n  dup5\n    /* \"#utility.yul\":2956:3053   */\n  tag_14\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":3102:3106   */\n  0x20\n    /* \"#utility.yul\":3133:3135   */\n  0x1f\n    /* \"#utility.yul\":3122:3136   */\n  dup3\n  gt\n    /* \"#utility.yul\":3150:3151   */\n  0x01\n    /* \"#utility.yul\":3145:3794   */\n  dup2\n  eq\n  tag_51\n  jumpi\n    /* \"#utility.yul\":3838:3839   */\n  0x00\n    /* \"#utility.yul\":3855:3861   */\n  dup4\n    /* \"#utility.yul\":3852:3941   */\n  iszero\n  tag_52\n  jumpi\n  pop\n    /* \"#utility.yul\":3907:3926   */\n  dup5\n  dup3\n  add\n    /* \"#utility.yul\":3901:3927   */\n  mload\n    /* \"#utility.yul\":3852:3941   */\ntag_52:\n  not(0x00)\n    /* \"#utility.yul\":2709:2710   */\n  0x03\n    /* \"#utility.yul\":2705:2716   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":2701:2725   */\n  shr\n    /* \"#utility.yul\":2697:2726   */\n  not\n    /* \"#utility.yul\":2687:2727   */\n  and\n    /* \"#utility.yul\":2733:2734   */\n  0x01\n    /* \"#utility.yul\":2729:2740   */\n  dup5\n  swap1\n  shl\n    /* \"#utility.yul\":2684:2741   */\n  or\n    /* \"#utility.yul\":3954:4035   */\n  dup5\n  sstore\n    /* \"#utility.yul\":3115:4045   */\n  jump(tag_43)\n    /* \"#utility.yul\":3145:3794   */\ntag_51:\n    /* \"#utility.yul\":2005:2006   */\n  0x00\n    /* \"#utility.yul\":1998:2012   */\n  dup5\n  dup2\n  mstore\n    /* \"#utility.yul\":2042:2046   */\n  0x20\n    /* \"#utility.yul\":2029:2047   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":3181:3201   */\n  dup6\n  and\n  swap2\n    /* \"#utility.yul\":3299:3521   */\ntag_55:\n    /* \"#utility.yul\":3313:3320   */\n  dup3\n    /* \"#utility.yul\":3310:3311   */\n  dup2\n    /* \"#utility.yul\":3307:3321   */\n  lt\n    /* \"#utility.yul\":3299:3521   */\n  iszero\n  tag_57\n  jumpi\n    /* \"#utility.yul\":3395:3414   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":3389:3415   */\n  mload\n    /* \"#utility.yul\":3374:3416   */\n  dup3\n  sstore\n    /* \"#utility.yul\":3502:3506   */\n  0x20\n    /* \"#utility.yul\":3487:3507   */\n  swap5\n  dup6\n  add\n  swap5\n    /* \"#utility.yul\":3455:3456   */\n  0x01\n    /* \"#utility.yul\":3443:3457   */\n  swap1\n  swap3\n  add\n  swap2\n    /* \"#utility.yul\":3329:3341   */\n  add\n    /* \"#utility.yul\":3299:3521   */\n  jump(tag_55)\ntag_57:\n    /* \"#utility.yul\":3303:3306   */\n  pop\n    /* \"#utility.yul\":3549:3555   */\n  dup5\n    /* \"#utility.yul\":3540:3547   */\n  dup3\n    /* \"#utility.yul\":3537:3556   */\n  lt\n    /* \"#utility.yul\":3534:3735   */\n  iszero\n  tag_58\n  jumpi\n    /* \"#utility.yul\":3610:3629   */\n  dup7\n  dup5\n  add\n    /* \"#utility.yul\":3604:3630   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":3693:3694   */\n  0x03\n    /* \"#utility.yul\":3689:3703   */\n  dup8\n  swap1\n  shl\n    /* \"#utility.yul\":3705:3708   */\n  0xf8\n    /* \"#utility.yul\":3685:3709   */\n  and\n    /* \"#utility.yul\":3681:3718   */\n  shr\n    /* \"#utility.yul\":3677:3719   */\n  not\n    /* \"#utility.yul\":3662:3720   */\n  and\n    /* \"#utility.yul\":3647:3721   */\n  dup2\n  sstore\n    /* \"#utility.yul\":3534:3735   */\ntag_58:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3781:3782   */\n  0x01\n    /* \"#utility.yul\":3765:3779   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":3761:3783   */\n  add\n    /* \"#utility.yul\":3748:3784   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":2752:4051   */\n  jump\t// out\ntag_16:\n    /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2678:13892  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2678:13892  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0xa457c2d7\n      gt\n      tag_15\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_15:\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      dup1\n      0x18160ddd\n      gt\n      tag_16\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3431:3529  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5708:5905  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_21\n      tag_22\n      calldatasize\n      0x04\n      tag_23\n      jump\t// in\n    tag_22:\n      tag_24\n      jump\t// in\n    tag_21:\n      mload(0x40)\n        /* \"#utility.yul\":1276:1290   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1269:1291   */\n      iszero\n        /* \"#utility.yul\":1251:1292   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1239:1241   */\n      0x20\n        /* \"#utility.yul\":1224:1242   */\n      add\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5708:5905  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      tag_19\n        /* \"#utility.yul\":1111:1298   */\n      jump\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4519:4625  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4606:4618  _totalSupply */\n      sload(0x02)\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4519:4625  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_27:\n      mload(0x40)\n        /* \"#utility.yul\":1449:1474   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1437:1439   */\n      0x20\n        /* \"#utility.yul\":1422:1440   */\n      add\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4519:4625  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_19\n        /* \"#utility.yul\":1303:1480   */\n      jump\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6467:6753  function transferFrom(... */\n    tag_6:\n      tag_21\n      tag_32\n      calldatasize\n      0x04\n      tag_33\n      jump\t// in\n    tag_32:\n      tag_34\n      jump\t// in\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4368:4459  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4450:4452  18 */\n      0x12\n        /* \"#utility.yul\":2006:2042   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1994:1996   */\n      0x20\n        /* \"#utility.yul\":1979:1997   */\n      add\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4368:4459  function decimals() public view virtual override returns (uint8) {... */\n      tag_19\n        /* \"#utility.yul\":1864:2048   */\n      jump\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7148:7382  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_21\n      tag_41\n      calldatasize\n      0x04\n      tag_23\n      jump\t// in\n    tag_41:\n      tag_42\n      jump\t// in\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4683:4808  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_27\n      tag_45\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_45:\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4783:4801  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:4764  uint256 */\n      0x00\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4783:4801  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4683:4808  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3642:3744  function symbol() public view virtual override returns (string memory) {... */\n    tag_10:\n      tag_17\n      tag_50\n      jump\t// in\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7869:8296  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_21\n      tag_53\n      calldatasize\n      0x04\n      tag_23\n      jump\t// in\n    tag_53:\n      tag_54\n      jump\t// in\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5004:5193  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_21\n      tag_57\n      calldatasize\n      0x04\n      tag_23\n      jump\t// in\n    tag_57:\n      tag_58\n      jump\t// in\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5251:5400  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_27\n      tag_61\n      calldatasize\n      0x04\n      tag_62\n      jump\t// in\n    tag_61:\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5366:5384  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap2\n      dup3\n      and\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5340:5347  uint256 */\n      0x00\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5366:5384  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5366:5377  _allowances */\n      0x01\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5366:5384  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5366:5393  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5251:5400  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3431:3529  function name() public view virtual override returns (string memory) {... */\n    tag_18:\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3485:3498  string memory */\n      0x60\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3517:3522  _name */\n      0x03\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3510:3522  return _name */\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_68\n      swap1\n      tag_67\n      jump\t// in\n    tag_68:\n      dup1\n      iszero\n      tag_69\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_70\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_69)\n    tag_70:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_71:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_71\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_69:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3431:3529  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5708:5905  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_24:\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5791:5795  bool */\n      0x00\n        /* \"mintable-token/@openzeppelin/contracts/utils/Context.sol\":1994:2004  msg.sender */\n      caller\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5845:5877  _approve(owner, spender, amount) */\n      tag_75\n        /* \"mintable-token/@openzeppelin/contracts/utils/Context.sol\":1994:2004  msg.sender */\n      dup2\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5861:5868  spender */\n      dup6\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5870:5876  amount */\n      dup6\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5845:5853  _approve */\n      tag_76\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5845:5877  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_75:\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5894:5898  true */\n      0x01\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5887:5898  return true */\n      swap2\n      pop\n      pop\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5708:5905  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_72:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6467:6753  function transferFrom(... */\n    tag_34:\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6594:6598  bool */\n      0x00\n        /* \"mintable-token/@openzeppelin/contracts/utils/Context.sol\":1994:2004  msg.sender */\n      caller\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6650:6688  _spendAllowance(from, spender, amount) */\n      tag_80\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6666:6670  from */\n      dup6\n        /* \"mintable-token/@openzeppelin/contracts/utils/Context.sol\":1994:2004  msg.sender */\n      dup3\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6681:6687  amount */\n      dup6\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6650:6665  _spendAllowance */\n      tag_81\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6650:6688  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_80:\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6698:6725  _transfer(from, to, amount) */\n      tag_82\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6708:6712  from */\n      dup6\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6714:6716  to */\n      dup6\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6718:6724  amount */\n      dup6\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6698:6707  _transfer */\n      tag_83\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6698:6725  _transfer(from, to, amount) */\n      jump\t// in\n    tag_82:\n      pop\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6742:6746  true */\n      0x01\n      swap5\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6467:6753  function transferFrom(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7148:7382  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_42:\n        /* \"mintable-token/@openzeppelin/contracts/utils/Context.sol\":1994:2004  msg.sender */\n      caller\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7236:7240  bool */\n      0x00\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5366:5384  _allowances[owner] */\n      dup2\n      dup2\n      mstore\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5366:5377  _allowances */\n      0x01\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5366:5384  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5366:5393  _allowances[owner][spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7236:7240  bool */\n      swap1\n      swap2\n        /* \"mintable-token/@openzeppelin/contracts/utils/Context.sol\":1994:2004  msg.sender */\n      swap1\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7290:7354  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_75\n      swap1\n        /* \"mintable-token/@openzeppelin/contracts/utils/Context.sol\":1994:2004  msg.sender */\n      dup3\n      swap1\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5366:5393  _allowances[owner][spender] */\n      dup7\n      swap1\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7315:7353  allowance(owner, spender) + addedValue */\n      tag_89\n      swap1\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7343:7353  addedValue */\n      dup8\n      swap1\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7315:7353  allowance(owner, spender) + addedValue */\n      tag_90\n      jump\t// in\n    tag_89:\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7290:7298  _approve */\n      tag_76\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7290:7354  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3642:3744  function symbol() public view virtual override returns (string memory) {... */\n    tag_50:\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3698:3711  string memory */\n      0x60\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3730:3737  _symbol */\n      0x04\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3723:3737  return _symbol */\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_67\n      jump\t// in\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7869:8296  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_54:\n        /* \"mintable-token/@openzeppelin/contracts/utils/Context.sol\":1994:2004  msg.sender */\n      caller\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7962:7966  bool */\n      0x00\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5366:5384  _allowances[owner] */\n      dup2\n      dup2\n      mstore\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5366:5377  _allowances */\n      0x01\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5366:5384  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5366:5393  _allowances[owner][spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7962:7966  bool */\n      swap1\n      swap2\n        /* \"mintable-token/@openzeppelin/contracts/utils/Context.sol\":1994:2004  msg.sender */\n      swap1\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8106:8121  subtractedValue */\n      dup4\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8086:8102  currentAllowance */\n      dup2\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8086:8121  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8078:8163  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_101\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":3437:3439   */\n      0x20\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8078:8163  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3419:3440   */\n      mstore\n        /* \"#utility.yul\":3476:3478   */\n      0x25\n        /* \"#utility.yul\":3456:3474   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3449:3479   */\n      mstore\n        /* \"#utility.yul\":3515:3549   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":3495:3513   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3488:3550   */\n      mstore\n        /* \"#utility.yul\":3586:3593   */\n      0x207a65726f000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3566:3584   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3559:3594   */\n      mstore\n        /* \"#utility.yul\":3611:3630   */\n      0x84\n      add\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8078:8163  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_102:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_101:\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8197:8257  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_82\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8206:8211  owner */\n      dup3\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8213:8220  spender */\n      dup7\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8241:8256  subtractedValue */\n      dup7\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8222:8238  currentAllowance */\n      dup5\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8222:8256  currentAllowance - subtractedValue */\n      sub\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8197:8205  _approve */\n      tag_76\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8197:8257  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5004:5193  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_58:\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5083:5087  bool */\n      0x00\n        /* \"mintable-token/@openzeppelin/contracts/utils/Context.sol\":1994:2004  msg.sender */\n      caller\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5137:5165  _transfer(owner, to, amount) */\n      tag_75\n        /* \"mintable-token/@openzeppelin/contracts/utils/Context.sol\":1994:2004  msg.sender */\n      dup2\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5154:5156  to */\n      dup6\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5158:5164  amount */\n      dup6\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5137:5146  _transfer */\n      tag_83\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5137:5165  _transfer(owner, to, amount) */\n      jump\t// in\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11385:11755  function _approve(... */\n    tag_76:\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11516:11535  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup4\n      and\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11508:11576  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_111\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":3843:3845   */\n      0x20\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11508:11576  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3825:3846   */\n      mstore\n        /* \"#utility.yul\":3882:3884   */\n      0x24\n        /* \"#utility.yul\":3862:3880   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3855:3885   */\n      mstore\n        /* \"#utility.yul\":3921:3955   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":3901:3919   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3894:3956   */\n      mstore\n        /* \"#utility.yul\":3992:3998   */\n      0x7265737300000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3972:3990   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3965:3999   */\n      mstore\n        /* \"#utility.yul\":4016:4035   */\n      0x84\n      add\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11508:11576  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_102\n        /* \"#utility.yul\":3641:4041   */\n      jump\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11508:11576  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_111:\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11594:11615  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup3\n      and\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11586:11654  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_114\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":4248:4250   */\n      0x20\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11586:11654  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4230:4251   */\n      mstore\n        /* \"#utility.yul\":4287:4289   */\n      0x22\n        /* \"#utility.yul\":4267:4285   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4260:4290   */\n      mstore\n        /* \"#utility.yul\":4326:4360   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":4306:4324   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4299:4361   */\n      mstore\n        /* \"#utility.yul\":4397:4401   */\n      0x7373000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4377:4395   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4370:4402   */\n      mstore\n        /* \"#utility.yul\":4419:4438   */\n      0x84\n      add\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11586:11654  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_102\n        /* \"#utility.yul\":4046:4444   */\n      jump\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11586:11654  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_114:\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11665:11683  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11665:11676  _allowances */\n      0x01\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11665:11683  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11665:11692  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11665:11701  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11716:11748  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":1449:1474   */\n      dup5\n      dup2\n      mstore\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11716:11748  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":1422:1440   */\n      add\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11716:11748  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11385:11755  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12036:12477  function _spendAllowance(... */\n    tag_81:\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5366:5384  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      and\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12166:12190  uint256 currentAllowance */\n      0x00\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5366:5384  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5366:5377  _allowances */\n      0x01\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5366:5384  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5366:5393  _allowances[owner][spender] */\n      swap4\n      dup7\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12252:12269  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12232:12269  currentAllowance != type(uint256).max */\n      dup2\n      eq\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12228:12471  if (currentAllowance != type(uint256).max) {... */\n      tag_124\n      jumpi\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12313:12319  amount */\n      dup2\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12293:12309  currentAllowance */\n      dup2\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12293:12319  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12285:12353  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_121\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":4651:4653   */\n      0x20\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12285:12353  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4633:4654   */\n      mstore\n        /* \"#utility.yul\":4690:4692   */\n      0x1d\n        /* \"#utility.yul\":4670:4688   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4663:4693   */\n      mstore\n        /* \"#utility.yul\":4729:4760   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":4709:4727   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4702:4761   */\n      mstore\n        /* \"#utility.yul\":4778:4796   */\n      0x64\n      add\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12285:12353  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_102\n        /* \"#utility.yul\":4449:4802   */\n      jump\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12285:12353  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n    tag_121:\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12395:12446  _approve(owner, spender, currentAllowance - amount) */\n      tag_124\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12404:12409  owner */\n      dup5\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12411:12418  spender */\n      dup5\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12439:12445  amount */\n      dup5\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12420:12436  currentAllowance */\n      dup5\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12420:12445  currentAllowance - amount */\n      sub\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12395:12403  _approve */\n      tag_76\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12395:12446  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_124:\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12156:12477  {... */\n      pop\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12036:12477  function _spendAllowance(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8750:9401  function _transfer(... */\n    tag_83:\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8876:8894  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup4\n      and\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8868:8936  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_126\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":5009:5011   */\n      0x20\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8868:8936  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4991:5012   */\n      mstore\n        /* \"#utility.yul\":5048:5050   */\n      0x25\n        /* \"#utility.yul\":5028:5046   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5021:5051   */\n      mstore\n        /* \"#utility.yul\":5087:5121   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":5067:5085   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5060:5122   */\n      mstore\n        /* \"#utility.yul\":5158:5165   */\n      0x6472657373000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5138:5156   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5131:5166   */\n      mstore\n        /* \"#utility.yul\":5183:5202   */\n      0x84\n      add\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8868:8936  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_102\n        /* \"#utility.yul\":4807:5208   */\n      jump\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8868:8936  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_126:\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8954:8970  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup3\n      and\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8946:9010  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_129\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":5415:5417   */\n      0x20\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8946:9010  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5397:5418   */\n      mstore\n        /* \"#utility.yul\":5454:5456   */\n      0x23\n        /* \"#utility.yul\":5434:5452   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5427:5457   */\n      mstore\n        /* \"#utility.yul\":5493:5527   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":5473:5491   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5466:5528   */\n      mstore\n        /* \"#utility.yul\":5564:5569   */\n      0x6573730000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5544:5562   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5537:5570   */\n      mstore\n        /* \"#utility.yul\":5587:5606   */\n      0x84\n      add\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8946:9010  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_102\n        /* \"#utility.yul\":5213:5612   */\n      jump\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8946:9010  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_129:\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9092:9107  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup4\n      and\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9070:9089  uint256 fromBalance */\n      0x00\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9092:9107  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9125:9146  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9117:9189  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_134\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":5819:5821   */\n      0x20\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9117:9189  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5801:5822   */\n      mstore\n        /* \"#utility.yul\":5858:5860   */\n      0x26\n        /* \"#utility.yul\":5838:5856   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5831:5861   */\n      mstore\n        /* \"#utility.yul\":5897:5931   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":5877:5895   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5870:5932   */\n      mstore\n        /* \"#utility.yul\":5968:5976   */\n      0x616c616e63650000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5948:5966   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5941:5977   */\n      mstore\n        /* \"#utility.yul\":5994:6013   */\n      0x84\n      add\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9117:9189  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_102\n        /* \"#utility.yul\":5617:6019   */\n      jump\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9117:9189  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_134:\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9223:9238  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup1\n      dup6\n      and\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9223:9232  _balances */\n      0x00\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9223:9238  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9241:9261  fromBalance - amount */\n      dup6\n      dup6\n      sub\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9223:9261  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9281:9294  _balances[to] */\n      swap2\n      dup6\n      and\n      dup2\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9281:9304  _balances[to] += amount */\n      dup1\n      sload\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9255:9261  amount */\n      dup5\n      swap3\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9223:9232  _balances */\n      swap1\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9281:9304  _balances[to] += amount */\n      tag_137\n      swap1\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9255:9261  amount */\n      dup5\n      swap1\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9281:9304  _balances[to] += amount */\n      tag_90\n      jump\t// in\n    tag_137:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9335:9337  to */\n      dup3\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9320:9346  Transfer(from, to, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9329:9333  from */\n      dup5\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9320:9346  Transfer(from, to, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9339:9345  amount */\n      dup5\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9320:9346  Transfer(from, to, amount) */\n      mload(0x40)\n      tag_138\n      swap2\n        /* \"#utility.yul\":1449:1474   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1437:1439   */\n      0x20\n        /* \"#utility.yul\":1422:1440   */\n      add\n      swap1\n        /* \"#utility.yul\":1303:1480   */\n      jump\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9320:9346  Transfer(from, to, amount) */\n    tag_138:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9357:9394  _afterTokenTransfer(from, to, amount) */\n      tag_124\n        /* \"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":13061:13182  function _beforeTokenTransfer(... */\n      jump\n        /* \"#utility.yul\":14:600   */\n    tag_20:\n        /* \"#utility.yul\":163:165   */\n      0x20\n        /* \"#utility.yul\":152:161   */\n      dup2\n        /* \"#utility.yul\":145:166   */\n      mstore\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":195:201   */\n      dup3\n        /* \"#utility.yul\":189:202   */\n      mload\n        /* \"#utility.yul\":238:244   */\n      dup1\n        /* \"#utility.yul\":233:235   */\n      0x20\n        /* \"#utility.yul\":222:231   */\n      dup5\n        /* \"#utility.yul\":218:236   */\n      add\n        /* \"#utility.yul\":211:245   */\n      mstore\n        /* \"#utility.yul\":263:264   */\n      0x00\n        /* \"#utility.yul\":273:413   */\n    tag_146:\n        /* \"#utility.yul\":287:293   */\n      dup2\n        /* \"#utility.yul\":284:285   */\n      dup2\n        /* \"#utility.yul\":281:294   */\n      lt\n        /* \"#utility.yul\":273:413   */\n      iszero\n      tag_148\n      jumpi\n        /* \"#utility.yul\":398:400   */\n      0x20\n        /* \"#utility.yul\":382:396   */\n      dup2\n      dup7\n      add\n        /* \"#utility.yul\":378:401   */\n      dup2\n      add\n        /* \"#utility.yul\":372:402   */\n      mload\n        /* \"#utility.yul\":367:369   */\n      0x40\n        /* \"#utility.yul\":348:365   */\n      dup7\n      dup5\n      add\n        /* \"#utility.yul\":344:370   */\n      add\n        /* \"#utility.yul\":337:403   */\n      mstore\n        /* \"#utility.yul\":302:312   */\n      add\n        /* \"#utility.yul\":273:413   */\n      jump(tag_146)\n    tag_148:\n        /* \"#utility.yul\":277:280   */\n      pop\n        /* \"#utility.yul\":462:463   */\n      0x00\n        /* \"#utility.yul\":457:459   */\n      0x40\n        /* \"#utility.yul\":448:454   */\n      dup3\n        /* \"#utility.yul\":437:446   */\n      dup6\n        /* \"#utility.yul\":433:455   */\n      add\n        /* \"#utility.yul\":429:460   */\n      add\n        /* \"#utility.yul\":422:464   */\n      mstore\n        /* \"#utility.yul\":591:593   */\n      0x40\n        /* \"#utility.yul\":521:587   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n        /* \"#utility.yul\":516:518   */\n      0x1f\n        /* \"#utility.yul\":508:514   */\n      dup4\n        /* \"#utility.yul\":504:519   */\n      add\n        /* \"#utility.yul\":500:588   */\n      and\n        /* \"#utility.yul\":489:498   */\n      dup5\n        /* \"#utility.yul\":485:589   */\n      add\n        /* \"#utility.yul\":481:594   */\n      add\n        /* \"#utility.yul\":473:594   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":14:600   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":605:801   */\n    tag_143:\n        /* \"#utility.yul\":673:693   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":733:775   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":722:776   */\n      dup2\n      and\n        /* \"#utility.yul\":712:777   */\n      dup2\n      eq\n        /* \"#utility.yul\":702:795   */\n      tag_150\n      jumpi\n        /* \"#utility.yul\":791:792   */\n      0x00\n        /* \"#utility.yul\":788:789   */\n      dup1\n        /* \"#utility.yul\":781:793   */\n      revert\n        /* \"#utility.yul\":702:795   */\n    tag_150:\n        /* \"#utility.yul\":605:801   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":806:1106   */\n    tag_23:\n        /* \"#utility.yul\":874:880   */\n      0x00\n        /* \"#utility.yul\":882:888   */\n      dup1\n        /* \"#utility.yul\":935:937   */\n      0x40\n        /* \"#utility.yul\":923:932   */\n      dup4\n        /* \"#utility.yul\":914:921   */\n      dup6\n        /* \"#utility.yul\":910:933   */\n      sub\n        /* \"#utility.yul\":906:938   */\n      slt\n        /* \"#utility.yul\":903:955   */\n      iszero\n      tag_152\n      jumpi\n        /* \"#utility.yul\":951:952   */\n      0x00\n        /* \"#utility.yul\":948:949   */\n      dup1\n        /* \"#utility.yul\":941:953   */\n      revert\n        /* \"#utility.yul\":903:955   */\n    tag_152:\n        /* \"#utility.yul\":974:1003   */\n      tag_153\n        /* \"#utility.yul\":993:1002   */\n      dup4\n        /* \"#utility.yul\":974:1003   */\n      tag_143\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":964:1003   */\n      swap5\n        /* \"#utility.yul\":1072:1074   */\n      0x20\n        /* \"#utility.yul\":1057:1075   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1044:1076   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":806:1106   */\n      jump\t// out\n        /* \"#utility.yul\":1485:1859   */\n    tag_33:\n        /* \"#utility.yul\":1562:1568   */\n      0x00\n        /* \"#utility.yul\":1570:1576   */\n      dup1\n        /* \"#utility.yul\":1578:1584   */\n      0x00\n        /* \"#utility.yul\":1631:1633   */\n      0x60\n        /* \"#utility.yul\":1619:1628   */\n      dup5\n        /* \"#utility.yul\":1610:1617   */\n      dup7\n        /* \"#utility.yul\":1606:1629   */\n      sub\n        /* \"#utility.yul\":1602:1634   */\n      slt\n        /* \"#utility.yul\":1599:1651   */\n      iszero\n      tag_157\n      jumpi\n        /* \"#utility.yul\":1647:1648   */\n      0x00\n        /* \"#utility.yul\":1644:1645   */\n      dup1\n        /* \"#utility.yul\":1637:1649   */\n      revert\n        /* \"#utility.yul\":1599:1651   */\n    tag_157:\n        /* \"#utility.yul\":1670:1699   */\n      tag_158\n        /* \"#utility.yul\":1689:1698   */\n      dup5\n        /* \"#utility.yul\":1670:1699   */\n      tag_143\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":1660:1699   */\n      swap3\n      pop\n        /* \"#utility.yul\":1718:1756   */\n      tag_159\n        /* \"#utility.yul\":1752:1754   */\n      0x20\n        /* \"#utility.yul\":1741:1750   */\n      dup6\n        /* \"#utility.yul\":1737:1755   */\n      add\n        /* \"#utility.yul\":1718:1756   */\n      tag_143\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":1485:1859   */\n      swap3\n      swap6\n        /* \"#utility.yul\":1708:1756   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1825:1827   */\n      0x40\n        /* \"#utility.yul\":1810:1828   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1797:1829   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":1485:1859   */\n      jump\t// out\n        /* \"#utility.yul\":2053:2239   */\n    tag_46:\n        /* \"#utility.yul\":2112:2118   */\n      0x00\n        /* \"#utility.yul\":2165:2167   */\n      0x20\n        /* \"#utility.yul\":2153:2162   */\n      dup3\n        /* \"#utility.yul\":2144:2151   */\n      dup5\n        /* \"#utility.yul\":2140:2163   */\n      sub\n        /* \"#utility.yul\":2136:2168   */\n      slt\n        /* \"#utility.yul\":2133:2185   */\n      iszero\n      tag_162\n      jumpi\n        /* \"#utility.yul\":2181:2182   */\n      0x00\n        /* \"#utility.yul\":2178:2179   */\n      dup1\n        /* \"#utility.yul\":2171:2183   */\n      revert\n        /* \"#utility.yul\":2133:2185   */\n    tag_162:\n        /* \"#utility.yul\":2204:2233   */\n      tag_163\n        /* \"#utility.yul\":2223:2232   */\n      dup3\n        /* \"#utility.yul\":2204:2233   */\n      tag_143\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":2194:2233   */\n      swap4\n        /* \"#utility.yul\":2053:2239   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2244:2504   */\n    tag_62:\n        /* \"#utility.yul\":2312:2318   */\n      0x00\n        /* \"#utility.yul\":2320:2326   */\n      dup1\n        /* \"#utility.yul\":2373:2375   */\n      0x40\n        /* \"#utility.yul\":2361:2370   */\n      dup4\n        /* \"#utility.yul\":2352:2359   */\n      dup6\n        /* \"#utility.yul\":2348:2371   */\n      sub\n        /* \"#utility.yul\":2344:2376   */\n      slt\n        /* \"#utility.yul\":2341:2393   */\n      iszero\n      tag_165\n      jumpi\n        /* \"#utility.yul\":2389:2390   */\n      0x00\n        /* \"#utility.yul\":2386:2387   */\n      dup1\n        /* \"#utility.yul\":2379:2391   */\n      revert\n        /* \"#utility.yul\":2341:2393   */\n    tag_165:\n        /* \"#utility.yul\":2412:2441   */\n      tag_166\n        /* \"#utility.yul\":2431:2440   */\n      dup4\n        /* \"#utility.yul\":2412:2441   */\n      tag_143\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":2402:2441   */\n      swap2\n      pop\n        /* \"#utility.yul\":2460:2498   */\n      tag_167\n        /* \"#utility.yul\":2494:2496   */\n      0x20\n        /* \"#utility.yul\":2483:2492   */\n      dup5\n        /* \"#utility.yul\":2479:2497   */\n      add\n        /* \"#utility.yul\":2460:2498   */\n      tag_143\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":2450:2498   */\n      swap1\n      pop\n        /* \"#utility.yul\":2244:2504   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2509:2946   */\n    tag_67:\n        /* \"#utility.yul\":2588:2589   */\n      0x01\n        /* \"#utility.yul\":2584:2596   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2631:2643   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2652:2713   */\n      tag_169\n      jumpi\n        /* \"#utility.yul\":2706:2710   */\n      0x7f\n        /* \"#utility.yul\":2698:2704   */\n      dup3\n        /* \"#utility.yul\":2694:2711   */\n      and\n        /* \"#utility.yul\":2684:2711   */\n      swap2\n      pop\n        /* \"#utility.yul\":2652:2713   */\n    tag_169:\n        /* \"#utility.yul\":2759:2761   */\n      0x20\n        /* \"#utility.yul\":2751:2757   */\n      dup3\n        /* \"#utility.yul\":2748:2762   */\n      lt\n        /* \"#utility.yul\":2728:2746   */\n      dup2\n        /* \"#utility.yul\":2725:2763   */\n      sub\n        /* \"#utility.yul\":2722:2940   */\n      tag_170\n      jumpi\n        /* \"#utility.yul\":2796:2873   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2793:2794   */\n      0x00\n        /* \"#utility.yul\":2786:2874   */\n      mstore\n        /* \"#utility.yul\":2897:2901   */\n      0x22\n        /* \"#utility.yul\":2894:2895   */\n      0x04\n        /* \"#utility.yul\":2887:2902   */\n      mstore\n        /* \"#utility.yul\":2925:2929   */\n      0x24\n        /* \"#utility.yul\":2922:2923   */\n      0x00\n        /* \"#utility.yul\":2915:2930   */\n      revert\n        /* \"#utility.yul\":2722:2940   */\n    tag_170:\n      pop\n        /* \"#utility.yul\":2509:2946   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2951:3230   */\n    tag_90:\n        /* \"#utility.yul\":3016:3025   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3037:3047   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":3034:3224   */\n      iszero\n      tag_72\n      jumpi\n        /* \"#utility.yul\":3080:3157   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3077:3078   */\n      0x00\n        /* \"#utility.yul\":3070:3158   */\n      mstore\n        /* \"#utility.yul\":3181:3185   */\n      0x11\n        /* \"#utility.yul\":3178:3179   */\n      0x04\n        /* \"#utility.yul\":3171:3186   */\n      mstore\n        /* \"#utility.yul\":3209:3213   */\n      0x24\n        /* \"#utility.yul\":3206:3207   */\n      0x00\n        /* \"#utility.yul\":3199:3214   */\n      revert\n\n    auxdata: 0xa26469706673582212201f6bd61ae72d9b2dc50b4a21355463ef91fa9b222af19512157f866a842d00b064736f6c634300081b0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_204": {
									"entryPoint": null,
									"id": 204,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 102,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 265,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 428,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 507,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 370,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 80,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:4053:6",
										"nodeType": "YulBlock",
										"src": "0:4053:6",
										"statements": [
											{
												"nativeSrc": "6:3:6",
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "46:95:6",
													"nodeType": "YulBlock",
													"src": "46:95:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "63:1:6",
																		"nodeType": "YulLiteral",
																		"src": "63:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "70:3:6",
																				"nodeType": "YulLiteral",
																				"src": "70:3:6",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "75:10:6",
																				"nodeType": "YulLiteral",
																				"src": "75:10:6",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "66:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:6"
																		},
																		"nativeSrc": "66:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "56:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:6"
																},
																"nativeSrc": "56:31:6",
																"nodeType": "YulFunctionCall",
																"src": "56:31:6"
															},
															"nativeSrc": "56:31:6",
															"nodeType": "YulExpressionStatement",
															"src": "56:31:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "103:1:6",
																		"nodeType": "YulLiteral",
																		"src": "103:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "106:4:6",
																		"nodeType": "YulLiteral",
																		"src": "106:4:6",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "96:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:6"
																},
																"nativeSrc": "96:15:6",
																"nodeType": "YulFunctionCall",
																"src": "96:15:6"
															},
															"nativeSrc": "96:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "96:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "127:1:6",
																		"nodeType": "YulLiteral",
																		"src": "127:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "130:4:6",
																		"nodeType": "YulLiteral",
																		"src": "130:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "120:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:6"
																},
																"nativeSrc": "120:15:6",
																"nodeType": "YulFunctionCall",
																"src": "120:15:6"
															},
															"nativeSrc": "120:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "120:15:6"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "14:127:6",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:6"
											},
											{
												"body": {
													"nativeSrc": "210:770:6",
													"nodeType": "YulBlock",
													"src": "210:770:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "259:16:6",
																"nodeType": "YulBlock",
																"src": "259:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "268:1:6",
																					"nodeType": "YulLiteral",
																					"src": "268:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "271:1:6",
																					"nodeType": "YulLiteral",
																					"src": "271:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "261:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "261:6:6"
																			},
																			"nativeSrc": "261:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "261:12:6"
																		},
																		"nativeSrc": "261:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "261:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "238:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "238:6:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "246:4:6",
																						"nodeType": "YulLiteral",
																						"src": "246:4:6",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "234:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:6"
																				},
																				"nativeSrc": "234:17:6",
																				"nodeType": "YulFunctionCall",
																				"src": "234:17:6"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "253:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "253:3:6"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "230:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "230:3:6"
																		},
																		"nativeSrc": "230:27:6",
																		"nodeType": "YulFunctionCall",
																		"src": "230:27:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "223:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:6"
																},
																"nativeSrc": "223:35:6",
																"nodeType": "YulFunctionCall",
																"src": "223:35:6"
															},
															"nativeSrc": "220:55:6",
															"nodeType": "YulIf",
															"src": "220:55:6"
														},
														{
															"nativeSrc": "284:27:6",
															"nodeType": "YulVariableDeclaration",
															"src": "284:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "304:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "304:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "298:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "298:5:6"
																},
																"nativeSrc": "298:13:6",
																"nodeType": "YulFunctionCall",
																"src": "298:13:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "288:6:6",
																	"nodeType": "YulTypedName",
																	"src": "288:6:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "354:22:6",
																"nodeType": "YulBlock",
																"src": "354:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "356:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "356:16:6"
																			},
																			"nativeSrc": "356:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "356:18:6"
																		},
																		"nativeSrc": "356:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "356:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "326:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "326:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "342:2:6",
																						"nodeType": "YulLiteral",
																						"src": "342:2:6",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "346:1:6",
																						"nodeType": "YulLiteral",
																						"src": "346:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "338:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "338:3:6"
																				},
																				"nativeSrc": "338:10:6",
																				"nodeType": "YulFunctionCall",
																				"src": "338:10:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "350:1:6",
																				"nodeType": "YulLiteral",
																				"src": "350:1:6",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "334:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "334:3:6"
																		},
																		"nativeSrc": "334:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "334:18:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "323:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "323:2:6"
																},
																"nativeSrc": "323:30:6",
																"nodeType": "YulFunctionCall",
																"src": "323:30:6"
															},
															"nativeSrc": "320:56:6",
															"nodeType": "YulIf",
															"src": "320:56:6"
														},
														{
															"nativeSrc": "385:23:6",
															"nodeType": "YulVariableDeclaration",
															"src": "385:23:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "405:2:6",
																		"nodeType": "YulLiteral",
																		"src": "405:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "399:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "399:5:6"
																},
																"nativeSrc": "399:9:6",
																"nodeType": "YulFunctionCall",
																"src": "399:9:6"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "389:6:6",
																	"nodeType": "YulTypedName",
																	"src": "389:6:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "417:85:6",
															"nodeType": "YulVariableDeclaration",
															"src": "417:85:6",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "439:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "439:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "length",
																										"nativeSrc": "463:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "463:6:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "471:4:6",
																										"nodeType": "YulLiteral",
																										"src": "471:4:6",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "459:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "459:3:6"
																								},
																								"nativeSrc": "459:17:6",
																								"nodeType": "YulFunctionCall",
																								"src": "459:17:6"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "482:2:6",
																										"nodeType": "YulLiteral",
																										"src": "482:2:6",
																										"type": "",
																										"value": "31"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "478:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "478:3:6"
																								},
																								"nativeSrc": "478:7:6",
																								"nodeType": "YulFunctionCall",
																								"src": "478:7:6"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "455:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "455:3:6"
																						},
																						"nativeSrc": "455:31:6",
																						"nodeType": "YulFunctionCall",
																						"src": "455:31:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "488:2:6",
																						"nodeType": "YulLiteral",
																						"src": "488:2:6",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "451:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "451:3:6"
																				},
																				"nativeSrc": "451:40:6",
																				"nodeType": "YulFunctionCall",
																				"src": "451:40:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "497:2:6",
																						"nodeType": "YulLiteral",
																						"src": "497:2:6",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "493:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "493:3:6"
																				},
																				"nativeSrc": "493:7:6",
																				"nodeType": "YulFunctionCall",
																				"src": "493:7:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "447:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "447:3:6"
																		},
																		"nativeSrc": "447:54:6",
																		"nodeType": "YulFunctionCall",
																		"src": "447:54:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "435:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "435:3:6"
																},
																"nativeSrc": "435:67:6",
																"nodeType": "YulFunctionCall",
																"src": "435:67:6"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "421:10:6",
																	"nodeType": "YulTypedName",
																	"src": "421:10:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "577:22:6",
																"nodeType": "YulBlock",
																"src": "577:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "579:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "579:16:6"
																			},
																			"nativeSrc": "579:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "579:18:6"
																		},
																		"nativeSrc": "579:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "579:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "520:10:6",
																				"nodeType": "YulIdentifier",
																				"src": "520:10:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "540:2:6",
																								"nodeType": "YulLiteral",
																								"src": "540:2:6",
																								"type": "",
																								"value": "64"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "544:1:6",
																								"nodeType": "YulLiteral",
																								"src": "544:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "536:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "536:3:6"
																						},
																						"nativeSrc": "536:10:6",
																						"nodeType": "YulFunctionCall",
																						"src": "536:10:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "548:1:6",
																						"nodeType": "YulLiteral",
																						"src": "548:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "532:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "532:3:6"
																				},
																				"nativeSrc": "532:18:6",
																				"nodeType": "YulFunctionCall",
																				"src": "532:18:6"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "517:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "517:2:6"
																		},
																		"nativeSrc": "517:34:6",
																		"nodeType": "YulFunctionCall",
																		"src": "517:34:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "556:10:6",
																				"nodeType": "YulIdentifier",
																				"src": "556:10:6"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "568:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "568:6:6"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "553:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "553:2:6"
																		},
																		"nativeSrc": "553:22:6",
																		"nodeType": "YulFunctionCall",
																		"src": "553:22:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "514:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "514:2:6"
																},
																"nativeSrc": "514:62:6",
																"nodeType": "YulFunctionCall",
																"src": "514:62:6"
															},
															"nativeSrc": "511:88:6",
															"nodeType": "YulIf",
															"src": "511:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "615:2:6",
																		"nodeType": "YulLiteral",
																		"src": "615:2:6",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "619:10:6",
																		"nodeType": "YulIdentifier",
																		"src": "619:10:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "608:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "608:6:6"
																},
																"nativeSrc": "608:22:6",
																"nodeType": "YulFunctionCall",
																"src": "608:22:6"
															},
															"nativeSrc": "608:22:6",
															"nodeType": "YulExpressionStatement",
															"src": "608:22:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "646:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "646:6:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "654:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "654:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "639:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "639:6:6"
																},
																"nativeSrc": "639:22:6",
																"nodeType": "YulFunctionCall",
																"src": "639:22:6"
															},
															"nativeSrc": "639:22:6",
															"nodeType": "YulExpressionStatement",
															"src": "639:22:6"
														},
														{
															"body": {
																"nativeSrc": "713:16:6",
																"nodeType": "YulBlock",
																"src": "713:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "722:1:6",
																					"nodeType": "YulLiteral",
																					"src": "722:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "725:1:6",
																					"nodeType": "YulLiteral",
																					"src": "725:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "715:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "715:6:6"
																			},
																			"nativeSrc": "715:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "715:12:6"
																		},
																		"nativeSrc": "715:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "715:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "684:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "684:6:6"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "692:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "692:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "680:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "680:3:6"
																				},
																				"nativeSrc": "680:19:6",
																				"nodeType": "YulFunctionCall",
																				"src": "680:19:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "701:4:6",
																				"nodeType": "YulLiteral",
																				"src": "701:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "676:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "676:3:6"
																		},
																		"nativeSrc": "676:30:6",
																		"nodeType": "YulFunctionCall",
																		"src": "676:30:6"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "708:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "708:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "673:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "673:2:6"
																},
																"nativeSrc": "673:39:6",
																"nodeType": "YulFunctionCall",
																"src": "673:39:6"
															},
															"nativeSrc": "670:59:6",
															"nodeType": "YulIf",
															"src": "670:59:6"
														},
														{
															"nativeSrc": "738:10:6",
															"nodeType": "YulVariableDeclaration",
															"src": "738:10:6",
															"value": {
																"kind": "number",
																"nativeSrc": "747:1:6",
																"nodeType": "YulLiteral",
																"src": "747:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "742:1:6",
																	"nodeType": "YulTypedName",
																	"src": "742:1:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "809:91:6",
																"nodeType": "YulBlock",
																"src": "809:91:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nativeSrc": "838:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "838:6:6"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "846:1:6",
																									"nodeType": "YulIdentifier",
																									"src": "846:1:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "834:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "834:3:6"
																							},
																							"nativeSrc": "834:14:6",
																							"nodeType": "YulFunctionCall",
																							"src": "834:14:6"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "850:4:6",
																							"nodeType": "YulLiteral",
																							"src": "850:4:6",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "830:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "830:3:6"
																					},
																					"nativeSrc": "830:25:6",
																					"nodeType": "YulFunctionCall",
																					"src": "830:25:6"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nativeSrc": "871:6:6",
																											"nodeType": "YulIdentifier",
																											"src": "871:6:6"
																										},
																										{
																											"name": "i",
																											"nativeSrc": "879:1:6",
																											"nodeType": "YulIdentifier",
																											"src": "879:1:6"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nativeSrc": "867:3:6",
																										"nodeType": "YulIdentifier",
																										"src": "867:3:6"
																									},
																									"nativeSrc": "867:14:6",
																									"nodeType": "YulFunctionCall",
																									"src": "867:14:6"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "883:4:6",
																									"nodeType": "YulLiteral",
																									"src": "883:4:6",
																									"type": "",
																									"value": "0x20"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "863:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "863:3:6"
																							},
																							"nativeSrc": "863:25:6",
																							"nodeType": "YulFunctionCall",
																							"src": "863:25:6"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "857:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "857:5:6"
																					},
																					"nativeSrc": "857:32:6",
																					"nodeType": "YulFunctionCall",
																					"src": "857:32:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "823:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "823:6:6"
																			},
																			"nativeSrc": "823:67:6",
																			"nodeType": "YulFunctionCall",
																			"src": "823:67:6"
																		},
																		"nativeSrc": "823:67:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "823:67:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "768:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "768:1:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "771:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "771:6:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "765:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "765:2:6"
																},
																"nativeSrc": "765:13:6",
																"nodeType": "YulFunctionCall",
																"src": "765:13:6"
															},
															"nativeSrc": "757:143:6",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "779:21:6",
																"nodeType": "YulBlock",
																"src": "779:21:6",
																"statements": [
																	{
																		"nativeSrc": "781:17:6",
																		"nodeType": "YulAssignment",
																		"src": "781:17:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "790:1:6",
																					"nodeType": "YulIdentifier",
																					"src": "790:1:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "793:4:6",
																					"nodeType": "YulLiteral",
																					"src": "793:4:6",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "786:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "786:3:6"
																			},
																			"nativeSrc": "786:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "786:12:6"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "781:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "781:1:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "761:3:6",
																"nodeType": "YulBlock",
																"src": "761:3:6",
																"statements": []
															},
															"src": "757:143:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "924:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "924:6:6"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "932:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "932:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "920:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "920:3:6"
																				},
																				"nativeSrc": "920:19:6",
																				"nodeType": "YulFunctionCall",
																				"src": "920:19:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "941:4:6",
																				"nodeType": "YulLiteral",
																				"src": "941:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "916:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "916:3:6"
																		},
																		"nativeSrc": "916:30:6",
																		"nodeType": "YulFunctionCall",
																		"src": "916:30:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "948:1:6",
																		"nodeType": "YulLiteral",
																		"src": "948:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "909:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "909:6:6"
																},
																"nativeSrc": "909:41:6",
																"nodeType": "YulFunctionCall",
																"src": "909:41:6"
															},
															"nativeSrc": "909:41:6",
															"nodeType": "YulExpressionStatement",
															"src": "909:41:6"
														},
														{
															"nativeSrc": "959:15:6",
															"nodeType": "YulAssignment",
															"src": "959:15:6",
															"value": {
																"name": "memPtr",
																"nativeSrc": "968:6:6",
																"nodeType": "YulIdentifier",
																"src": "968:6:6"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "959:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "959:5:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nativeSrc": "146:834:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "184:6:6",
														"nodeType": "YulTypedName",
														"src": "184:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "192:3:6",
														"nodeType": "YulTypedName",
														"src": "192:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "200:5:6",
														"nodeType": "YulTypedName",
														"src": "200:5:6",
														"type": ""
													}
												],
												"src": "146:834:6"
											},
											{
												"body": {
													"nativeSrc": "1103:439:6",
													"nodeType": "YulBlock",
													"src": "1103:439:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1149:16:6",
																"nodeType": "YulBlock",
																"src": "1149:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1158:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1158:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1161:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1161:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1151:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1151:6:6"
																			},
																			"nativeSrc": "1151:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1151:12:6"
																		},
																		"nativeSrc": "1151:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1151:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1124:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1124:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1133:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1133:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1120:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1120:3:6"
																		},
																		"nativeSrc": "1120:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1120:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1145:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1145:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1116:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1116:3:6"
																},
																"nativeSrc": "1116:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1116:32:6"
															},
															"nativeSrc": "1113:52:6",
															"nodeType": "YulIf",
															"src": "1113:52:6"
														},
														{
															"nativeSrc": "1174:30:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1174:30:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1194:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1194:9:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1188:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1188:5:6"
																},
																"nativeSrc": "1188:16:6",
																"nodeType": "YulFunctionCall",
																"src": "1188:16:6"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "1178:6:6",
																	"nodeType": "YulTypedName",
																	"src": "1178:6:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1247:16:6",
																"nodeType": "YulBlock",
																"src": "1247:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1256:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1256:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1259:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1259:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1249:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1249:6:6"
																			},
																			"nativeSrc": "1249:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1249:12:6"
																		},
																		"nativeSrc": "1249:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1249:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1219:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1219:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1235:2:6",
																						"nodeType": "YulLiteral",
																						"src": "1235:2:6",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1239:1:6",
																						"nodeType": "YulLiteral",
																						"src": "1239:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1231:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1231:3:6"
																				},
																				"nativeSrc": "1231:10:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1231:10:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1243:1:6",
																				"nodeType": "YulLiteral",
																				"src": "1243:1:6",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1227:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1227:3:6"
																		},
																		"nativeSrc": "1227:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1227:18:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1216:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "1216:2:6"
																},
																"nativeSrc": "1216:30:6",
																"nodeType": "YulFunctionCall",
																"src": "1216:30:6"
															},
															"nativeSrc": "1213:50:6",
															"nodeType": "YulIf",
															"src": "1213:50:6"
														},
														{
															"nativeSrc": "1272:71:6",
															"nodeType": "YulAssignment",
															"src": "1272:71:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1315:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1315:9:6"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "1326:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1326:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1311:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1311:3:6"
																		},
																		"nativeSrc": "1311:22:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1311:22:6"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1335:7:6",
																		"nodeType": "YulIdentifier",
																		"src": "1335:7:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nativeSrc": "1282:28:6",
																	"nodeType": "YulIdentifier",
																	"src": "1282:28:6"
																},
																"nativeSrc": "1282:61:6",
																"nodeType": "YulFunctionCall",
																"src": "1282:61:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1272:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1272:6:6"
																}
															]
														},
														{
															"nativeSrc": "1352:41:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1352:41:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1378:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1378:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1389:2:6",
																				"nodeType": "YulLiteral",
																				"src": "1389:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1374:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1374:3:6"
																		},
																		"nativeSrc": "1374:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1374:18:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1368:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1368:5:6"
																},
																"nativeSrc": "1368:25:6",
																"nodeType": "YulFunctionCall",
																"src": "1368:25:6"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nativeSrc": "1356:8:6",
																	"nodeType": "YulTypedName",
																	"src": "1356:8:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1438:16:6",
																"nodeType": "YulBlock",
																"src": "1438:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1447:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1447:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1450:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1450:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1440:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1440:6:6"
																			},
																			"nativeSrc": "1440:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1440:12:6"
																		},
																		"nativeSrc": "1440:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1440:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nativeSrc": "1408:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "1408:8:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1426:2:6",
																						"nodeType": "YulLiteral",
																						"src": "1426:2:6",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1430:1:6",
																						"nodeType": "YulLiteral",
																						"src": "1430:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1422:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1422:3:6"
																				},
																				"nativeSrc": "1422:10:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1422:10:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1434:1:6",
																				"nodeType": "YulLiteral",
																				"src": "1434:1:6",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1418:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1418:3:6"
																		},
																		"nativeSrc": "1418:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1418:18:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1405:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "1405:2:6"
																},
																"nativeSrc": "1405:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1405:32:6"
															},
															"nativeSrc": "1402:52:6",
															"nodeType": "YulIf",
															"src": "1402:52:6"
														},
														{
															"nativeSrc": "1463:73:6",
															"nodeType": "YulAssignment",
															"src": "1463:73:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1506:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1506:9:6"
																			},
																			{
																				"name": "offset_1",
																				"nativeSrc": "1517:8:6",
																				"nodeType": "YulIdentifier",
																				"src": "1517:8:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1502:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1502:3:6"
																		},
																		"nativeSrc": "1502:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1502:24:6"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1528:7:6",
																		"nodeType": "YulIdentifier",
																		"src": "1528:7:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nativeSrc": "1473:28:6",
																	"nodeType": "YulIdentifier",
																	"src": "1473:28:6"
																},
																"nativeSrc": "1473:63:6",
																"nodeType": "YulFunctionCall",
																"src": "1473:63:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1463:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1463:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nativeSrc": "985:557:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1061:9:6",
														"nodeType": "YulTypedName",
														"src": "1061:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1072:7:6",
														"nodeType": "YulTypedName",
														"src": "1072:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1084:6:6",
														"nodeType": "YulTypedName",
														"src": "1084:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1092:6:6",
														"nodeType": "YulTypedName",
														"src": "1092:6:6",
														"type": ""
													}
												],
												"src": "985:557:6"
											},
											{
												"body": {
													"nativeSrc": "1602:325:6",
													"nodeType": "YulBlock",
													"src": "1602:325:6",
													"statements": [
														{
															"nativeSrc": "1612:22:6",
															"nodeType": "YulAssignment",
															"src": "1612:22:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1626:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1626:1:6",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "1629:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "1629:4:6"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "1622:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1622:3:6"
																},
																"nativeSrc": "1622:12:6",
																"nodeType": "YulFunctionCall",
																"src": "1622:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1612:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1612:6:6"
																}
															]
														},
														{
															"nativeSrc": "1643:38:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1643:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1673:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "1673:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1679:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1679:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1669:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1669:3:6"
																},
																"nativeSrc": "1669:12:6",
																"nodeType": "YulFunctionCall",
																"src": "1669:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "1647:18:6",
																	"nodeType": "YulTypedName",
																	"src": "1647:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1720:31:6",
																"nodeType": "YulBlock",
																"src": "1720:31:6",
																"statements": [
																	{
																		"nativeSrc": "1722:27:6",
																		"nodeType": "YulAssignment",
																		"src": "1722:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "1736:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "1736:6:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1744:4:6",
																					"nodeType": "YulLiteral",
																					"src": "1744:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "1732:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "1732:3:6"
																			},
																			"nativeSrc": "1732:17:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1732:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "1722:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1722:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1700:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "1700:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1693:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1693:6:6"
																},
																"nativeSrc": "1693:26:6",
																"nodeType": "YulFunctionCall",
																"src": "1693:26:6"
															},
															"nativeSrc": "1690:61:6",
															"nodeType": "YulIf",
															"src": "1690:61:6"
														},
														{
															"body": {
																"nativeSrc": "1810:111:6",
																"nodeType": "YulBlock",
																"src": "1810:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1831:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1831:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1838:3:6",
																							"nodeType": "YulLiteral",
																							"src": "1838:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "1843:10:6",
																							"nodeType": "YulLiteral",
																							"src": "1843:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "1834:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "1834:3:6"
																					},
																					"nativeSrc": "1834:20:6",
																					"nodeType": "YulFunctionCall",
																					"src": "1834:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1824:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1824:6:6"
																			},
																			"nativeSrc": "1824:31:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1824:31:6"
																		},
																		"nativeSrc": "1824:31:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1824:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1875:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1875:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1878:4:6",
																					"nodeType": "YulLiteral",
																					"src": "1878:4:6",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1868:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1868:6:6"
																			},
																			"nativeSrc": "1868:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1868:15:6"
																		},
																		"nativeSrc": "1868:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1868:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1903:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1903:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1906:4:6",
																					"nodeType": "YulLiteral",
																					"src": "1906:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1896:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1896:6:6"
																			},
																			"nativeSrc": "1896:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1896:15:6"
																		},
																		"nativeSrc": "1896:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1896:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1766:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "1766:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1789:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1789:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1797:2:6",
																				"nodeType": "YulLiteral",
																				"src": "1797:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1786:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "1786:2:6"
																		},
																		"nativeSrc": "1786:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1786:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "1763:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "1763:2:6"
																},
																"nativeSrc": "1763:38:6",
																"nodeType": "YulFunctionCall",
																"src": "1763:38:6"
															},
															"nativeSrc": "1760:161:6",
															"nodeType": "YulIf",
															"src": "1760:161:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1547:380:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1582:4:6",
														"nodeType": "YulTypedName",
														"src": "1582:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1591:6:6",
														"nodeType": "YulTypedName",
														"src": "1591:6:6",
														"type": ""
													}
												],
												"src": "1547:380:6"
											},
											{
												"body": {
													"nativeSrc": "1988:65:6",
													"nodeType": "YulBlock",
													"src": "1988:65:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2005:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2005:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2008:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2008:3:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1998:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1998:6:6"
																},
																"nativeSrc": "1998:14:6",
																"nodeType": "YulFunctionCall",
																"src": "1998:14:6"
															},
															"nativeSrc": "1998:14:6",
															"nodeType": "YulExpressionStatement",
															"src": "1998:14:6"
														},
														{
															"nativeSrc": "2021:26:6",
															"nodeType": "YulAssignment",
															"src": "2021:26:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2039:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2039:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2042:4:6",
																		"nodeType": "YulLiteral",
																		"src": "2042:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2029:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "2029:9:6"
																},
																"nativeSrc": "2029:18:6",
																"nodeType": "YulFunctionCall",
																"src": "2029:18:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2021:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2021:4:6"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "1932:121:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "1971:3:6",
														"nodeType": "YulTypedName",
														"src": "1971:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "1979:4:6",
														"nodeType": "YulTypedName",
														"src": "1979:4:6",
														"type": ""
													}
												],
												"src": "1932:121:6"
											},
											{
												"body": {
													"nativeSrc": "2139:437:6",
													"nodeType": "YulBlock",
													"src": "2139:437:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2172:398:6",
																"nodeType": "YulBlock",
																"src": "2172:398:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2193:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2193:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "2196:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "2196:5:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2186:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2186:6:6"
																			},
																			"nativeSrc": "2186:16:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2186:16:6"
																		},
																		"nativeSrc": "2186:16:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2186:16:6"
																	},
																	{
																		"nativeSrc": "2215:30:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2215:30:6",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2237:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2237:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2240:4:6",
																					"nodeType": "YulLiteral",
																					"src": "2240:4:6",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "2227:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2227:9:6"
																			},
																			"nativeSrc": "2227:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2227:18:6"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "2219:4:6",
																				"nodeType": "YulTypedName",
																				"src": "2219:4:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2258:57:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2258:57:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "2281:4:6",
																					"nodeType": "YulIdentifier",
																					"src": "2281:4:6"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2291:1:6",
																							"nodeType": "YulLiteral",
																							"src": "2291:1:6",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "2298:10:6",
																									"nodeType": "YulIdentifier",
																									"src": "2298:10:6"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2310:2:6",
																									"nodeType": "YulLiteral",
																									"src": "2310:2:6",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2294:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "2294:3:6"
																							},
																							"nativeSrc": "2294:19:6",
																							"nodeType": "YulFunctionCall",
																							"src": "2294:19:6"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "2287:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "2287:3:6"
																					},
																					"nativeSrc": "2287:27:6",
																					"nodeType": "YulFunctionCall",
																					"src": "2287:27:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2277:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "2277:3:6"
																			},
																			"nativeSrc": "2277:38:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2277:38:6"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2262:11:6",
																				"nodeType": "YulTypedName",
																				"src": "2262:11:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "2352:23:6",
																			"nodeType": "YulBlock",
																			"src": "2352:23:6",
																			"statements": [
																				{
																					"nativeSrc": "2354:19:6",
																					"nodeType": "YulAssignment",
																					"src": "2354:19:6",
																					"value": {
																						"name": "data",
																						"nativeSrc": "2369:4:6",
																						"nodeType": "YulIdentifier",
																						"src": "2369:4:6"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "2354:11:6",
																							"nodeType": "YulIdentifier",
																							"src": "2354:11:6"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "2334:10:6",
																					"nodeType": "YulIdentifier",
																					"src": "2334:10:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2346:4:6",
																					"nodeType": "YulLiteral",
																					"src": "2346:4:6",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "2331:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "2331:2:6"
																			},
																			"nativeSrc": "2331:20:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2331:20:6"
																		},
																		"nativeSrc": "2328:47:6",
																		"nodeType": "YulIf",
																		"src": "2328:47:6"
																	},
																	{
																		"nativeSrc": "2388:41:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2388:41:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "2402:4:6",
																					"nodeType": "YulIdentifier",
																					"src": "2402:4:6"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2412:1:6",
																							"nodeType": "YulLiteral",
																							"src": "2412:1:6",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "2419:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "2419:3:6"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2424:2:6",
																									"nodeType": "YulLiteral",
																									"src": "2424:2:6",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2415:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "2415:3:6"
																							},
																							"nativeSrc": "2415:12:6",
																							"nodeType": "YulFunctionCall",
																							"src": "2415:12:6"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "2408:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "2408:3:6"
																					},
																					"nativeSrc": "2408:20:6",
																					"nodeType": "YulFunctionCall",
																					"src": "2408:20:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2398:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "2398:3:6"
																			},
																			"nativeSrc": "2398:31:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2398:31:6"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "2392:2:6",
																				"nodeType": "YulTypedName",
																				"src": "2392:2:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2442:24:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2442:24:6",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "2455:11:6",
																			"nodeType": "YulIdentifier",
																			"src": "2455:11:6"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "2446:5:6",
																				"nodeType": "YulTypedName",
																				"src": "2446:5:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "2540:20:6",
																			"nodeType": "YulBlock",
																			"src": "2540:20:6",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "2549:5:6",
																								"nodeType": "YulIdentifier",
																								"src": "2549:5:6"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2556:1:6",
																								"nodeType": "YulLiteral",
																								"src": "2556:1:6",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "2542:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "2542:6:6"
																						},
																						"nativeSrc": "2542:16:6",
																						"nodeType": "YulFunctionCall",
																						"src": "2542:16:6"
																					},
																					"nativeSrc": "2542:16:6",
																					"nodeType": "YulExpressionStatement",
																					"src": "2542:16:6"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2490:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "2490:5:6"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "2497:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "2497:2:6"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "2487:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "2487:2:6"
																			},
																			"nativeSrc": "2487:13:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2487:13:6"
																		},
																		"nativeSrc": "2479:81:6",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "2501:26:6",
																			"nodeType": "YulBlock",
																			"src": "2501:26:6",
																			"statements": [
																				{
																					"nativeSrc": "2503:22:6",
																					"nodeType": "YulAssignment",
																					"src": "2503:22:6",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "2516:5:6",
																								"nodeType": "YulIdentifier",
																								"src": "2516:5:6"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2523:1:6",
																								"nodeType": "YulLiteral",
																								"src": "2523:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "2512:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "2512:3:6"
																						},
																						"nativeSrc": "2512:13:6",
																						"nodeType": "YulFunctionCall",
																						"src": "2512:13:6"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "2503:5:6",
																							"nodeType": "YulIdentifier",
																							"src": "2503:5:6"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "2483:3:6",
																			"nodeType": "YulBlock",
																			"src": "2483:3:6",
																			"statements": []
																		},
																		"src": "2479:81:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2155:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2155:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2160:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2160:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2152:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "2152:2:6"
																},
																"nativeSrc": "2152:11:6",
																"nodeType": "YulFunctionCall",
																"src": "2152:11:6"
															},
															"nativeSrc": "2149:421:6",
															"nodeType": "YulIf",
															"src": "2149:421:6"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "2058:518:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2111:5:6",
														"nodeType": "YulTypedName",
														"src": "2111:5:6",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2118:3:6",
														"nodeType": "YulTypedName",
														"src": "2118:3:6",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2123:10:6",
														"nodeType": "YulTypedName",
														"src": "2123:10:6",
														"type": ""
													}
												],
												"src": "2058:518:6"
											},
											{
												"body": {
													"nativeSrc": "2666:81:6",
													"nodeType": "YulBlock",
													"src": "2666:81:6",
													"statements": [
														{
															"nativeSrc": "2676:65:6",
															"nodeType": "YulAssignment",
															"src": "2676:65:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "2691:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "2691:4:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2709:1:6",
																										"nodeType": "YulLiteral",
																										"src": "2709:1:6",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "2712:3:6",
																										"nodeType": "YulIdentifier",
																										"src": "2712:3:6"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "2705:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "2705:3:6"
																								},
																								"nativeSrc": "2705:11:6",
																								"nodeType": "YulFunctionCall",
																								"src": "2705:11:6"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2722:1:6",
																										"nodeType": "YulLiteral",
																										"src": "2722:1:6",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "2718:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "2718:3:6"
																								},
																								"nativeSrc": "2718:6:6",
																								"nodeType": "YulFunctionCall",
																								"src": "2718:6:6"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "2701:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "2701:3:6"
																						},
																						"nativeSrc": "2701:24:6",
																						"nodeType": "YulFunctionCall",
																						"src": "2701:24:6"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "2697:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2697:3:6"
																				},
																				"nativeSrc": "2697:29:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2697:29:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2687:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2687:3:6"
																		},
																		"nativeSrc": "2687:40:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2687:40:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2733:1:6",
																				"nodeType": "YulLiteral",
																				"src": "2733:1:6",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "2736:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "2736:3:6"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "2729:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2729:3:6"
																		},
																		"nativeSrc": "2729:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2729:11:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2684:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "2684:2:6"
																},
																"nativeSrc": "2684:57:6",
																"nodeType": "YulFunctionCall",
																"src": "2684:57:6"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "2676:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2676:4:6"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "2581:166:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2643:4:6",
														"nodeType": "YulTypedName",
														"src": "2643:4:6",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2649:3:6",
														"nodeType": "YulTypedName",
														"src": "2649:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "2657:4:6",
														"nodeType": "YulTypedName",
														"src": "2657:4:6",
														"type": ""
													}
												],
												"src": "2581:166:6"
											},
											{
												"body": {
													"nativeSrc": "2848:1203:6",
													"nodeType": "YulBlock",
													"src": "2848:1203:6",
													"statements": [
														{
															"nativeSrc": "2858:24:6",
															"nodeType": "YulVariableDeclaration",
															"src": "2858:24:6",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2878:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2878:3:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2872:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2872:5:6"
																},
																"nativeSrc": "2872:10:6",
																"nodeType": "YulFunctionCall",
																"src": "2872:10:6"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "2862:6:6",
																	"nodeType": "YulTypedName",
																	"src": "2862:6:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2925:22:6",
																"nodeType": "YulBlock",
																"src": "2925:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2927:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "2927:16:6"
																			},
																			"nativeSrc": "2927:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2927:18:6"
																		},
																		"nativeSrc": "2927:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2927:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "2897:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2897:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2913:2:6",
																						"nodeType": "YulLiteral",
																						"src": "2913:2:6",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2917:1:6",
																						"nodeType": "YulLiteral",
																						"src": "2917:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "2909:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2909:3:6"
																				},
																				"nativeSrc": "2909:10:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2909:10:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2921:1:6",
																				"nodeType": "YulLiteral",
																				"src": "2921:1:6",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2905:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2905:3:6"
																		},
																		"nativeSrc": "2905:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2905:18:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2894:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "2894:2:6"
																},
																"nativeSrc": "2894:30:6",
																"nodeType": "YulFunctionCall",
																"src": "2894:30:6"
															},
															"nativeSrc": "2891:56:6",
															"nodeType": "YulIf",
															"src": "2891:56:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3000:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "3000:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3038:4:6",
																						"nodeType": "YulIdentifier",
																						"src": "3038:4:6"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3032:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "3032:5:6"
																				},
																				"nativeSrc": "3032:11:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3032:11:6"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "3006:25:6",
																			"nodeType": "YulIdentifier",
																			"src": "3006:25:6"
																		},
																		"nativeSrc": "3006:38:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3006:38:6"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "3046:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3046:6:6"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "2956:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "2956:43:6"
																},
																"nativeSrc": "2956:97:6",
																"nodeType": "YulFunctionCall",
																"src": "2956:97:6"
															},
															"nativeSrc": "2956:97:6",
															"nodeType": "YulExpressionStatement",
															"src": "2956:97:6"
														},
														{
															"nativeSrc": "3062:18:6",
															"nodeType": "YulVariableDeclaration",
															"src": "3062:18:6",
															"value": {
																"kind": "number",
																"nativeSrc": "3079:1:6",
																"nodeType": "YulLiteral",
																"src": "3079:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "3066:9:6",
																	"nodeType": "YulTypedName",
																	"src": "3066:9:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3089:17:6",
															"nodeType": "YulAssignment",
															"src": "3089:17:6",
															"value": {
																"kind": "number",
																"nativeSrc": "3102:4:6",
																"nodeType": "YulLiteral",
																"src": "3102:4:6",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "3089:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "3089:9:6"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "3152:642:6",
																		"nodeType": "YulBlock",
																		"src": "3152:642:6",
																		"statements": [
																			{
																				"nativeSrc": "3166:35:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3166:35:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "3185:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "3185:6:6"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "3197:2:6",
																									"nodeType": "YulLiteral",
																									"src": "3197:2:6",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "3193:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "3193:3:6"
																							},
																							"nativeSrc": "3193:7:6",
																							"nodeType": "YulFunctionCall",
																							"src": "3193:7:6"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "3181:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "3181:3:6"
																					},
																					"nativeSrc": "3181:20:6",
																					"nodeType": "YulFunctionCall",
																					"src": "3181:20:6"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "3170:7:6",
																						"nodeType": "YulTypedName",
																						"src": "3170:7:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "3214:49:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3214:49:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3258:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "3258:4:6"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "3228:29:6",
																						"nodeType": "YulIdentifier",
																						"src": "3228:29:6"
																					},
																					"nativeSrc": "3228:35:6",
																					"nodeType": "YulFunctionCall",
																					"src": "3228:35:6"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "3218:6:6",
																						"nodeType": "YulTypedName",
																						"src": "3218:6:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "3276:10:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3276:10:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3285:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3285:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "3280:1:6",
																						"nodeType": "YulTypedName",
																						"src": "3280:1:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "3356:165:6",
																					"nodeType": "YulBlock",
																					"src": "3356:165:6",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3381:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "3381:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "3399:3:6",
																														"nodeType": "YulIdentifier",
																														"src": "3399:3:6"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "3404:9:6",
																														"nodeType": "YulIdentifier",
																														"src": "3404:9:6"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "3395:3:6",
																													"nodeType": "YulIdentifier",
																													"src": "3395:3:6"
																												},
																												"nativeSrc": "3395:19:6",
																												"nodeType": "YulFunctionCall",
																												"src": "3395:19:6"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "3389:5:6",
																											"nodeType": "YulIdentifier",
																											"src": "3389:5:6"
																										},
																										"nativeSrc": "3389:26:6",
																										"nodeType": "YulFunctionCall",
																										"src": "3389:26:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "3374:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "3374:6:6"
																								},
																								"nativeSrc": "3374:42:6",
																								"nodeType": "YulFunctionCall",
																								"src": "3374:42:6"
																							},
																							"nativeSrc": "3374:42:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "3374:42:6"
																						},
																						{
																							"nativeSrc": "3433:24:6",
																							"nodeType": "YulAssignment",
																							"src": "3433:24:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3447:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "3447:6:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3455:1:6",
																										"nodeType": "YulLiteral",
																										"src": "3455:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3443:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "3443:3:6"
																								},
																								"nativeSrc": "3443:14:6",
																								"nodeType": "YulFunctionCall",
																								"src": "3443:14:6"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "3433:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "3433:6:6"
																								}
																							]
																						},
																						{
																							"nativeSrc": "3474:33:6",
																							"nodeType": "YulAssignment",
																							"src": "3474:33:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "3491:9:6",
																										"nodeType": "YulIdentifier",
																										"src": "3491:9:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3502:4:6",
																										"nodeType": "YulLiteral",
																										"src": "3502:4:6",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3487:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "3487:3:6"
																								},
																								"nativeSrc": "3487:20:6",
																								"nodeType": "YulFunctionCall",
																								"src": "3487:20:6"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "3474:9:6",
																									"nodeType": "YulIdentifier",
																									"src": "3474:9:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "3310:1:6",
																							"nodeType": "YulIdentifier",
																							"src": "3310:1:6"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "3313:7:6",
																							"nodeType": "YulIdentifier",
																							"src": "3313:7:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "3307:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "3307:2:6"
																					},
																					"nativeSrc": "3307:14:6",
																					"nodeType": "YulFunctionCall",
																					"src": "3307:14:6"
																				},
																				"nativeSrc": "3299:222:6",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "3322:21:6",
																					"nodeType": "YulBlock",
																					"src": "3322:21:6",
																					"statements": [
																						{
																							"nativeSrc": "3324:17:6",
																							"nodeType": "YulAssignment",
																							"src": "3324:17:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "3333:1:6",
																										"nodeType": "YulIdentifier",
																										"src": "3333:1:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3336:4:6",
																										"nodeType": "YulLiteral",
																										"src": "3336:4:6",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3329:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "3329:3:6"
																								},
																								"nativeSrc": "3329:12:6",
																								"nodeType": "YulFunctionCall",
																								"src": "3329:12:6"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "3324:1:6",
																									"nodeType": "YulIdentifier",
																									"src": "3324:1:6"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "3303:3:6",
																					"nodeType": "YulBlock",
																					"src": "3303:3:6",
																					"statements": []
																				},
																				"src": "3299:222:6"
																			},
																			{
																				"body": {
																					"nativeSrc": "3569:166:6",
																					"nodeType": "YulBlock",
																					"src": "3569:166:6",
																					"statements": [
																						{
																							"nativeSrc": "3587:43:6",
																							"nodeType": "YulVariableDeclaration",
																							"src": "3587:43:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "3614:3:6",
																												"nodeType": "YulIdentifier",
																												"src": "3614:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "3619:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "3619:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "3610:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "3610:3:6"
																										},
																										"nativeSrc": "3610:19:6",
																										"nodeType": "YulFunctionCall",
																										"src": "3610:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "3604:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "3604:5:6"
																								},
																								"nativeSrc": "3604:26:6",
																								"nodeType": "YulFunctionCall",
																								"src": "3604:26:6"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "3591:9:6",
																									"nodeType": "YulTypedName",
																									"src": "3591:9:6",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3654:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "3654:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "3666:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "3666:9:6"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "3693:1:6",
																																				"nodeType": "YulLiteral",
																																				"src": "3693:1:6",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "3696:6:6",
																																				"nodeType": "YulIdentifier",
																																				"src": "3696:6:6"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "3689:3:6",
																																			"nodeType": "YulIdentifier",
																																			"src": "3689:3:6"
																																		},
																																		"nativeSrc": "3689:14:6",
																																		"nodeType": "YulFunctionCall",
																																		"src": "3689:14:6"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "3705:3:6",
																																		"nodeType": "YulLiteral",
																																		"src": "3705:3:6",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "3685:3:6",
																																	"nodeType": "YulIdentifier",
																																	"src": "3685:3:6"
																																},
																																"nativeSrc": "3685:24:6",
																																"nodeType": "YulFunctionCall",
																																"src": "3685:24:6"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "3715:1:6",
																																		"nodeType": "YulLiteral",
																																		"src": "3715:1:6",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "3711:3:6",
																																	"nodeType": "YulIdentifier",
																																	"src": "3711:3:6"
																																},
																																"nativeSrc": "3711:6:6",
																																"nodeType": "YulFunctionCall",
																																"src": "3711:6:6"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "3681:3:6",
																															"nodeType": "YulIdentifier",
																															"src": "3681:3:6"
																														},
																														"nativeSrc": "3681:37:6",
																														"nodeType": "YulFunctionCall",
																														"src": "3681:37:6"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "3677:3:6",
																													"nodeType": "YulIdentifier",
																													"src": "3677:3:6"
																												},
																												"nativeSrc": "3677:42:6",
																												"nodeType": "YulFunctionCall",
																												"src": "3677:42:6"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "3662:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "3662:3:6"
																										},
																										"nativeSrc": "3662:58:6",
																										"nodeType": "YulFunctionCall",
																										"src": "3662:58:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "3647:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "3647:6:6"
																								},
																								"nativeSrc": "3647:74:6",
																								"nodeType": "YulFunctionCall",
																								"src": "3647:74:6"
																							},
																							"nativeSrc": "3647:74:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "3647:74:6"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "3540:7:6",
																							"nodeType": "YulIdentifier",
																							"src": "3540:7:6"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "3549:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "3549:6:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "3537:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "3537:2:6"
																					},
																					"nativeSrc": "3537:19:6",
																					"nodeType": "YulFunctionCall",
																					"src": "3537:19:6"
																				},
																				"nativeSrc": "3534:201:6",
																				"nodeType": "YulIf",
																				"src": "3534:201:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3755:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "3755:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "3769:1:6",
																											"nodeType": "YulLiteral",
																											"src": "3769:1:6",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "3772:6:6",
																											"nodeType": "YulIdentifier",
																											"src": "3772:6:6"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "3765:3:6",
																										"nodeType": "YulIdentifier",
																										"src": "3765:3:6"
																									},
																									"nativeSrc": "3765:14:6",
																									"nodeType": "YulFunctionCall",
																									"src": "3765:14:6"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "3781:1:6",
																									"nodeType": "YulLiteral",
																									"src": "3781:1:6",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "3761:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "3761:3:6"
																							},
																							"nativeSrc": "3761:22:6",
																							"nodeType": "YulFunctionCall",
																							"src": "3761:22:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "3748:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "3748:6:6"
																					},
																					"nativeSrc": "3748:36:6",
																					"nodeType": "YulFunctionCall",
																					"src": "3748:36:6"
																				},
																				"nativeSrc": "3748:36:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "3748:36:6"
																			}
																		]
																	},
																	"nativeSrc": "3145:649:6",
																	"nodeType": "YulCase",
																	"src": "3145:649:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3150:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3150:1:6",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "3811:234:6",
																		"nodeType": "YulBlock",
																		"src": "3811:234:6",
																		"statements": [
																			{
																				"nativeSrc": "3825:14:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3825:14:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3838:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3838:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "3829:5:6",
																						"nodeType": "YulTypedName",
																						"src": "3829:5:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "3874:67:6",
																					"nodeType": "YulBlock",
																					"src": "3874:67:6",
																					"statements": [
																						{
																							"nativeSrc": "3892:35:6",
																							"nodeType": "YulAssignment",
																							"src": "3892:35:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "3911:3:6",
																												"nodeType": "YulIdentifier",
																												"src": "3911:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "3916:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "3916:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "3907:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "3907:3:6"
																										},
																										"nativeSrc": "3907:19:6",
																										"nodeType": "YulFunctionCall",
																										"src": "3907:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "3901:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "3901:5:6"
																								},
																								"nativeSrc": "3901:26:6",
																								"nodeType": "YulFunctionCall",
																								"src": "3901:26:6"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "3892:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "3892:5:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "3855:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "3855:6:6"
																				},
																				"nativeSrc": "3852:89:6",
																				"nodeType": "YulIf",
																				"src": "3852:89:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3961:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "3961:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "4020:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "4020:5:6"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "4027:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "4027:6:6"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "3967:52:6",
																								"nodeType": "YulIdentifier",
																								"src": "3967:52:6"
																							},
																							"nativeSrc": "3967:67:6",
																							"nodeType": "YulFunctionCall",
																							"src": "3967:67:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "3954:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "3954:6:6"
																					},
																					"nativeSrc": "3954:81:6",
																					"nodeType": "YulFunctionCall",
																					"src": "3954:81:6"
																				},
																				"nativeSrc": "3954:81:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "3954:81:6"
																			}
																		]
																	},
																	"nativeSrc": "3803:242:6",
																	"nodeType": "YulCase",
																	"src": "3803:242:6",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "3125:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3125:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3133:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3133:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3122:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "3122:2:6"
																},
																"nativeSrc": "3122:14:6",
																"nodeType": "YulFunctionCall",
																"src": "3122:14:6"
															},
															"nativeSrc": "3115:930:6",
															"nodeType": "YulSwitch",
															"src": "3115:930:6"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "2752:1299:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2833:4:6",
														"nodeType": "YulTypedName",
														"src": "2833:4:6",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "2839:3:6",
														"nodeType": "YulTypedName",
														"src": "2839:3:6",
														"type": ""
													}
												],
												"src": "2752:1299:6"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := mload(offset)\n        if gt(length, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 0x1f), not(31)), 63), not(31)))\n        if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, length)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            mstore(add(add(memPtr, i), 0x20), mload(add(add(offset, i), 0x20)))\n        }\n        mstore(add(add(memPtr, length), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        if gt(offset, sub(shl(64, 1), 1)) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, sub(shl(64, 1), 1)) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50604051610e28380380610e2883398101604081905261002f91610109565b600361003b83826101fb565b50600461004882826101fb565b5050506102b9565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261007757600080fd5b81516001600160401b0381111561009057610090610050565b604051601f8201601f19908116603f011681016001600160401b03811182821017156100be576100be610050565b6040528181528382016020018510156100d657600080fd5b60005b828110156100f5576020818601810151838301820152016100d9565b506000918101602001919091529392505050565b6000806040838503121561011c57600080fd5b82516001600160401b0381111561013257600080fd5b61013e85828601610066565b602085015190935090506001600160401b0381111561015c57600080fd5b61016885828601610066565b9150509250929050565b600181811c9082168061018657607f821691505b6020821081036101a657634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156101f657806000526020600020601f840160051c810160208510156101d35750805b601f840160051c820191505b818110156101f357600081556001016101df565b50505b505050565b81516001600160401b0381111561021457610214610050565b610228816102228454610172565b846101ac565b6020601f82116001811461025c57600083156102445750848201515b600019600385901b1c1916600184901b1784556101f3565b600084815260208120601f198516915b8281101561028c578785015182556020948501946001909201910161026c565b50848210156102aa5786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b610b60806102c86000396000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c80633950935111610081578063a457c2d71161005b578063a457c2d714610194578063a9059cbb146101a7578063dd62ed3e146101ba57600080fd5b8063395093511461014357806370a082311461015657806395d89b411461018c57600080fd5b806318160ddd116100b257806318160ddd1461010f57806323b872dd14610121578063313ce5671461013457600080fd5b806306fdde03146100ce578063095ea7b3146100ec575b600080fd5b6100d6610200565b6040516100e3919061094c565b60405180910390f35b6100ff6100fa3660046109e1565b610292565b60405190151581526020016100e3565b6002545b6040519081526020016100e3565b6100ff61012f366004610a0b565b6102ac565b604051601281526020016100e3565b6100ff6101513660046109e1565b6102d0565b610113610164366004610a48565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b6100d661031c565b6100ff6101a23660046109e1565b61032b565b6100ff6101b53660046109e1565b610401565b6101136101c8366004610a6a565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b60606003805461020f90610a9d565b80601f016020809104026020016040519081016040528092919081815260200182805461023b90610a9d565b80156102885780601f1061025d57610100808354040283529160200191610288565b820191906000526020600020905b81548152906001019060200180831161026b57829003601f168201915b5050505050905090565b6000336102a081858561040f565b60019150505b92915050565b6000336102ba8582856105c2565b6102c5858585610699565b506001949350505050565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff871684529091528120549091906102a09082908690610317908790610af0565b61040f565b60606004805461020f90610a9d565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff87168452909152812054909190838110156103f4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f00000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6102c5828686840361040f565b6000336102a0818585610699565b73ffffffffffffffffffffffffffffffffffffffff83166104b1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f726573730000000000000000000000000000000000000000000000000000000060648201526084016103eb565b73ffffffffffffffffffffffffffffffffffffffff8216610554576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f737300000000000000000000000000000000000000000000000000000000000060648201526084016103eb565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff8381166000908152600160209081526040808320938616835292905220547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146106935781811015610686576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103eb565b610693848484840361040f565b50505050565b73ffffffffffffffffffffffffffffffffffffffff831661073c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f647265737300000000000000000000000000000000000000000000000000000060648201526084016103eb565b73ffffffffffffffffffffffffffffffffffffffff82166107df576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f657373000000000000000000000000000000000000000000000000000000000060648201526084016103eb565b73ffffffffffffffffffffffffffffffffffffffff831660009081526020819052604090205481811015610895576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e6365000000000000000000000000000000000000000000000000000060648201526084016103eb565b73ffffffffffffffffffffffffffffffffffffffff8085166000908152602081905260408082208585039055918516815290812080548492906108d9908490610af0565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161093f91815260200190565b60405180910390a3610693565b602081526000825180602084015260005b8181101561097a576020818601810151604086840101520161095d565b5060006040828501015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011684010191505092915050565b803573ffffffffffffffffffffffffffffffffffffffff811681146109dc57600080fd5b919050565b600080604083850312156109f457600080fd5b6109fd836109b8565b946020939093013593505050565b600080600060608486031215610a2057600080fd5b610a29846109b8565b9250610a37602085016109b8565b929592945050506040919091013590565b600060208284031215610a5a57600080fd5b610a63826109b8565b9392505050565b60008060408385031215610a7d57600080fd5b610a86836109b8565b9150610a94602084016109b8565b90509250929050565b600181811c90821680610ab157607f821691505b602082108103610aea577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b808201808211156102a6577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea26469706673582212201f6bd61ae72d9b2dc50b4a21355463ef91fa9b222af19512157f866a842d00b064736f6c634300081b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xE28 CODESIZE SUB DUP1 PUSH2 0xE28 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x109 JUMP JUMPDEST PUSH1 0x3 PUSH2 0x3B DUP4 DUP3 PUSH2 0x1FB JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0x48 DUP3 DUP3 PUSH2 0x1FB JUMP JUMPDEST POP POP POP PUSH2 0x2B9 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x77 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x90 JUMPI PUSH2 0x90 PUSH2 0x50 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xBE JUMPI PUSH2 0xBE PUSH2 0x50 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP4 DUP3 ADD PUSH1 0x20 ADD DUP6 LT ISZERO PUSH2 0xD6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xF5 JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP4 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xD9 JUMP JUMPDEST POP PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x11C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x132 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13E DUP6 DUP3 DUP7 ADD PUSH2 0x66 JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MLOAD SWAP1 SWAP4 POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x15C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x168 DUP6 DUP3 DUP7 ADD PUSH2 0x66 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x186 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1A6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1F6 JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1D3 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1F3 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1DF JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x214 JUMPI PUSH2 0x214 PUSH2 0x50 JUMP JUMPDEST PUSH2 0x228 DUP2 PUSH2 0x222 DUP5 SLOAD PUSH2 0x172 JUMP JUMPDEST DUP5 PUSH2 0x1AC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x25C JUMPI PUSH1 0x0 DUP4 ISZERO PUSH2 0x244 JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x1F3 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x28C JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x26C JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x2AA JUMPI DUP7 DUP5 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xB60 DUP1 PUSH2 0x2C8 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x81 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1A7 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x39509351 EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x18C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xB2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x10F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x121 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x134 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xCE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xEC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD6 PUSH2 0x200 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0x94C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFF PUSH2 0xFA CALLDATASIZE PUSH1 0x4 PUSH2 0x9E1 JUMP JUMPDEST PUSH2 0x292 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE3 JUMP JUMPDEST PUSH2 0xFF PUSH2 0x12F CALLDATASIZE PUSH1 0x4 PUSH2 0xA0B JUMP JUMPDEST PUSH2 0x2AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE3 JUMP JUMPDEST PUSH2 0xFF PUSH2 0x151 CALLDATASIZE PUSH1 0x4 PUSH2 0x9E1 JUMP JUMPDEST PUSH2 0x2D0 JUMP JUMPDEST PUSH2 0x113 PUSH2 0x164 CALLDATASIZE PUSH1 0x4 PUSH2 0xA48 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xD6 PUSH2 0x31C JUMP JUMPDEST PUSH2 0xFF PUSH2 0x1A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x9E1 JUMP JUMPDEST PUSH2 0x32B JUMP JUMPDEST PUSH2 0xFF PUSH2 0x1B5 CALLDATASIZE PUSH1 0x4 PUSH2 0x9E1 JUMP JUMPDEST PUSH2 0x401 JUMP JUMPDEST PUSH2 0x113 PUSH2 0x1C8 CALLDATASIZE PUSH1 0x4 PUSH2 0xA6A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x20F SWAP1 PUSH2 0xA9D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x23B SWAP1 PUSH2 0xA9D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x288 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x25D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x288 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x26B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x2A0 DUP2 DUP6 DUP6 PUSH2 0x40F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x2BA DUP6 DUP3 DUP6 PUSH2 0x5C2 JUMP JUMPDEST PUSH2 0x2C5 DUP6 DUP6 DUP6 PUSH2 0x699 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x2A0 SWAP1 DUP3 SWAP1 DUP7 SWAP1 PUSH2 0x317 SWAP1 DUP8 SWAP1 PUSH2 0xAF0 JUMP JUMPDEST PUSH2 0x40F JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x20F SWAP1 PUSH2 0xA9D JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 DUP4 DUP2 LT ISZERO PUSH2 0x3F4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2C5 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x40F JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x2A0 DUP2 DUP6 DUP6 PUSH2 0x699 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH2 0x4B1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3EB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x554 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3EB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x693 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x686 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3EB JUMP JUMPDEST PUSH2 0x693 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x40F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH2 0x73C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3EB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x7DF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3EB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x895 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3EB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x8D9 SWAP1 DUP5 SWAP1 PUSH2 0xAF0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x93F SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x693 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x97A JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD PUSH1 0x40 DUP7 DUP5 ADD ADD MSTORE ADD PUSH2 0x95D JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x9DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x9F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9FD DUP4 PUSH2 0x9B8 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xA20 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA29 DUP5 PUSH2 0x9B8 JUMP JUMPDEST SWAP3 POP PUSH2 0xA37 PUSH1 0x20 DUP6 ADD PUSH2 0x9B8 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA63 DUP3 PUSH2 0x9B8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA86 DUP4 PUSH2 0x9B8 JUMP JUMPDEST SWAP2 POP PUSH2 0xA94 PUSH1 0x20 DUP5 ADD PUSH2 0x9B8 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xAB1 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xAEA JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x2A6 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1F PUSH12 0xD61AE72D9B2DC50B4A213554 PUSH4 0xEF91FA9B 0x22 0x2A CALL SWAP6 SLT ISZERO PUSH32 0x866A842D00B064736F6C634300081B0033000000000000000000000000000000 ",
							"sourceMap": "2678:11214:2:-:0;;;3253:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3319:5;:13;3327:5;3319;:13;:::i;:::-;-1:-1:-1;3342:7:2;:17;3352:7;3342;:17;:::i;:::-;;3253:113;;2678:11214;;14:127:6;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:834;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;298:13;;-1:-1:-1;;;;;323:30:6;;320:56;;;356:18;;:::i;:::-;405:2;399:9;497:2;459:17;;-1:-1:-1;;455:31:6;;;488:2;451:40;447:54;435:67;;-1:-1:-1;;;;;517:34:6;;553:22;;;514:62;511:88;;;579:18;;:::i;:::-;615:2;608:22;639;;;680:19;;;701:4;676:30;673:39;-1:-1:-1;670:59:6;;;725:1;722;715:12;670:59;747:1;757:143;771:6;768:1;765:13;757:143;;;883:4;867:14;;;863:25;;857:32;834:14;;;830:25;;823:67;786:12;757:143;;;-1:-1:-1;948:1:6;920:19;;;941:4;916:30;909:41;;;;924:6;146:834;-1:-1:-1;;;146:834:6:o;985:557::-;1084:6;1092;1145:2;1133:9;1124:7;1120:23;1116:32;1113:52;;;1161:1;1158;1151:12;1113:52;1188:16;;-1:-1:-1;;;;;1216:30:6;;1213:50;;;1259:1;1256;1249:12;1213:50;1282:61;1335:7;1326:6;1315:9;1311:22;1282:61;:::i;:::-;1389:2;1374:18;;1368:25;1272:71;;-1:-1:-1;1368:25:6;-1:-1:-1;;;;;;1405:32:6;;1402:52;;;1450:1;1447;1440:12;1402:52;1473:63;1528:7;1517:8;1506:9;1502:24;1473:63;:::i;:::-;1463:73;;;985:557;;;;;:::o;1547:380::-;1626:1;1622:12;;;;1669;;;1690:61;;1744:4;1736:6;1732:17;1722:27;;1690:61;1797:2;1789:6;1786:14;1766:18;1763:38;1760:161;;1843:10;1838:3;1834:20;1831:1;1824:31;1878:4;1875:1;1868:15;1906:4;1903:1;1896:15;1760:161;;1547:380;;;:::o;2058:518::-;2160:2;2155:3;2152:11;2149:421;;;2196:5;2193:1;2186:16;2240:4;2237:1;2227:18;2310:2;2298:10;2294:19;2291:1;2287:27;2281:4;2277:38;2346:4;2334:10;2331:20;2328:47;;;-1:-1:-1;2369:4:6;2328:47;2424:2;2419:3;2415:12;2412:1;2408:20;2402:4;2398:31;2388:41;;2479:81;2497:2;2490:5;2487:13;2479:81;;;2556:1;2542:16;;2523:1;2512:13;2479:81;;;2483:3;;2149:421;2058:518;;;:::o;2752:1299::-;2872:10;;-1:-1:-1;;;;;2894:30:6;;2891:56;;;2927:18;;:::i;:::-;2956:97;3046:6;3006:38;3038:4;3032:11;3006:38;:::i;:::-;3000:4;2956:97;:::i;:::-;3102:4;3133:2;3122:14;;3150:1;3145:649;;;;3838:1;3855:6;3852:89;;;-1:-1:-1;3907:19:6;;;3901:26;3852:89;-1:-1:-1;;2709:1:6;2705:11;;;2701:24;2697:29;2687:40;2733:1;2729:11;;;2684:57;3954:81;;3115:930;;3145:649;2005:1;1998:14;;;2042:4;2029:18;;-1:-1:-1;;3181:20:6;;;3299:222;3313:7;3310:1;3307:14;3299:222;;;3395:19;;;3389:26;3374:42;;3502:4;3487:20;;;;3455:1;3443:14;;;;3329:12;3299:222;;;3303:3;3549:6;3540:7;3537:19;3534:201;;;3610:19;;;3604:26;-1:-1:-1;;3693:1:6;3689:14;;;3705:3;3685:24;3681:37;3677:42;3662:58;3647:74;;3534:201;-1:-1:-1;;;;3781:1:6;3765:14;;;3761:22;3748:36;;-1:-1:-1;2752:1299:6:o;:::-;2678:11214:2;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_744": {
									"entryPoint": null,
									"id": 744,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_679": {
									"entryPoint": 1039,
									"id": 679,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_733": {
									"entryPoint": null,
									"id": 733,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_860": {
									"entryPoint": null,
									"id": 860,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_722": {
									"entryPoint": 1474,
									"id": 722,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_506": {
									"entryPoint": 1689,
									"id": 506,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_301": {
									"entryPoint": null,
									"id": 301,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_326": {
									"entryPoint": 658,
									"id": 326,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_258": {
									"entryPoint": null,
									"id": 258,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_234": {
									"entryPoint": null,
									"id": 234,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_429": {
									"entryPoint": 811,
									"id": 429,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_388": {
									"entryPoint": 720,
									"id": 388,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_214": {
									"entryPoint": 512,
									"id": 214,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_224": {
									"entryPoint": 796,
									"id": 224,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_244": {
									"entryPoint": null,
									"id": 244,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_359": {
									"entryPoint": 684,
									"id": 359,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_283": {
									"entryPoint": 1025,
									"id": 283,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 2488,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2632,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 2666,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 2571,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 2529,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2380,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2800,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2717,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:6021:6",
										"nodeType": "YulBlock",
										"src": "0:6021:6",
										"statements": [
											{
												"nativeSrc": "6:3:6",
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "135:465:6",
													"nodeType": "YulBlock",
													"src": "135:465:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "152:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "152:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "163:2:6",
																		"nodeType": "YulLiteral",
																		"src": "163:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "145:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "145:6:6"
																},
																"nativeSrc": "145:21:6",
																"nodeType": "YulFunctionCall",
																"src": "145:21:6"
															},
															"nativeSrc": "145:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "145:21:6"
														},
														{
															"nativeSrc": "175:27:6",
															"nodeType": "YulVariableDeclaration",
															"src": "175:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "195:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "195:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "189:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "189:5:6"
																},
																"nativeSrc": "189:13:6",
																"nodeType": "YulFunctionCall",
																"src": "189:13:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "179:6:6",
																	"nodeType": "YulTypedName",
																	"src": "179:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "222:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "222:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "233:2:6",
																				"nodeType": "YulLiteral",
																				"src": "233:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "218:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "218:3:6"
																		},
																		"nativeSrc": "218:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "218:18:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "238:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "238:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "211:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "211:6:6"
																},
																"nativeSrc": "211:34:6",
																"nodeType": "YulFunctionCall",
																"src": "211:34:6"
															},
															"nativeSrc": "211:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "211:34:6"
														},
														{
															"nativeSrc": "254:10:6",
															"nodeType": "YulVariableDeclaration",
															"src": "254:10:6",
															"value": {
																"kind": "number",
																"nativeSrc": "263:1:6",
																"nodeType": "YulLiteral",
																"src": "263:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "258:1:6",
																	"nodeType": "YulTypedName",
																	"src": "258:1:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "323:90:6",
																"nodeType": "YulBlock",
																"src": "323:90:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nativeSrc": "352:9:6",
																									"nodeType": "YulIdentifier",
																									"src": "352:9:6"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "363:1:6",
																									"nodeType": "YulIdentifier",
																									"src": "363:1:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "348:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "348:3:6"
																							},
																							"nativeSrc": "348:17:6",
																							"nodeType": "YulFunctionCall",
																							"src": "348:17:6"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "367:2:6",
																							"nodeType": "YulLiteral",
																							"src": "367:2:6",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "344:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "344:3:6"
																					},
																					"nativeSrc": "344:26:6",
																					"nodeType": "YulFunctionCall",
																					"src": "344:26:6"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nativeSrc": "386:6:6",
																											"nodeType": "YulIdentifier",
																											"src": "386:6:6"
																										},
																										{
																											"name": "i",
																											"nativeSrc": "394:1:6",
																											"nodeType": "YulIdentifier",
																											"src": "394:1:6"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nativeSrc": "382:3:6",
																										"nodeType": "YulIdentifier",
																										"src": "382:3:6"
																									},
																									"nativeSrc": "382:14:6",
																									"nodeType": "YulFunctionCall",
																									"src": "382:14:6"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "398:2:6",
																									"nodeType": "YulLiteral",
																									"src": "398:2:6",
																									"type": "",
																									"value": "32"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "378:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "378:3:6"
																							},
																							"nativeSrc": "378:23:6",
																							"nodeType": "YulFunctionCall",
																							"src": "378:23:6"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "372:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "372:5:6"
																					},
																					"nativeSrc": "372:30:6",
																					"nodeType": "YulFunctionCall",
																					"src": "372:30:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "337:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "337:6:6"
																			},
																			"nativeSrc": "337:66:6",
																			"nodeType": "YulFunctionCall",
																			"src": "337:66:6"
																		},
																		"nativeSrc": "337:66:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "337:66:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "284:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "284:1:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "287:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "287:6:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "281:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "281:2:6"
																},
																"nativeSrc": "281:13:6",
																"nodeType": "YulFunctionCall",
																"src": "281:13:6"
															},
															"nativeSrc": "273:140:6",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "295:19:6",
																"nodeType": "YulBlock",
																"src": "295:19:6",
																"statements": [
																	{
																		"nativeSrc": "297:15:6",
																		"nodeType": "YulAssignment",
																		"src": "297:15:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "306:1:6",
																					"nodeType": "YulIdentifier",
																					"src": "306:1:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "309:2:6",
																					"nodeType": "YulLiteral",
																					"src": "309:2:6",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "302:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "302:3:6"
																			},
																			"nativeSrc": "302:10:6",
																			"nodeType": "YulFunctionCall",
																			"src": "302:10:6"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "297:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "297:1:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "277:3:6",
																"nodeType": "YulBlock",
																"src": "277:3:6",
																"statements": []
															},
															"src": "273:140:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "437:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "437:9:6"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "448:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "448:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "433:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "433:3:6"
																				},
																				"nativeSrc": "433:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "433:22:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "457:2:6",
																				"nodeType": "YulLiteral",
																				"src": "457:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "429:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "429:3:6"
																		},
																		"nativeSrc": "429:31:6",
																		"nodeType": "YulFunctionCall",
																		"src": "429:31:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "462:1:6",
																		"nodeType": "YulLiteral",
																		"src": "462:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "422:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "422:6:6"
																},
																"nativeSrc": "422:42:6",
																"nodeType": "YulFunctionCall",
																"src": "422:42:6"
															},
															"nativeSrc": "422:42:6",
															"nodeType": "YulExpressionStatement",
															"src": "422:42:6"
														},
														{
															"nativeSrc": "473:121:6",
															"nodeType": "YulAssignment",
															"src": "473:121:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "489:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "489:9:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "508:6:6",
																								"nodeType": "YulIdentifier",
																								"src": "508:6:6"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "516:2:6",
																								"nodeType": "YulLiteral",
																								"src": "516:2:6",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "504:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "504:3:6"
																						},
																						"nativeSrc": "504:15:6",
																						"nodeType": "YulFunctionCall",
																						"src": "504:15:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "521:66:6",
																						"nodeType": "YulLiteral",
																						"src": "521:66:6",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "500:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "500:3:6"
																				},
																				"nativeSrc": "500:88:6",
																				"nodeType": "YulFunctionCall",
																				"src": "500:88:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "485:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "485:3:6"
																		},
																		"nativeSrc": "485:104:6",
																		"nodeType": "YulFunctionCall",
																		"src": "485:104:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "591:2:6",
																		"nodeType": "YulLiteral",
																		"src": "591:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "481:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:6"
																},
																"nativeSrc": "481:113:6",
																"nodeType": "YulFunctionCall",
																"src": "481:113:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "473:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14:586:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "104:9:6",
														"nodeType": "YulTypedName",
														"src": "104:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "115:6:6",
														"nodeType": "YulTypedName",
														"src": "115:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "126:4:6",
														"nodeType": "YulTypedName",
														"src": "126:4:6",
														"type": ""
													}
												],
												"src": "14:586:6"
											},
											{
												"body": {
													"nativeSrc": "654:147:6",
													"nodeType": "YulBlock",
													"src": "654:147:6",
													"statements": [
														{
															"nativeSrc": "664:29:6",
															"nodeType": "YulAssignment",
															"src": "664:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "686:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "686:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "673:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "673:12:6"
																},
																"nativeSrc": "673:20:6",
																"nodeType": "YulFunctionCall",
																"src": "673:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "664:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "664:5:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "779:16:6",
																"nodeType": "YulBlock",
																"src": "779:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "788:1:6",
																					"nodeType": "YulLiteral",
																					"src": "788:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "791:1:6",
																					"nodeType": "YulLiteral",
																					"src": "791:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "781:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "781:6:6"
																			},
																			"nativeSrc": "781:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "781:12:6"
																		},
																		"nativeSrc": "781:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "781:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "715:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "715:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "726:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "726:5:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "733:42:6",
																						"nodeType": "YulLiteral",
																						"src": "733:42:6",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "722:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "722:3:6"
																				},
																				"nativeSrc": "722:54:6",
																				"nodeType": "YulFunctionCall",
																				"src": "722:54:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "712:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "712:2:6"
																		},
																		"nativeSrc": "712:65:6",
																		"nodeType": "YulFunctionCall",
																		"src": "712:65:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "705:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "705:6:6"
																},
																"nativeSrc": "705:73:6",
																"nodeType": "YulFunctionCall",
																"src": "705:73:6"
															},
															"nativeSrc": "702:93:6",
															"nodeType": "YulIf",
															"src": "702:93:6"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "605:196:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "633:6:6",
														"nodeType": "YulTypedName",
														"src": "633:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "644:5:6",
														"nodeType": "YulTypedName",
														"src": "644:5:6",
														"type": ""
													}
												],
												"src": "605:196:6"
											},
											{
												"body": {
													"nativeSrc": "893:213:6",
													"nodeType": "YulBlock",
													"src": "893:213:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "939:16:6",
																"nodeType": "YulBlock",
																"src": "939:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "948:1:6",
																					"nodeType": "YulLiteral",
																					"src": "948:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "951:1:6",
																					"nodeType": "YulLiteral",
																					"src": "951:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "941:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "941:6:6"
																			},
																			"nativeSrc": "941:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "941:12:6"
																		},
																		"nativeSrc": "941:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "941:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "914:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "914:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "923:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "923:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "910:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "910:3:6"
																		},
																		"nativeSrc": "910:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "910:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "935:2:6",
																		"nodeType": "YulLiteral",
																		"src": "935:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "906:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "906:3:6"
																},
																"nativeSrc": "906:32:6",
																"nodeType": "YulFunctionCall",
																"src": "906:32:6"
															},
															"nativeSrc": "903:52:6",
															"nodeType": "YulIf",
															"src": "903:52:6"
														},
														{
															"nativeSrc": "964:39:6",
															"nodeType": "YulAssignment",
															"src": "964:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "993:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "993:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "974:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "974:18:6"
																},
																"nativeSrc": "974:29:6",
																"nodeType": "YulFunctionCall",
																"src": "974:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "964:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "964:6:6"
																}
															]
														},
														{
															"nativeSrc": "1012:14:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1012:14:6",
															"value": {
																"kind": "number",
																"nativeSrc": "1025:1:6",
																"nodeType": "YulLiteral",
																"src": "1025:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1016:5:6",
																	"nodeType": "YulTypedName",
																	"src": "1016:5:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1035:41:6",
															"nodeType": "YulAssignment",
															"src": "1035:41:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1061:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1061:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1072:2:6",
																				"nodeType": "YulLiteral",
																				"src": "1072:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1057:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1057:3:6"
																		},
																		"nativeSrc": "1057:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1057:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1044:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "1044:12:6"
																},
																"nativeSrc": "1044:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1044:32:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1035:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1035:5:6"
																}
															]
														},
														{
															"nativeSrc": "1085:15:6",
															"nodeType": "YulAssignment",
															"src": "1085:15:6",
															"value": {
																"name": "value",
																"nativeSrc": "1095:5:6",
																"nodeType": "YulIdentifier",
																"src": "1095:5:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1085:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1085:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "806:300:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "851:9:6",
														"nodeType": "YulTypedName",
														"src": "851:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "862:7:6",
														"nodeType": "YulTypedName",
														"src": "862:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "874:6:6",
														"nodeType": "YulTypedName",
														"src": "874:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "882:6:6",
														"nodeType": "YulTypedName",
														"src": "882:6:6",
														"type": ""
													}
												],
												"src": "806:300:6"
											},
											{
												"body": {
													"nativeSrc": "1206:92:6",
													"nodeType": "YulBlock",
													"src": "1206:92:6",
													"statements": [
														{
															"nativeSrc": "1216:26:6",
															"nodeType": "YulAssignment",
															"src": "1216:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1228:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1228:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1239:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1239:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1224:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1224:3:6"
																},
																"nativeSrc": "1224:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1224:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1216:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1216:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1258:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1258:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1283:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1283:6:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1276:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "1276:6:6"
																				},
																				"nativeSrc": "1276:14:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1276:14:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1269:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1269:6:6"
																		},
																		"nativeSrc": "1269:22:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1269:22:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1251:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1251:6:6"
																},
																"nativeSrc": "1251:41:6",
																"nodeType": "YulFunctionCall",
																"src": "1251:41:6"
															},
															"nativeSrc": "1251:41:6",
															"nodeType": "YulExpressionStatement",
															"src": "1251:41:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1111:187:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1175:9:6",
														"nodeType": "YulTypedName",
														"src": "1175:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1186:6:6",
														"nodeType": "YulTypedName",
														"src": "1186:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1197:4:6",
														"nodeType": "YulTypedName",
														"src": "1197:4:6",
														"type": ""
													}
												],
												"src": "1111:187:6"
											},
											{
												"body": {
													"nativeSrc": "1404:76:6",
													"nodeType": "YulBlock",
													"src": "1404:76:6",
													"statements": [
														{
															"nativeSrc": "1414:26:6",
															"nodeType": "YulAssignment",
															"src": "1414:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1426:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1426:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1437:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1437:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1422:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1422:3:6"
																},
																"nativeSrc": "1422:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1422:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1414:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1414:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1456:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1456:9:6"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1467:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1467:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1449:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1449:6:6"
																},
																"nativeSrc": "1449:25:6",
																"nodeType": "YulFunctionCall",
																"src": "1449:25:6"
															},
															"nativeSrc": "1449:25:6",
															"nodeType": "YulExpressionStatement",
															"src": "1449:25:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1303:177:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1373:9:6",
														"nodeType": "YulTypedName",
														"src": "1373:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1384:6:6",
														"nodeType": "YulTypedName",
														"src": "1384:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1395:4:6",
														"nodeType": "YulTypedName",
														"src": "1395:4:6",
														"type": ""
													}
												],
												"src": "1303:177:6"
											},
											{
												"body": {
													"nativeSrc": "1589:270:6",
													"nodeType": "YulBlock",
													"src": "1589:270:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1635:16:6",
																"nodeType": "YulBlock",
																"src": "1635:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1644:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1644:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1647:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1647:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1637:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1637:6:6"
																			},
																			"nativeSrc": "1637:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1637:12:6"
																		},
																		"nativeSrc": "1637:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1637:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1610:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1610:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1619:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1619:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1606:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1606:3:6"
																		},
																		"nativeSrc": "1606:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1606:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1631:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1631:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1602:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1602:3:6"
																},
																"nativeSrc": "1602:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1602:32:6"
															},
															"nativeSrc": "1599:52:6",
															"nodeType": "YulIf",
															"src": "1599:52:6"
														},
														{
															"nativeSrc": "1660:39:6",
															"nodeType": "YulAssignment",
															"src": "1660:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1689:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1689:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1670:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "1670:18:6"
																},
																"nativeSrc": "1670:29:6",
																"nodeType": "YulFunctionCall",
																"src": "1670:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1660:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1660:6:6"
																}
															]
														},
														{
															"nativeSrc": "1708:48:6",
															"nodeType": "YulAssignment",
															"src": "1708:48:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1741:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1741:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1752:2:6",
																				"nodeType": "YulLiteral",
																				"src": "1752:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1737:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1737:3:6"
																		},
																		"nativeSrc": "1737:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1737:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1718:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "1718:18:6"
																},
																"nativeSrc": "1718:38:6",
																"nodeType": "YulFunctionCall",
																"src": "1718:38:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1708:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1708:6:6"
																}
															]
														},
														{
															"nativeSrc": "1765:14:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1765:14:6",
															"value": {
																"kind": "number",
																"nativeSrc": "1778:1:6",
																"nodeType": "YulLiteral",
																"src": "1778:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1769:5:6",
																	"nodeType": "YulTypedName",
																	"src": "1769:5:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1788:41:6",
															"nodeType": "YulAssignment",
															"src": "1788:41:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1814:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1814:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1825:2:6",
																				"nodeType": "YulLiteral",
																				"src": "1825:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1810:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1810:3:6"
																		},
																		"nativeSrc": "1810:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1810:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1797:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "1797:12:6"
																},
																"nativeSrc": "1797:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1797:32:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1788:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1788:5:6"
																}
															]
														},
														{
															"nativeSrc": "1838:15:6",
															"nodeType": "YulAssignment",
															"src": "1838:15:6",
															"value": {
																"name": "value",
																"nativeSrc": "1848:5:6",
																"nodeType": "YulIdentifier",
																"src": "1848:5:6"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1838:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1838:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1485:374:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1539:9:6",
														"nodeType": "YulTypedName",
														"src": "1539:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1550:7:6",
														"nodeType": "YulTypedName",
														"src": "1550:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1562:6:6",
														"nodeType": "YulTypedName",
														"src": "1562:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1570:6:6",
														"nodeType": "YulTypedName",
														"src": "1570:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1578:6:6",
														"nodeType": "YulTypedName",
														"src": "1578:6:6",
														"type": ""
													}
												],
												"src": "1485:374:6"
											},
											{
												"body": {
													"nativeSrc": "1961:87:6",
													"nodeType": "YulBlock",
													"src": "1961:87:6",
													"statements": [
														{
															"nativeSrc": "1971:26:6",
															"nodeType": "YulAssignment",
															"src": "1971:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1983:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1983:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1994:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1994:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1979:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1979:3:6"
																},
																"nativeSrc": "1979:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1979:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1971:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1971:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2013:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2013:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2028:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2028:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2036:4:6",
																				"nodeType": "YulLiteral",
																				"src": "2036:4:6",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2024:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2024:3:6"
																		},
																		"nativeSrc": "2024:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2024:17:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2006:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2006:6:6"
																},
																"nativeSrc": "2006:36:6",
																"nodeType": "YulFunctionCall",
																"src": "2006:36:6"
															},
															"nativeSrc": "2006:36:6",
															"nodeType": "YulExpressionStatement",
															"src": "2006:36:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "1864:184:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1930:9:6",
														"nodeType": "YulTypedName",
														"src": "1930:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1941:6:6",
														"nodeType": "YulTypedName",
														"src": "1941:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1952:4:6",
														"nodeType": "YulTypedName",
														"src": "1952:4:6",
														"type": ""
													}
												],
												"src": "1864:184:6"
											},
											{
												"body": {
													"nativeSrc": "2123:116:6",
													"nodeType": "YulBlock",
													"src": "2123:116:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2169:16:6",
																"nodeType": "YulBlock",
																"src": "2169:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2178:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2178:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2181:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2181:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2171:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2171:6:6"
																			},
																			"nativeSrc": "2171:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2171:12:6"
																		},
																		"nativeSrc": "2171:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2171:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2144:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2144:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2153:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2153:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2140:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2140:3:6"
																		},
																		"nativeSrc": "2140:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2140:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2165:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2165:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2136:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2136:3:6"
																},
																"nativeSrc": "2136:32:6",
																"nodeType": "YulFunctionCall",
																"src": "2136:32:6"
															},
															"nativeSrc": "2133:52:6",
															"nodeType": "YulIf",
															"src": "2133:52:6"
														},
														{
															"nativeSrc": "2194:39:6",
															"nodeType": "YulAssignment",
															"src": "2194:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2223:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2223:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2204:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "2204:18:6"
																},
																"nativeSrc": "2204:29:6",
																"nodeType": "YulFunctionCall",
																"src": "2204:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2194:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2194:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2053:186:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2089:9:6",
														"nodeType": "YulTypedName",
														"src": "2089:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2100:7:6",
														"nodeType": "YulTypedName",
														"src": "2100:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2112:6:6",
														"nodeType": "YulTypedName",
														"src": "2112:6:6",
														"type": ""
													}
												],
												"src": "2053:186:6"
											},
											{
												"body": {
													"nativeSrc": "2331:173:6",
													"nodeType": "YulBlock",
													"src": "2331:173:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2377:16:6",
																"nodeType": "YulBlock",
																"src": "2377:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2386:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2386:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2389:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2389:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2379:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2379:6:6"
																			},
																			"nativeSrc": "2379:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2379:12:6"
																		},
																		"nativeSrc": "2379:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2379:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2352:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2352:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2361:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2361:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2348:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2348:3:6"
																		},
																		"nativeSrc": "2348:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2348:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2373:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2373:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2344:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2344:3:6"
																},
																"nativeSrc": "2344:32:6",
																"nodeType": "YulFunctionCall",
																"src": "2344:32:6"
															},
															"nativeSrc": "2341:52:6",
															"nodeType": "YulIf",
															"src": "2341:52:6"
														},
														{
															"nativeSrc": "2402:39:6",
															"nodeType": "YulAssignment",
															"src": "2402:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2431:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2431:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2412:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "2412:18:6"
																},
																"nativeSrc": "2412:29:6",
																"nodeType": "YulFunctionCall",
																"src": "2412:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2402:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2402:6:6"
																}
															]
														},
														{
															"nativeSrc": "2450:48:6",
															"nodeType": "YulAssignment",
															"src": "2450:48:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2483:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2483:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2494:2:6",
																				"nodeType": "YulLiteral",
																				"src": "2494:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2479:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2479:3:6"
																		},
																		"nativeSrc": "2479:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2479:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2460:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "2460:18:6"
																},
																"nativeSrc": "2460:38:6",
																"nodeType": "YulFunctionCall",
																"src": "2460:38:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2450:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2450:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "2244:260:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2289:9:6",
														"nodeType": "YulTypedName",
														"src": "2289:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2300:7:6",
														"nodeType": "YulTypedName",
														"src": "2300:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2312:6:6",
														"nodeType": "YulTypedName",
														"src": "2312:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2320:6:6",
														"nodeType": "YulTypedName",
														"src": "2320:6:6",
														"type": ""
													}
												],
												"src": "2244:260:6"
											},
											{
												"body": {
													"nativeSrc": "2564:382:6",
													"nodeType": "YulBlock",
													"src": "2564:382:6",
													"statements": [
														{
															"nativeSrc": "2574:22:6",
															"nodeType": "YulAssignment",
															"src": "2574:22:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2588:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2588:1:6",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "2591:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "2591:4:6"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "2584:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2584:3:6"
																},
																"nativeSrc": "2584:12:6",
																"nodeType": "YulFunctionCall",
																"src": "2584:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2574:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2574:6:6"
																}
															]
														},
														{
															"nativeSrc": "2605:38:6",
															"nodeType": "YulVariableDeclaration",
															"src": "2605:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2635:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "2635:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2641:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2641:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2631:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2631:3:6"
																},
																"nativeSrc": "2631:12:6",
																"nodeType": "YulFunctionCall",
																"src": "2631:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "2609:18:6",
																	"nodeType": "YulTypedName",
																	"src": "2609:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2682:31:6",
																"nodeType": "YulBlock",
																"src": "2682:31:6",
																"statements": [
																	{
																		"nativeSrc": "2684:27:6",
																		"nodeType": "YulAssignment",
																		"src": "2684:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "2698:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "2698:6:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2706:4:6",
																					"nodeType": "YulLiteral",
																					"src": "2706:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2694:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "2694:3:6"
																			},
																			"nativeSrc": "2694:17:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2694:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "2684:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2684:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2662:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "2662:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2655:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2655:6:6"
																},
																"nativeSrc": "2655:26:6",
																"nodeType": "YulFunctionCall",
																"src": "2655:26:6"
															},
															"nativeSrc": "2652:61:6",
															"nodeType": "YulIf",
															"src": "2652:61:6"
														},
														{
															"body": {
																"nativeSrc": "2772:168:6",
																"nodeType": "YulBlock",
																"src": "2772:168:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2793:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2793:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2796:77:6",
																					"nodeType": "YulLiteral",
																					"src": "2796:77:6",
																					"type": "",
																					"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2786:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2786:6:6"
																			},
																			"nativeSrc": "2786:88:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2786:88:6"
																		},
																		"nativeSrc": "2786:88:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2786:88:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2894:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2894:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2897:4:6",
																					"nodeType": "YulLiteral",
																					"src": "2897:4:6",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2887:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2887:6:6"
																			},
																			"nativeSrc": "2887:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2887:15:6"
																		},
																		"nativeSrc": "2887:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2887:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2922:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2922:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2925:4:6",
																					"nodeType": "YulLiteral",
																					"src": "2925:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2915:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2915:6:6"
																			},
																			"nativeSrc": "2915:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2915:15:6"
																		},
																		"nativeSrc": "2915:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2915:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2728:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "2728:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2751:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2751:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2759:2:6",
																				"nodeType": "YulLiteral",
																				"src": "2759:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2748:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "2748:2:6"
																		},
																		"nativeSrc": "2748:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2748:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2725:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "2725:2:6"
																},
																"nativeSrc": "2725:38:6",
																"nodeType": "YulFunctionCall",
																"src": "2725:38:6"
															},
															"nativeSrc": "2722:218:6",
															"nodeType": "YulIf",
															"src": "2722:218:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "2509:437:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2544:4:6",
														"nodeType": "YulTypedName",
														"src": "2544:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2553:6:6",
														"nodeType": "YulTypedName",
														"src": "2553:6:6",
														"type": ""
													}
												],
												"src": "2509:437:6"
											},
											{
												"body": {
													"nativeSrc": "2999:231:6",
													"nodeType": "YulBlock",
													"src": "2999:231:6",
													"statements": [
														{
															"nativeSrc": "3009:16:6",
															"nodeType": "YulAssignment",
															"src": "3009:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3020:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "3020:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3023:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "3023:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3016:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3016:3:6"
																},
																"nativeSrc": "3016:9:6",
																"nodeType": "YulFunctionCall",
																"src": "3016:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "3009:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3009:3:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3056:168:6",
																"nodeType": "YulBlock",
																"src": "3056:168:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3077:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3077:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3080:77:6",
																					"nodeType": "YulLiteral",
																					"src": "3080:77:6",
																					"type": "",
																					"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3070:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3070:6:6"
																			},
																			"nativeSrc": "3070:88:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3070:88:6"
																		},
																		"nativeSrc": "3070:88:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3070:88:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3178:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3178:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3181:4:6",
																					"nodeType": "YulLiteral",
																					"src": "3181:4:6",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3171:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3171:6:6"
																			},
																			"nativeSrc": "3171:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3171:15:6"
																		},
																		"nativeSrc": "3171:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3171:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3206:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3206:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3209:4:6",
																					"nodeType": "YulLiteral",
																					"src": "3209:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3199:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3199:6:6"
																			},
																			"nativeSrc": "3199:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3199:15:6"
																		},
																		"nativeSrc": "3199:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3199:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3040:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "3040:1:6"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "3043:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3043:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3037:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "3037:2:6"
																},
																"nativeSrc": "3037:10:6",
																"nodeType": "YulFunctionCall",
																"src": "3037:10:6"
															},
															"nativeSrc": "3034:190:6",
															"nodeType": "YulIf",
															"src": "3034:190:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "2951:279:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2982:1:6",
														"nodeType": "YulTypedName",
														"src": "2982:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2985:1:6",
														"nodeType": "YulTypedName",
														"src": "2985:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "2991:3:6",
														"nodeType": "YulTypedName",
														"src": "2991:3:6",
														"type": ""
													}
												],
												"src": "2951:279:6"
											},
											{
												"body": {
													"nativeSrc": "3409:227:6",
													"nodeType": "YulBlock",
													"src": "3409:227:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3426:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3426:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3437:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3437:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3419:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3419:6:6"
																},
																"nativeSrc": "3419:21:6",
																"nodeType": "YulFunctionCall",
																"src": "3419:21:6"
															},
															"nativeSrc": "3419:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "3419:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3460:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3460:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3471:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3471:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3456:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3456:3:6"
																		},
																		"nativeSrc": "3456:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3456:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3476:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3476:2:6",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3449:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3449:6:6"
																},
																"nativeSrc": "3449:30:6",
																"nodeType": "YulFunctionCall",
																"src": "3449:30:6"
															},
															"nativeSrc": "3449:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "3449:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3499:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3499:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3510:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3510:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3495:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3495:3:6"
																		},
																		"nativeSrc": "3495:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3495:18:6"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nativeSrc": "3515:34:6",
																		"nodeType": "YulLiteral",
																		"src": "3515:34:6",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3488:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3488:6:6"
																},
																"nativeSrc": "3488:62:6",
																"nodeType": "YulFunctionCall",
																"src": "3488:62:6"
															},
															"nativeSrc": "3488:62:6",
															"nodeType": "YulExpressionStatement",
															"src": "3488:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3570:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3570:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3581:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3581:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3566:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3566:3:6"
																		},
																		"nativeSrc": "3566:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3566:18:6"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nativeSrc": "3586:7:6",
																		"nodeType": "YulLiteral",
																		"src": "3586:7:6",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3559:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3559:6:6"
																},
																"nativeSrc": "3559:35:6",
																"nodeType": "YulFunctionCall",
																"src": "3559:35:6"
															},
															"nativeSrc": "3559:35:6",
															"nodeType": "YulExpressionStatement",
															"src": "3559:35:6"
														},
														{
															"nativeSrc": "3603:27:6",
															"nodeType": "YulAssignment",
															"src": "3603:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3615:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3615:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3626:3:6",
																		"nodeType": "YulLiteral",
																		"src": "3626:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3611:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3611:3:6"
																},
																"nativeSrc": "3611:19:6",
																"nodeType": "YulFunctionCall",
																"src": "3611:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3603:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3603:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3235:401:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3386:9:6",
														"nodeType": "YulTypedName",
														"src": "3386:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3400:4:6",
														"nodeType": "YulTypedName",
														"src": "3400:4:6",
														"type": ""
													}
												],
												"src": "3235:401:6"
											},
											{
												"body": {
													"nativeSrc": "3815:226:6",
													"nodeType": "YulBlock",
													"src": "3815:226:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3832:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3832:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3843:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3843:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3825:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3825:6:6"
																},
																"nativeSrc": "3825:21:6",
																"nodeType": "YulFunctionCall",
																"src": "3825:21:6"
															},
															"nativeSrc": "3825:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "3825:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3866:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3866:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3877:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3877:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3862:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3862:3:6"
																		},
																		"nativeSrc": "3862:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3862:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3882:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3882:2:6",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3855:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3855:6:6"
																},
																"nativeSrc": "3855:30:6",
																"nodeType": "YulFunctionCall",
																"src": "3855:30:6"
															},
															"nativeSrc": "3855:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "3855:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3905:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3905:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3916:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3916:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3901:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3901:3:6"
																		},
																		"nativeSrc": "3901:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3901:18:6"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nativeSrc": "3921:34:6",
																		"nodeType": "YulLiteral",
																		"src": "3921:34:6",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3894:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3894:6:6"
																},
																"nativeSrc": "3894:62:6",
																"nodeType": "YulFunctionCall",
																"src": "3894:62:6"
															},
															"nativeSrc": "3894:62:6",
															"nodeType": "YulExpressionStatement",
															"src": "3894:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3976:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3976:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3987:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3987:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3972:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3972:3:6"
																		},
																		"nativeSrc": "3972:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3972:18:6"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nativeSrc": "3992:6:6",
																		"nodeType": "YulLiteral",
																		"src": "3992:6:6",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3965:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3965:6:6"
																},
																"nativeSrc": "3965:34:6",
																"nodeType": "YulFunctionCall",
																"src": "3965:34:6"
															},
															"nativeSrc": "3965:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "3965:34:6"
														},
														{
															"nativeSrc": "4008:27:6",
															"nodeType": "YulAssignment",
															"src": "4008:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4020:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4020:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4031:3:6",
																		"nodeType": "YulLiteral",
																		"src": "4031:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4016:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4016:3:6"
																},
																"nativeSrc": "4016:19:6",
																"nodeType": "YulFunctionCall",
																"src": "4016:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4008:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4008:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3641:400:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3792:9:6",
														"nodeType": "YulTypedName",
														"src": "3792:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3806:4:6",
														"nodeType": "YulTypedName",
														"src": "3806:4:6",
														"type": ""
													}
												],
												"src": "3641:400:6"
											},
											{
												"body": {
													"nativeSrc": "4220:224:6",
													"nodeType": "YulBlock",
													"src": "4220:224:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4237:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4237:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4248:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4248:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4230:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4230:6:6"
																},
																"nativeSrc": "4230:21:6",
																"nodeType": "YulFunctionCall",
																"src": "4230:21:6"
															},
															"nativeSrc": "4230:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "4230:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4271:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4271:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4282:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4282:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4267:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4267:3:6"
																		},
																		"nativeSrc": "4267:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4267:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4287:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4287:2:6",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4260:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4260:6:6"
																},
																"nativeSrc": "4260:30:6",
																"nodeType": "YulFunctionCall",
																"src": "4260:30:6"
															},
															"nativeSrc": "4260:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "4260:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4310:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4310:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4321:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4321:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4306:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4306:3:6"
																		},
																		"nativeSrc": "4306:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4306:18:6"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nativeSrc": "4326:34:6",
																		"nodeType": "YulLiteral",
																		"src": "4326:34:6",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4299:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4299:6:6"
																},
																"nativeSrc": "4299:62:6",
																"nodeType": "YulFunctionCall",
																"src": "4299:62:6"
															},
															"nativeSrc": "4299:62:6",
															"nodeType": "YulExpressionStatement",
															"src": "4299:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4381:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4381:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4392:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4392:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4377:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4377:3:6"
																		},
																		"nativeSrc": "4377:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4377:18:6"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nativeSrc": "4397:4:6",
																		"nodeType": "YulLiteral",
																		"src": "4397:4:6",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4370:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4370:6:6"
																},
																"nativeSrc": "4370:32:6",
																"nodeType": "YulFunctionCall",
																"src": "4370:32:6"
															},
															"nativeSrc": "4370:32:6",
															"nodeType": "YulExpressionStatement",
															"src": "4370:32:6"
														},
														{
															"nativeSrc": "4411:27:6",
															"nodeType": "YulAssignment",
															"src": "4411:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4423:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4423:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4434:3:6",
																		"nodeType": "YulLiteral",
																		"src": "4434:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4419:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4419:3:6"
																},
																"nativeSrc": "4419:19:6",
																"nodeType": "YulFunctionCall",
																"src": "4419:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4411:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4411:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4046:398:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4197:9:6",
														"nodeType": "YulTypedName",
														"src": "4197:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4211:4:6",
														"nodeType": "YulTypedName",
														"src": "4211:4:6",
														"type": ""
													}
												],
												"src": "4046:398:6"
											},
											{
												"body": {
													"nativeSrc": "4623:179:6",
													"nodeType": "YulBlock",
													"src": "4623:179:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4640:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4640:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4651:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4651:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4633:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4633:6:6"
																},
																"nativeSrc": "4633:21:6",
																"nodeType": "YulFunctionCall",
																"src": "4633:21:6"
															},
															"nativeSrc": "4633:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "4633:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4674:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4674:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4685:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4685:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4670:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4670:3:6"
																		},
																		"nativeSrc": "4670:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4670:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4690:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4690:2:6",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4663:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4663:6:6"
																},
																"nativeSrc": "4663:30:6",
																"nodeType": "YulFunctionCall",
																"src": "4663:30:6"
															},
															"nativeSrc": "4663:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "4663:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4713:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4713:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4724:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4724:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4709:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4709:3:6"
																		},
																		"nativeSrc": "4709:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4709:18:6"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nativeSrc": "4729:31:6",
																		"nodeType": "YulLiteral",
																		"src": "4729:31:6",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4702:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4702:6:6"
																},
																"nativeSrc": "4702:59:6",
																"nodeType": "YulFunctionCall",
																"src": "4702:59:6"
															},
															"nativeSrc": "4702:59:6",
															"nodeType": "YulExpressionStatement",
															"src": "4702:59:6"
														},
														{
															"nativeSrc": "4770:26:6",
															"nodeType": "YulAssignment",
															"src": "4770:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4782:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4782:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4793:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4793:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4778:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4778:3:6"
																},
																"nativeSrc": "4778:18:6",
																"nodeType": "YulFunctionCall",
																"src": "4778:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4770:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4770:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4449:353:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4600:9:6",
														"nodeType": "YulTypedName",
														"src": "4600:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4614:4:6",
														"nodeType": "YulTypedName",
														"src": "4614:4:6",
														"type": ""
													}
												],
												"src": "4449:353:6"
											},
											{
												"body": {
													"nativeSrc": "4981:227:6",
													"nodeType": "YulBlock",
													"src": "4981:227:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4998:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4998:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5009:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5009:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4991:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4991:6:6"
																},
																"nativeSrc": "4991:21:6",
																"nodeType": "YulFunctionCall",
																"src": "4991:21:6"
															},
															"nativeSrc": "4991:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "4991:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5032:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5032:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5043:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5043:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5028:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5028:3:6"
																		},
																		"nativeSrc": "5028:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5028:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5048:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5048:2:6",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5021:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5021:6:6"
																},
																"nativeSrc": "5021:30:6",
																"nodeType": "YulFunctionCall",
																"src": "5021:30:6"
															},
															"nativeSrc": "5021:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "5021:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5071:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5071:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5082:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5082:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5067:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5067:3:6"
																		},
																		"nativeSrc": "5067:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5067:18:6"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nativeSrc": "5087:34:6",
																		"nodeType": "YulLiteral",
																		"src": "5087:34:6",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5060:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5060:6:6"
																},
																"nativeSrc": "5060:62:6",
																"nodeType": "YulFunctionCall",
																"src": "5060:62:6"
															},
															"nativeSrc": "5060:62:6",
															"nodeType": "YulExpressionStatement",
															"src": "5060:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5142:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5142:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5153:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5153:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5138:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5138:3:6"
																		},
																		"nativeSrc": "5138:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5138:18:6"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nativeSrc": "5158:7:6",
																		"nodeType": "YulLiteral",
																		"src": "5158:7:6",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5131:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5131:6:6"
																},
																"nativeSrc": "5131:35:6",
																"nodeType": "YulFunctionCall",
																"src": "5131:35:6"
															},
															"nativeSrc": "5131:35:6",
															"nodeType": "YulExpressionStatement",
															"src": "5131:35:6"
														},
														{
															"nativeSrc": "5175:27:6",
															"nodeType": "YulAssignment",
															"src": "5175:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5187:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5187:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5198:3:6",
																		"nodeType": "YulLiteral",
																		"src": "5198:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5183:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5183:3:6"
																},
																"nativeSrc": "5183:19:6",
																"nodeType": "YulFunctionCall",
																"src": "5183:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5175:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5175:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4807:401:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4958:9:6",
														"nodeType": "YulTypedName",
														"src": "4958:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4972:4:6",
														"nodeType": "YulTypedName",
														"src": "4972:4:6",
														"type": ""
													}
												],
												"src": "4807:401:6"
											},
											{
												"body": {
													"nativeSrc": "5387:225:6",
													"nodeType": "YulBlock",
													"src": "5387:225:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5404:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5404:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5415:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5415:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5397:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5397:6:6"
																},
																"nativeSrc": "5397:21:6",
																"nodeType": "YulFunctionCall",
																"src": "5397:21:6"
															},
															"nativeSrc": "5397:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "5397:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5438:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5438:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5449:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5449:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5434:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5434:3:6"
																		},
																		"nativeSrc": "5434:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5434:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5454:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5454:2:6",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5427:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5427:6:6"
																},
																"nativeSrc": "5427:30:6",
																"nodeType": "YulFunctionCall",
																"src": "5427:30:6"
															},
															"nativeSrc": "5427:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "5427:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5477:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5477:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5488:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5488:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5473:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5473:3:6"
																		},
																		"nativeSrc": "5473:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5473:18:6"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nativeSrc": "5493:34:6",
																		"nodeType": "YulLiteral",
																		"src": "5493:34:6",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5466:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5466:6:6"
																},
																"nativeSrc": "5466:62:6",
																"nodeType": "YulFunctionCall",
																"src": "5466:62:6"
															},
															"nativeSrc": "5466:62:6",
															"nodeType": "YulExpressionStatement",
															"src": "5466:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5548:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5548:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5559:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5559:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5544:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5544:3:6"
																		},
																		"nativeSrc": "5544:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5544:18:6"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nativeSrc": "5564:5:6",
																		"nodeType": "YulLiteral",
																		"src": "5564:5:6",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5537:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5537:6:6"
																},
																"nativeSrc": "5537:33:6",
																"nodeType": "YulFunctionCall",
																"src": "5537:33:6"
															},
															"nativeSrc": "5537:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "5537:33:6"
														},
														{
															"nativeSrc": "5579:27:6",
															"nodeType": "YulAssignment",
															"src": "5579:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5591:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5591:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5602:3:6",
																		"nodeType": "YulLiteral",
																		"src": "5602:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5587:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5587:3:6"
																},
																"nativeSrc": "5587:19:6",
																"nodeType": "YulFunctionCall",
																"src": "5587:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5579:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5579:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5213:399:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5364:9:6",
														"nodeType": "YulTypedName",
														"src": "5364:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5378:4:6",
														"nodeType": "YulTypedName",
														"src": "5378:4:6",
														"type": ""
													}
												],
												"src": "5213:399:6"
											},
											{
												"body": {
													"nativeSrc": "5791:228:6",
													"nodeType": "YulBlock",
													"src": "5791:228:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5808:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5808:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5819:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5819:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5801:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5801:6:6"
																},
																"nativeSrc": "5801:21:6",
																"nodeType": "YulFunctionCall",
																"src": "5801:21:6"
															},
															"nativeSrc": "5801:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "5801:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5842:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5842:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5853:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5853:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5838:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5838:3:6"
																		},
																		"nativeSrc": "5838:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5838:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5858:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5858:2:6",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5831:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5831:6:6"
																},
																"nativeSrc": "5831:30:6",
																"nodeType": "YulFunctionCall",
																"src": "5831:30:6"
															},
															"nativeSrc": "5831:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "5831:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5881:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5881:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5892:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5892:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5877:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5877:3:6"
																		},
																		"nativeSrc": "5877:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5877:18:6"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nativeSrc": "5897:34:6",
																		"nodeType": "YulLiteral",
																		"src": "5897:34:6",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5870:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5870:6:6"
																},
																"nativeSrc": "5870:62:6",
																"nodeType": "YulFunctionCall",
																"src": "5870:62:6"
															},
															"nativeSrc": "5870:62:6",
															"nodeType": "YulExpressionStatement",
															"src": "5870:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5952:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5952:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5963:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5963:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5948:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5948:3:6"
																		},
																		"nativeSrc": "5948:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5948:18:6"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nativeSrc": "5968:8:6",
																		"nodeType": "YulLiteral",
																		"src": "5968:8:6",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5941:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5941:6:6"
																},
																"nativeSrc": "5941:36:6",
																"nodeType": "YulFunctionCall",
																"src": "5941:36:6"
															},
															"nativeSrc": "5941:36:6",
															"nodeType": "YulExpressionStatement",
															"src": "5941:36:6"
														},
														{
															"nativeSrc": "5986:27:6",
															"nodeType": "YulAssignment",
															"src": "5986:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5998:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5998:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6009:3:6",
																		"nodeType": "YulLiteral",
																		"src": "6009:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5994:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5994:3:6"
																},
																"nativeSrc": "5994:19:6",
																"nodeType": "YulFunctionCall",
																"src": "5994:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5986:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5986:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5617:402:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5768:9:6",
														"nodeType": "YulTypedName",
														"src": "5768:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5782:4:6",
														"nodeType": "YulTypedName",
														"src": "5782:4:6",
														"type": ""
													}
												],
												"src": "5617:402:6"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), 32)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100c95760003560e01c80633950935111610081578063a457c2d71161005b578063a457c2d714610194578063a9059cbb146101a7578063dd62ed3e146101ba57600080fd5b8063395093511461014357806370a082311461015657806395d89b411461018c57600080fd5b806318160ddd116100b257806318160ddd1461010f57806323b872dd14610121578063313ce5671461013457600080fd5b806306fdde03146100ce578063095ea7b3146100ec575b600080fd5b6100d6610200565b6040516100e3919061094c565b60405180910390f35b6100ff6100fa3660046109e1565b610292565b60405190151581526020016100e3565b6002545b6040519081526020016100e3565b6100ff61012f366004610a0b565b6102ac565b604051601281526020016100e3565b6100ff6101513660046109e1565b6102d0565b610113610164366004610a48565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b6100d661031c565b6100ff6101a23660046109e1565b61032b565b6100ff6101b53660046109e1565b610401565b6101136101c8366004610a6a565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b60606003805461020f90610a9d565b80601f016020809104026020016040519081016040528092919081815260200182805461023b90610a9d565b80156102885780601f1061025d57610100808354040283529160200191610288565b820191906000526020600020905b81548152906001019060200180831161026b57829003601f168201915b5050505050905090565b6000336102a081858561040f565b60019150505b92915050565b6000336102ba8582856105c2565b6102c5858585610699565b506001949350505050565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff871684529091528120549091906102a09082908690610317908790610af0565b61040f565b60606004805461020f90610a9d565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff87168452909152812054909190838110156103f4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f00000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6102c5828686840361040f565b6000336102a0818585610699565b73ffffffffffffffffffffffffffffffffffffffff83166104b1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f726573730000000000000000000000000000000000000000000000000000000060648201526084016103eb565b73ffffffffffffffffffffffffffffffffffffffff8216610554576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f737300000000000000000000000000000000000000000000000000000000000060648201526084016103eb565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff8381166000908152600160209081526040808320938616835292905220547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146106935781811015610686576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103eb565b610693848484840361040f565b50505050565b73ffffffffffffffffffffffffffffffffffffffff831661073c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f647265737300000000000000000000000000000000000000000000000000000060648201526084016103eb565b73ffffffffffffffffffffffffffffffffffffffff82166107df576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f657373000000000000000000000000000000000000000000000000000000000060648201526084016103eb565b73ffffffffffffffffffffffffffffffffffffffff831660009081526020819052604090205481811015610895576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e6365000000000000000000000000000000000000000000000000000060648201526084016103eb565b73ffffffffffffffffffffffffffffffffffffffff8085166000908152602081905260408082208585039055918516815290812080548492906108d9908490610af0565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161093f91815260200190565b60405180910390a3610693565b602081526000825180602084015260005b8181101561097a576020818601810151604086840101520161095d565b5060006040828501015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011684010191505092915050565b803573ffffffffffffffffffffffffffffffffffffffff811681146109dc57600080fd5b919050565b600080604083850312156109f457600080fd5b6109fd836109b8565b946020939093013593505050565b600080600060608486031215610a2057600080fd5b610a29846109b8565b9250610a37602085016109b8565b929592945050506040919091013590565b600060208284031215610a5a57600080fd5b610a63826109b8565b9392505050565b60008060408385031215610a7d57600080fd5b610a86836109b8565b9150610a94602084016109b8565b90509250929050565b600181811c90821680610ab157607f821691505b602082108103610aea577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b808201808211156102a6577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea26469706673582212201f6bd61ae72d9b2dc50b4a21355463ef91fa9b222af19512157f866a842d00b064736f6c634300081b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x81 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1A7 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x39509351 EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x18C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xB2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x10F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x121 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x134 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xCE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xEC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD6 PUSH2 0x200 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0x94C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFF PUSH2 0xFA CALLDATASIZE PUSH1 0x4 PUSH2 0x9E1 JUMP JUMPDEST PUSH2 0x292 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE3 JUMP JUMPDEST PUSH2 0xFF PUSH2 0x12F CALLDATASIZE PUSH1 0x4 PUSH2 0xA0B JUMP JUMPDEST PUSH2 0x2AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE3 JUMP JUMPDEST PUSH2 0xFF PUSH2 0x151 CALLDATASIZE PUSH1 0x4 PUSH2 0x9E1 JUMP JUMPDEST PUSH2 0x2D0 JUMP JUMPDEST PUSH2 0x113 PUSH2 0x164 CALLDATASIZE PUSH1 0x4 PUSH2 0xA48 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xD6 PUSH2 0x31C JUMP JUMPDEST PUSH2 0xFF PUSH2 0x1A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x9E1 JUMP JUMPDEST PUSH2 0x32B JUMP JUMPDEST PUSH2 0xFF PUSH2 0x1B5 CALLDATASIZE PUSH1 0x4 PUSH2 0x9E1 JUMP JUMPDEST PUSH2 0x401 JUMP JUMPDEST PUSH2 0x113 PUSH2 0x1C8 CALLDATASIZE PUSH1 0x4 PUSH2 0xA6A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x20F SWAP1 PUSH2 0xA9D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x23B SWAP1 PUSH2 0xA9D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x288 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x25D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x288 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x26B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x2A0 DUP2 DUP6 DUP6 PUSH2 0x40F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x2BA DUP6 DUP3 DUP6 PUSH2 0x5C2 JUMP JUMPDEST PUSH2 0x2C5 DUP6 DUP6 DUP6 PUSH2 0x699 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x2A0 SWAP1 DUP3 SWAP1 DUP7 SWAP1 PUSH2 0x317 SWAP1 DUP8 SWAP1 PUSH2 0xAF0 JUMP JUMPDEST PUSH2 0x40F JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x20F SWAP1 PUSH2 0xA9D JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 DUP4 DUP2 LT ISZERO PUSH2 0x3F4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2C5 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x40F JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x2A0 DUP2 DUP6 DUP6 PUSH2 0x699 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH2 0x4B1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3EB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x554 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3EB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x693 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x686 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3EB JUMP JUMPDEST PUSH2 0x693 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x40F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH2 0x73C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3EB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x7DF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3EB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x895 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3EB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x8D9 SWAP1 DUP5 SWAP1 PUSH2 0xAF0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x93F SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x693 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x97A JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD PUSH1 0x40 DUP7 DUP5 ADD ADD MSTORE ADD PUSH2 0x95D JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x9DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x9F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9FD DUP4 PUSH2 0x9B8 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xA20 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA29 DUP5 PUSH2 0x9B8 JUMP JUMPDEST SWAP3 POP PUSH2 0xA37 PUSH1 0x20 DUP6 ADD PUSH2 0x9B8 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA63 DUP3 PUSH2 0x9B8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA86 DUP4 PUSH2 0x9B8 JUMP JUMPDEST SWAP2 POP PUSH2 0xA94 PUSH1 0x20 DUP5 ADD PUSH2 0x9B8 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xAB1 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xAEA JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x2A6 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1F PUSH12 0xD61AE72D9B2DC50B4A213554 PUSH4 0xEF91FA9B 0x22 0x2A CALL SWAP6 SLT ISZERO PUSH32 0x866A842D00B064736F6C634300081B0033000000000000000000000000000000 ",
							"sourceMap": "2678:11214:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3431:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5708:197;;;;;;:::i;:::-;;:::i;:::-;;;1276:14:6;;1269:22;1251:41;;1239:2;1224:18;5708:197:2;1111:187:6;4519:106:2;4606:12;;4519:106;;;1449:25:6;;;1437:2;1422:18;4519:106:2;1303:177:6;6467:286:2;;;;;;:::i;:::-;;:::i;4368:91::-;;;4450:2;2006:36:6;;1994:2;1979:18;4368:91:2;1864:184:6;7148:234:2;;;;;;:::i;:::-;;:::i;4683:125::-;;;;;;:::i;:::-;4783:18;;4757:7;4783:18;;;;;;;;;;;;4683:125;3642:102;;;:::i;7869:427::-;;;;;;:::i;:::-;;:::i;5004:189::-;;;;;;:::i;:::-;;:::i;5251:149::-;;;;;;:::i;:::-;5366:18;;;;5340:7;5366:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;5251:149;3431:98;3485:13;3517:5;3510:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3431:98;:::o;5708:197::-;5791:4;1994:10:5;5845:32:2;1994:10:5;5861:7:2;5870:6;5845:8;:32::i;:::-;5894:4;5887:11;;;5708:197;;;;;:::o;6467:286::-;6594:4;1994:10:5;6650:38:2;6666:4;1994:10:5;6681:6:2;6650:15;:38::i;:::-;6698:27;6708:4;6714:2;6718:6;6698:9;:27::i;:::-;-1:-1:-1;6742:4:2;;6467:286;-1:-1:-1;;;;6467:286:2:o;7148:234::-;1994:10:5;7236:4:2;5366:18;;;:11;:18;;;;;;;;;:27;;;;;;;;;;7236:4;;1994:10:5;7290:64:2;;1994:10:5;;5366:27:2;;7315:38;;7343:10;;7315:38;:::i;:::-;7290:8;:64::i;3642:102::-;3698:13;3730:7;3723:14;;;;;:::i;7869:427::-;1994:10:5;7962:4:2;5366:18;;;:11;:18;;;;;;;;;:27;;;;;;;;;;7962:4;;1994:10:5;8106:15:2;8086:16;:35;;8078:85;;;;;;;3437:2:6;8078:85:2;;;3419:21:6;3476:2;3456:18;;;3449:30;3515:34;3495:18;;;3488:62;3586:7;3566:18;;;3559:35;3611:19;;8078:85:2;;;;;;;;;8197:60;8206:5;8213:7;8241:15;8222:16;:34;8197:8;:60::i;5004:189::-;5083:4;1994:10:5;5137:28:2;1994:10:5;5154:2:2;5158:6;5137:9;:28::i;11385:370::-;11516:19;;;11508:68;;;;;;;3843:2:6;11508:68:2;;;3825:21:6;3882:2;3862:18;;;3855:30;3921:34;3901:18;;;3894:62;3992:6;3972:18;;;3965:34;4016:19;;11508:68:2;3641:400:6;11508:68:2;11594:21;;;11586:68;;;;;;;4248:2:6;11586:68:2;;;4230:21:6;4287:2;4267:18;;;4260:30;4326:34;4306:18;;;4299:62;4397:4;4377:18;;;4370:32;4419:19;;11586:68:2;4046:398:6;11586:68:2;11665:18;;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;11716:32;;1449:25:6;;;11716:32:2;;1422:18:6;11716:32:2;;;;;;;11385:370;;;:::o;12036:441::-;5366:18;;;;12166:24;5366:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;12252:17;12232:37;;12228:243;;12313:6;12293:16;:26;;12285:68;;;;;;;4651:2:6;12285:68:2;;;4633:21:6;4690:2;4670:18;;;4663:30;4729:31;4709:18;;;4702:59;4778:18;;12285:68:2;4449:353:6;12285:68:2;12395:51;12404:5;12411:7;12439:6;12420:16;:25;12395:8;:51::i;:::-;12156:321;12036:441;;;:::o;8750:651::-;8876:18;;;8868:68;;;;;;;5009:2:6;8868:68:2;;;4991:21:6;5048:2;5028:18;;;5021:30;5087:34;5067:18;;;5060:62;5158:7;5138:18;;;5131:35;5183:19;;8868:68:2;4807:401:6;8868:68:2;8954:16;;;8946:64;;;;;;;5415:2:6;8946:64:2;;;5397:21:6;5454:2;5434:18;;;5427:30;5493:34;5473:18;;;5466:62;5564:5;5544:18;;;5537:33;5587:19;;8946:64:2;5213:399:6;8946:64:2;9092:15;;;9070:19;9092:15;;;;;;;;;;;9125:21;;;;9117:72;;;;;;;5819:2:6;9117:72:2;;;5801:21:6;5858:2;5838:18;;;5831:30;5897:34;5877:18;;;5870:62;5968:8;5948:18;;;5941:36;5994:19;;9117:72:2;5617:402:6;9117:72:2;9223:15;;;;:9;:15;;;;;;;;;;;9241:20;;;9223:38;;9281:13;;;;;;;;:23;;9255:6;;9223:9;9281:23;;9255:6;;9281:23;:::i;:::-;;;;;;;;9335:2;9320:26;;9329:4;9320:26;;;9339:6;9320:26;;;;1449:25:6;;1437:2;1422:18;;1303:177;9320:26:2;;;;;;;;9357:37;13061:121;14:586:6;163:2;152:9;145:21;126:4;195:6;189:13;238:6;233:2;222:9;218:18;211:34;263:1;273:140;287:6;284:1;281:13;273:140;;;398:2;382:14;;;378:23;;372:30;367:2;348:17;;;344:26;337:66;302:10;273:140;;;277:3;462:1;457:2;448:6;437:9;433:22;429:31;422:42;591:2;521:66;516:2;508:6;504:15;500:88;489:9;485:104;481:113;473:121;;;14:586;;;;:::o;605:196::-;673:20;;733:42;722:54;;712:65;;702:93;;791:1;788;781:12;702:93;605:196;;;:::o;806:300::-;874:6;882;935:2;923:9;914:7;910:23;906:32;903:52;;;951:1;948;941:12;903:52;974:29;993:9;974:29;:::i;:::-;964:39;1072:2;1057:18;;;;1044:32;;-1:-1:-1;;;806:300:6:o;1485:374::-;1562:6;1570;1578;1631:2;1619:9;1610:7;1606:23;1602:32;1599:52;;;1647:1;1644;1637:12;1599:52;1670:29;1689:9;1670:29;:::i;:::-;1660:39;;1718:38;1752:2;1741:9;1737:18;1718:38;:::i;:::-;1485:374;;1708:48;;-1:-1:-1;;;1825:2:6;1810:18;;;;1797:32;;1485:374::o;2053:186::-;2112:6;2165:2;2153:9;2144:7;2140:23;2136:32;2133:52;;;2181:1;2178;2171:12;2133:52;2204:29;2223:9;2204:29;:::i;:::-;2194:39;2053:186;-1:-1:-1;;;2053:186:6:o;2244:260::-;2312:6;2320;2373:2;2361:9;2352:7;2348:23;2344:32;2341:52;;;2389:1;2386;2379:12;2341:52;2412:29;2431:9;2412:29;:::i;:::-;2402:39;;2460:38;2494:2;2483:9;2479:18;2460:38;:::i;:::-;2450:48;;2244:260;;;;;:::o;2509:437::-;2588:1;2584:12;;;;2631;;;2652:61;;2706:4;2698:6;2694:17;2684:27;;2652:61;2759:2;2751:6;2748:14;2728:18;2725:38;2722:218;;2796:77;2793:1;2786:88;2897:4;2894:1;2887:15;2925:4;2922:1;2915:15;2722:218;;2509:437;;;:::o;2951:279::-;3016:9;;;3037:10;;;3034:190;;;3080:77;3077:1;3070:88;3181:4;3178:1;3171:15;3209:4;3206:1;3199:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "582400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "22503",
								"balanceOf(address)": "1261",
								"decimals()": "244",
								"decreaseAllowance(address,uint256)": "23462",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "1004",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256)": "infinite",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_spendAllowance(address,address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 2678,
									"end": 13892,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 2678,
									"end": 13892,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 2678,
									"end": 13892,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 3253,
									"end": 3366,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 3253,
									"end": 3366,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 3253,
									"end": 3366,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 3253,
									"end": 3366,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 3253,
									"end": 3366,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 3253,
									"end": 3366,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3253,
									"end": 3366,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 3253,
									"end": 3366,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 3253,
									"end": 3366,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 3253,
									"end": 3366,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3253,
									"end": 3366,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3253,
									"end": 3366,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 3253,
									"end": 3366,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 3253,
									"end": 3366,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 3253,
									"end": 3366,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 3253,
									"end": 3366,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 3253,
									"end": 3366,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 3253,
									"end": 3366,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 3253,
									"end": 3366,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 3253,
									"end": 3366,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 3253,
									"end": 3366,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3253,
									"end": 3366,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 3253,
									"end": 3366,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 3253,
									"end": 3366,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3253,
									"end": 3366,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3253,
									"end": 3366,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 3253,
									"end": 3366,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 3253,
									"end": 3366,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 3253,
									"end": 3366,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 3253,
									"end": 3366,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 3253,
									"end": 3366,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 3253,
									"end": 3366,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3319,
									"end": 3324,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 3319,
									"end": 3332,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 3327,
									"end": 3332,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 3319,
									"end": 3324,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 3319,
									"end": 3332,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 3319,
									"end": 3332,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 3319,
									"end": 3332,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 3319,
									"end": 3332,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3342,
									"end": 3349,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 3342,
									"end": 3359,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 3352,
									"end": 3359,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 3342,
									"end": 3349,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 3342,
									"end": 3359,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 3342,
									"end": 3359,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 3342,
									"end": 3359,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 3342,
									"end": 3359,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3342,
									"end": 3359,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3253,
									"end": 3366,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3253,
									"end": 3366,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2678,
									"end": 13892,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 2678,
									"end": 13892,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 146,
									"end": 980,
									"name": "tag",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 146,
									"end": 980,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 200,
									"end": 205,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 256,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 246,
									"end": 250,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 238,
									"end": 244,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 234,
									"end": 251,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 230,
									"end": 257,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 220,
									"end": 275,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 271,
									"end": 272,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 269,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 261,
									"end": 273,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 220,
									"end": 275,
									"name": "tag",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 298,
									"end": 311,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 298,
									"end": 311,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 323,
									"end": 353,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 323,
									"end": 353,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 320,
									"end": 376,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 320,
									"end": 376,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 320,
									"end": 376,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 356,
									"end": 374,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 356,
									"end": 374,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 356,
									"end": 374,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 356,
									"end": 374,
									"name": "tag",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 356,
									"end": 374,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 405,
									"end": 407,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 399,
									"end": 408,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 497,
									"end": 499,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 459,
									"end": 476,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 459,
									"end": 476,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 455,
									"end": 486,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 455,
									"end": 486,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 455,
									"end": 486,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 488,
									"end": 490,
									"name": "PUSH",
									"source": 6,
									"value": "3F"
								},
								{
									"begin": 451,
									"end": 491,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 447,
									"end": 501,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 435,
									"end": 502,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 435,
									"end": 502,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 517,
									"end": 551,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 517,
									"end": 551,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 553,
									"end": 575,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 553,
									"end": 575,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 553,
									"end": 575,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 514,
									"end": 576,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 511,
									"end": 599,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 511,
									"end": 599,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 511,
									"end": 599,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 579,
									"end": 597,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 579,
									"end": 597,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 579,
									"end": 597,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 579,
									"end": 597,
									"name": "tag",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 579,
									"end": 597,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 615,
									"end": 617,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 608,
									"end": 630,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 639,
									"end": 661,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 639,
									"end": 661,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 639,
									"end": 661,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 680,
									"end": 699,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 680,
									"end": 699,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 680,
									"end": 699,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 701,
									"end": 705,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 676,
									"end": 706,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 673,
									"end": 712,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 670,
									"end": 729,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 670,
									"end": 729,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 670,
									"end": 729,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 725,
									"end": 726,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 722,
									"end": 723,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 715,
									"end": 727,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 670,
									"end": 729,
									"name": "tag",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 670,
									"end": 729,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 747,
									"end": 748,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 757,
									"end": 900,
									"name": "tag",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 757,
									"end": 900,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 771,
									"end": 777,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 768,
									"end": 769,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 765,
									"end": 778,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 757,
									"end": 900,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 757,
									"end": 900,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 757,
									"end": 900,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 883,
									"end": 887,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 867,
									"end": 881,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 867,
									"end": 881,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 867,
									"end": 881,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 863,
									"end": 888,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 863,
									"end": 888,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 857,
									"end": 889,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 834,
									"end": 848,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 834,
									"end": 848,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 834,
									"end": 848,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 830,
									"end": 855,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 830,
									"end": 855,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 823,
									"end": 890,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 786,
									"end": 798,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 757,
									"end": 900,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 757,
									"end": 900,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 757,
									"end": 900,
									"name": "tag",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 757,
									"end": 900,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 948,
									"end": 949,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 920,
									"end": 939,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 920,
									"end": 939,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 920,
									"end": 939,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 941,
									"end": 945,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 916,
									"end": 946,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 909,
									"end": 950,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 909,
									"end": 950,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 909,
									"end": 950,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 909,
									"end": 950,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 924,
									"end": 930,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 146,
									"end": 980,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 146,
									"end": 980,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 985,
									"end": 1542,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 985,
									"end": 1542,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1084,
									"end": 1090,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1092,
									"end": 1098,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1145,
									"end": 1147,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1133,
									"end": 1142,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1124,
									"end": 1131,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1120,
									"end": 1143,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1116,
									"end": 1148,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 1113,
									"end": 1165,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1113,
									"end": 1165,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 1113,
									"end": 1165,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1161,
									"end": 1162,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1158,
									"end": 1159,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1151,
									"end": 1163,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1113,
									"end": 1165,
									"name": "tag",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 1113,
									"end": 1165,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1188,
									"end": 1204,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1188,
									"end": 1204,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1216,
									"end": 1246,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1216,
									"end": 1246,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1213,
									"end": 1263,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1213,
									"end": 1263,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 1213,
									"end": 1263,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1259,
									"end": 1260,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1256,
									"end": 1257,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1249,
									"end": 1261,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1213,
									"end": 1263,
									"name": "tag",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 1213,
									"end": 1263,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1282,
									"end": 1343,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 1335,
									"end": 1342,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1326,
									"end": 1332,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1315,
									"end": 1324,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1311,
									"end": 1333,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1282,
									"end": 1343,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 1282,
									"end": 1343,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1282,
									"end": 1343,
									"name": "tag",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 1282,
									"end": 1343,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1389,
									"end": 1391,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1374,
									"end": 1392,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1374,
									"end": 1392,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1368,
									"end": 1393,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1272,
									"end": 1343,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1272,
									"end": 1343,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1368,
									"end": 1393,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1405,
									"end": 1437,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1405,
									"end": 1437,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1402,
									"end": 1454,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1402,
									"end": 1454,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 1402,
									"end": 1454,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1450,
									"end": 1451,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1447,
									"end": 1448,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1440,
									"end": 1452,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1402,
									"end": 1454,
									"name": "tag",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 1402,
									"end": 1454,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1473,
									"end": 1536,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 1528,
									"end": 1535,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1517,
									"end": 1525,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1506,
									"end": 1515,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1502,
									"end": 1526,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1473,
									"end": 1536,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 1473,
									"end": 1536,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1473,
									"end": 1536,
									"name": "tag",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 1473,
									"end": 1536,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1463,
									"end": 1536,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1463,
									"end": 1536,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1463,
									"end": 1536,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 985,
									"end": 1542,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 985,
									"end": 1542,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 985,
									"end": 1542,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 985,
									"end": 1542,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 985,
									"end": 1542,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 985,
									"end": 1542,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1547,
									"end": 1927,
									"name": "tag",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 1547,
									"end": 1927,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1626,
									"end": 1627,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1622,
									"end": 1634,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1622,
									"end": 1634,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1622,
									"end": 1634,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 1622,
									"end": 1634,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1669,
									"end": 1681,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1669,
									"end": 1681,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1669,
									"end": 1681,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1690,
									"end": 1751,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 1690,
									"end": 1751,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1744,
									"end": 1748,
									"name": "PUSH",
									"source": 6,
									"value": "7F"
								},
								{
									"begin": 1736,
									"end": 1742,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1732,
									"end": 1749,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1722,
									"end": 1749,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1722,
									"end": 1749,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1690,
									"end": 1751,
									"name": "tag",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 1690,
									"end": 1751,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1797,
									"end": 1799,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1789,
									"end": 1795,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1786,
									"end": 1800,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 1766,
									"end": 1784,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1763,
									"end": 1801,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1760,
									"end": 1921,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 1760,
									"end": 1921,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1843,
									"end": 1853,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B71"
								},
								{
									"begin": 1838,
									"end": 1841,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 1834,
									"end": 1854,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 1831,
									"end": 1832,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1824,
									"end": 1855,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1878,
									"end": 1882,
									"name": "PUSH",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 1875,
									"end": 1876,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1868,
									"end": 1883,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1906,
									"end": 1910,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 1903,
									"end": 1904,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1896,
									"end": 1911,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1760,
									"end": 1921,
									"name": "tag",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 1760,
									"end": 1921,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1760,
									"end": 1921,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1547,
									"end": 1927,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1547,
									"end": 1927,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1547,
									"end": 1927,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1547,
									"end": 1927,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2058,
									"end": 2576,
									"name": "tag",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 2058,
									"end": 2576,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2160,
									"end": 2162,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 2155,
									"end": 2158,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2152,
									"end": 2163,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 2149,
									"end": 2570,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2149,
									"end": 2570,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 2149,
									"end": 2570,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2196,
									"end": 2201,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2193,
									"end": 2194,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2186,
									"end": 2202,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2240,
									"end": 2244,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2237,
									"end": 2238,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2227,
									"end": 2245,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 2310,
									"end": 2312,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 2298,
									"end": 2308,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2294,
									"end": 2313,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2291,
									"end": 2292,
									"name": "PUSH",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 2287,
									"end": 2314,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 2281,
									"end": 2285,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2277,
									"end": 2315,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2346,
									"end": 2350,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2334,
									"end": 2344,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 2331,
									"end": 2351,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 2328,
									"end": 2375,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2328,
									"end": 2375,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 2328,
									"end": 2375,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2369,
									"end": 2373,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2328,
									"end": 2375,
									"name": "tag",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 2328,
									"end": 2375,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2424,
									"end": 2426,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 2419,
									"end": 2422,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2415,
									"end": 2427,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2412,
									"end": 2413,
									"name": "PUSH",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 2408,
									"end": 2428,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 2402,
									"end": 2406,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2398,
									"end": 2429,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2388,
									"end": 2429,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2388,
									"end": 2429,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2479,
									"end": 2560,
									"name": "tag",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 2479,
									"end": 2560,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2497,
									"end": 2499,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2490,
									"end": 2495,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2487,
									"end": 2500,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 2479,
									"end": 2560,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2479,
									"end": 2560,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 2479,
									"end": 2560,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2556,
									"end": 2557,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2542,
									"end": 2558,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2542,
									"end": 2558,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 2523,
									"end": 2524,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 2512,
									"end": 2525,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2479,
									"end": 2560,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 2479,
									"end": 2560,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2479,
									"end": 2560,
									"name": "tag",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 2479,
									"end": 2560,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2483,
									"end": 2486,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2483,
									"end": 2486,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2149,
									"end": 2570,
									"name": "tag",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 2149,
									"end": 2570,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2058,
									"end": 2576,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2058,
									"end": 2576,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2058,
									"end": 2576,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2058,
									"end": 2576,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2752,
									"end": 4051,
									"name": "tag",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 2752,
									"end": 4051,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2872,
									"end": 2882,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2872,
									"end": 2882,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2894,
									"end": 2924,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2894,
									"end": 2924,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 2891,
									"end": 2947,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2891,
									"end": 2947,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 2891,
									"end": 2947,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2927,
									"end": 2945,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 2927,
									"end": 2945,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 2927,
									"end": 2945,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2927,
									"end": 2945,
									"name": "tag",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 2927,
									"end": 2945,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2956,
									"end": 3053,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 3046,
									"end": 3052,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3006,
									"end": 3044,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 3038,
									"end": 3042,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3032,
									"end": 3043,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 3006,
									"end": 3044,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 3006,
									"end": 3044,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3006,
									"end": 3044,
									"name": "tag",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 3006,
									"end": 3044,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3000,
									"end": 3004,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2956,
									"end": 3053,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 2956,
									"end": 3053,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2956,
									"end": 3053,
									"name": "tag",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 2956,
									"end": 3053,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3102,
									"end": 3106,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3133,
									"end": 3135,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 3122,
									"end": 3136,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3122,
									"end": 3136,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 3150,
									"end": 3151,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 3145,
									"end": 3794,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3145,
									"end": 3794,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 3145,
									"end": 3794,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 3145,
									"end": 3794,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3838,
									"end": 3839,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3855,
									"end": 3861,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3852,
									"end": 3941,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3852,
									"end": 3941,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 3852,
									"end": 3941,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3907,
									"end": 3926,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3907,
									"end": 3926,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3907,
									"end": 3926,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3901,
									"end": 3927,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 3852,
									"end": 3941,
									"name": "tag",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 3852,
									"end": 3941,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2709,
									"end": 2710,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 2705,
									"end": 2716,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 2705,
									"end": 2716,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2705,
									"end": 2716,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 2701,
									"end": 2725,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 2697,
									"end": 2726,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 2687,
									"end": 2727,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2733,
									"end": 2734,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 2729,
									"end": 2740,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2729,
									"end": 2740,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2729,
									"end": 2740,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 2684,
									"end": 2741,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 3954,
									"end": 4035,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3954,
									"end": 4035,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 3115,
									"end": 4045,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 3115,
									"end": 4045,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3145,
									"end": 3794,
									"name": "tag",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 3145,
									"end": 3794,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2005,
									"end": 2006,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1998,
									"end": 2012,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1998,
									"end": 2012,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1998,
									"end": 2012,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2042,
									"end": 2046,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2029,
									"end": 2047,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2029,
									"end": 2047,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3181,
									"end": 3201,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 3181,
									"end": 3201,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3181,
									"end": 3201,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3299,
									"end": 3521,
									"name": "tag",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 3299,
									"end": 3521,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3313,
									"end": 3320,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3310,
									"end": 3311,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3307,
									"end": 3321,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 3299,
									"end": 3521,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3299,
									"end": 3521,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "57"
								},
								{
									"begin": 3299,
									"end": 3521,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3395,
									"end": 3414,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 3395,
									"end": 3414,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 3395,
									"end": 3414,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3389,
									"end": 3415,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 3374,
									"end": 3416,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3374,
									"end": 3416,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 3502,
									"end": 3506,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3487,
									"end": 3507,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 3487,
									"end": 3507,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 3487,
									"end": 3507,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3487,
									"end": 3507,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 3455,
									"end": 3456,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 3443,
									"end": 3457,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3443,
									"end": 3457,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 3443,
									"end": 3457,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3443,
									"end": 3457,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3329,
									"end": 3341,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3299,
									"end": 3521,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 3299,
									"end": 3521,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3299,
									"end": 3521,
									"name": "tag",
									"source": 6,
									"value": "57"
								},
								{
									"begin": 3299,
									"end": 3521,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3303,
									"end": 3306,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3549,
									"end": 3555,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3540,
									"end": 3547,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3537,
									"end": 3556,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 3534,
									"end": 3735,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3534,
									"end": 3735,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 3534,
									"end": 3735,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3610,
									"end": 3629,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 3610,
									"end": 3629,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3610,
									"end": 3629,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3604,
									"end": 3630,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3693,
									"end": 3694,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 3689,
									"end": 3703,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 3689,
									"end": 3703,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3689,
									"end": 3703,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 3705,
									"end": 3708,
									"name": "PUSH",
									"source": 6,
									"value": "F8"
								},
								{
									"begin": 3685,
									"end": 3709,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3681,
									"end": 3718,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 3677,
									"end": 3719,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 3662,
									"end": 3720,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3647,
									"end": 3721,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3647,
									"end": 3721,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 3534,
									"end": 3735,
									"name": "tag",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 3534,
									"end": 3735,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3781,
									"end": 3782,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 3765,
									"end": 3779,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3765,
									"end": 3779,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3765,
									"end": 3779,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 3761,
									"end": 3783,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3748,
									"end": 3784,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3748,
									"end": 3784,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2752,
									"end": 4051,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2752,
									"end": 4051,
									"name": "tag",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 2752,
									"end": 4051,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2678,
									"end": 13892,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2678,
									"end": 13892,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2678,
									"end": 13892,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2678,
									"end": 13892,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2678,
									"end": 13892,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 2678,
									"end": 13892,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2678,
									"end": 13892,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201f6bd61ae72d9b2dc50b4a21355463ef91fa9b222af19512157f866a842d00b064736f6c634300081b0033",
									".code": [
										{
											"begin": 2678,
											"end": 13892,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2678,
											"end": 13892,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2678,
											"end": 13892,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2678,
											"end": 13892,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2678,
											"end": 13892,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2678,
											"end": 13892,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2678,
											"end": 13892,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2678,
											"end": 13892,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2678,
											"end": 13892,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2678,
											"end": 13892,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2678,
											"end": 13892,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2678,
											"end": 13892,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2678,
											"end": 13892,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2678,
											"end": 13892,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2678,
											"end": 13892,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2678,
											"end": 13892,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2678,
											"end": 13892,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2678,
											"end": 13892,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2678,
											"end": 13892,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2678,
											"end": 13892,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2678,
											"end": 13892,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 2678,
											"end": 13892,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2678,
											"end": 13892,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 2678,
											"end": 13892,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2678,
											"end": 13892,
											"name": "PUSH",
											"source": 2,
											"value": "39509351"
										},
										{
											"begin": 2678,
											"end": 13892,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2678,
											"end": 13892,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 2678,
											"end": 13892,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2678,
											"end": 13892,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2678,
											"end": 13892,
											"name": "PUSH",
											"source": 2,
											"value": "A457C2D7"
										},
										{
											"begin": 2678,
											"end": 13892,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2678,
											"end": 13892,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2678,
											"end": 13892,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2678,
											"end": 13892,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2678,
											"end": 13892,
											"name": "PUSH",
											"source": 2,
											"value": "A457C2D7"
										},
										{
											"begin": 2678,
											"end": 13892,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2678,
											"end": 13892,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 2678,
											"end": 13892,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2678,
											"end": 13892,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2678,
											"end": 13892,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 2678,
											"end": 13892,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2678,
											"end": 13892,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2678,
											"end": 13892,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2678,
											"end": 13892,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2678,
											"end": 13892,
											"name": "PUSH",
											"source": 2,
											"value": "DD62ED3E"
										},
										{
											"begin": 2678,
											"end": 13892,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2678,
											"end": 13892,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 2678,
											"end": 13892,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2678,
											"end": 13892,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2678,
											"end": 13892,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2678,
											"end": 13892,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2678,
											"end": 13892,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2678,
											"end": 13892,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2678,
											"end": 13892,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2678,
											"end": 13892,
											"name": "PUSH",
											"source": 2,
											"value": "39509351"
										},
										{
											"begin": 2678,
											"end": 13892,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2678,
											"end": 13892,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 2678,
											"end": 13892,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2678,
											"end": 13892,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2678,
											"end": 13892,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 2678,
											"end": 13892,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2678,
											"end": 13892,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 2678,
											"end": 13892,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2678,
											"end": 13892,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2678,
											"end": 13892,
											"name": "PUSH",
											"source": 2,
											"value": "95D89B41"
										},
										{
											"begin": 2678,
											"end": 13892,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2678,
											"end": 13892,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 2678,
											"end": 13892,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2678,
											"end": 13892,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2678,
											"end": 13892,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2678,
											"end": 13892,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2678,
											"end": 13892,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 2678,
											"end": 13892,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2678,
											"end": 13892,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2678,
											"end": 13892,
											"name": "PUSH",
											"source": 2,
											"value": "18160DDD"
										},
										{
											"begin": 2678,
											"end": 13892,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2678,
											"end": 13892,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2678,
											"end": 13892,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2678,
											"end": 13892,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2678,
											"end": 13892,
											"name": "PUSH",
											"source": 2,
											"value": "18160DDD"
										},
										{
											"begin": 2678,
											"end": 13892,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2678,
											"end": 13892,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2678,
											"end": 13892,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2678,
											"end": 13892,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2678,
											"end": 13892,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 2678,
											"end": 13892,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2678,
											"end": 13892,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2678,
											"end": 13892,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2678,
											"end": 13892,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2678,
											"end": 13892,
											"name": "PUSH",
											"source": 2,
											"value": "313CE567"
										},
										{
											"begin": 2678,
											"end": 13892,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2678,
											"end": 13892,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 2678,
											"end": 13892,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2678,
											"end": 13892,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2678,
											"end": 13892,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2678,
											"end": 13892,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2678,
											"end": 13892,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2678,
											"end": 13892,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2678,
											"end": 13892,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2678,
											"end": 13892,
											"name": "PUSH",
											"source": 2,
											"value": "6FDDE03"
										},
										{
											"begin": 2678,
											"end": 13892,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2678,
											"end": 13892,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2678,
											"end": 13892,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2678,
											"end": 13892,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2678,
											"end": 13892,
											"name": "PUSH",
											"source": 2,
											"value": "95EA7B3"
										},
										{
											"begin": 2678,
											"end": 13892,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2678,
											"end": 13892,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2678,
											"end": 13892,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2678,
											"end": 13892,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2678,
											"end": 13892,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2678,
											"end": 13892,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2678,
											"end": 13892,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2678,
											"end": 13892,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3431,
											"end": 3529,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 3431,
											"end": 3529,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3431,
											"end": 3529,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 3431,
											"end": 3529,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 3431,
											"end": 3529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3431,
											"end": 3529,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 3431,
											"end": 3529,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3431,
											"end": 3529,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3431,
											"end": 3529,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3431,
											"end": 3529,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 3431,
											"end": 3529,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3431,
											"end": 3529,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3431,
											"end": 3529,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3431,
											"end": 3529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3431,
											"end": 3529,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 3431,
											"end": 3529,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3431,
											"end": 3529,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3431,
											"end": 3529,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3431,
											"end": 3529,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3431,
											"end": 3529,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3431,
											"end": 3529,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3431,
											"end": 3529,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3431,
											"end": 3529,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 5708,
											"end": 5905,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5708,
											"end": 5905,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5708,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 5708,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 5708,
											"end": 5905,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5708,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5708,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 5708,
											"end": 5905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5708,
											"end": 5905,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 5708,
											"end": 5905,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5708,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 5708,
											"end": 5905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5708,
											"end": 5905,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 5708,
											"end": 5905,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5708,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5708,
											"end": 5905,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1276,
											"end": 1290,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1276,
											"end": 1290,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1269,
											"end": 1291,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1251,
											"end": 1292,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1251,
											"end": 1292,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1239,
											"end": 1241,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1224,
											"end": 1242,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5708,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1111,
											"end": 1298,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4519,
											"end": 4625,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 4519,
											"end": 4625,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4606,
											"end": 4618,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 4606,
											"end": 4618,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4519,
											"end": 4625,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 4519,
											"end": 4625,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4519,
											"end": 4625,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4519,
											"end": 4625,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1449,
											"end": 1474,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1449,
											"end": 1474,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1449,
											"end": 1474,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1437,
											"end": 1439,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1422,
											"end": 1440,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4519,
											"end": 4625,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1303,
											"end": 1480,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6467,
											"end": 6753,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 6467,
											"end": 6753,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6467,
											"end": 6753,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 6467,
											"end": 6753,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 6467,
											"end": 6753,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 6467,
											"end": 6753,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6467,
											"end": 6753,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 6467,
											"end": 6753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6467,
											"end": 6753,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 6467,
											"end": 6753,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6467,
											"end": 6753,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 6467,
											"end": 6753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4368,
											"end": 4459,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 4368,
											"end": 4459,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4368,
											"end": 4459,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4368,
											"end": 4459,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4450,
											"end": 4452,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2006,
											"end": 2042,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2006,
											"end": 2042,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1994,
											"end": 1996,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1979,
											"end": 1997,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4368,
											"end": 4459,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1864,
											"end": 2048,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7148,
											"end": 7382,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 7148,
											"end": 7382,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7148,
											"end": 7382,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 7148,
											"end": 7382,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 7148,
											"end": 7382,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 7148,
											"end": 7382,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7148,
											"end": 7382,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 7148,
											"end": 7382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7148,
											"end": 7382,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 7148,
											"end": 7382,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7148,
											"end": 7382,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 7148,
											"end": 7382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4683,
											"end": 4808,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 4683,
											"end": 4808,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4683,
											"end": 4808,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 4683,
											"end": 4808,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 4683,
											"end": 4808,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4683,
											"end": 4808,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4683,
											"end": 4808,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 4683,
											"end": 4808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4683,
											"end": 4808,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 4683,
											"end": 4808,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4783,
											"end": 4801,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4783,
											"end": 4801,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 4764,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4783,
											"end": 4801,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4783,
											"end": 4801,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4783,
											"end": 4801,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4783,
											"end": 4801,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4783,
											"end": 4801,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4783,
											"end": 4801,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4783,
											"end": 4801,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4783,
											"end": 4801,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4783,
											"end": 4801,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4783,
											"end": 4801,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4783,
											"end": 4801,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4783,
											"end": 4801,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4683,
											"end": 4808,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3642,
											"end": 3744,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 3642,
											"end": 3744,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3642,
											"end": 3744,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 3642,
											"end": 3744,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3642,
											"end": 3744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7869,
											"end": 8296,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 7869,
											"end": 8296,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7869,
											"end": 8296,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 7869,
											"end": 8296,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 7869,
											"end": 8296,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 7869,
											"end": 8296,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7869,
											"end": 8296,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 7869,
											"end": 8296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7869,
											"end": 8296,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 7869,
											"end": 8296,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7869,
											"end": 8296,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 7869,
											"end": 8296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5004,
											"end": 5193,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 5004,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5004,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 5004,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 5004,
											"end": 5193,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5004,
											"end": 5193,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5004,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 5004,
											"end": 5193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5004,
											"end": 5193,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 5004,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5004,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 5004,
											"end": 5193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5251,
											"end": 5400,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 5251,
											"end": 5400,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5251,
											"end": 5400,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 5251,
											"end": 5400,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 5251,
											"end": 5400,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5251,
											"end": 5400,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5251,
											"end": 5400,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 5251,
											"end": 5400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5251,
											"end": 5400,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 5251,
											"end": 5400,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5384,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5366,
											"end": 5384,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5384,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5384,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5340,
											"end": 5347,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5366,
											"end": 5384,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5384,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5384,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5377,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5366,
											"end": 5384,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5366,
											"end": 5384,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5384,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5384,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5384,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5366,
											"end": 5384,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5384,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5384,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5393,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5393,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5393,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5393,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5393,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5393,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5393,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5393,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5393,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5393,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5393,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5393,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5393,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5251,
											"end": 5400,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3431,
											"end": 3529,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 3431,
											"end": 3529,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3485,
											"end": 3498,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3517,
											"end": 3522,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 3510,
											"end": 3522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 3510,
											"end": 3522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3431,
											"end": 3529,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3431,
											"end": 3529,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5708,
											"end": 5905,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 5708,
											"end": 5905,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5791,
											"end": 5795,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1994,
											"end": 2004,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 5845,
											"end": 5877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 1994,
											"end": 2004,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5861,
											"end": 5868,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5870,
											"end": 5876,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5845,
											"end": 5853,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 5845,
											"end": 5877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5845,
											"end": 5877,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 5845,
											"end": 5877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5894,
											"end": 5898,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5887,
											"end": 5898,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5887,
											"end": 5898,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5887,
											"end": 5898,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5708,
											"end": 5905,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 5708,
											"end": 5905,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5708,
											"end": 5905,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5708,
											"end": 5905,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5708,
											"end": 5905,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5708,
											"end": 5905,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5708,
											"end": 5905,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6467,
											"end": 6753,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 6467,
											"end": 6753,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6594,
											"end": 6598,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1994,
											"end": 2004,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 6650,
											"end": 6688,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 6666,
											"end": 6670,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1994,
											"end": 2004,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6681,
											"end": 6687,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6650,
											"end": 6665,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 6650,
											"end": 6688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6650,
											"end": 6688,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 6650,
											"end": 6688,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6698,
											"end": 6725,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 6708,
											"end": 6712,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6714,
											"end": 6716,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6718,
											"end": 6724,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6698,
											"end": 6707,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 6698,
											"end": 6725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6698,
											"end": 6725,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 6698,
											"end": 6725,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6742,
											"end": 6746,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6742,
											"end": 6746,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 6467,
											"end": 6753,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6467,
											"end": 6753,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7148,
											"end": 7382,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 7148,
											"end": 7382,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1994,
											"end": 2004,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 7236,
											"end": 7240,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5366,
											"end": 5384,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5384,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5384,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5377,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5366,
											"end": 5384,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5366,
											"end": 5384,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5384,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5384,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5384,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5366,
											"end": 5384,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5384,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5384,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5384,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5366,
											"end": 5393,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5393,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5393,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5393,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5393,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5393,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5393,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5393,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5393,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5393,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7236,
											"end": 7240,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7236,
											"end": 7240,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1994,
											"end": 2004,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7290,
											"end": 7354,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 7290,
											"end": 7354,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1994,
											"end": 2004,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1994,
											"end": 2004,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5366,
											"end": 5393,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5393,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7315,
											"end": 7353,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 7315,
											"end": 7353,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7343,
											"end": 7353,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7343,
											"end": 7353,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7315,
											"end": 7353,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 7315,
											"end": 7353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7315,
											"end": 7353,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 7315,
											"end": 7353,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7290,
											"end": 7298,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 7290,
											"end": 7354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3642,
											"end": 3744,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3642,
											"end": 3744,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3698,
											"end": 3711,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3730,
											"end": 3737,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3723,
											"end": 3737,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3723,
											"end": 3737,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3723,
											"end": 3737,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 3723,
											"end": 3737,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3723,
											"end": 3737,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 3723,
											"end": 3737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7869,
											"end": 8296,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 7869,
											"end": 8296,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1994,
											"end": 2004,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 7962,
											"end": 7966,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5366,
											"end": 5384,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5384,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5384,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5377,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5366,
											"end": 5384,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5366,
											"end": 5384,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5384,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5384,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5384,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5366,
											"end": 5384,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5384,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5384,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5384,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5366,
											"end": 5393,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5393,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5393,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5393,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5393,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5393,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5393,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5393,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5393,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5393,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7962,
											"end": 7966,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7962,
											"end": 7966,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1994,
											"end": 2004,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8106,
											"end": 8121,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8086,
											"end": 8102,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8086,
											"end": 8121,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 8086,
											"end": 8121,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8078,
											"end": 8163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 8078,
											"end": 8163,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8078,
											"end": 8163,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8078,
											"end": 8163,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8078,
											"end": 8163,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8078,
											"end": 8163,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8078,
											"end": 8163,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3437,
											"end": 3439,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8078,
											"end": 8163,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8078,
											"end": 8163,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8078,
											"end": 8163,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3440,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3476,
											"end": 3478,
											"name": "PUSH",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 3456,
											"end": 3474,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3456,
											"end": 3474,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3456,
											"end": 3474,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3449,
											"end": 3479,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3515,
											"end": 3549,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 3495,
											"end": 3513,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 3495,
											"end": 3513,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3495,
											"end": 3513,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3488,
											"end": 3550,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3586,
											"end": 3593,
											"name": "PUSH",
											"source": 6,
											"value": "207A65726F000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3566,
											"end": 3584,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 3566,
											"end": 3584,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3566,
											"end": 3584,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3559,
											"end": 3594,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3611,
											"end": 3630,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 3611,
											"end": 3630,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8078,
											"end": 8163,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 8078,
											"end": 8163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8078,
											"end": 8163,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8078,
											"end": 8163,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8078,
											"end": 8163,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8078,
											"end": 8163,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8078,
											"end": 8163,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8078,
											"end": 8163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8078,
											"end": 8163,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 8078,
											"end": 8163,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 8078,
											"end": 8163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8197,
											"end": 8257,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 8206,
											"end": 8211,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8213,
											"end": 8220,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 8241,
											"end": 8256,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 8222,
											"end": 8238,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8222,
											"end": 8256,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8197,
											"end": 8205,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 8197,
											"end": 8257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5004,
											"end": 5193,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 5004,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5083,
											"end": 5087,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1994,
											"end": 2004,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 5137,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 1994,
											"end": 2004,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5154,
											"end": 5156,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5158,
											"end": 5164,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5146,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 5137,
											"end": 5165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11385,
											"end": 11755,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 11385,
											"end": 11755,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11516,
											"end": 11535,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11516,
											"end": 11535,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11516,
											"end": 11535,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11508,
											"end": 11576,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 11508,
											"end": 11576,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11508,
											"end": 11576,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11508,
											"end": 11576,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11508,
											"end": 11576,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11508,
											"end": 11576,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11508,
											"end": 11576,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3843,
											"end": 3845,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11508,
											"end": 11576,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 11508,
											"end": 11576,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11508,
											"end": 11576,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3825,
											"end": 3846,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3882,
											"end": 3884,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3862,
											"end": 3880,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3862,
											"end": 3880,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3862,
											"end": 3880,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 3885,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3921,
											"end": 3955,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 3901,
											"end": 3919,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 3901,
											"end": 3919,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3901,
											"end": 3919,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3894,
											"end": 3956,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3992,
											"end": 3998,
											"name": "PUSH",
											"source": 6,
											"value": "7265737300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3972,
											"end": 3990,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 3972,
											"end": 3990,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3972,
											"end": 3990,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 3999,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4016,
											"end": 4035,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 4016,
											"end": 4035,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11508,
											"end": 11576,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 3641,
											"end": 4041,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11508,
											"end": 11576,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 11508,
											"end": 11576,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11594,
											"end": 11615,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11594,
											"end": 11615,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11594,
											"end": 11615,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11586,
											"end": 11654,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 11586,
											"end": 11654,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11586,
											"end": 11654,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11586,
											"end": 11654,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11586,
											"end": 11654,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11586,
											"end": 11654,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11586,
											"end": 11654,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4248,
											"end": 4250,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11586,
											"end": 11654,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 11586,
											"end": 11654,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11586,
											"end": 11654,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4230,
											"end": 4251,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4287,
											"end": 4289,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 4267,
											"end": 4285,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4267,
											"end": 4285,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4267,
											"end": 4285,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4260,
											"end": 4290,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4326,
											"end": 4360,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 4306,
											"end": 4324,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4306,
											"end": 4324,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4306,
											"end": 4324,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4299,
											"end": 4361,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4397,
											"end": 4401,
											"name": "PUSH",
											"source": 6,
											"value": "7373000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4377,
											"end": 4395,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4377,
											"end": 4395,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4377,
											"end": 4395,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4370,
											"end": 4402,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4419,
											"end": 4438,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 4419,
											"end": 4438,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11586,
											"end": 11654,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 4046,
											"end": 4444,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11586,
											"end": 11654,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 11586,
											"end": 11654,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11665,
											"end": 11683,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11665,
											"end": 11683,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11665,
											"end": 11683,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11665,
											"end": 11683,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11665,
											"end": 11683,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11665,
											"end": 11683,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11665,
											"end": 11683,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11665,
											"end": 11683,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11665,
											"end": 11676,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 11665,
											"end": 11683,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11665,
											"end": 11683,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11665,
											"end": 11683,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11665,
											"end": 11683,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11665,
											"end": 11683,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11665,
											"end": 11683,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11665,
											"end": 11683,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11665,
											"end": 11683,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 11665,
											"end": 11692,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 11665,
											"end": 11692,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 11665,
											"end": 11692,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11665,
											"end": 11692,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11665,
											"end": 11692,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11665,
											"end": 11692,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11665,
											"end": 11692,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 11665,
											"end": 11692,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11665,
											"end": 11692,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11665,
											"end": 11692,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11665,
											"end": 11692,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11665,
											"end": 11692,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11665,
											"end": 11692,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 11665,
											"end": 11701,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 11665,
											"end": 11701,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11665,
											"end": 11701,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 11716,
											"end": 11748,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11716,
											"end": 11748,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1449,
											"end": 1474,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1449,
											"end": 1474,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1449,
											"end": 1474,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11716,
											"end": 11748,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 11716,
											"end": 11748,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1422,
											"end": 1440,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11716,
											"end": 11748,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11716,
											"end": 11748,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11716,
											"end": 11748,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11716,
											"end": 11748,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11716,
											"end": 11748,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11716,
											"end": 11748,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11716,
											"end": 11748,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 11385,
											"end": 11755,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11385,
											"end": 11755,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11385,
											"end": 11755,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11385,
											"end": 11755,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12036,
											"end": 12477,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 12036,
											"end": 12477,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5384,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5366,
											"end": 5384,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5384,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5384,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12166,
											"end": 12190,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5366,
											"end": 5384,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5384,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5384,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5377,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5366,
											"end": 5384,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5366,
											"end": 5384,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5384,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5384,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5384,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5366,
											"end": 5384,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5384,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5384,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5393,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5393,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5393,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5393,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5393,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5393,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5393,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5393,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5393,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5393,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 12252,
											"end": 12269,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12232,
											"end": 12269,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12232,
											"end": 12269,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 12228,
											"end": 12471,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 12228,
											"end": 12471,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12313,
											"end": 12319,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12293,
											"end": 12309,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12293,
											"end": 12319,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 12293,
											"end": 12319,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12285,
											"end": 12353,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 12285,
											"end": 12353,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12285,
											"end": 12353,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12285,
											"end": 12353,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12285,
											"end": 12353,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12285,
											"end": 12353,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12285,
											"end": 12353,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4651,
											"end": 4653,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12285,
											"end": 12353,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 12285,
											"end": 12353,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12285,
											"end": 12353,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4633,
											"end": 4654,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4690,
											"end": 4692,
											"name": "PUSH",
											"source": 6,
											"value": "1D"
										},
										{
											"begin": 4670,
											"end": 4688,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4670,
											"end": 4688,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4670,
											"end": 4688,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4663,
											"end": 4693,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4729,
											"end": 4760,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 4709,
											"end": 4727,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4709,
											"end": 4727,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4709,
											"end": 4727,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4702,
											"end": 4761,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4778,
											"end": 4796,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4778,
											"end": 4796,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12285,
											"end": 12353,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 4449,
											"end": 4802,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12285,
											"end": 12353,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 12285,
											"end": 12353,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12395,
											"end": 12446,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 12404,
											"end": 12409,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12411,
											"end": 12418,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12439,
											"end": 12445,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12420,
											"end": 12436,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12420,
											"end": 12445,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12395,
											"end": 12403,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 12395,
											"end": 12446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12395,
											"end": 12446,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 12395,
											"end": 12446,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12156,
											"end": 12477,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12036,
											"end": 12477,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12036,
											"end": 12477,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12036,
											"end": 12477,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12036,
											"end": 12477,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8750,
											"end": 9401,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 8750,
											"end": 9401,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8876,
											"end": 8894,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8876,
											"end": 8894,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8876,
											"end": 8894,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8868,
											"end": 8936,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 8868,
											"end": 8936,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8868,
											"end": 8936,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8868,
											"end": 8936,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8868,
											"end": 8936,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8868,
											"end": 8936,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8868,
											"end": 8936,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5009,
											"end": 5011,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8868,
											"end": 8936,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8868,
											"end": 8936,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8868,
											"end": 8936,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4991,
											"end": 5012,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5048,
											"end": 5050,
											"name": "PUSH",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 5028,
											"end": 5046,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5028,
											"end": 5046,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5028,
											"end": 5046,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5021,
											"end": 5051,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5087,
											"end": 5121,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 5067,
											"end": 5085,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 5067,
											"end": 5085,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5067,
											"end": 5085,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5060,
											"end": 5122,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5158,
											"end": 5165,
											"name": "PUSH",
											"source": 6,
											"value": "6472657373000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5138,
											"end": 5156,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 5138,
											"end": 5156,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5138,
											"end": 5156,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5131,
											"end": 5166,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5183,
											"end": 5202,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 5183,
											"end": 5202,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8868,
											"end": 8936,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 4807,
											"end": 5208,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8868,
											"end": 8936,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 8868,
											"end": 8936,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8954,
											"end": 8970,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8954,
											"end": 8970,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8954,
											"end": 8970,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8946,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 8946,
											"end": 9010,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8946,
											"end": 9010,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8946,
											"end": 9010,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8946,
											"end": 9010,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8946,
											"end": 9010,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8946,
											"end": 9010,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5415,
											"end": 5417,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8946,
											"end": 9010,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8946,
											"end": 9010,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8946,
											"end": 9010,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5397,
											"end": 5418,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5454,
											"end": 5456,
											"name": "PUSH",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 5434,
											"end": 5452,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5434,
											"end": 5452,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5434,
											"end": 5452,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5427,
											"end": 5457,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5493,
											"end": 5527,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 5473,
											"end": 5491,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 5473,
											"end": 5491,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5473,
											"end": 5491,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5466,
											"end": 5528,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5564,
											"end": 5569,
											"name": "PUSH",
											"source": 6,
											"value": "6573730000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5544,
											"end": 5562,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 5544,
											"end": 5562,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5544,
											"end": 5562,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5537,
											"end": 5570,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5587,
											"end": 5606,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 5587,
											"end": 5606,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8946,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 5213,
											"end": 5612,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8946,
											"end": 9010,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 8946,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9092,
											"end": 9107,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9092,
											"end": 9107,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9092,
											"end": 9107,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9070,
											"end": 9089,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9092,
											"end": 9107,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9092,
											"end": 9107,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9092,
											"end": 9107,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9092,
											"end": 9107,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9092,
											"end": 9107,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9092,
											"end": 9107,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9092,
											"end": 9107,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9092,
											"end": 9107,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9092,
											"end": 9107,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9092,
											"end": 9107,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9092,
											"end": 9107,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9125,
											"end": 9146,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9125,
											"end": 9146,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9125,
											"end": 9146,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 9125,
											"end": 9146,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9117,
											"end": 9189,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 9117,
											"end": 9189,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9117,
											"end": 9189,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9117,
											"end": 9189,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9117,
											"end": 9189,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9117,
											"end": 9189,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9117,
											"end": 9189,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5819,
											"end": 5821,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9117,
											"end": 9189,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9117,
											"end": 9189,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9117,
											"end": 9189,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5801,
											"end": 5822,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5858,
											"end": 5860,
											"name": "PUSH",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 5838,
											"end": 5856,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5838,
											"end": 5856,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5838,
											"end": 5856,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5831,
											"end": 5861,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5897,
											"end": 5931,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 5877,
											"end": 5895,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 5877,
											"end": 5895,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5877,
											"end": 5895,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5870,
											"end": 5932,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5968,
											"end": 5976,
											"name": "PUSH",
											"source": 6,
											"value": "616C616E63650000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5948,
											"end": 5966,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 5948,
											"end": 5966,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5948,
											"end": 5966,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5941,
											"end": 5977,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9117,
											"end": 9189,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 5617,
											"end": 6019,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9117,
											"end": 9189,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 9117,
											"end": 9189,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9223,
											"end": 9238,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9223,
											"end": 9238,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9223,
											"end": 9238,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9223,
											"end": 9238,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9223,
											"end": 9232,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9223,
											"end": 9238,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9223,
											"end": 9238,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9223,
											"end": 9238,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9223,
											"end": 9238,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9223,
											"end": 9238,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9223,
											"end": 9238,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9223,
											"end": 9238,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9223,
											"end": 9238,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9223,
											"end": 9238,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9223,
											"end": 9238,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9223,
											"end": 9238,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9241,
											"end": 9261,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9241,
											"end": 9261,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9241,
											"end": 9261,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9223,
											"end": 9261,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9223,
											"end": 9261,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 9281,
											"end": 9294,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9281,
											"end": 9294,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9281,
											"end": 9294,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9281,
											"end": 9294,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9281,
											"end": 9294,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9281,
											"end": 9294,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9281,
											"end": 9294,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9281,
											"end": 9294,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9281,
											"end": 9304,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9281,
											"end": 9304,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9255,
											"end": 9261,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9255,
											"end": 9261,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9223,
											"end": 9232,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9281,
											"end": 9304,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 9281,
											"end": 9304,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9255,
											"end": 9261,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9255,
											"end": 9261,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9281,
											"end": 9304,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 9281,
											"end": 9304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9281,
											"end": 9304,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 9281,
											"end": 9304,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9281,
											"end": 9304,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9281,
											"end": 9304,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9281,
											"end": 9304,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9281,
											"end": 9304,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9281,
											"end": 9304,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9281,
											"end": 9304,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 9281,
											"end": 9304,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9335,
											"end": 9337,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9320,
											"end": 9346,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9320,
											"end": 9346,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9329,
											"end": 9333,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9320,
											"end": 9346,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9320,
											"end": 9346,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9320,
											"end": 9346,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9339,
											"end": 9345,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9320,
											"end": 9346,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9320,
											"end": 9346,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9320,
											"end": 9346,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 9320,
											"end": 9346,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1449,
											"end": 1474,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1449,
											"end": 1474,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1437,
											"end": 1439,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1422,
											"end": 1440,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1422,
											"end": 1440,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1303,
											"end": 1480,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9320,
											"end": 9346,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 9320,
											"end": 9346,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9320,
											"end": 9346,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9320,
											"end": 9346,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9320,
											"end": 9346,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9320,
											"end": 9346,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9320,
											"end": 9346,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9320,
											"end": 9346,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9320,
											"end": 9346,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 9357,
											"end": 9394,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 13061,
											"end": 13182,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14,
											"end": 600,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 14,
											"end": 600,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 163,
											"end": 165,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 152,
											"end": 161,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 145,
											"end": 166,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 201,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 189,
											"end": 202,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 238,
											"end": 244,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 233,
											"end": 235,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 222,
											"end": 231,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 218,
											"end": 236,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 211,
											"end": 245,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 263,
											"end": 264,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 273,
											"end": 413,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 273,
											"end": 413,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 287,
											"end": 293,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 284,
											"end": 285,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 281,
											"end": 294,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 273,
											"end": 413,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 273,
											"end": 413,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 273,
											"end": 413,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 398,
											"end": 400,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 382,
											"end": 396,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 382,
											"end": 396,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 382,
											"end": 396,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 378,
											"end": 401,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 378,
											"end": 401,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 372,
											"end": 402,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 367,
											"end": 369,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 348,
											"end": 365,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 348,
											"end": 365,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 348,
											"end": 365,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 344,
											"end": 370,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 337,
											"end": 403,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 302,
											"end": 312,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 273,
											"end": 413,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 273,
											"end": 413,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 273,
											"end": 413,
											"name": "tag",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 273,
											"end": 413,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 277,
											"end": 280,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 462,
											"end": 463,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 457,
											"end": 459,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 448,
											"end": 454,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 437,
											"end": 446,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 433,
											"end": 455,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 429,
											"end": 460,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 422,
											"end": 464,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 591,
											"end": 593,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 521,
											"end": 587,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 516,
											"end": 518,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 514,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 504,
											"end": 519,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 500,
											"end": 588,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 489,
											"end": 498,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 485,
											"end": 589,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 481,
											"end": 594,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 473,
											"end": 594,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 473,
											"end": 594,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 473,
											"end": 594,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14,
											"end": 600,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 14,
											"end": 600,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14,
											"end": 600,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14,
											"end": 600,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14,
											"end": 600,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 605,
											"end": 801,
											"name": "tag",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 605,
											"end": 801,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 673,
											"end": 693,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 673,
											"end": 693,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 733,
											"end": 775,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 722,
											"end": 776,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 722,
											"end": 776,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 712,
											"end": 777,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 712,
											"end": 777,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 702,
											"end": 795,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 702,
											"end": 795,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 791,
											"end": 792,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 788,
											"end": 789,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 781,
											"end": 793,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 702,
											"end": 795,
											"name": "tag",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 702,
											"end": 795,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 605,
											"end": 801,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 605,
											"end": 801,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 605,
											"end": 801,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 605,
											"end": 801,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 806,
											"end": 1106,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 806,
											"end": 1106,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 874,
											"end": 880,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 882,
											"end": 888,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 935,
											"end": 937,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 923,
											"end": 932,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 914,
											"end": 921,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 910,
											"end": 933,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 906,
											"end": 938,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 903,
											"end": 955,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 903,
											"end": 955,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 903,
											"end": 955,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 951,
											"end": 952,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 948,
											"end": 949,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 941,
											"end": 953,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 903,
											"end": 955,
											"name": "tag",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 903,
											"end": 955,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 974,
											"end": 1003,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 993,
											"end": 1002,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 974,
											"end": 1003,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 974,
											"end": 1003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 974,
											"end": 1003,
											"name": "tag",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 974,
											"end": 1003,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 964,
											"end": 1003,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1074,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1057,
											"end": 1075,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1057,
											"end": 1075,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1057,
											"end": 1075,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1057,
											"end": 1075,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1076,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1076,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 806,
											"end": 1106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1485,
											"end": 1859,
											"name": "tag",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 1485,
											"end": 1859,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1562,
											"end": 1568,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1578,
											"end": 1584,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1631,
											"end": 1633,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1619,
											"end": 1628,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1610,
											"end": 1617,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1606,
											"end": 1629,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1602,
											"end": 1634,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1599,
											"end": 1651,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1599,
											"end": 1651,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 1599,
											"end": 1651,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1647,
											"end": 1648,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1644,
											"end": 1645,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1637,
											"end": 1649,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1599,
											"end": 1651,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 1599,
											"end": 1651,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1670,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 1689,
											"end": 1698,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1670,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 1670,
											"end": 1699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1670,
											"end": 1699,
											"name": "tag",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 1670,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1660,
											"end": 1699,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1660,
											"end": 1699,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1718,
											"end": 1756,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 1752,
											"end": 1754,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1741,
											"end": 1750,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1737,
											"end": 1755,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1718,
											"end": 1756,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 1718,
											"end": 1756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1718,
											"end": 1756,
											"name": "tag",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 1718,
											"end": 1756,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1485,
											"end": 1859,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1485,
											"end": 1859,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 1708,
											"end": 1756,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1708,
											"end": 1756,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1825,
											"end": 1827,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1810,
											"end": 1828,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1810,
											"end": 1828,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1810,
											"end": 1828,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1810,
											"end": 1828,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1797,
											"end": 1829,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1797,
											"end": 1829,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1485,
											"end": 1859,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2239,
											"name": "tag",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 2053,
											"end": 2239,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2112,
											"end": 2118,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2165,
											"end": 2167,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2153,
											"end": 2162,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2144,
											"end": 2151,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2140,
											"end": 2163,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2136,
											"end": 2168,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2133,
											"end": 2185,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2133,
											"end": 2185,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 2133,
											"end": 2185,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2181,
											"end": 2182,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2178,
											"end": 2179,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2171,
											"end": 2183,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2133,
											"end": 2185,
											"name": "tag",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 2133,
											"end": 2185,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2204,
											"end": 2233,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 2223,
											"end": 2232,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2204,
											"end": 2233,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 2204,
											"end": 2233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2204,
											"end": 2233,
											"name": "tag",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 2204,
											"end": 2233,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2194,
											"end": 2233,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2239,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2053,
											"end": 2239,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2244,
											"end": 2504,
											"name": "tag",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 2244,
											"end": 2504,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2312,
											"end": 2318,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2320,
											"end": 2326,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2373,
											"end": 2375,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2361,
											"end": 2370,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2352,
											"end": 2359,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2348,
											"end": 2371,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2344,
											"end": 2376,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2341,
											"end": 2393,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2341,
											"end": 2393,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 2341,
											"end": 2393,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2389,
											"end": 2390,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2386,
											"end": 2387,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2379,
											"end": 2391,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2341,
											"end": 2393,
											"name": "tag",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 2341,
											"end": 2393,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2412,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 2431,
											"end": 2440,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2412,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 2412,
											"end": 2441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2412,
											"end": 2441,
											"name": "tag",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 2412,
											"end": 2441,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2402,
											"end": 2441,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2402,
											"end": 2441,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2460,
											"end": 2498,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 2494,
											"end": 2496,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2483,
											"end": 2492,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2479,
											"end": 2497,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2460,
											"end": 2498,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 2460,
											"end": 2498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2460,
											"end": 2498,
											"name": "tag",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 2460,
											"end": 2498,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2450,
											"end": 2498,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2450,
											"end": 2498,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2244,
											"end": 2504,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2244,
											"end": 2504,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2244,
											"end": 2504,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2244,
											"end": 2504,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2244,
											"end": 2504,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2244,
											"end": 2504,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2509,
											"end": 2946,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 2509,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2588,
											"end": 2589,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2584,
											"end": 2596,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2584,
											"end": 2596,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2584,
											"end": 2596,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 2584,
											"end": 2596,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2631,
											"end": 2643,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2631,
											"end": 2643,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2631,
											"end": 2643,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2652,
											"end": 2713,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 2652,
											"end": 2713,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2706,
											"end": 2710,
											"name": "PUSH",
											"source": 6,
											"value": "7F"
										},
										{
											"begin": 2698,
											"end": 2704,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2694,
											"end": 2711,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2684,
											"end": 2711,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2684,
											"end": 2711,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2652,
											"end": 2713,
											"name": "tag",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 2652,
											"end": 2713,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2759,
											"end": 2761,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2751,
											"end": 2757,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2748,
											"end": 2762,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2728,
											"end": 2746,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2725,
											"end": 2763,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2722,
											"end": 2940,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 2722,
											"end": 2940,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2873,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2793,
											"end": 2794,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2786,
											"end": 2874,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2897,
											"end": 2901,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 2894,
											"end": 2895,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2887,
											"end": 2902,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2925,
											"end": 2929,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2922,
											"end": 2923,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2915,
											"end": 2930,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2722,
											"end": 2940,
											"name": "tag",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 2722,
											"end": 2940,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2722,
											"end": 2940,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2509,
											"end": 2946,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2509,
											"end": 2946,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2509,
											"end": 2946,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2509,
											"end": 2946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2951,
											"end": 3230,
											"name": "tag",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 2951,
											"end": 3230,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3016,
											"end": 3025,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3016,
											"end": 3025,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3016,
											"end": 3025,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3037,
											"end": 3047,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3037,
											"end": 3047,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3037,
											"end": 3047,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3034,
											"end": 3224,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3034,
											"end": 3224,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 3034,
											"end": 3224,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3080,
											"end": 3157,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3077,
											"end": 3078,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3070,
											"end": 3158,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3181,
											"end": 3185,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 3178,
											"end": 3179,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3171,
											"end": 3186,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3209,
											"end": 3213,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3206,
											"end": 3207,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"mintable-token(copy)(copy)/mintable-token.sol",
								"mintable-token/@openzeppelin/contracts/access/Ownable.sol",
								"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"mintable-token/@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"mintable-token/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"mintable-token/@openzeppelin/contracts/utils/Context.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":5000000},\"remappings\":[]},\"sources\":{\"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xfe852965027dde45d9f40b4562bc36956a82d791efb3698e6f207d21668a8e1a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cd4e1f7d3fd2bc01a33f144a86b9b3f6d1fafae53ed4c9f79db227711031653\",\"dweb:/ipfs/QmeNhBsPRSA43ZpPVqmP1K9DeyvKrZoz2x1MsJFXbjwyCb\"]},\"mintable-token/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x6c007a17cced139722dc96ad462eb69f5e2d93744875b19e077cff1ef1bb2e6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://192f293037134b402dd09b0c8825c0f8d759a71c2ef17a1a5fcfbb77cbd120fa\",\"dweb:/ipfs/QmdSuMhY51TRmQ3qyYQrNbuU52v6yZatWVcChtnH5CFYPg\"]},\"mintable-token/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xb240625569719274603083dffbf2bb043f84695d22a7e8357f94b0e8dce0819e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://671ef5dbe12cd0feaf50dfdcd7bfb1108f2eefe283b2c30076374388fd94b46d\",\"dweb:/ipfs/QmXT2aocpvjE3QWFE8rhZ5d6dPPinK64xwNzMmZYdRDfzT\"]},\"mintable-token/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xf4835196ff5e1d34fbaddbb7553c233c939c58fc7449980563c3a4ebd6470037\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07aec331fdd1760504e9213505dc2cc00713166fd51cbb4ffa27ac769e0f8878\",\"dweb:/ipfs/QmSpoSTeh4AvaNd1oAf2zL2tsYxvYSPQxwrr4PNtAy3uZj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 175,
								"contract": "mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 181,
								"contract": "mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 183,
								"contract": "mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 185,
								"contract": "mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 187,
								"contract": "mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"mintable-token/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"mintable-token/@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":5000000},\"remappings\":[]},\"sources\":{\"mintable-token/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x6c007a17cced139722dc96ad462eb69f5e2d93744875b19e077cff1ef1bb2e6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://192f293037134b402dd09b0c8825c0f8d759a71c2ef17a1a5fcfbb77cbd120fa\",\"dweb:/ipfs/QmdSuMhY51TRmQ3qyYQrNbuU52v6yZatWVcChtnH5CFYPg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"mintable-token/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"mintable-token/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":5000000},\"remappings\":[]},\"sources\":{\"mintable-token/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x6c007a17cced139722dc96ad462eb69f5e2d93744875b19e077cff1ef1bb2e6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://192f293037134b402dd09b0c8825c0f8d759a71c2ef17a1a5fcfbb77cbd120fa\",\"dweb:/ipfs/QmdSuMhY51TRmQ3qyYQrNbuU52v6yZatWVcChtnH5CFYPg\"]},\"mintable-token/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xb240625569719274603083dffbf2bb043f84695d22a7e8357f94b0e8dce0819e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://671ef5dbe12cd0feaf50dfdcd7bfb1108f2eefe283b2c30076374388fd94b46d\",\"dweb:/ipfs/QmXT2aocpvjE3QWFE8rhZ5d6dPPinK64xwNzMmZYdRDfzT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"mintable-token/@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"mintable-token/@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":5000000},\"remappings\":[]},\"sources\":{\"mintable-token/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xf4835196ff5e1d34fbaddbb7553c233c939c58fc7449980563c3a4ebd6470037\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07aec331fdd1760504e9213505dc2cc00713166fd51cbb4ffa27ac769e0f8878\",\"dweb:/ipfs/QmSpoSTeh4AvaNd1oAf2zL2tsYxvYSPQxwrr4PNtAy3uZj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"mintable-token(copy)(copy)/mintable-token.sol": {
				"ast": {
					"absolutePath": "mintable-token(copy)(copy)/mintable-token.sol",
					"exportedSymbols": {
						"Context": [
							870
						],
						"ERC20": [
							745
						],
						"IERC20": [
							823
						],
						"IERC20Metadata": [
							848
						],
						"MintableToken": [
							46
						],
						"Ownable": [
							159
						]
					},
					"id": 47,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "1315:24:0"
						},
						{
							"absolutePath": "mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 47,
							"sourceUnit": 746,
							"src": "1341:70:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "mintable-token/@openzeppelin/contracts/access/Ownable.sol",
							"file": "mintable-token/@openzeppelin/contracts/access/Ownable.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 47,
							"sourceUnit": 160,
							"src": "1412:67:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "ERC20",
										"nameLocations": [
											"1972:5:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 745,
										"src": "1972:5:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "1972:5:0"
								},
								{
									"baseName": {
										"id": 7,
										"name": "Ownable",
										"nameLocations": [
											"1979:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 159,
										"src": "1979:7:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "1979:7:0"
								}
							],
							"canonicalName": "MintableToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "1481:463:0",
								"text": " @title Mintable Token\n @author Breakthrough Labs Inc.\n @notice Token, ERC20, Mintable\n @custom:version 1.0.7\n @custom:address 5\n @custom:default-precision 18\n @custom:simple-description Token that allows the owner to mint as many tokens as desired.\n @dev ERC20 token with the following features:\n  - Premint your initial supply.\n  - Mint as many tokens as you want with no cap.\n  - Only the contract owner can mint new tokens."
							},
							"fullyImplemented": true,
							"id": 46,
							"linearizedBaseContracts": [
								46,
								159,
								745,
								848,
								823,
								870
							],
							"name": "MintableToken",
							"nameLocation": "1955:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 28,
										"nodeType": "Block",
										"src": "2251:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 23,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2267:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 24,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2271:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2267:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 25,
															"name": "initialSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "2279:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 22,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 562,
														"src": "2261:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 26,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 27,
												"nodeType": "ExpressionStatement",
												"src": "2261:32:0"
											}
										]
									},
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "1993:118:0",
										"text": " @param name Token Name\n @param symbol Token Symbol\n @param initialSupply Initial Supply"
									},
									"id": 29,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 18,
													"name": "name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 11,
													"src": "2237:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 19,
													"name": "symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 13,
													"src": "2243:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 20,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 17,
												"name": "ERC20",
												"nameLocations": [
													"2231:5:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 745,
												"src": "2231:5:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2231:19:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "2151:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 29,
												"src": "2137:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 10,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2137:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 13,
												"mutability": "mutable",
												"name": "symbol",
												"nameLocation": "2179:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 29,
												"src": "2165:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 12,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2165:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 15,
												"mutability": "mutable",
												"name": "initialSupply",
												"nameLocation": "2203:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 29,
												"src": "2195:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 14,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2195:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2127:95:0"
									},
									"returnParameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2251:0:0"
									},
									"scope": 46,
									"src": "2116:184:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 44,
										"nodeType": "Block",
										"src": "2520:34:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 40,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 34,
															"src": "2536:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 41,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "2540:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 39,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 562,
														"src": "2530:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2530:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "2530:17:0"
											}
										]
									},
									"documentation": {
										"id": 30,
										"nodeType": "StructuredDocumentation",
										"src": "2306:148:0",
										"text": " @dev Creates `amount` tokens and assigns them to `to`, increasing\n the total supply. Only accessible by the contract owner."
									},
									"functionSelector": "94bf804d",
									"id": 45,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 37,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 36,
												"name": "onlyOwner",
												"nameLocations": [
													"2510:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 78,
												"src": "2510:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2510:9:0"
										}
									],
									"name": "mint",
									"nameLocation": "2468:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2481:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "2473:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2473:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2497:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "2489:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 33,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2489:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2472:28:0"
									},
									"returnParameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2520:0:0"
									},
									"scope": 46,
									"src": "2459:95:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 47,
							"src": "1946:610:0",
							"usedErrors": [],
							"usedEvents": [
								60,
								757,
								766
							]
						}
					],
					"src": "1315:1243:0"
				},
				"id": 0
			},
			"mintable-token/@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "mintable-token/@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							870
						],
						"Ownable": [
							159
						]
					},
					"id": 160,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 48,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "1377:23:1"
						},
						{
							"absolutePath": "mintable-token/@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 49,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 160,
							"sourceUnit": 871,
							"src": "1402:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 51,
										"name": "Context",
										"nameLocations": [
											"1958:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 870,
										"src": "1958:7:1"
									},
									"id": 52,
									"nodeType": "InheritanceSpecifier",
									"src": "1958:7:1"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 50,
								"nodeType": "StructuredDocumentation",
								"src": "1434:494:1",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 159,
							"linearizedBaseContracts": [
								159,
								870
							],
							"name": "Ownable",
							"nameLocation": "1947:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 54,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "1988:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 159,
									"src": "1972:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 53,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1972:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 60,
									"name": "OwnershipTransferred",
									"nameLocation": "2007:20:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "2044:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2028:29:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 55,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2028:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 58,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2075:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2059:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 57,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2059:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:57:1"
									},
									"src": "2001:84:1"
								},
								{
									"body": {
										"id": 69,
										"nodeType": "Block",
										"src": "2201:49:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 65,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 860,
																"src": "2230:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 66,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2230:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 64,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "2211:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 67,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2211:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 68,
												"nodeType": "ExpressionStatement",
												"src": "2211:32:1"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "2091:91:1",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 70,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2198:2:1"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2201:0:1"
									},
									"scope": 159,
									"src": "2187:63:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 77,
										"nodeType": "Block",
										"src": "2359:41:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 73,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2369:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 74,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2369:13:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 75,
												"nodeType": "ExpressionStatement",
												"src": "2369:13:1"
											},
											{
												"id": 76,
												"nodeType": "PlaceholderStatement",
												"src": "2392:1:1"
											}
										]
									},
									"documentation": {
										"id": 71,
										"nodeType": "StructuredDocumentation",
										"src": "2256:77:1",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 78,
									"name": "onlyOwner",
									"nameLocation": "2347:9:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2356:2:1"
									},
									"src": "2338:62:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 86,
										"nodeType": "Block",
										"src": "2531:30:1",
										"statements": [
											{
												"expression": {
													"id": 84,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 54,
													"src": "2548:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 83,
												"id": 85,
												"nodeType": "Return",
												"src": "2541:13:1"
											}
										]
									},
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "2406:65:1",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 87,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "2485:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2490:2:1"
									},
									"returnParameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "2522:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 81,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2522:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2521:9:1"
									},
									"scope": 159,
									"src": "2476:85:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 100,
										"nodeType": "Block",
										"src": "2679:85:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 96,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 92,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 87,
																	"src": "2697:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 93,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2697:7:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 94,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 860,
																	"src": "2708:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 95,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2708:12:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2697:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 97,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2722:34:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 91,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2689:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 98,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2689:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 99,
												"nodeType": "ExpressionStatement",
												"src": "2689:68:1"
											}
										]
									},
									"documentation": {
										"id": 88,
										"nodeType": "StructuredDocumentation",
										"src": "2567:62:1",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 101,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "2643:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2654:2:1"
									},
									"returnParameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2679:0:1"
									},
									"scope": 159,
									"src": "2634:130:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 114,
										"nodeType": "Block",
										"src": "3160:47:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 110,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3197:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3189:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 108,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3189:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 111,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3189:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 107,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "3170:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3170:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 113,
												"nodeType": "ExpressionStatement",
												"src": "3170:30:1"
											}
										]
									},
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "2770:331:1",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 115,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 105,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 104,
												"name": "onlyOwner",
												"nameLocations": [
													"3150:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 78,
												"src": "3150:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "3150:9:1"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "3115:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3132:2:1"
									},
									"returnParameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3160:0:1"
									},
									"scope": 159,
									"src": "3106:101:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 137,
										"nodeType": "Block",
										"src": "3426:128:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 129,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 124,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 118,
																"src": "3444:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 127,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3464:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 126,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3456:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 125,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3456:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 128,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3456:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3444:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 130,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3468:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 123,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3436:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3436:73:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 132,
												"nodeType": "ExpressionStatement",
												"src": "3436:73:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 134,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 118,
															"src": "3538:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 133,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "3519:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3519:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 136,
												"nodeType": "ExpressionStatement",
												"src": "3519:28:1"
											}
										]
									},
									"documentation": {
										"id": 116,
										"nodeType": "StructuredDocumentation",
										"src": "3213:138:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 138,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 121,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 120,
												"name": "onlyOwner",
												"nameLocations": [
													"3416:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 78,
												"src": "3416:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "3416:9:1"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "3365:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3391:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "3383:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3383:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3382:18:1"
									},
									"returnParameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3426:0:1"
									},
									"scope": 159,
									"src": "3356:198:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 157,
										"nodeType": "Block",
										"src": "3771:124:1",
										"statements": [
											{
												"assignments": [
													145
												],
												"declarations": [
													{
														"constant": false,
														"id": 145,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "3789:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 157,
														"src": "3781:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 144,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3781:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 147,
												"initialValue": {
													"id": 146,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 54,
													"src": "3800:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3781:25:1"
											},
											{
												"expression": {
													"id": 150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 148,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "3816:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 149,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "3825:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3816:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 151,
												"nodeType": "ExpressionStatement",
												"src": "3816:17:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 153,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 145,
															"src": "3869:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 154,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 141,
															"src": "3879:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 152,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 60,
														"src": "3848:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3848:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 156,
												"nodeType": "EmitStatement",
												"src": "3843:45:1"
											}
										]
									},
									"documentation": {
										"id": 139,
										"nodeType": "StructuredDocumentation",
										"src": "3560:143:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 158,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "3717:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3744:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "3736:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3736:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3735:18:1"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3771:0:1"
									},
									"scope": 159,
									"src": "3708:187:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 160,
							"src": "1929:1968:1",
							"usedErrors": [],
							"usedEvents": [
								60
							]
						}
					],
					"src": "1377:2521:1"
				},
				"id": 1
			},
			"mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "mintable-token/@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							870
						],
						"ERC20": [
							745
						],
						"IERC20": [
							823
						],
						"IERC20Metadata": [
							848
						]
					},
					"id": 746,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 161,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "1380:23:2"
						},
						{
							"absolutePath": "mintable-token/@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 162,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 746,
							"sourceUnit": 824,
							"src": "1405:22:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "mintable-token/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 163,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 746,
							"sourceUnit": 849,
							"src": "1428:41:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "mintable-token/@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 164,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 746,
							"sourceUnit": 871,
							"src": "1470:33:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 166,
										"name": "Context",
										"nameLocations": [
											"2696:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 870,
										"src": "2696:7:2"
									},
									"id": 167,
									"nodeType": "InheritanceSpecifier",
									"src": "2696:7:2"
								},
								{
									"baseName": {
										"id": 168,
										"name": "IERC20",
										"nameLocations": [
											"2705:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 823,
										"src": "2705:6:2"
									},
									"id": 169,
									"nodeType": "InheritanceSpecifier",
									"src": "2705:6:2"
								},
								{
									"baseName": {
										"id": 170,
										"name": "IERC20Metadata",
										"nameLocations": [
											"2713:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 848,
										"src": "2713:14:2"
									},
									"id": 171,
									"nodeType": "InheritanceSpecifier",
									"src": "2713:14:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 165,
								"nodeType": "StructuredDocumentation",
								"src": "1505:1172:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 745,
							"linearizedBaseContracts": [
								745,
								848,
								823,
								870
							],
							"name": "ERC20",
							"nameLocation": "2687:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 175,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "2770:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 745,
									"src": "2734:45:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 174,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 172,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2742:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2734:27:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 173,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2753:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 181,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "2842:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 745,
									"src": "2786:67:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 180,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 176,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2794:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2786:47:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 179,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 177,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2813:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "2805:27:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 178,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2824:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 183,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "2876:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 745,
									"src": "2860:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 182,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2860:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 185,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "2910:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 745,
									"src": "2895:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 184,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "2895:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 187,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "2936:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 745,
									"src": "2921:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 186,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "2921:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 203,
										"nodeType": "Block",
										"src": "3309:57:2",
										"statements": [
											{
												"expression": {
													"id": 197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 195,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 185,
														"src": "3319:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 196,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 190,
														"src": "3327:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "3319:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 198,
												"nodeType": "ExpressionStatement",
												"src": "3319:13:2"
											},
											{
												"expression": {
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 199,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 187,
														"src": "3342:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 200,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "3352:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "3342:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 202,
												"nodeType": "ExpressionStatement",
												"src": "3342:17:2"
											}
										]
									},
									"documentation": {
										"id": 188,
										"nodeType": "StructuredDocumentation",
										"src": "2950:298:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 204,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "3279:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "3265:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 189,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3265:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "3300:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "3286:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 191,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3286:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3264:44:2"
									},
									"returnParameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3309:0:2"
									},
									"scope": 745,
									"src": "3253:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										835
									],
									"body": {
										"id": 213,
										"nodeType": "Block",
										"src": "3500:29:2",
										"statements": [
											{
												"expression": {
													"id": 211,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 185,
													"src": "3517:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 210,
												"id": 212,
												"nodeType": "Return",
												"src": "3510:12:2"
											}
										]
									},
									"documentation": {
										"id": 205,
										"nodeType": "StructuredDocumentation",
										"src": "3372:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 214,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "3440:4:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 207,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3467:8:2"
									},
									"parameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3444:2:2"
									},
									"returnParameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3485:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 208,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3485:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3484:15:2"
									},
									"scope": 745,
									"src": "3431:98:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										841
									],
									"body": {
										"id": 223,
										"nodeType": "Block",
										"src": "3713:31:2",
										"statements": [
											{
												"expression": {
													"id": 221,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 187,
													"src": "3730:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 220,
												"id": 222,
												"nodeType": "Return",
												"src": "3723:14:2"
											}
										]
									},
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3535:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "3651:6:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 217,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3680:8:2"
									},
									"parameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3657:2:2"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "3698:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 218,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3698:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3697:15:2"
									},
									"scope": 745,
									"src": "3642:102:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										847
									],
									"body": {
										"id": 233,
										"nodeType": "Block",
										"src": "4433:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4450:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 230,
												"id": 232,
												"nodeType": "Return",
												"src": "4443:9:2"
											}
										]
									},
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "3750:613:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 234,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "4377:8:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 227,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4408:8:2"
									},
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4385:2:2"
									},
									"returnParameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "4426:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 228,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4426:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4425:7:2"
									},
									"scope": 745,
									"src": "4368:91:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										772
									],
									"body": {
										"id": 243,
										"nodeType": "Block",
										"src": "4589:36:2",
										"statements": [
											{
												"expression": {
													"id": 241,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 183,
													"src": "4606:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 240,
												"id": 242,
												"nodeType": "Return",
												"src": "4599:19:2"
											}
										]
									},
									"documentation": {
										"id": 235,
										"nodeType": "StructuredDocumentation",
										"src": "4465:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 244,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "4528:11:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 237,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4562:8:2"
									},
									"parameters": {
										"id": 236,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4539:2:2"
									},
									"returnParameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "4580:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 238,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4580:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4579:9:2"
									},
									"scope": 745,
									"src": "4519:106:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										780
									],
									"body": {
										"id": 257,
										"nodeType": "Block",
										"src": "4766:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 253,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 175,
														"src": "4783:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 255,
													"indexExpression": {
														"id": 254,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 247,
														"src": "4793:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4783:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 252,
												"id": 256,
												"nodeType": "Return",
												"src": "4776:25:2"
											}
										]
									},
									"documentation": {
										"id": 245,
										"nodeType": "StructuredDocumentation",
										"src": "4631:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 258,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "4692:9:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 249,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4739:8:2"
									},
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4710:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "4702:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 246,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4702:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4701:17:2"
									},
									"returnParameters": {
										"id": 252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 251,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "4757:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 250,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4757:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4756:9:2"
									},
									"scope": 745,
									"src": "4683:125:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										790
									],
									"body": {
										"id": 282,
										"nodeType": "Block",
										"src": "5089:104:2",
										"statements": [
											{
												"assignments": [
													270
												],
												"declarations": [
													{
														"constant": false,
														"id": 270,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "5107:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 282,
														"src": "5099:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 269,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5099:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 273,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 271,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 860,
														"src": "5115:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5115:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5099:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 275,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 270,
															"src": "5147:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 276,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "5154:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 277,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 263,
															"src": "5158:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 274,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 506,
														"src": "5137:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5137:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 279,
												"nodeType": "ExpressionStatement",
												"src": "5137:28:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 280,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5182:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 268,
												"id": 281,
												"nodeType": "Return",
												"src": "5175:11:2"
											}
										]
									},
									"documentation": {
										"id": 259,
										"nodeType": "StructuredDocumentation",
										"src": "4814:185:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 283,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "5013:8:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 265,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5065:8:2"
									},
									"parameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5030:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "5022:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5022:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5042:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "5034:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5034:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5021:28:2"
									},
									"returnParameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "5083:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 266,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5083:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5082:6:2"
									},
									"scope": 745,
									"src": "5004:189:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										800
									],
									"body": {
										"id": 300,
										"nodeType": "Block",
										"src": "5349:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 294,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 181,
															"src": "5366:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 296,
														"indexExpression": {
															"id": 295,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 286,
															"src": "5378:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5366:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 298,
													"indexExpression": {
														"id": 297,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 288,
														"src": "5385:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5366:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 293,
												"id": 299,
												"nodeType": "Return",
												"src": "5359:34:2"
											}
										]
									},
									"documentation": {
										"id": 284,
										"nodeType": "StructuredDocumentation",
										"src": "5199:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 301,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "5260:9:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 290,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5322:8:2"
									},
									"parameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5278:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "5270:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 285,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5270:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5293:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "5285:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 287,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5285:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5269:32:2"
									},
									"returnParameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "5340:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 291,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5340:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5339:9:2"
									},
									"scope": 745,
									"src": "5251:149:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										810
									],
									"body": {
										"id": 325,
										"nodeType": "Block",
										"src": "5797:108:2",
										"statements": [
											{
												"assignments": [
													313
												],
												"declarations": [
													{
														"constant": false,
														"id": 313,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "5815:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 325,
														"src": "5807:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 312,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5807:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 316,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 314,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 860,
														"src": "5823:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5823:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5807:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 318,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "5854:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 319,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 304,
															"src": "5861:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 320,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 306,
															"src": "5870:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 317,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 679,
														"src": "5845:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5845:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 322,
												"nodeType": "ExpressionStatement",
												"src": "5845:32:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5894:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 311,
												"id": 324,
												"nodeType": "Return",
												"src": "5887:11:2"
											}
										]
									},
									"documentation": {
										"id": 302,
										"nodeType": "StructuredDocumentation",
										"src": "5406:297:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 326,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "5717:7:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 308,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5773:8:2"
									},
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5733:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "5725:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 303,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5725:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5750:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "5742:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 305,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5742:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5724:33:2"
									},
									"returnParameters": {
										"id": 311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "5791:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 309,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5791:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5790:6:2"
									},
									"scope": 745,
									"src": "5708:197:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										822
									],
									"body": {
										"id": 358,
										"nodeType": "Block",
										"src": "6600:153:2",
										"statements": [
											{
												"assignments": [
													340
												],
												"declarations": [
													{
														"constant": false,
														"id": 340,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "6618:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 358,
														"src": "6610:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 339,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6610:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 343,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 341,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 860,
														"src": "6628:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6628:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6610:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 345,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 329,
															"src": "6666:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 346,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 340,
															"src": "6672:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 347,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 333,
															"src": "6681:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 344,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 722,
														"src": "6650:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6650:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 349,
												"nodeType": "ExpressionStatement",
												"src": "6650:38:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 351,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 329,
															"src": "6708:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 352,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 331,
															"src": "6714:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 353,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 333,
															"src": "6718:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 350,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 506,
														"src": "6698:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6698:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 355,
												"nodeType": "ExpressionStatement",
												"src": "6698:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 356,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6742:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 338,
												"id": 357,
												"nodeType": "Return",
												"src": "6735:11:2"
											}
										]
									},
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "5911:551:2",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 359,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "6476:12:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 335,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6576:8:2"
									},
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6506:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "6498:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 328,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6498:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6528:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "6520:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6520:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6548:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "6540:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6540:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6488:72:2"
									},
									"returnParameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "6594:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 336,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6594:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6593:6:2"
									},
									"scope": 745,
									"src": "6467:286:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 387,
										"nodeType": "Block",
										"src": "7242:140:2",
										"statements": [
											{
												"assignments": [
													370
												],
												"declarations": [
													{
														"constant": false,
														"id": 370,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "7260:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 387,
														"src": "7252:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 369,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7252:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 373,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 371,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 860,
														"src": "7268:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7268:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7252:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 375,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 370,
															"src": "7299:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 376,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "7306:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 382,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 378,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 370,
																		"src": "7325:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 379,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 362,
																		"src": "7332:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 377,
																	"name": "allowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 301,
																	"src": "7315:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view returns (uint256)"
																	}
																},
																"id": 380,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7315:25:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 381,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 364,
																"src": "7343:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7315:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 374,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 679,
														"src": "7290:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7290:64:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 384,
												"nodeType": "ExpressionStatement",
												"src": "7290:64:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 385,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7371:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 368,
												"id": 386,
												"nodeType": "Return",
												"src": "7364:11:2"
											}
										]
									},
									"documentation": {
										"id": 360,
										"nodeType": "StructuredDocumentation",
										"src": "6759:384:2",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 388,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "7157:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7183:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "7175:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 361,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7175:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "7200:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "7192:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 363,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7192:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7174:37:2"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "7236:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 366,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7236:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7235:6:2"
									},
									"scope": 745,
									"src": "7148:234:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 428,
										"nodeType": "Block",
										"src": "7968:328:2",
										"statements": [
											{
												"assignments": [
													399
												],
												"declarations": [
													{
														"constant": false,
														"id": 399,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "7986:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 428,
														"src": "7978:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 398,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7978:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 402,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 400,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 860,
														"src": "7994:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7994:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7978:28:2"
											},
											{
												"assignments": [
													404
												],
												"declarations": [
													{
														"constant": false,
														"id": 404,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "8024:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 428,
														"src": "8016:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 403,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8016:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 409,
												"initialValue": {
													"arguments": [
														{
															"id": 406,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 399,
															"src": "8053:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 407,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 391,
															"src": "8060:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 405,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 301,
														"src": "8043:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8043:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8016:52:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 413,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 411,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 404,
																"src": "8086:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 412,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 393,
																"src": "8106:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8086:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 414,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8123:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 410,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8078:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8078:85:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 416,
												"nodeType": "ExpressionStatement",
												"src": "8078:85:2"
											},
											{
												"id": 425,
												"nodeType": "UncheckedBlock",
												"src": "8173:95:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 418,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 399,
																	"src": "8206:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 419,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 391,
																	"src": "8213:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 422,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 420,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 404,
																		"src": "8222:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 421,
																		"name": "subtractedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 393,
																		"src": "8241:15:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8222:34:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 417,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 679,
																"src": "8197:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 423,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8197:60:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 424,
														"nodeType": "ExpressionStatement",
														"src": "8197:60:2"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 426,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8285:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 397,
												"id": 427,
												"nodeType": "Return",
												"src": "8278:11:2"
											}
										]
									},
									"documentation": {
										"id": 389,
										"nodeType": "StructuredDocumentation",
										"src": "7388:476:2",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 429,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "7878:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 391,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7904:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 429,
												"src": "7896:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 390,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7896:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "7921:15:2",
												"nodeType": "VariableDeclaration",
												"scope": 429,
												"src": "7913:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 392,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7913:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7895:42:2"
									},
									"returnParameters": {
										"id": 397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 429,
												"src": "7962:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 395,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7962:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7961:6:2"
									},
									"scope": 745,
									"src": "7869:427:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 505,
										"nodeType": "Block",
										"src": "8858:543:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 445,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 440,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 432,
																"src": "8876:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 443,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8892:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 442,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8884:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 441,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8884:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 444,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8884:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8876:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 446,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8896:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 439,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8868:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8868:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 448,
												"nodeType": "ExpressionStatement",
												"src": "8868:68:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 455,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 450,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 434,
																"src": "8954:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 453,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8968:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 452,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8960:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 451,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8960:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 454,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8960:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8954:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 456,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8972:37:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 449,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8946:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8946:64:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 458,
												"nodeType": "ExpressionStatement",
												"src": "8946:64:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 460,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 432,
															"src": "9042:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 461,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 434,
															"src": "9048:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 462,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 436,
															"src": "9052:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 459,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 733,
														"src": "9021:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9021:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 464,
												"nodeType": "ExpressionStatement",
												"src": "9021:38:2"
											},
											{
												"assignments": [
													466
												],
												"declarations": [
													{
														"constant": false,
														"id": 466,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "9078:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 505,
														"src": "9070:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 465,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9070:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 470,
												"initialValue": {
													"baseExpression": {
														"id": 467,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 175,
														"src": "9092:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 469,
													"indexExpression": {
														"id": 468,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 432,
														"src": "9102:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9092:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9070:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 474,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 472,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 466,
																"src": "9125:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 473,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 436,
																"src": "9140:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9125:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 475,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9148:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 471,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9117:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9117:72:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 477,
												"nodeType": "ExpressionStatement",
												"src": "9117:72:2"
											},
											{
												"id": 486,
												"nodeType": "UncheckedBlock",
												"src": "9199:73:2",
												"statements": [
													{
														"expression": {
															"id": 484,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 478,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 175,
																	"src": "9223:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 480,
																"indexExpression": {
																	"id": 479,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 432,
																	"src": "9233:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "9223:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 481,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 466,
																	"src": "9241:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 482,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 436,
																	"src": "9255:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9241:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9223:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 485,
														"nodeType": "ExpressionStatement",
														"src": "9223:38:2"
													}
												]
											},
											{
												"expression": {
													"id": 491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 487,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 175,
															"src": "9281:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 489,
														"indexExpression": {
															"id": 488,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 434,
															"src": "9291:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9281:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 490,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 436,
														"src": "9298:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9281:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 492,
												"nodeType": "ExpressionStatement",
												"src": "9281:23:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 494,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 432,
															"src": "9329:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 495,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 434,
															"src": "9335:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 496,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 436,
															"src": "9339:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 493,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 757,
														"src": "9320:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9320:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 498,
												"nodeType": "EmitStatement",
												"src": "9315:31:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 500,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 432,
															"src": "9377:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 501,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 434,
															"src": "9383:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 502,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 436,
															"src": "9387:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 499,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 744,
														"src": "9357:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9357:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 504,
												"nodeType": "ExpressionStatement",
												"src": "9357:37:2"
											}
										]
									},
									"documentation": {
										"id": 430,
										"nodeType": "StructuredDocumentation",
										"src": "8302:443:2",
										"text": " @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."
									},
									"id": 506,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "8759:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "8786:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "8778:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 431,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8778:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8808:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "8800:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8800:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8828:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "8820:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 435,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8820:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8768:72:2"
									},
									"returnParameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8858:0:2"
									},
									"scope": 745,
									"src": "8750:651:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 561,
										"nodeType": "Block",
										"src": "9742:324:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 520,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 515,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 509,
																"src": "9760:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 518,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9779:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 517,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9771:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 516,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9771:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 519,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9771:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9760:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 521,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9783:33:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 514,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9752:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9752:65:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 523,
												"nodeType": "ExpressionStatement",
												"src": "9752:65:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 527,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9857:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 526,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9849:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 525,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9849:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 528,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9849:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 529,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 509,
															"src": "9861:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 530,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 511,
															"src": "9870:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 524,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 733,
														"src": "9828:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9828:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 532,
												"nodeType": "ExpressionStatement",
												"src": "9828:49:2"
											},
											{
												"expression": {
													"id": 535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 533,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 183,
														"src": "9888:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 534,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 511,
														"src": "9904:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9888:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 536,
												"nodeType": "ExpressionStatement",
												"src": "9888:22:2"
											},
											{
												"expression": {
													"id": 541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 537,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 175,
															"src": "9920:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 539,
														"indexExpression": {
															"id": 538,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 509,
															"src": "9930:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9920:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 540,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 511,
														"src": "9942:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9920:28:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 542,
												"nodeType": "ExpressionStatement",
												"src": "9920:28:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 546,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9980:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 545,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9972:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 544,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9972:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 547,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9972:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 548,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 509,
															"src": "9984:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 549,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 511,
															"src": "9993:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 543,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 757,
														"src": "9963:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9963:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 551,
												"nodeType": "EmitStatement",
												"src": "9958:42:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 555,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10039:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 554,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10031:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 553,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10031:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10031:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 557,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 509,
															"src": "10043:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 558,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 511,
															"src": "10052:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 552,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 744,
														"src": "10011:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10011:48:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 560,
												"nodeType": "ExpressionStatement",
												"src": "10011:48:2"
											}
										]
									},
									"documentation": {
										"id": 507,
										"nodeType": "StructuredDocumentation",
										"src": "9407:265:2",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"id": 562,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "9686:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9700:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "9692:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 508,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9692:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9717:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "9709:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 510,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9709:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9691:33:2"
									},
									"returnParameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9742:0:2"
									},
									"scope": 745,
									"src": "9677:389:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 633,
										"nodeType": "Block",
										"src": "10451:511:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 576,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 571,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 565,
																"src": "10469:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 574,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10488:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 573,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10480:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 572,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10480:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 575,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10480:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10469:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 577,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10492:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 570,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10461:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10461:67:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 579,
												"nodeType": "ExpressionStatement",
												"src": "10461:67:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 581,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 565,
															"src": "10560:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 584,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10577:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 583,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10569:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 582,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10569:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 585,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10569:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 586,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 567,
															"src": "10581:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 580,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 733,
														"src": "10539:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10539:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 588,
												"nodeType": "ExpressionStatement",
												"src": "10539:49:2"
											},
											{
												"assignments": [
													590
												],
												"declarations": [
													{
														"constant": false,
														"id": 590,
														"mutability": "mutable",
														"name": "accountBalance",
														"nameLocation": "10607:14:2",
														"nodeType": "VariableDeclaration",
														"scope": 633,
														"src": "10599:22:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 589,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10599:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 594,
												"initialValue": {
													"baseExpression": {
														"id": 591,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 175,
														"src": "10624:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 593,
													"indexExpression": {
														"id": 592,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 565,
														"src": "10634:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10624:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10599:43:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 598,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 596,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 590,
																"src": "10660:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 597,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 567,
																"src": "10678:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10660:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 599,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10686:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 595,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10652:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10652:71:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 601,
												"nodeType": "ExpressionStatement",
												"src": "10652:71:2"
											},
											{
												"id": 610,
												"nodeType": "UncheckedBlock",
												"src": "10733:79:2",
												"statements": [
													{
														"expression": {
															"id": 608,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 602,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 175,
																	"src": "10757:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 604,
																"indexExpression": {
																	"id": 603,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 565,
																	"src": "10767:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "10757:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 607,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 605,
																	"name": "accountBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 590,
																	"src": "10778:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 606,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 567,
																	"src": "10795:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10778:23:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10757:44:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 609,
														"nodeType": "ExpressionStatement",
														"src": "10757:44:2"
													}
												]
											},
											{
												"expression": {
													"id": 613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 611,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 183,
														"src": "10821:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 612,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 567,
														"src": "10837:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10821:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 614,
												"nodeType": "ExpressionStatement",
												"src": "10821:22:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 616,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 565,
															"src": "10868:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 619,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10885:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 618,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10877:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 617,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10877:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 620,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10877:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 621,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 567,
															"src": "10889:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 615,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 757,
														"src": "10859:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10859:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 623,
												"nodeType": "EmitStatement",
												"src": "10854:42:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 625,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 565,
															"src": "10927:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 628,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10944:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 627,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10936:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 626,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10936:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 629,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10936:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 630,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 567,
															"src": "10948:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 624,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 744,
														"src": "10907:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 631,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10907:48:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 632,
												"nodeType": "ExpressionStatement",
												"src": "10907:48:2"
											}
										]
									},
									"documentation": {
										"id": 563,
										"nodeType": "StructuredDocumentation",
										"src": "10072:309:2",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 634,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "10395:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "10409:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 634,
												"src": "10401:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 564,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10401:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10426:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 634,
												"src": "10418:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 566,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10418:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10400:33:2"
									},
									"returnParameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10451:0:2"
									},
									"scope": 745,
									"src": "10386:576:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 678,
										"nodeType": "Block",
										"src": "11498:257:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 650,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 645,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 637,
																"src": "11516:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 648,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11533:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 647,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11525:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 646,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11525:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 649,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11525:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11516:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 651,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11537:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 644,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11508:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11508:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 653,
												"nodeType": "ExpressionStatement",
												"src": "11508:68:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 660,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 655,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 639,
																"src": "11594:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 658,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11613:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 657,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11605:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 656,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11605:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 659,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11605:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11594:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 661,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11617:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 654,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11586:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11586:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 663,
												"nodeType": "ExpressionStatement",
												"src": "11586:68:2"
											},
											{
												"expression": {
													"id": 670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 664,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 181,
																"src": "11665:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 667,
															"indexExpression": {
																"id": 665,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 637,
																"src": "11677:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11665:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 668,
														"indexExpression": {
															"id": 666,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 639,
															"src": "11684:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11665:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 669,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 641,
														"src": "11695:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11665:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 671,
												"nodeType": "ExpressionStatement",
												"src": "11665:36:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 673,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 637,
															"src": "11725:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 674,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 639,
															"src": "11732:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 675,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 641,
															"src": "11741:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 672,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 766,
														"src": "11716:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11716:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 677,
												"nodeType": "EmitStatement",
												"src": "11711:37:2"
											}
										]
									},
									"documentation": {
										"id": 635,
										"nodeType": "StructuredDocumentation",
										"src": "10968:412:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 679,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "11394:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 637,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "11420:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "11412:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 636,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11412:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 639,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "11443:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "11435:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 638,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11435:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11468:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "11460:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 640,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11460:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11402:78:2"
									},
									"returnParameters": {
										"id": 643,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11498:0:2"
									},
									"scope": 745,
									"src": "11385:370:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 721,
										"nodeType": "Block",
										"src": "12156:321:2",
										"statements": [
											{
												"assignments": [
													690
												],
												"declarations": [
													{
														"constant": false,
														"id": 690,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "12174:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 721,
														"src": "12166:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 689,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12166:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 695,
												"initialValue": {
													"arguments": [
														{
															"id": 692,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 682,
															"src": "12203:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 693,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 684,
															"src": "12210:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 691,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 301,
														"src": "12193:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12193:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12166:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 696,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 690,
														"src": "12232:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 699,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12257:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 698,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "12257:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 697,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "12252:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 700,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12252:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 701,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "12266:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "12252:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12232:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 720,
												"nodeType": "IfStatement",
												"src": "12228:243:2",
												"trueBody": {
													"id": 719,
													"nodeType": "Block",
													"src": "12271:200:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 706,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 704,
																			"name": "currentAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 690,
																			"src": "12293:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 705,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 686,
																			"src": "12313:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "12293:26:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"id": 707,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12321:31:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		},
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		}
																	],
																	"id": 703,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "12285:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 708,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12285:68:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 709,
															"nodeType": "ExpressionStatement",
															"src": "12285:68:2"
														},
														{
															"id": 718,
															"nodeType": "UncheckedBlock",
															"src": "12367:94:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 711,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 682,
																				"src": "12404:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 712,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 684,
																				"src": "12411:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 715,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 713,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 690,
																					"src": "12420:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 714,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 686,
																					"src": "12439:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12420:25:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 710,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 679,
																			"src": "12395:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 716,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12395:51:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 717,
																	"nodeType": "ExpressionStatement",
																	"src": "12395:51:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 680,
										"nodeType": "StructuredDocumentation",
										"src": "11761:270:2",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."
									},
									"id": 722,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "12045:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 682,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "12078:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "12070:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 681,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12070:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "12101:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "12093:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 683,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12093:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12126:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "12118:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 685,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12118:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12060:78:2"
									},
									"returnParameters": {
										"id": 688,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12156:0:2"
									},
									"scope": 745,
									"src": "12036:441:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 732,
										"nodeType": "Block",
										"src": "13180:2:2",
										"statements": []
									},
									"documentation": {
										"id": 723,
										"nodeType": "StructuredDocumentation",
										"src": "12483:573:2",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 733,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "13070:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13108:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 733,
												"src": "13100:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 724,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13100:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13130:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 733,
												"src": "13122:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 726,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13122:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "13150:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 733,
												"src": "13142:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 728,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13142:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13090:72:2"
									},
									"returnParameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13180:0:2"
									},
									"scope": 745,
									"src": "13061:121:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 743,
										"nodeType": "Block",
										"src": "13888:2:2",
										"statements": []
									},
									"documentation": {
										"id": 734,
										"nodeType": "StructuredDocumentation",
										"src": "13188:577:2",
										"text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 744,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "13779:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 736,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13816:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "13808:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 735,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 738,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13838:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "13830:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 737,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13830:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "13858:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "13850:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 739,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13850:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13798:72:2"
									},
									"returnParameters": {
										"id": 742,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13888:0:2"
									},
									"scope": 745,
									"src": "13770:120:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 746,
							"src": "2678:11214:2",
							"usedErrors": [],
							"usedEvents": [
								757,
								766
							]
						}
					],
					"src": "1380:12513:2"
				},
				"id": 2
			},
			"mintable-token/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "mintable-token/@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							823
						]
					},
					"id": 824,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 747,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "1381:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 748,
								"nodeType": "StructuredDocumentation",
								"src": "1406:70:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 823,
							"linearizedBaseContracts": [
								823
							],
							"name": "IERC20",
							"nameLocation": "1487:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 749,
										"nodeType": "StructuredDocumentation",
										"src": "1500:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 757,
									"name": "Transfer",
									"nameLocation": "1669:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 756,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 751,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1694:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "1678:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 750,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1678:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 753,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1716:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "1700:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1700:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1728:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "1720:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 754,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1720:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1677:57:3"
									},
									"src": "1663:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 758,
										"nodeType": "StructuredDocumentation",
										"src": "1741:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 766,
									"name": "Approval",
									"nameLocation": "1900:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 760,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1925:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 766,
												"src": "1909:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 759,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1909:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 762,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1948:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 766,
												"src": "1932:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 761,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1932:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 764,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1965:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 766,
												"src": "1957:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 763,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1957:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1908:63:3"
									},
									"src": "1894:78:3"
								},
								{
									"documentation": {
										"id": 767,
										"nodeType": "StructuredDocumentation",
										"src": "1978:66:3",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 772,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2058:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2069:2:3"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 772,
												"src": "2095:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 769,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2095:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2094:9:3"
									},
									"scope": 823,
									"src": "2049:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 773,
										"nodeType": "StructuredDocumentation",
										"src": "2110:72:3",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 780,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2196:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 775,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2214:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "2206:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 774,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2206:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2205:17:3"
									},
									"returnParameters": {
										"id": 779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 778,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "2246:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 777,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2246:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2245:9:3"
									},
									"scope": 823,
									"src": "2187:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 781,
										"nodeType": "StructuredDocumentation",
										"src": "2261:202:3",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 790,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "2477:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 783,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2494:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 790,
												"src": "2486:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 782,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2486:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2506:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 790,
												"src": "2498:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 784,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2498:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2485:28:3"
									},
									"returnParameters": {
										"id": 789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 788,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 790,
												"src": "2532:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 787,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2532:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2531:6:3"
									},
									"scope": 823,
									"src": "2468:70:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 791,
										"nodeType": "StructuredDocumentation",
										"src": "2544:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 800,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "2822:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 793,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2840:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "2832:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 792,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2832:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2855:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "2847:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 794,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2847:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2831:32:3"
									},
									"returnParameters": {
										"id": 799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 798,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "2887:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 797,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2887:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2886:9:3"
									},
									"scope": 823,
									"src": "2813:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 801,
										"nodeType": "StructuredDocumentation",
										"src": "2902:642:3",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 810,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3558:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 806,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3574:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "3566:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 802,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3566:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 805,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3591:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "3583:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 804,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3583:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3565:33:3"
									},
									"returnParameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "3617:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 807,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3617:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3616:6:3"
									},
									"scope": 823,
									"src": "3549:74:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 811,
										"nodeType": "StructuredDocumentation",
										"src": "3629:287:3",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 822,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3930:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 813,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3960:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "3952:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 812,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3952:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 815,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3982:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "3974:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 814,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3974:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 817,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4002:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "3994:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 816,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3994:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3942:72:3"
									},
									"returnParameters": {
										"id": 821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 820,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "4033:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 819,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4033:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4032:6:3"
									},
									"scope": 823,
									"src": "3921:118:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 824,
							"src": "1477:2564:3",
							"usedErrors": [],
							"usedEvents": [
								757,
								766
							]
						}
					],
					"src": "1381:2661:3"
				},
				"id": 3
			},
			"mintable-token/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "mintable-token/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							823
						],
						"IERC20Metadata": [
							848
						]
					},
					"id": 849,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 825,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "1385:23:4"
						},
						{
							"absolutePath": "mintable-token/@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 826,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 849,
							"sourceUnit": 824,
							"src": "1410:23:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 828,
										"name": "IERC20",
										"nameLocations": [
											"1580:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 823,
										"src": "1580:6:4"
									},
									"id": 829,
									"nodeType": "InheritanceSpecifier",
									"src": "1580:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 827,
								"nodeType": "StructuredDocumentation",
								"src": "1435:116:4",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 848,
							"linearizedBaseContracts": [
								848,
								823
							],
							"name": "IERC20Metadata",
							"nameLocation": "1562:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 830,
										"nodeType": "StructuredDocumentation",
										"src": "1593:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 835,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1661:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 831,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1665:2:4"
									},
									"returnParameters": {
										"id": 834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 833,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 835,
												"src": "1691:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 832,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1691:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1690:15:4"
									},
									"scope": 848,
									"src": "1652:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 836,
										"nodeType": "StructuredDocumentation",
										"src": "1712:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 841,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1782:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 837,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1788:2:4"
									},
									"returnParameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "1814:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 838,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1814:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1813:15:4"
									},
									"scope": 848,
									"src": "1773:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 842,
										"nodeType": "StructuredDocumentation",
										"src": "1835:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 847,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "1914:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1922:2:4"
									},
									"returnParameters": {
										"id": 846,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 845,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 847,
												"src": "1948:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 844,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1948:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1947:7:4"
									},
									"scope": 848,
									"src": "1905:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 849,
							"src": "1552:405:4",
							"usedErrors": [],
							"usedEvents": [
								757,
								766
							]
						}
					],
					"src": "1385:573:4"
				},
				"id": 4
			},
			"mintable-token/@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "mintable-token/@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							870
						]
					},
					"id": 871,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 850,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "1361:23:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 851,
								"nodeType": "StructuredDocumentation",
								"src": "1386:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 870,
							"linearizedBaseContracts": [
								870
							],
							"name": "Context",
							"nameLocation": "1901:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 859,
										"nodeType": "Block",
										"src": "1977:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 856,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1994:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 857,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1998:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1994:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 855,
												"id": 858,
												"nodeType": "Return",
												"src": "1987:17:5"
											}
										]
									},
									"id": 860,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "1924:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 852,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1934:2:5"
									},
									"returnParameters": {
										"id": 855,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 854,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 860,
												"src": "1968:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 853,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1968:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1967:9:5"
									},
									"scope": 870,
									"src": "1915:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 868,
										"nodeType": "Block",
										"src": "2084:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 865,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "2101:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 866,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2105:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "2101:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 864,
												"id": 867,
												"nodeType": "Return",
												"src": "2094:15:5"
											}
										]
									},
									"id": 869,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "2026:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2034:2:5"
									},
									"returnParameters": {
										"id": 864,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 863,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "2068:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 862,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2068:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2067:16:5"
									},
									"scope": 870,
									"src": "2017:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 871,
							"src": "1883:235:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "1361:758:5"
				},
				"id": 5
			}
		}
	}
}